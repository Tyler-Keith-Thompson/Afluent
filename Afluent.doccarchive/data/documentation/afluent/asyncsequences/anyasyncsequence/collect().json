{"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asyncsequences\/anyasyncsequence\/collect()"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AnyAsyncSequence","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AnyAsyncSequence\/AsyncSequence-Implementations"]]},"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AnyAsyncSequence\/collect()","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Collects all received elements, and emits a single array of the collection when the upstream sequence finishes."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"collect","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO7CollectV","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Collect","text":"Collect"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}]}]},{"content":[{"type":"heading","anchor":"Discussion","level":3,"text":"Discussion:"},{"inlineContent":[{"type":"text","text":"Use "},{"type":"codeVoice","code":"collect()"},{"text":" to gather elements into an array that the operator emits after the upstream sequence finishes.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"If the upstream sequence fails with an error, this sequence forwards the error to the downstream receiver instead of sending its output."}],"type":"paragraph"},{"type":"aside","name":"Important","style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Be cautious when using "},{"type":"codeVoice","code":"collect"},{"text":" on sequences that can emit a large number of elements or do not complete, as it can lead to high memory usage or even memory exhaustion.","type":"text"}]}]}],"kind":"content"}],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"collect","kind":"identifier"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Collect","preciseIdentifier":"s:7Afluent14AsyncSequencesO7CollectV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"symbolKind":"method","remoteSource":{"fileName":"CollectSequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/CollectSequence.swift#L44"},"title":"collect()","externalID":"s:Sci7Afluents8SendableRzrlE7collectAA14AsyncSequencesO7CollectVy_xGyF::SYNTHESIZED::s:7Afluent14AsyncSequencesO03AnyB8SequenceV","role":"symbol","conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"roleHeading":"Instance Method","modules":[{"name":"Afluent","relatedModules":["_Concurrency"]}],"extendedModule":"_Concurrency"},"kind":"symbol","references":{"doc://Afluent/documentation/Afluent/AsyncSequences":{"url":"\/documentation\/afluent\/asyncsequences","title":"AsyncSequences","kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncSequences","kind":"identifier"}],"abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/AnyAsyncSequence/AsyncSequence-Implementations":{"url":"\/documentation\/afluent\/asyncsequences\/anyasyncsequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","kind":"article","role":"collectionGroup","type":"topic","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AnyAsyncSequence\/AsyncSequence-Implementations"},"doc://Afluent/documentation/Afluent":{"role":"collection","title":"Afluent","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent","type":"topic","url":"\/documentation\/afluent","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/AnyAsyncSequence":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyAsyncSequence"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AnyAsyncSequence","abstract":[],"url":"\/documentation\/afluent\/asyncsequences\/anyasyncsequence","title":"AsyncSequences.AnyAsyncSequence","role":"symbol","navigatorTitle":[{"text":"AnyAsyncSequence","kind":"identifier"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/Collect":{"url":"\/documentation\/afluent\/asyncsequences\/collect","title":"AsyncSequences.Collect","kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Collect","kind":"identifier"}],"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Collect","navigatorTitle":[{"kind":"identifier","text":"Collect"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/AnyAsyncSequence/collect()":{"url":"\/documentation\/afluent\/asyncsequences\/anyasyncsequence\/collect()","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AnyAsyncSequence\/collect()","kind":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}]},"title":"collect()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"collect","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"kind":"text","text":"."},{"text":"Collect","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO7CollectV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"type":"topic","abstract":[{"type":"text","text":"Collects all received elements, and emits a single array of the collection when the upstream sequence finishes."}],"role":"symbol"}}}