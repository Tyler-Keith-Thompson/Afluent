{"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/retry(_:)","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"retry","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"retries","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":" = 1) -> "},{"text":"AsyncSequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Retry","kind":"typeIdentifier","text":"Retry","preciseIdentifier":"s:7Afluent14AsyncSequencesO5RetryC"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent20RetryByCountStrategyC","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByCountStrategy","text":"RetryByCountStrategy"},{"text":">","kind":"text"}]}],"kind":"declarations"},{"parameters":[{"name":"retries","content":[{"inlineContent":[{"type":"text","text":"The maximum number of times to retry the upstream, defaulting to 1."}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" that emits the same output as the upstream but retries on failure up to the specified number of times."}]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Not every "},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" can be retried, for this to work the sequence has to implement an iterator that doesnâ€™t preserve state across various creations."}]}],"type":"aside","style":"important","name":"Important"},{"name":"Note","content":[{"inlineContent":[{"type":"text","text":""},{"code":"AsyncStream","type":"codeVoice"},{"type":"text","text":" and "},{"code":"AsyncThrowingStream","type":"codeVoice"},{"type":"text","text":" are notable sequences which cannot be retried on their own."}],"type":"paragraph"}],"type":"aside","style":"note"}]}],"kind":"symbol","sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asyncsequences\/assertnofailure\/retry(_:)"]}],"metadata":{"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/RetrySequence.swift#L173","fileName":"RetrySequence.swift"},"externalID":"s:Sci7Afluents8SendableRzsAB7ElementRpzrlE5retryyAA14AsyncSequencesO5RetryCy_xAA0G15ByCountStrategyCGSuF::SYNTHESIZED::s:7Afluent14AsyncSequencesO15AssertNoFailureV","modules":[{"name":"Afluent","relatedModules":["_Concurrency"]}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"retry","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Retry","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO5RetryC"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent20RetryByCountStrategyC","text":"RetryByCountStrategy"},{"text":">","kind":"text"}],"title":"retry(_:)","role":"symbol","symbolKind":"method","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"roleHeading":"Instance Method","extendedModule":"_Concurrency"},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/AsyncSequence-Implementations"]]},"abstract":[{"type":"text","text":"Retries the upstream "},{"code":"AsyncSequence","type":"codeVoice"},{"text":" up to a specified number of times.","type":"text"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/AsyncSequence-Implementations":{"kind":"article","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/asyncsequence-implementations","abstract":[],"title":"AsyncSequence Implementations","role":"collectionGroup","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/AsyncSequence-Implementations","type":"topic"},"doc://Afluent/documentation/Afluent":{"role":"collection","title":"Afluent","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent","type":"topic","url":"\/documentation\/afluent","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure":{"kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure","abstract":[],"title":"AsyncSequences.AssertNoFailure","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AssertNoFailure"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AssertNoFailure"}]},"doc://Afluent/documentation/Afluent/AsyncSequences":{"url":"\/documentation\/afluent\/asyncsequences","title":"AsyncSequences","kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncSequences","kind":"identifier"}],"abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/Retry":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Retry","abstract":[],"kind":"symbol","title":"AsyncSequences.Retry","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Retry","kind":"identifier"}],"role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/retry","navigatorTitle":[{"kind":"identifier","text":"Retry"}],"type":"topic"},"doc://Afluent/documentation/Afluent/RetryByCountStrategy":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByCountStrategy","type":"topic","kind":"symbol","title":"RetryByCountStrategy","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"RetryByCountStrategy","kind":"identifier"}],"url":"\/documentation\/afluent\/retrybycountstrategy","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RetryByCountStrategy"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"RetryStrategy"},{"type":"text","text":" that limits the number of retry attempts."}]},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/retry(_:)":{"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/retry(_:)","type":"topic","role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}]},"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"retry","kind":"identifier"},{"kind":"text","text":"("},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"text":"Retry","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO5RetryC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent20RetryByCountStrategyC","text":"RetryByCountStrategy"},{"kind":"text","text":">"}],"title":"retry(_:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/retry(_:)","abstract":[{"type":"text","text":"Retries the upstream "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" up to a specified number of times."}]}}}