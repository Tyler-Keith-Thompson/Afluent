{"kind":"symbol","metadata":{"role":"symbol","title":"init(upstream:)","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"upstream","kind":"externalParam"},{"text":": (() -> ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":"))","kind":"text"}],"modules":[{"name":"Afluent"}],"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/Deferred.swift#L43","fileName":"Deferred.swift"},"symbolKind":"init","externalID":"s:7Afluent14AsyncSequencesO8DeferredV8upstreamAEy_xGxyYbc_tcfc","roleHeading":"Initializer"},"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Deferred"]]},"sections":[],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Deferred\/init(upstream:)","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"upstream"},{"kind":"text","text":": "},{"text":"@escaping","kind":"keyword"},{"text":" (() -> ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":"))","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"upstream","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that returns an asynchronous sequence that will be used later during iteration."}]}]}],"kind":"parameters"}],"abstract":[{"type":"text","text":"Constructs an asynchronous sequence defining an closure that returns an asynchronous sequence"},{"text":" ","type":"text"},{"type":"text","text":"that will later be called at the time of iteration."}],"variants":[{"paths":["\/documentation\/afluent\/asyncsequences\/deferred\/init(upstream:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Afluent/documentation/Afluent/AsyncSequences":{"url":"\/documentation\/afluent\/asyncsequences","title":"AsyncSequences","kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncSequences","kind":"identifier"}],"abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/Deferred/init(upstream:)":{"kind":"symbol","title":"init(upstream:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Deferred\/init(upstream:)","type":"topic","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"upstream"},{"text":": (() -> ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":"))","kind":"text"}],"url":"\/documentation\/afluent\/asyncsequences\/deferred\/init(upstream:)","abstract":[{"type":"text","text":"Constructs an asynchronous sequence defining an closure that returns an asynchronous sequence"},{"type":"text","text":" "},{"text":"that will later be called at the time of iteration.","type":"text"}]},"doc://Afluent/documentation/Afluent":{"role":"collection","title":"Afluent","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent","type":"topic","url":"\/documentation\/afluent","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/Deferred":{"role":"symbol","title":"AsyncSequences.Deferred","abstract":[{"text":"An asynchronous sequence that defers the execution of another asynchronous sequence until iteration.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Deferred","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Deferred"}],"kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/deferred","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Deferred","type":"topic"}}}