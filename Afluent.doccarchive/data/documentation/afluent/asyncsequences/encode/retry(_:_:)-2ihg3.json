{"abstract":[{"text":"Retries the upstream ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" up to a specified number of times while applying a transformation on error."}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Encode","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Encode\/AsyncSequence-Implementations"]]},"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Encode\/retry(_:_:)-2ihg3","interfaceLanguage":"swift"},"kind":"symbol","sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asyncsequences\/encode\/retry(_:_:)-2ihg3"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"retry"},{"kind":"text","text":"<"},{"text":"D","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"strategy"},{"text":": ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"transform","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"text":" (any ","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"D","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO21RetryAfterFlatMappingC","kind":"typeIdentifier","text":"RetryAfterFlatMapping","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryAfterFlatMapping"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"D"},{"text":" : ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"D"},{"text":" : ","kind":"text"},{"text":"AsyncSequence","preciseIdentifier":"s:Sci","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"S","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:7Afluent13RetryStrategyP","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","kind":"typeIdentifier","text":"RetryStrategy"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sci7ElementQa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:Sci7ElementQa","kind":"typeIdentifier"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa","text":"Element"}]}]},{"kind":"parameters","parameters":[{"name":"transform","content":[{"inlineContent":[{"type":"text","text":"An async closure that takes the error from the upstream and returns a new "},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"code":"AsyncSequence","type":"codeVoice"},{"text":" that emits the same output as the upstream but retries on failure up to the specified number of times, with the applied transformation.","type":"text"}]}]}],"metadata":{"extendedModule":"_Concurrency","title":"retry(_:_:)","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"retry"},{"kind":"text","text":"<"},{"text":"D","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"text":", (any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"D"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier","text":"AsyncSequences"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"RetryAfterFlatMapping","preciseIdentifier":"s:7Afluent14AsyncSequencesO21RetryAfterFlatMappingC"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":", "},{"text":"S","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","symbolKind":"method","externalID":"s:Sci7Afluents8SendableRzrlE5retryyAA14AsyncSequencesO21RetryAfterFlatMappingCy_xqd__qd_0_Gqd_0__qd__s5Error_pYaYbKctsABRd__SciRd__AA0F8StrategyRd_0_sAB7ElementRpzAKQyd__ALRSr0_lF::SYNTHESIZED::s:7Afluent14AsyncSequencesO6EncodeV","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/RetryAfterFlatMappingSequence.swift#L200","fileName":"RetryAfterFlatMappingSequence.swift"},"modules":[{"relatedModules":["_Concurrency"],"name":"Afluent"}]},"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/RetryAfterFlatMapping":{"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RetryAfterFlatMapping"}],"url":"\/documentation\/afluent\/asyncsequences\/retryafterflatmapping","navigatorTitle":[{"text":"RetryAfterFlatMapping","kind":"identifier"}],"title":"AsyncSequences.RetryAfterFlatMapping","abstract":[],"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryAfterFlatMapping"},"doc://Afluent/documentation/Afluent/AsyncSequences/Encode/AsyncSequence-Implementations":{"role":"collectionGroup","url":"\/documentation\/afluent\/asyncsequences\/encode\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Encode\/AsyncSequence-Implementations","abstract":[],"kind":"article"},"doc://Afluent/documentation/Afluent/RetryStrategy":{"navigatorTitle":[{"kind":"identifier","text":"RetryStrategy"}],"title":"RetryStrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","type":"topic","abstract":[{"text":"A strategy for handling errors and determining whether to retry an operation.","type":"text"}],"url":"\/documentation\/afluent\/retrystrategy","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RetryStrategy"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/Encode":{"url":"\/documentation\/afluent\/asyncsequences\/encode","title":"AsyncSequences.Encode","kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Encode"}],"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Encode","navigatorTitle":[{"kind":"identifier","text":"Encode"}]},"doc://Afluent/documentation/Afluent":{"role":"collection","title":"Afluent","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent","type":"topic","url":"\/documentation\/afluent","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"url":"\/documentation\/afluent\/asyncsequences","title":"AsyncSequences","kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncSequences","kind":"identifier"}],"abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/Encode/retry(_:_:)-2ihg3":{"url":"\/documentation\/afluent\/asyncsequences\/encode\/retry(_:_:)-2ihg3","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Encode\/retry(_:_:)-2ihg3","abstract":[{"type":"text","text":"Retries the upstream "},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" up to a specified number of times while applying a transformation on error."}],"title":"retry(_:_:)","role":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}]},"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"retry"},{"text":"<","kind":"text"},{"text":"D","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S"},{"text":", (any ","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"D","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier","text":"AsyncSequences"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO21RetryAfterFlatMappingC","text":"RetryAfterFlatMapping"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"S","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol"}}}