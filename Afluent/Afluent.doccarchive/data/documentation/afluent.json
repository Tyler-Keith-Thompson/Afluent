{"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"externalID":"Afluent","symbolKind":"module","role":"collection","title":"Afluent","roleHeading":"Framework","modules":[{"name":"Afluent"}]},"sections":[],"kind":"symbol","hierarchy":{"paths":[[]]},"topicSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AnyCancellable","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousOperation","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/QueueExecutor","doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/RetryByCountStrategy","doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueSubject","doc:\/\/Afluent\/documentation\/Afluent\/TaskState"],"anchor":"Classes","title":"Classes","generated":true},{"generated":true,"title":"Protocols","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","doc:\/\/Afluent\/documentation\/Afluent\/TopLevelDecoder","doc:\/\/Afluent\/documentation\/Afluent\/TopLevelEncoder"],"anchor":"Protocols"},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence"],"anchor":"Structures","generated":true,"title":"Structures"},{"generated":true,"title":"Functions","anchor":"Functions","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/Race(cancelAllOnWin:_:against:)"]},{"generated":true,"anchor":"Type-Aliases","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","doc:\/\/Afluent\/documentation\/Afluent\/AnyAsyncSequence","doc:\/\/Afluent\/documentation\/Afluent\/ClockDurationUnit","doc:\/\/Afluent\/documentation\/Afluent\/Deferred","doc:\/\/Afluent\/documentation\/Afluent\/Just","doc:\/\/Afluent\/documentation\/Afluent\/TimerSequence"],"title":"Type Aliases"},{"title":"Enumerations","generated":true,"anchor":"Enumerations","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/SubscriptionDemand","doc:\/\/Afluent\/documentation\/Afluent\/TimeoutError","doc:\/\/Afluent\/documentation\/Afluent\/UnretainedError","doc:\/\/Afluent\/documentation\/Afluent\/Workers"]},{"title":"Extended Modules","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/Foundation","doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency"],"anchor":"Extended-Modules","generated":true}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent"},"references":{"doc://Afluent/documentation/Afluent/SingleValueChannel":{"abstract":[{"text":"A channel that emits a single value or an error.","type":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SingleValueChannel"}],"title":"SingleValueChannel","url":"\/documentation\/afluent\/singlevaluechannel","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"SingleValueChannel","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/_Concurrency":{"role":"collection","abstract":[],"title":"_Concurrency","url":"\/documentation\/afluent\/_concurrency","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency","kind":"symbol","type":"topic"},"doc://Afluent/documentation/Afluent/DeferredTask":{"type":"topic","title":"DeferredTask","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","abstract":[{"text":"A structure representing a deferred asynchronous unit of work.","type":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/afluent\/deferredtask","navigatorTitle":[{"text":"DeferredTask","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"DeferredTask","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork":{"abstract":[{"type":"text","text":"A unit of work that performs type erasure by wrapping another unit of work."}],"type":"topic","role":"symbol","kind":"symbol","url":"\/documentation\/afluent\/anyasynchronousunitofwork","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AnyAsynchronousUnitOfWork","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AnyAsynchronousUnitOfWork"}],"title":"AnyAsynchronousUnitOfWork"},"doc://Afluent/documentation/Afluent/AsynchronousOperation":{"url":"\/documentation\/afluent\/asynchronousoperation","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousOperation","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsynchronousOperation","kind":"identifier"}],"navigatorTitle":[{"text":"AsynchronousOperation","kind":"identifier"}],"type":"topic","title":"AsynchronousOperation","abstract":[{"type":"text","text":"Reference to an operation that an operator would execute"}],"role":"symbol"},"doc://Afluent/documentation/Afluent/TimerSequence":{"title":"TimerSequence","abstract":[],"navigatorTitle":[{"text":"TimerSequence","kind":"identifier"}],"type":"topic","kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"TimerSequence","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TimerSequence","role":"symbol","url":"\/documentation\/afluent\/timersequence"},"doc://Afluent/documentation/Afluent/TopLevelDecoder":{"url":"\/documentation\/afluent\/topleveldecoder","navigatorTitle":[{"text":"TopLevelDecoder","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TopLevelDecoder"}],"abstract":[],"title":"TopLevelDecoder","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TopLevelDecoder"},"doc://Afluent/documentation/Afluent/Race(cancelAllOnWin:_:against:)":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"Race"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"cancelAllOnWin"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":", () ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"kind":"externalParam","text":"against"},{"text":": (() ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":")...) "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"T","kind":"typeIdentifier"}],"type":"topic","abstract":[{"type":"text","text":"Executes two asynchronous tasks concurrently and returns the result of the first one that completes."}],"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Race(cancelAllOnWin:_:against:)","title":"Race(cancelAllOnWin:_:against:)","url":"\/documentation\/afluent\/race(cancelallonwin:_:against:)"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}],"title":"AsynchronousUnitOfWorkSequence","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence","abstract":[{"type":"text","text":"A sequence that represents a single execution of an asynchronous unit of work."}],"kind":"symbol","navigatorTitle":[{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}],"url":"\/documentation\/afluent\/asynchronousunitofworksequence"},"doc://Afluent/documentation/Afluent/AnyCancellable":{"kind":"symbol","type":"topic","url":"\/documentation\/afluent\/anycancellable","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"AnyCancellable","kind":"identifier"}],"navigatorTitle":[{"text":"AnyCancellable","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyCancellable","abstract":[{"type":"text","text":"Stores an erased unit of work and provides a mechanism to cancel it"}],"title":"AnyCancellable","role":"symbol"},"doc://Afluent/documentation/Afluent/TaskState":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TaskState","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TaskState"}],"navigatorTitle":[{"kind":"identifier","text":"TaskState"}],"url":"\/documentation\/afluent\/taskstate","type":"topic","abstract":[],"kind":"symbol","title":"TaskState","role":"symbol"},"doc://Afluent/documentation/Afluent/BackoffStrategy":{"kind":"symbol","type":"topic","url":"\/documentation\/afluent\/backoffstrategy","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BackoffStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"BackoffStrategy","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","abstract":[{"text":"A protocol for implementing custom backoff strategies in retry mechanisms.","type":"text"}],"title":"BackoffStrategy","role":"symbol"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy":{"title":"RetryByBackoffStrategy","type":"topic","url":"\/documentation\/afluent\/retrybybackoffstrategy","role":"symbol","abstract":[{"type":"text","text":"A retry strategy using a specified backoff strategy and clock."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RetryByBackoffStrategy"}],"navigatorTitle":[{"text":"RetryByBackoffStrategy","kind":"identifier"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/TimeoutError":{"kind":"symbol","type":"topic","url":"\/documentation\/afluent\/timeouterror","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TimeoutError"}],"navigatorTitle":[{"kind":"identifier","text":"TimeoutError"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TimeoutError","abstract":[{"text":"An error indicating a timeout has occurred.","type":"text"}],"title":"TimeoutError","role":"symbol"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy":{"kind":"symbol","type":"topic","url":"\/documentation\/afluent\/exponentialbackoffstrategy","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ExponentialBackoffStrategy"}],"navigatorTitle":[{"text":"ExponentialBackoffStrategy","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","abstract":[{"text":"An exponential backoff strategy for retrying operations.","type":"text"}],"title":"ExponentialBackoffStrategy","role":"symbol"},"doc://Afluent/documentation/Afluent/AUOWCache":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","url":"\/documentation\/afluent\/auowcache","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AUOWCache"}],"abstract":[],"title":"AUOWCache","type":"topic","navigatorTitle":[{"text":"AUOWCache","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache":{"role":"symbol","type":"topic","navigatorTitle":[{"text":"AsynchronousUnitOfWorkCache","kind":"identifier"}],"title":"AsynchronousUnitOfWorkCache","abstract":[],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWorkCache","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","url":"\/documentation\/afluent\/asynchronousunitofworkcache"},"doc://Afluent/documentation/Afluent/RetryStrategy":{"role":"symbol","type":"topic","navigatorTitle":[{"text":"RetryStrategy","kind":"identifier"}],"title":"RetryStrategy","abstract":[{"type":"text","text":"A strategy for handling errors and determining whether to retry an operation."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"RetryStrategy","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","url":"\/documentation\/afluent\/retrystrategy"},"doc://Afluent/documentation/Afluent/SerialTaskQueue":{"url":"\/documentation\/afluent\/serialtaskqueue","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SerialTaskQueue","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SerialTaskQueue"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","title":"SerialTaskQueue","abstract":[{"text":"A serial task queue that ensures tasks are executed one at a time.","type":"text"}]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"abstract":[{"type":"text","text":"Represents an asynchronous unit of work."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","type":"topic","navigatorTitle":[{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"title":"AsynchronousUnitOfWork","kind":"symbol","url":"\/documentation\/afluent\/asynchronousunitofwork","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsynchronousUnitOfWork","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsyncSequences":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequences"}],"title":"AsyncSequences","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"url":"\/documentation\/afluent\/asyncsequences","type":"topic","kind":"symbol"},"doc://Afluent/documentation/Afluent/RetryByCountStrategy":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByCountStrategy","url":"\/documentation\/afluent\/retrybycountstrategy","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"RetryByCountStrategy","kind":"identifier"}],"abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"RetryStrategy"},{"text":" that limits the number of retry attempts.","type":"text"}],"type":"topic","title":"RetryByCountStrategy","navigatorTitle":[{"text":"RetryByCountStrategy","kind":"identifier"}]},"doc://Afluent/documentation/Afluent":{"type":"topic","url":"\/documentation\/afluent","title":"Afluent","role":"collection","abstract":[],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent"},"doc://Afluent/documentation/Afluent/Just":{"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Just","navigatorTitle":[{"kind":"identifier","text":"Just"}],"url":"\/documentation\/afluent\/just","type":"topic","kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"Just","kind":"identifier"}],"title":"Just","role":"symbol"},"doc://Afluent/documentation/Afluent/TopLevelEncoder":{"navigatorTitle":[{"text":"TopLevelEncoder","kind":"identifier"}],"type":"topic","title":"TopLevelEncoder","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TopLevelEncoder","url":"\/documentation\/afluent\/toplevelencoder","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TopLevelEncoder","kind":"identifier"}],"abstract":[]},"doc://Afluent/documentation/Afluent/Foundation":{"abstract":[],"title":"Foundation","url":"\/documentation\/afluent\/foundation","kind":"symbol","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Foundation","role":"collection"},"doc://Afluent/documentation/Afluent/Workers":{"title":"Workers","url":"\/documentation\/afluent\/workers","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Workers"}],"navigatorTitle":[{"text":"Workers","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Workers","abstract":[{"type":"text","text":"A namespace for grouping related asynchronous work operations."}],"role":"symbol","kind":"symbol","type":"topic"},"doc://Afluent/documentation/Afluent/UnretainedError":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"UnretainedError"}],"title":"UnretainedError","url":"\/documentation\/afluent\/unretainederror","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/UnretainedError","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UnretainedError"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/AnyAsyncSequence":{"abstract":[],"kind":"symbol","title":"AnyAsyncSequence","role":"symbol","navigatorTitle":[{"text":"AnyAsyncSequence","kind":"identifier"}],"type":"topic","url":"\/documentation\/afluent\/anyasyncsequence","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyAsyncSequence","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsyncSequence"},"doc://Afluent/documentation/Afluent/SingleValueSubject":{"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueSubject","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"SingleValueSubject","kind":"identifier"}],"title":"SingleValueSubject","url":"\/documentation\/afluent\/singlevaluesubject","kind":"symbol","abstract":[{"type":"text","text":"A subject that emits a single value or an error."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SingleValueSubject"}]},"doc://Afluent/documentation/Afluent/SubscriptionDemand":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SubscriptionDemand","url":"\/documentation\/afluent\/subscriptiondemand","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"SubscriptionDemand","kind":"identifier"}],"abstract":[],"title":"SubscriptionDemand","type":"topic","navigatorTitle":[{"text":"SubscriptionDemand","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/ClockDurationUnit":{"url":"\/documentation\/afluent\/clockdurationunit","title":"ClockDurationUnit","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"ClockDurationUnit"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"ClockDurationUnit"}],"abstract":[],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ClockDurationUnit"},"doc://Afluent/documentation/Afluent/Deferred":{"type":"topic","role":"symbol","url":"\/documentation\/afluent\/deferred","title":"Deferred","navigatorTitle":[{"text":"Deferred","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Deferred","abstract":[],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Deferred","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/QueueExecutor":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/QueueExecutor","role":"symbol","navigatorTitle":[{"text":"QueueExecutor","kind":"identifier"}],"type":"topic","url":"\/documentation\/afluent\/queueexecutor","abstract":[],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"QueueExecutor"}],"kind":"symbol","title":"QueueExecutor"}}}