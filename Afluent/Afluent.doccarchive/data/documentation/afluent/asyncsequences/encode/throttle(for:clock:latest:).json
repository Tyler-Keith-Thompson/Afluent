{"abstract":[{"type":"text","text":"Emits either the first or latest element received during a specified amount of time."}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Encode","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Encode\/AsyncSequence-Implementations"]]},"metadata":{"extendedModule":"_Concurrency","remoteSource":{"fileName":"ThrottleSequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/ThrottleSequence.swift#L114"},"externalID":"s:Sci7Afluents8SendableRzsAB7ElementRpzrlE8throttle3for5clock6latestAA14AsyncSequencesO8ThrottleVy_xqd__G8DurationQyd___qd__Sbt12_Concurrency5ClockRd__lF::SYNTHESIZED::s:7Afluent14AsyncSequencesO6EncodeV","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"symbolKind":"method","role":"symbol","modules":[{"name":"Afluent","relatedModules":["_Concurrency"]}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throttle","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">("},{"text":"for","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Duration","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa"},{"kind":"text","text":", "},{"text":"clock","kind":"externalParam"},{"kind":"text","text":": "},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"latest"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO8ThrottleV","kind":"typeIdentifier","text":"Throttle"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":">"}],"title":"throttle(for:clock:latest:)","platforms":[{"unavailable":false,"introducedAt":"16.0","deprecated":false,"beta":false,"name":"iOS"},{"name":"macOS","unavailable":false,"deprecated":false,"introducedAt":"13.0","beta":false},{"unavailable":false,"introducedAt":"16.0","beta":false,"deprecated":false,"name":"tvOS"},{"deprecated":false,"beta":false,"name":"visionOS","introducedAt":"1.0","unavailable":false},{"deprecated":false,"unavailable":false,"beta":false,"name":"watchOS","introducedAt":"9.0"}],"roleHeading":"Instance Method"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Encode\/throttle(for:clock:latest:)"},"sections":[],"variants":[{"paths":["\/documentation\/afluent\/asyncsequences\/encode\/throttle(for:clock:latest:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"throttle"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"for","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"interval","kind":"internalParam"},{"kind":"text","text":": "},{"text":"C","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa","kind":"typeIdentifier","text":"Duration"},{"kind":"text","text":", "},{"kind":"externalParam","text":"clock"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":", "},{"text":"latest","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"kind":"text","text":"."},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Throttle","text":"Throttle","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO8ThrottleV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"C"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":" : "},{"text":"Clock","preciseIdentifier":"s:12_Concurrency5ClockP","kind":"typeIdentifier"}],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The interval of time in which to observe and emit either the first or latest element.","type":"text"}]}],"name":"interval"},{"name":"latest","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"code":"true","type":"codeVoice"},{"text":", emits the latest element in the time interval.  If ","type":"text"},{"type":"codeVoice","code":"false"},{"text":", emits the first element in the time interval.","type":"text"}]}]}]},{"content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"type":"aside","style":"note","name":"Note","content":[{"type":"paragraph","inlineContent":[{"text":"The first element in upstream will always be returned immediately.  Once a second element is received, then the clock will begin for the given time interval and return the first or latest element once completed.","type":"text"}]}]}],"kind":"content"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/Encode":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Encode","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences\/encode","kind":"symbol","type":"topic","title":"AsyncSequences.Encode","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Encode","navigatorTitle":[{"kind":"identifier","text":"Encode"}]},"doc://Afluent/documentation/Afluent":{"type":"topic","url":"\/documentation\/afluent","title":"Afluent","role":"collection","abstract":[],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequences"}],"title":"AsyncSequences","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"url":"\/documentation\/afluent\/asyncsequences","type":"topic","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/Encode/throttle(for:clock:latest:)":{"conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"type":"topic","kind":"symbol","role":"symbol","title":"throttle(for:clock:latest:)","url":"\/documentation\/afluent\/asyncsequences\/encode\/throttle(for:clock:latest:)","abstract":[{"type":"text","text":"Emits either the first or latest element received during a specified amount of time."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Encode\/throttle(for:clock:latest:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throttle","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">("},{"kind":"externalParam","text":"for"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Duration","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa"},{"text":", ","kind":"text"},{"text":"clock","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"C"},{"text":", ","kind":"text"},{"text":"latest","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Throttle","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO8ThrottleV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"C","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/Throttle":{"navigatorTitle":[{"text":"Throttle","kind":"identifier"}],"role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Throttle","kind":"identifier"}],"title":"AsyncSequences.Throttle","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Throttle","abstract":[],"url":"\/documentation\/afluent\/asyncsequences\/throttle","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/Encode/AsyncSequence-Implementations":{"type":"topic","kind":"article","title":"AsyncSequence Implementations","abstract":[],"url":"\/documentation\/afluent\/asyncsequences\/encode\/asyncsequence-implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Encode\/AsyncSequence-Implementations","role":"collectionGroup"}}}