{"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent"]}],"metadata":{"modules":[{"name":"Afluent"}],"roleHeading":"Framework","role":"collection","symbolKind":"module","title":"Afluent","externalID":"Afluent"},"topicSections":[{"generated":true,"anchor":"Classes","title":"Classes","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AnyCancellable","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousOperation","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/QueueExecutor","doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/RetryByCountStrategy","doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueSubject","doc:\/\/Afluent\/documentation\/Afluent\/TaskState"]},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","doc:\/\/Afluent\/documentation\/Afluent\/TopLevelDecoder","doc:\/\/Afluent\/documentation\/Afluent\/TopLevelEncoder"],"generated":true,"anchor":"Protocols","title":"Protocols"},{"generated":true,"title":"Structures","anchor":"Structures","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence"]},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/Race(cancelAllOnWin:_:against:)"],"title":"Functions","anchor":"Functions","generated":true},{"anchor":"Type-Aliases","title":"Type Aliases","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","doc:\/\/Afluent\/documentation\/Afluent\/AnyAsyncSequence","doc:\/\/Afluent\/documentation\/Afluent\/ClockDurationUnit","doc:\/\/Afluent\/documentation\/Afluent\/Deferred","doc:\/\/Afluent\/documentation\/Afluent\/Just","doc:\/\/Afluent\/documentation\/Afluent\/TimerSequence"]},{"generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/SubscriptionDemand","doc:\/\/Afluent\/documentation\/Afluent\/TimeoutError","doc:\/\/Afluent\/documentation\/Afluent\/UnretainedError","doc:\/\/Afluent\/documentation\/Afluent\/Workers"],"anchor":"Enumerations","title":"Enumerations"},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/Foundation","doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency"],"anchor":"Extended-Modules","title":"Extended Modules","generated":true}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[[]]},"kind":"symbol","references":{"doc://Afluent/documentation/Afluent/TimerSequence":{"navigatorTitle":[{"text":"TimerSequence","kind":"identifier"}],"abstract":[],"type":"topic","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TimerSequence","url":"\/documentation\/afluent\/timersequence","role":"symbol","title":"TimerSequence","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"TimerSequence","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/_Concurrency":{"title":"_Concurrency","role":"collection","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency","abstract":[],"type":"topic","url":"\/documentation\/afluent\/_concurrency","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence":{"role":"symbol","title":"AsynchronousUnitOfWorkSequence","kind":"symbol","url":"\/documentation\/afluent\/asynchronousunitofworksequence","abstract":[{"type":"text","text":"A sequence that represents a single execution of an asynchronous unit of work."}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWorkSequence"}]},"doc://Afluent/documentation/Afluent/RetryStrategy":{"kind":"symbol","url":"\/documentation\/afluent\/retrystrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","abstract":[{"type":"text","text":"A strategy for handling errors and determining whether to retry an operation."}],"title":"RetryStrategy","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"RetryStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"RetryStrategy","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AUOWCache":{"title":"AUOWCache","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"AUOWCache","kind":"identifier"}],"abstract":[],"type":"topic","url":"\/documentation\/afluent\/auowcache","kind":"symbol","navigatorTitle":[{"text":"AUOWCache","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/SingleValueChannel":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"SingleValueChannel","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel","kind":"symbol","abstract":[{"type":"text","text":"A channel that emits a single value or an error."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SingleValueChannel"}],"url":"\/documentation\/afluent\/singlevaluechannel","type":"topic","title":"SingleValueChannel"},"doc://Afluent/documentation/Afluent/RetryByCountStrategy":{"abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"RetryStrategy"},{"text":" that limits the number of retry attempts.","type":"text"}],"url":"\/documentation\/afluent\/retrybycountstrategy","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RetryByCountStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"RetryByCountStrategy"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByCountStrategy","kind":"symbol","title":"RetryByCountStrategy","type":"topic"},"doc://Afluent/documentation/Afluent/DeferredTask":{"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DeferredTask"}],"title":"DeferredTask","abstract":[{"type":"text","text":"A structure representing a deferred asynchronous unit of work."}],"url":"\/documentation\/afluent\/deferredtask","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","navigatorTitle":[{"kind":"identifier","text":"DeferredTask"}],"kind":"symbol","role":"symbol"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache":{"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","url":"\/documentation\/afluent\/asynchronousunitofworkcache","title":"AsynchronousUnitOfWorkCache","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWorkCache","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWorkCache"}],"type":"topic","role":"symbol"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"ExponentialBackoffStrategy","kind":"identifier"}],"title":"ExponentialBackoffStrategy","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","abstract":[{"text":"An exponential backoff strategy for retrying operations.","type":"text"}],"role":"symbol","type":"topic","url":"\/documentation\/afluent\/exponentialbackoffstrategy","navigatorTitle":[{"kind":"identifier","text":"ExponentialBackoffStrategy"}]},"doc://Afluent/documentation/Afluent/SerialTaskQueue":{"title":"SerialTaskQueue","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SerialTaskQueue"}],"navigatorTitle":[{"text":"SerialTaskQueue","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"A serial task queue that ensures tasks are executed one at a time.","type":"text"}],"type":"topic","url":"\/documentation\/afluent\/serialtaskqueue"},"doc://Afluent/documentation/Afluent/Just":{"title":"Just","kind":"symbol","abstract":[],"role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Just","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Just","url":"\/documentation\/afluent\/just","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Just"}]},"doc://Afluent/documentation/Afluent/QueueExecutor":{"title":"QueueExecutor","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"QueueExecutor","kind":"identifier"}],"abstract":[],"navigatorTitle":[{"text":"QueueExecutor","kind":"identifier"}],"role":"symbol","type":"topic","url":"\/documentation\/afluent\/queueexecutor","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/QueueExecutor"},"doc://Afluent/documentation/Afluent/AnyCancellable":{"url":"\/documentation\/afluent\/anycancellable","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"AnyCancellable","kind":"identifier"}],"kind":"symbol","title":"AnyCancellable","navigatorTitle":[{"kind":"identifier","text":"AnyCancellable"}],"abstract":[{"text":"Stores an erased unit of work and provides a mechanism to cancel it","type":"text"}],"role":"symbol","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyCancellable"},"doc://Afluent/documentation/Afluent/TopLevelDecoder":{"kind":"symbol","abstract":[],"title":"TopLevelDecoder","url":"\/documentation\/afluent\/topleveldecoder","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"TopLevelDecoder","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"TopLevelDecoder"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TopLevelDecoder"},"doc://Afluent/documentation/Afluent/Race(cancelAllOnWin:_:against:)":{"abstract":[{"text":"Executes two asynchronous tasks concurrently and returns the result of the first one that completes.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"Race","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"cancelAllOnWin"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":", () ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"against","kind":"externalParam"},{"text":": (() ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")...) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Race(cancelAllOnWin:_:against:)","url":"\/documentation\/afluent\/race(cancelallonwin:_:against:)","type":"topic","role":"symbol","title":"Race(cancelAllOnWin:_:against:)"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy":{"kind":"symbol","abstract":[{"text":"A retry strategy using a specified backoff strategy and clock.","type":"text"}],"title":"RetryByBackoffStrategy","navigatorTitle":[{"text":"RetryByBackoffStrategy","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RetryByBackoffStrategy"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","role":"symbol","type":"topic","url":"\/documentation\/afluent\/retrybybackoffstrategy"},"doc://Afluent/documentation/Afluent":{"kind":"symbol","abstract":[],"type":"topic","role":"collection","identifier":"doc:\/\/Afluent\/documentation\/Afluent","url":"\/documentation\/afluent","title":"Afluent"},"doc://Afluent/documentation/Afluent/Foundation":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Foundation","abstract":[],"url":"\/documentation\/afluent\/foundation","role":"collection","type":"topic","kind":"symbol","title":"Foundation"},"doc://Afluent/documentation/Afluent/AsynchronousOperation":{"abstract":[{"type":"text","text":"Reference to an operation that an operator would execute"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousOperation","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsynchronousOperation"}],"navigatorTitle":[{"kind":"identifier","text":"AsynchronousOperation"}],"title":"AsynchronousOperation","type":"topic","role":"symbol","url":"\/documentation\/afluent\/asynchronousoperation","kind":"symbol"},"doc://Afluent/documentation/Afluent/TimeoutError":{"title":"TimeoutError","url":"\/documentation\/afluent\/timeouterror","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"TimeoutError","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"TimeoutError"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TimeoutError","kind":"symbol","abstract":[{"text":"An error indicating a timeout has occurred.","type":"text"}],"type":"topic"},"doc://Afluent/documentation/Afluent/TopLevelEncoder":{"type":"topic","url":"\/documentation\/afluent\/toplevelencoder","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"TopLevelEncoder","kind":"identifier"}],"navigatorTitle":[{"text":"TopLevelEncoder","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TopLevelEncoder","kind":"symbol","abstract":[],"title":"TopLevelEncoder"},"doc://Afluent/documentation/Afluent/Deferred":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Deferred","role":"symbol","title":"Deferred","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"Deferred"}],"kind":"symbol","url":"\/documentation\/afluent\/deferred","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Deferred","kind":"identifier"}],"type":"topic"},"doc://Afluent/documentation/Afluent/TaskState":{"url":"\/documentation\/afluent\/taskstate","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"TaskState","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TaskState","role":"symbol","abstract":[],"kind":"symbol","type":"topic","navigatorTitle":[{"text":"TaskState","kind":"identifier"}],"title":"TaskState"},"doc://Afluent/documentation/Afluent/SubscriptionDemand":{"type":"topic","abstract":[],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"SubscriptionDemand","kind":"identifier"}],"url":"\/documentation\/afluent\/subscriptiondemand","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SubscriptionDemand","kind":"symbol","navigatorTitle":[{"text":"SubscriptionDemand","kind":"identifier"}],"role":"symbol","title":"SubscriptionDemand"},"doc://Afluent/documentation/Afluent/SingleValueSubject":{"kind":"symbol","abstract":[{"type":"text","text":"A subject that emits a single value or an error."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueSubject","url":"\/documentation\/afluent\/singlevaluesubject","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SingleValueSubject"}],"title":"SingleValueSubject","navigatorTitle":[{"text":"SingleValueSubject","kind":"identifier"}],"type":"topic","role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"title":"AsyncSequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","url":"\/documentation\/afluent\/asyncsequences","abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncSequences","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"type":"topic","kind":"symbol"},"doc://Afluent/documentation/Afluent/ClockDurationUnit":{"kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ClockDurationUnit"}],"role":"symbol","title":"ClockDurationUnit","url":"\/documentation\/afluent\/clockdurationunit","abstract":[],"navigatorTitle":[{"text":"ClockDurationUnit","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ClockDurationUnit","type":"topic"},"doc://Afluent/documentation/Afluent/UnretainedError":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/UnretainedError","abstract":[],"kind":"symbol","title":"UnretainedError","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"UnretainedError","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"UnretainedError"}],"url":"\/documentation\/afluent\/unretainederror","type":"topic"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"kind":"symbol","abstract":[{"type":"text","text":"Represents an asynchronous unit of work."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","url":"\/documentation\/afluent\/asynchronousunitofwork","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsynchronousUnitOfWork"}],"title":"AsynchronousUnitOfWork","navigatorTitle":[{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"type":"topic","role":"symbol"},"doc://Afluent/documentation/Afluent/Workers":{"navigatorTitle":[{"text":"Workers","kind":"identifier"}],"role":"symbol","type":"topic","title":"Workers","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Workers","abstract":[{"text":"A namespace for grouping related asynchronous work operations.","type":"text"}],"kind":"symbol","url":"\/documentation\/afluent\/workers","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"Workers","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AnyAsyncSequence":{"abstract":[],"url":"\/documentation\/afluent\/anyasyncsequence","title":"AnyAsyncSequence","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnyAsyncSequence"}],"navigatorTitle":[{"text":"AnyAsyncSequence","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsyncSequence","kind":"symbol","type":"topic"},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork":{"kind":"symbol","url":"\/documentation\/afluent\/anyasynchronousunitofwork","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyAsynchronousUnitOfWork","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","title":"AnyAsynchronousUnitOfWork","abstract":[{"type":"text","text":"A unit of work that performs type erasure by wrapping another unit of work."}],"navigatorTitle":[{"text":"AnyAsynchronousUnitOfWork","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/BackoffStrategy":{"abstract":[{"text":"A protocol for implementing custom backoff strategies in retry mechanisms.","type":"text"}],"url":"\/documentation\/afluent\/backoffstrategy","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"BackoffStrategy"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"BackoffStrategy"}],"title":"BackoffStrategy"}}}