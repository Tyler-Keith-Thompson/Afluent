{"topicSections":[{"anchor":"Classes","generated":true,"title":"Classes","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AnyCancellable","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousOperation","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/QueueExecutor","doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/RetryByCountStrategy","doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueSubject","doc:\/\/Afluent\/documentation\/Afluent\/TaskState"]},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","doc:\/\/Afluent\/documentation\/Afluent\/TopLevelDecoder","doc:\/\/Afluent\/documentation\/Afluent\/TopLevelEncoder"],"anchor":"Protocols","generated":true,"title":"Protocols"},{"title":"Structures","anchor":"Structures","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence"],"generated":true},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/Race(cancelAllOnWin:_:against:)"],"title":"Functions","anchor":"Functions","generated":true},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","doc:\/\/Afluent\/documentation\/Afluent\/AnyAsyncSequence","doc:\/\/Afluent\/documentation\/Afluent\/ClockDurationUnit","doc:\/\/Afluent\/documentation\/Afluent\/Deferred","doc:\/\/Afluent\/documentation\/Afluent\/Just","doc:\/\/Afluent\/documentation\/Afluent\/TimerSequence"],"title":"Type Aliases","anchor":"Type-Aliases","generated":true},{"title":"Enumerations","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/SubscriptionDemand","doc:\/\/Afluent\/documentation\/Afluent\/TimeoutError","doc:\/\/Afluent\/documentation\/Afluent\/UnretainedError","doc:\/\/Afluent\/documentation\/Afluent\/Workers"],"generated":true,"anchor":"Enumerations"},{"generated":true,"title":"Extended Modules","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/Foundation","doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency"],"anchor":"Extended-Modules"}],"metadata":{"title":"Afluent","role":"collection","roleHeading":"Framework","modules":[{"name":"Afluent"}],"externalID":"Afluent","symbolKind":"module"},"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"paths":["\/documentation\/afluent"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[[]]},"kind":"symbol","sections":[],"references":{"doc://Afluent/documentation/Afluent/SingleValueSubject":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueSubject","navigatorTitle":[{"text":"SingleValueSubject","kind":"identifier"}],"kind":"symbol","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SingleValueSubject"}],"url":"\/documentation\/afluent\/singlevaluesubject","role":"symbol","title":"SingleValueSubject","abstract":[{"type":"text","text":"A subject that emits a single value or an error."}]},"doc://Afluent/documentation/Afluent":{"abstract":[],"title":"Afluent","role":"collection","identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol","url":"\/documentation\/afluent","type":"topic"},"doc://Afluent/documentation/Afluent/RetryByCountStrategy":{"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"RetryStrategy"},{"text":" that limits the number of retry attempts.","type":"text"}],"title":"RetryByCountStrategy","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RetryByCountStrategy"}],"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RetryByCountStrategy"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByCountStrategy","kind":"symbol","url":"\/documentation\/afluent\/retrybycountstrategy"},"doc://Afluent/documentation/Afluent/QueueExecutor":{"navigatorTitle":[{"kind":"identifier","text":"QueueExecutor"}],"kind":"symbol","abstract":[],"title":"QueueExecutor","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/QueueExecutor","type":"topic","role":"symbol","url":"\/documentation\/afluent\/queueexecutor","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"QueueExecutor","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"navigatorTitle":[{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"title":"AsynchronousUnitOfWork","abstract":[{"text":"Represents an asynchronous unit of work.","type":"text"}],"type":"topic","url":"\/documentation\/afluent\/asynchronousunitofwork","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsynchronousUnitOfWork"}]},"doc://Afluent/documentation/Afluent/RetryStrategy":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RetryStrategy","kind":"identifier"}],"abstract":[{"text":"A strategy for handling errors and determining whether to retry an operation.","type":"text"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","role":"symbol","title":"RetryStrategy","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RetryStrategy"}],"url":"\/documentation\/afluent\/retrystrategy"},"doc://Afluent/documentation/Afluent/Workers":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Workers","type":"topic","role":"symbol","url":"\/documentation\/afluent\/workers","kind":"symbol","navigatorTitle":[{"text":"Workers","kind":"identifier"}],"title":"Workers","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"Workers","kind":"identifier"}],"abstract":[{"type":"text","text":"A namespace for grouping related asynchronous work operations."}]},"doc://Afluent/documentation/Afluent/Race(cancelAllOnWin:_:against:)":{"type":"topic","title":"Race(cancelAllOnWin:_:against:)","role":"symbol","abstract":[{"text":"Executes two asynchronous tasks concurrently and returns the result of the first one that completes.","type":"text"}],"kind":"symbol","url":"\/documentation\/afluent\/race(cancelallonwin:_:against:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"Race","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"cancelAllOnWin","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":", () "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"against","kind":"externalParam"},{"kind":"text","text":": (() "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"text":")...) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Race(cancelAllOnWin:_:against:)"},"doc://Afluent/documentation/Afluent/AnyAsyncSequence":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsyncSequence","title":"AnyAsyncSequence","type":"topic","navigatorTitle":[{"text":"AnyAsyncSequence","kind":"identifier"}],"abstract":[],"url":"\/documentation\/afluent\/anyasyncsequence","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyAsyncSequence"}],"kind":"symbol","role":"symbol"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence":{"type":"topic","title":"AsynchronousUnitOfWorkSequence","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence","navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWorkSequence"}],"kind":"symbol","url":"\/documentation\/afluent\/asynchronousunitofworksequence","abstract":[{"type":"text","text":"A sequence that represents a single execution of an asynchronous unit of work."}]},"doc://Afluent/documentation/Afluent/SerialTaskQueue":{"abstract":[{"type":"text","text":"A serial task queue that ensures tasks are executed one at a time."}],"type":"topic","navigatorTitle":[{"text":"SerialTaskQueue","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","kind":"symbol","title":"SerialTaskQueue","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"SerialTaskQueue","kind":"identifier"}],"url":"\/documentation\/afluent\/serialtaskqueue"},"doc://Afluent/documentation/Afluent/DeferredTask":{"kind":"symbol","title":"DeferredTask","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DeferredTask"}],"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","navigatorTitle":[{"kind":"identifier","text":"DeferredTask"}],"abstract":[{"type":"text","text":"A structure representing a deferred asynchronous unit of work."}],"url":"\/documentation\/afluent\/deferredtask","type":"topic"},"doc://Afluent/documentation/Afluent/TimerSequence":{"type":"topic","title":"TimerSequence","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TimerSequence","url":"\/documentation\/afluent\/timersequence","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"TimerSequence","kind":"identifier"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"TimerSequence","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/TopLevelEncoder":{"title":"TopLevelEncoder","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TopLevelEncoder","role":"symbol","url":"\/documentation\/afluent\/toplevelencoder","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"TopLevelEncoder","kind":"identifier"}],"navigatorTitle":[{"text":"TopLevelEncoder","kind":"identifier"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/TaskState":{"kind":"symbol","title":"TaskState","navigatorTitle":[{"kind":"identifier","text":"TaskState"}],"url":"\/documentation\/afluent\/taskstate","type":"topic","abstract":[],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TaskState","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TaskState","role":"symbol"},"doc://Afluent/documentation/Afluent/_Concurrency":{"title":"_Concurrency","type":"topic","role":"collection","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency","kind":"symbol","url":"\/documentation\/afluent\/_concurrency","abstract":[]},"doc://Afluent/documentation/Afluent/Deferred":{"title":"Deferred","type":"topic","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Deferred"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Deferred"}],"abstract":[],"kind":"symbol","url":"\/documentation\/afluent\/deferred","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Deferred"},"doc://Afluent/documentation/Afluent/Foundation":{"type":"topic","title":"Foundation","role":"collection","abstract":[],"kind":"symbol","url":"\/documentation\/afluent\/foundation","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Foundation"},"doc://Afluent/documentation/Afluent/TopLevelDecoder":{"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TopLevelDecoder","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"TopLevelDecoder","kind":"identifier"}],"navigatorTitle":[{"text":"TopLevelDecoder","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/afluent\/topleveldecoder","title":"TopLevelDecoder","kind":"symbol"},"doc://Afluent/documentation/Afluent/TimeoutError":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TimeoutError","title":"TimeoutError","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"TimeoutError","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"TimeoutError"}],"role":"symbol","abstract":[{"type":"text","text":"An error indicating a timeout has occurred."}],"url":"\/documentation\/afluent\/timeouterror","type":"topic","kind":"symbol"},"doc://Afluent/documentation/Afluent/SingleValueChannel":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel","title":"SingleValueChannel","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SingleValueChannel","kind":"identifier"}],"navigatorTitle":[{"text":"SingleValueChannel","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"A channel that emits a single value or an error."}],"url":"\/documentation\/afluent\/singlevaluechannel","type":"topic","kind":"symbol"},"doc://Afluent/documentation/Afluent/AUOWCache":{"role":"symbol","url":"\/documentation\/afluent\/auowcache","kind":"symbol","title":"AUOWCache","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AUOWCache"}],"abstract":[],"navigatorTitle":[{"text":"AUOWCache","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache"},"doc://Afluent/documentation/Afluent/Just":{"kind":"symbol","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Just","role":"symbol","url":"\/documentation\/afluent\/just","title":"Just","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Just","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Just"}],"abstract":[]},"doc://Afluent/documentation/Afluent/AsyncSequences":{"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"AsyncSequences","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","title":"AsyncSequences","role":"symbol","kind":"symbol","abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}],"type":"topic"},"doc://Afluent/documentation/Afluent/UnretainedError":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/UnretainedError","abstract":[],"role":"symbol","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnretainedError"}],"navigatorTitle":[{"kind":"identifier","text":"UnretainedError"}],"type":"topic","title":"UnretainedError","url":"\/documentation\/afluent\/unretainederror"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache":{"type":"topic","url":"\/documentation\/afluent\/asynchronousunitofworkcache","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsynchronousUnitOfWorkCache","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","abstract":[],"title":"AsynchronousUnitOfWorkCache","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWorkCache"}]},"doc://Afluent/documentation/Afluent/BackoffStrategy":{"url":"\/documentation\/afluent\/backoffstrategy","abstract":[{"type":"text","text":"A protocol for implementing custom backoff strategies in retry mechanisms."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","type":"topic","role":"symbol","kind":"symbol","title":"BackoffStrategy","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BackoffStrategy"}],"navigatorTitle":[{"text":"BackoffStrategy","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RetryByBackoffStrategy"}],"role":"symbol","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","url":"\/documentation\/afluent\/retrybybackoffstrategy","title":"RetryByBackoffStrategy","navigatorTitle":[{"text":"RetryByBackoffStrategy","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"A retry strategy using a specified backoff strategy and clock.","type":"text"}]},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","title":"ExponentialBackoffStrategy","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ExponentialBackoffStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"ExponentialBackoffStrategy"}],"role":"symbol","abstract":[{"type":"text","text":"An exponential backoff strategy for retrying operations."}],"url":"\/documentation\/afluent\/exponentialbackoffstrategy","type":"topic","kind":"symbol"},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork":{"kind":"symbol","title":"AnyAsynchronousUnitOfWork","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyAsynchronousUnitOfWork","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","navigatorTitle":[{"kind":"identifier","text":"AnyAsynchronousUnitOfWork"}],"abstract":[{"text":"A unit of work that performs type erasure by wrapping another unit of work.","type":"text"}],"url":"\/documentation\/afluent\/anyasynchronousunitofwork","type":"topic"},"doc://Afluent/documentation/Afluent/SubscriptionDemand":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SubscriptionDemand","title":"SubscriptionDemand","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"SubscriptionDemand","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SubscriptionDemand"}],"role":"symbol","abstract":[],"url":"\/documentation\/afluent\/subscriptiondemand","type":"topic","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsynchronousOperation":{"abstract":[{"text":"Reference to an operation that an operator would execute","type":"text"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousOperation","url":"\/documentation\/afluent\/asynchronousoperation","kind":"symbol","title":"AsynchronousOperation","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsynchronousOperation","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AsynchronousOperation"}]},"doc://Afluent/documentation/Afluent/AnyCancellable":{"url":"\/documentation\/afluent\/anycancellable","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"AnyCancellable","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnyCancellable"}],"abstract":[{"type":"text","text":"Stores an erased unit of work and provides a mechanism to cancel it"}],"role":"symbol","type":"topic","title":"AnyCancellable","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyCancellable"},"doc://Afluent/documentation/Afluent/ClockDurationUnit":{"type":"topic","title":"ClockDurationUnit","role":"symbol","abstract":[],"kind":"symbol","url":"\/documentation\/afluent\/clockdurationunit","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"ClockDurationUnit","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ClockDurationUnit","navigatorTitle":[{"text":"ClockDurationUnit","kind":"identifier"}]}}}