{"abstract":[{"type":"text","text":"Adds a behavior to the unit of work that asserts no failures are emitted."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/assertNoFailure()"},"sections":[],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"assertNoFailure"},{"text":"() -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","text":"AsynchronousUnitOfWork"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Success","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa"},{"kind":"text","text":">\n"}],"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/Workers\/AssertNoFailure.swift#L40","fileName":"AssertNoFailure.swift"},"externalID":"s:7Afluent22AsynchronousUnitOfWorkPAAE15assertNoFailureQryF::SYNTHESIZED::s:7Afluent25AnyAsynchronousUnitOfWorkV","title":"assertNoFailure()","extendedModule":"Afluent","roleHeading":"Instance Method","symbolKind":"method","role":"symbol","modules":[{"name":"Afluent"}]},"variants":[{"paths":["\/documentation\/afluent\/anyasynchronousunitofwork\/assertnofailure()"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/AsynchronousUnitOfWork-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"assertNoFailure"},{"kind":"text","text":"() -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","text":"AsynchronousUnitOfWork","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa","text":"Success","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/Success"},{"text":">\n","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"content":[{"anchor":"return-value","text":"Return Value","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"A new ","type":"text"},{"type":"codeVoice","code":"AsynchronousUnitOfWork"},{"text":" that will assert if any failures are emitted from the upstream unit of work.","type":"text"}]}],"kind":"content"},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"This is often useful for debugging or in scenarios where you are certain"},{"type":"text","text":" "},{"text":"that the upstream ","type":"text"},{"code":"AsynchronousUnitOfWork","type":"codeVoice"},{"text":" should not emit any errors.","type":"text"}],"type":"paragraph"}]}],"kind":"symbol","references":{"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork/AsynchronousUnitOfWork-Implementations":{"url":"\/documentation\/afluent\/anyasynchronousunitofwork\/asynchronousunitofwork-implementations","role":"collectionGroup","type":"topic","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/AsynchronousUnitOfWork-Implementations","kind":"article","title":"AsynchronousUnitOfWork Implementations"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"navigatorTitle":[{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"title":"AsynchronousUnitOfWork","abstract":[{"text":"Represents an asynchronous unit of work.","type":"text"}],"type":"topic","url":"\/documentation\/afluent\/asynchronousunitofwork","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsynchronousUnitOfWork"}]},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork/assertNoFailure()":{"role":"symbol","abstract":[{"type":"text","text":"Adds a behavior to the unit of work that asserts no failures are emitted."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/assertNoFailure()","url":"\/documentation\/afluent\/anyasynchronousunitofwork\/assertnofailure()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"assertNoFailure"},{"kind":"text","text":"() -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWork","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Success","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa","kind":"typeIdentifier"},{"kind":"text","text":">\n"}],"type":"topic","title":"assertNoFailure()","kind":"symbol"},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork":{"kind":"symbol","title":"AnyAsynchronousUnitOfWork","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyAsynchronousUnitOfWork","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","navigatorTitle":[{"kind":"identifier","text":"AnyAsynchronousUnitOfWork"}],"abstract":[{"text":"A unit of work that performs type erasure by wrapping another unit of work.","type":"text"}],"url":"\/documentation\/afluent\/anyasynchronousunitofwork","type":"topic"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork/Success":{"abstract":[{"text":"The type of data the unit of work will produce if it succeeds.","type":"text"}],"title":"Success","required":true,"role":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"text":"Success","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/Success","kind":"symbol","url":"\/documentation\/afluent\/asynchronousunitofwork\/success","type":"topic"},"doc://Afluent/documentation/Afluent":{"abstract":[],"title":"Afluent","role":"collection","identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol","url":"\/documentation\/afluent","type":"topic"}}}