{"abstract":[{"type":"text","text":"Transforms the success or failure of the current "},{"code":"AsynchronousUnitOfWork","type":"codeVoice"},{"type":"text","text":" into a single "},{"type":"codeVoice","code":"Result"},{"type":"text","text":" value."}],"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"materialize","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","text":"AsynchronousUnitOfWork"},{"text":"<","kind":"text"},{"text":"Result","kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Success","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/Success"},{"text":", any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":">>\n"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"inlineContent":[{"text":"An ","type":"text"},{"type":"codeVoice","code":"AsynchronousUnitOfWork"},{"text":" that emits a single ","type":"text"},{"type":"codeVoice","code":"Result"},{"type":"text","text":" value."}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This allows you to handle both success and error cases as regular emissions."}]},{"inlineContent":[{"text":"Example:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["let task = DeferredTask { ... }","let materializedTask = task.materialize()","let result = try await materializedTask.execute()","switch result {","case .success(let value):","    \/\/ Handle success","case .failure(let error):","    \/\/ Handle error","}"]}]}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/materialize()","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/anyasynchronousunitofwork\/materialize()"]}],"metadata":{"modules":[{"name":"Afluent"}],"externalID":"s:7Afluent22AsynchronousUnitOfWorkPAAE11materializeQryF::SYNTHESIZED::s:7Afluent25AnyAsynchronousUnitOfWorkV","symbolKind":"method","remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/Workers\/Materialize.swift#L53","fileName":"Materialize.swift"},"roleHeading":"Instance Method","role":"symbol","extendedModule":"Afluent","title":"materialize()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"materialize","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWork","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s6ResultO","text":"Result","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Success","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa","kind":"typeIdentifier"},{"kind":"text","text":", any "},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":">>\n","kind":"text"}]},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/AsynchronousUnitOfWork-Implementations"]]},"sections":[],"references":{"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"kind":"symbol","abstract":[{"type":"text","text":"Represents an asynchronous unit of work."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","url":"\/documentation\/afluent\/asynchronousunitofwork","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsynchronousUnitOfWork"}],"title":"AsynchronousUnitOfWork","navigatorTitle":[{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"type":"topic","role":"symbol"},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork":{"kind":"symbol","url":"\/documentation\/afluent\/anyasynchronousunitofwork","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyAsynchronousUnitOfWork","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","title":"AnyAsynchronousUnitOfWork","abstract":[{"type":"text","text":"A unit of work that performs type erasure by wrapping another unit of work."}],"navigatorTitle":[{"text":"AnyAsynchronousUnitOfWork","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork/materialize()":{"kind":"symbol","abstract":[{"text":"Transforms the success or failure of the current ","type":"text"},{"code":"AsynchronousUnitOfWork","type":"codeVoice"},{"type":"text","text":" into a single "},{"type":"codeVoice","code":"Result"},{"type":"text","text":" value."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/materialize()","url":"\/documentation\/afluent\/anyasynchronousunitofwork\/materialize()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"materialize"},{"text":"() -> ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","kind":"typeIdentifier","text":"AsynchronousUnitOfWork"},{"text":"<","kind":"text"},{"text":"Result","preciseIdentifier":"s:s6ResultO","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa","kind":"typeIdentifier","text":"Success"},{"text":", any ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":">>\n"}],"title":"materialize()","type":"topic","role":"symbol"},"doc://Afluent/documentation/Afluent":{"kind":"symbol","abstract":[],"type":"topic","role":"collection","identifier":"doc:\/\/Afluent\/documentation\/Afluent","url":"\/documentation\/afluent","title":"Afluent"},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork/AsynchronousUnitOfWork-Implementations":{"type":"topic","title":"AsynchronousUnitOfWork Implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/AsynchronousUnitOfWork-Implementations","kind":"article","abstract":[],"url":"\/documentation\/afluent\/anyasynchronousunitofwork\/asynchronousunitofwork-implementations","role":"collectionGroup"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork/Success":{"fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Success"},{"kind":"text","text":" : "},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/Success","kind":"symbol","abstract":[{"type":"text","text":"The type of data the unit of work will produce if it succeeds."}],"role":"symbol","required":true,"url":"\/documentation\/afluent\/asynchronousunitofwork\/success","type":"topic","title":"Success"}}}