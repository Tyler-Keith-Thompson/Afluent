{"topicSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/characters","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/lines","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/unicodeScalars"],"title":"Instance Properties","anchor":"Instance-Properties","generated":true},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/allSatisfy(_:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/assertNoFailure()","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/breakpoint(receiveOutput:receiveError:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/breakpointOnError()","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/catch(_:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/catch(_:_:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/collect()","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/compactMap(_:)-9f8zg","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/compactMap(_:)-9pzuh","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/contains(_:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/contains(where:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/decode(type:decoder:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/delay(for:tolerance:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/delay(for:tolerance:clock:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/dematerialize()","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/discardOutput()","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/drop(while:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/dropFirst(_:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/encode(encoder:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/eraseToAnyAsyncSequence()","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/filter(_:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/first()","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/first(where:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/flatMap(_:)-44j4j","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/flatMap(_:)-5mybx","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/flatMap(_:)-6bssq","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/flatMap(_:)-ha2j","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/flatMap(maxSubscriptions:_:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/groupBy(keySelector:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/handleEvents(receiveMakeIterator:receiveNext:receiveOutput:receiveError:receiveComplete:receiveCancel:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/map(_:)-279ry","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/map(_:)-ghp5","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/mapError(_:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/mapError(_:_:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/materialize()","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/max()","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/max(by:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/min()","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/min(by:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/prefix(_:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/prefix(while:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/print(_:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/reduce(_:_:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/reduce(into:_:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/replaceError(with:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/replaceNil(with:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/retry(_:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/retry(_:_:)-6jq30","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/retry(_:_:)-s4lz","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/retry(_:on:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/retry(_:on:_:)-38yzu","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/retry(_:on:_:)-3r3bs","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/sink(receiveCompletion:receiveOutput:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/throttle(for:clock:latest:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/tryCatch(_:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/tryCatch(_:_:)"],"title":"Instance Methods","generated":true,"anchor":"Instance-Methods"}],"sections":[],"metadata":{"title":"AsyncSequence Implementations","roleHeading":"API Collection","role":"collectionGroup","modules":[{"name":"Afluent"}]},"variants":[{"paths":["\/documentation\/afluent\/asyncsequences\/assertnofailure\/asyncsequence-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure"]]},"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/AsyncSequence-Implementations","interfaceLanguage":"swift"},"kind":"article","schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/retry(_:)":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"retry","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"text":") -> ","kind":"text"},{"text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO5RetryC","text":"Retry"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"RetryByCountStrategy","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent20RetryByCountStrategyC"},{"kind":"text","text":">"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}]},"role":"symbol","title":"retry(_:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/retry(_:)","type":"topic","abstract":[{"type":"text","text":"Retries the upstream "},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" up to a specified number of times."}],"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/retry(_:)"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/decode(type:decoder:)":{"role":"symbol","title":"decode(type:decoder:)","type":"topic","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/decode(type:decoder:)","abstract":[{"text":"Decodes the output from the upstream using a specified decoder.","type":"text"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}]},"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decode"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"D"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"type"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"kind":"externalParam","text":"decoder"},{"kind":"text","text":": "},{"text":"D","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Decode","preciseIdentifier":"s:7Afluent14AsyncSequencesO6DecodeV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"D"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">"}],"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/decode(type:decoder:)"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/handleEvents(receiveMakeIterator:receiveNext:receiveOutput:receiveError:receiveComplete:receiveCancel:)":{"abstract":[{"type":"text","text":"Adds side-effects to the receiving events of the upstream "},{"type":"codeVoice","code":"AsyncSequence"},{"text":".","type":"text"}],"type":"topic","title":"handleEvents(receiveMakeIterator:receiveNext:receiveOutput:receiveError:receiveComplete:receiveCancel:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"handleEvents"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"receiveMakeIterator"},{"text":": (() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")?, "},{"text":"receiveNext","kind":"externalParam"},{"text":": (() ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")?, ","kind":"text"},{"text":"receiveOutput","kind":"externalParam"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa","text":"Element"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")?, ","kind":"text"},{"kind":"externalParam","text":"receiveError"},{"text":": ((any ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"text":")?, ","kind":"text"},{"kind":"externalParam","text":"receiveComplete"},{"text":": (() ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")?, ","kind":"text"},{"text":"receiveCancel","kind":"externalParam"},{"kind":"text","text":": (() "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":")?) -> "},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV","text":"HandleEvents","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"kind":"symbol","role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/handleevents(receivemakeiterator:receivenext:receiveoutput:receiveerror:receivecomplete:receivecancel:)","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}]},"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/handleEvents(receiveMakeIterator:receiveNext:receiveOutput:receiveError:receiveComplete:receiveCancel:)"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/prefix(while:)":{"abstract":[],"type":"topic","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/prefix(while:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/prefix(while:)","title":"prefix(while:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"prefix"},{"text":"(","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sci7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/flatMap(_:)-5mybx":{"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/flatmap(_:)-5mybx","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/flatMap(_:)-5mybx","abstract":[],"role":"symbol","type":"topic","title":"flatMap(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"flatMap","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"SegmentOfResult"},{"text":">((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"SegmentOfResult"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV","kind":"typeIdentifier","text":"AsyncFlatMapSequence"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"SegmentOfResult","kind":"typeIdentifier"},{"kind":"text","text":">"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/flatMap(_:)-6bssq":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/flatMap(_:)-6bssq","title":"flatMap(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"flatMap","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"SegmentOfResult"},{"text":">((","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"text":"SegmentOfResult","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"AsyncFlatMapSequence","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"SegmentOfResult"},{"kind":"text","text":">"}],"role":"symbol","abstract":[],"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/flatmap(_:)-6bssq","type":"topic","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/replaceNil(with:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"replaceNil","kind":"identifier"},{"text":"<","kind":"text"},{"text":"E","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"E"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO10ReplaceNilV","kind":"typeIdentifier","text":"ReplaceNil"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"E","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"abstract":[{"type":"text","text":"Replaces any "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" values from the upstream "},{"type":"codeVoice","code":"AsyncSequence"},{"text":" with the provided non-nil value.","type":"text"}],"type":"topic","title":"replaceNil(with:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/replaceNil(with:)","role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/replacenil(with:)"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/compactMap(_:)-9pzuh":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/compactMap(_:)-9pzuh","kind":"symbol","type":"topic","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/compactmap(_:)-9pzuh","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"compactMap"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"ElementOfResult"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sci7ElementQa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"ElementOfResult"},{"text":"?) -> ","kind":"text"},{"text":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ElementOfResult"},{"text":">","kind":"text"}],"title":"compactMap(_:)","abstract":[],"role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/min()":{"kind":"symbol","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/min()","title":"min()","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"min"},{"text":"() ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa","text":"Element"},{"text":"?","kind":"text"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Comparable"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/min()"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/lines":{"title":"lines","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lines","kind":"identifier"},{"kind":"text","text":": "},{"text":"AsyncLineSequence","preciseIdentifier":"s:10Foundation17AsyncLineSequenceV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","abstract":[],"conformance":{"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"UInt8"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/lines","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/lines","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure":{"type":"topic","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AssertNoFailure"}],"kind":"symbol","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure","title":"AsyncSequences.AssertNoFailure","navigatorTitle":[{"text":"AssertNoFailure","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/allSatisfy(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"allSatisfy"},{"kind":"text","text":"(("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:Sci7ElementQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"abstract":[],"title":"allSatisfy(_:)","kind":"symbol","type":"topic","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/allsatisfy(_:)","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/allSatisfy(_:)"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/contains(_:)":{"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/contains(_:)","abstract":[],"title":"contains(_:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/contains(_:)","role":"symbol","kind":"symbol","type":"topic","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"contains"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sci7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/map(_:)-ghp5":{"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/map(_:)-ghp5","abstract":[],"role":"symbol","title":"map(_:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/map(_:)-ghp5","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"text":"<","kind":"text"},{"text":"Transformed","kind":"genericParameter"},{"text":">((","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"text":"Transformed","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"AsyncMapSequence","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Transformed"},{"text":">","kind":"text"}],"kind":"symbol","type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/retry(_:_:)-s4lz":{"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/retry(_:_:)-s4lz","abstract":[{"type":"text","text":"Retries the upstream "},{"type":"codeVoice","code":"AsyncSequence"},{"text":" up to a specified number of times while applying a transformation on error.","type":"text"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/retry(_:_:)-s4lz","kind":"symbol","title":"retry(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"retry"},{"text":"<","kind":"text"},{"text":"D","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":", (any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"D"},{"text":") -> ","kind":"text"},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO21RetryAfterFlatMappingC","text":"RetryAfterFlatMapping","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"text":">","kind":"text"}],"role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/materialize()":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"materialize","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Materialize","preciseIdentifier":"s:7Afluent14AsyncSequencesO11MaterializeV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Transforms the elements, completion, and errors of the current "},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" into "},{"type":"codeVoice","code":"Event"},{"type":"text","text":" values."}],"title":"materialize()","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}]},"kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/materialize()","type":"topic","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/materialize()"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/retry(_:on:)":{"role":"symbol","title":"retry(_:on:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/retry(_:on:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}]},"abstract":[{"type":"text","text":"Retries the upstream "},{"code":"AsyncSequence","type":"codeVoice"},{"text":" up to a specified number of times only when a specific error occurs.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"retry"},{"text":"<","kind":"text"},{"text":"E","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"on"},{"kind":"text","text":": "},{"text":"E","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO7RetryOnC","kind":"typeIdentifier","text":"RetryOn"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"RetryByCountStrategy","preciseIdentifier":"s:7Afluent20RetryByCountStrategyC","kind":"typeIdentifier"},{"kind":"text","text":">"}],"kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/retry(_:on:)","type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/throttle(for:clock:latest:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"throttle"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"C"},{"text":".","kind":"text"},{"text":"Duration","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"clock"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"latest"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO8ThrottleV","text":"Throttle","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":">"}],"kind":"symbol","title":"throttle(for:clock:latest:)","abstract":[{"text":"Emits either the first or latest element received during a specified amount of time.","type":"text"}],"role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/throttle(for:clock:latest:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/throttle(for:clock:latest:)","conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/contains(where:)":{"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/contains(where:)","role":"symbol","type":"topic","abstract":[],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"contains","kind":"identifier"},{"kind":"text","text":"("},{"text":"where","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:Sci7ElementQa","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"title":"contains(where:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/contains(where:)"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/eraseToAnyAsyncSequence()":{"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/erasetoanyasyncsequence()","abstract":[{"type":"text","text":"Type erases the current sequence, useful when you need a concrete type that’s easy to predict."}],"role":"symbol","title":"eraseToAnyAsyncSequence()","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" and "},{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}]},"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/eraseToAnyAsyncSequence()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyAsyncSequence","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO03AnyB8SequenceV","text":"AnyAsyncSequence"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa"},{"text":">","kind":"text"}],"kind":"symbol","type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/discardOutput()":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"discardOutput"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV","text":"AsyncMapSequence","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">"}],"type":"topic","role":"symbol","title":"discardOutput()","kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/discardoutput()","abstract":[{"text":"Discards the output values from the upstream ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"text":".","type":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/discardOutput()"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/dropFirst(_:)":{"title":"dropFirst(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dropFirst","kind":"identifier"},{"kind":"text","text":"("},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"AsyncDropFirstSequence","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"role":"symbol","abstract":[],"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/dropfirst(_:)","kind":"symbol","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/dropFirst(_:)"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/flatMap(maxSubscriptions:_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"flatMap","kind":"identifier"},{"kind":"text","text":"<"},{"text":"SegmentOfResult","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"maxSubscriptions","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Afluent18SubscriptionDemandO","kind":"typeIdentifier","text":"SubscriptionDemand"},{"text":", (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sci7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"SegmentOfResult"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"FlatMap","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO7FlatMapV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"SegmentOfResult","kind":"typeIdentifier"},{"kind":"text","text":">"}],"abstract":[],"title":"flatMap(maxSubscriptions:_:)","kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/flatmap(maxsubscriptions:_:)","type":"topic","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/flatMap(maxSubscriptions:_:)"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/retry(_:_:)-6jq30":{"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/retry(_:_:)-6jq30","abstract":[{"type":"text","text":"Retries the upstream "},{"code":"AsyncSequence","type":"codeVoice"},{"text":" up to a specified number of times while applying a transformation on error.","type":"text"}],"role":"symbol","title":"retry(_:_:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}]},"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/retry(_:_:)-6jq30","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"retry","kind":"identifier"},{"kind":"text","text":"<"},{"text":"D","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":", (any "},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier","text":"AsyncSequences"},{"kind":"text","text":"."},{"text":"RetryAfterFlatMapping","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO21RetryAfterFlatMappingC"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"D","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"RetryByCountStrategy","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent20RetryByCountStrategyC"},{"text":">","kind":"text"}],"kind":"symbol","type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/prefix(_:)":{"kind":"symbol","abstract":[],"type":"topic","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/prefix(_:)","role":"symbol","title":"prefix(_:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/prefix(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"prefix","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/first(where:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"first"},{"kind":"text","text":"("},{"text":"where","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:Sci7ElementQa"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa","text":"Element"},{"text":"?","kind":"text"}],"type":"topic","role":"symbol","kind":"symbol","title":"first(where:)","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/first(where:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/first(where:)","abstract":[]},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/delay(for:tolerance:clock:)":{"type":"topic","title":"delay(for:tolerance:clock:)","abstract":[{"text":"Delays delivery of all output to the downstream receiver by a specified amount of time","type":"text"}],"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/delay(for:tolerance:clock:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/delay(for:tolerance:clock:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"delay","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">("},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":"."},{"text":"Duration","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa"},{"text":", ","kind":"text"},{"text":"tolerance","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":"."},{"text":"Duration","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"clock"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO5DelayV","text":"Delay","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":">"}],"kind":"symbol","role":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]}},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/tryCatch(_:_:)":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/tryCatch(_:_:)","role":"symbol","kind":"symbol","title":"tryCatch(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"tryCatch"},{"text":"<","kind":"text"},{"text":"D","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"E"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Catch","preciseIdentifier":"s:7Afluent14AsyncSequencesO5CatchV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/trycatch(_:_:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}]},"abstract":[{"text":"Tries to catch a specific type of error emitted by the upstream ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"text":" and handles them using the provided throwing closure.","type":"text"}],"type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/map(_:)-279ry":{"title":"map(_:)","type":"topic","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/map(_:)-279ry","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"map","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Transformed","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sci7ElementQa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Transformed","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV","text":"AsyncThrowingMapSequence"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"Transformed","kind":"typeIdentifier"},{"kind":"text","text":">"}],"kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/map(_:)-279ry","abstract":[]},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/breakpoint(receiveOutput:receiveError:)":{"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/breakpoint(receiveOutput:receiveError:)","abstract":[{"text":"Introduces a breakpoint into the async sequence.","type":"text"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/breakpoint(receiveoutput:receiveerror:)","kind":"symbol","title":"breakpoint(receiveOutput:receiveError:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"breakpoint","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"receiveOutput"},{"text":": ((","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":")?, ","kind":"text"},{"text":"receiveError","kind":"externalParam"},{"kind":"text","text":": ((any "},{"preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":")?) -> "},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV","text":"HandleEvents","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/delay(for:tolerance:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"delay"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s8DurationV","text":"Duration","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"tolerance","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Duration","preciseIdentifier":"s:s8DurationV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Delay","preciseIdentifier":"s:7Afluent14AsyncSequencesO5DelayV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"SuspendingClock","preciseIdentifier":"s:12_Concurrency15SuspendingClockV","kind":"typeIdentifier"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Delays delivery of all output to the downstream receiver by a specified amount of time"}],"title":"delay(for:tolerance:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/delay(for:tolerance:)","type":"topic","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/delay(for:tolerance:)"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"AsyncSequences","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","title":"AsyncSequences","role":"symbol","kind":"symbol","abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}],"type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/unicodeScalars":{"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/unicodescalars","abstract":[],"role":"symbol","title":"unicodeScalars","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"UInt8"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/unicodeScalars","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"unicodeScalars"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10Foundation26AsyncUnicodeScalarSequenceV","text":"AsyncUnicodeScalarSequence","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"kind":"symbol","type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/flatMap(_:)-44j4j":{"type":"topic","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/flatmap(_:)-44j4j","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"flatMap"},{"kind":"text","text":"<"},{"text":"SegmentOfResult","kind":"genericParameter"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:Sci7ElementQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"SegmentOfResult","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV","text":"AsyncThrowingFlatMapSequence"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"SegmentOfResult","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/flatMap(_:)-44j4j","title":"flatMap(_:)"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/breakpointOnError()":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"breakpointOnError"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"HandleEvents","preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"kind":"symbol","title":"breakpointOnError()","abstract":[{"type":"text","text":"Introduces a breakpoint into the async sequence when an error occurs."}],"role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/breakpointonerror()","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/breakpointOnError()","conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/reduce(into:_:)":{"type":"topic","title":"reduce(into:_:)","role":"symbol","abstract":[],"kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/reduce(into:_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"reduce","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Result","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:Sci7ElementQa","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Result","kind":"typeIdentifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/reduce(into:_:)"},"doc://Afluent/documentation/Afluent":{"abstract":[],"title":"Afluent","role":"collection","identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol","url":"\/documentation\/afluent","type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/first()":{"title":"first()","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"first","kind":"identifier"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","preciseIdentifier":"s:Sci7ElementQa","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"role":"symbol","conformance":{"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"abstract":[{"text":"Returns the first element of the sequence","type":"text"}],"kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/first()","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/first()"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/dematerialize()":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"dematerialize","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">() -> ","kind":"text"},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO13DematerializeV","text":"Dematerialize","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"Transforms a sequence of "},{"type":"codeVoice","code":"Event"},{"type":"text","text":" values back into their original form in an "},{"type":"codeVoice","code":"AsyncSequence"},{"text":".","type":"text"}],"title":"dematerialize()","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/dematerialize()","type":"topic","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/dematerialize()"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/reduce(_:_:)":{"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/reduce(_:_:)","abstract":[],"role":"symbol","title":"reduce(_:_:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/reduce(_:_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reduce","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Result","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"Result","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"}],"kind":"symbol","type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/replaceError(with:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replaceError"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"ReplaceError","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO12ReplaceErrorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa","text":"Element"},{"text":">","kind":"text"}],"conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"type":"topic","title":"replaceError(with:)","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/replaceerror(with:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/replaceError(with:)","abstract":[{"type":"text","text":"Replaces any errors from the upstream "},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" with the provided value."}]},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/min(by:)":{"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/min(by:)","abstract":[],"kind":"symbol","title":"min(by:)","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/min(by:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"min"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"by"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa","text":"Element"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa"},{"kind":"text","text":"?"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/encode(encoder:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"encode","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"E"},{"kind":"text","text":">("},{"text":"encoder","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier","text":"AsyncSequences"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO6EncodeV","text":"Encode","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"E","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"Encodes the output from upstream using a specified encoder."}],"title":"encode(encoder:)","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/encode(encoder:)","type":"topic","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/encode(encoder:)"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/max(by:)":{"title":"max(by:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"max","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"by"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa","text":"Element"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:Sci7ElementQa","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","preciseIdentifier":"s:Sci7ElementQa","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/max(by:)","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/max(by:)","abstract":[],"type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/characters":{"kind":"symbol","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/characters","title":"characters","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"characters","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AsyncCharacterSequence","preciseIdentifier":"s:10Foundation22AsyncCharacterSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"UInt8","type":"codeVoice"},{"type":"text","text":"."}]},"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/characters"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/print(_:)":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/print(_:)","abstract":[{"type":"text","text":"Logs events from the upstream "},{"code":"AsyncSequence","type":"codeVoice"},{"text":" to the console.","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV","text":"HandleEvents"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"type":"topic","title":"print(_:)","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/print(_:)"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/catch(_:_:)":{"abstract":[{"type":"text","text":"Catches a specific type of error emitted by the upstream "},{"type":"codeVoice","code":"AsyncSequence"},{"text":" and handles them using the provided closure.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`catch`","kind":"identifier"},{"text":"<","kind":"text"},{"text":"D","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"E","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"E","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO5CatchV","text":"Catch"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":">"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/catch(_:_:)","title":"catch(_:_:)","role":"symbol","type":"topic","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/catch(_:_:)","kind":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/tryCatch(_:)":{"title":"tryCatch(_:)","type":"topic","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/trycatch(_:)","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/tryCatch(_:)","kind":"symbol","abstract":[{"text":"Tries to catch any errors emitted by the upstream ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"text":" and handles them using the provided throwing closure.","type":"text"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"tryCatch"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"D"},{"text":">((any ","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"D"},{"text":") -> ","kind":"text"},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"text":"Catch","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO5CatchV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"D","kind":"typeIdentifier"},{"kind":"text","text":">"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/catch(_:)":{"abstract":[{"type":"text","text":"Catches any errors emitted by the upstream "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" and handles them using the provided closure."}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/catch(_:)","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/catch(_:)","kind":"symbol","title":"catch(_:)","role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}]},"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"`catch`","kind":"identifier"},{"kind":"text","text":"<"},{"text":"D","kind":"genericParameter"},{"text":">((any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"D"},{"text":") -> ","kind":"text"},{"text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO5CatchV","text":"Catch"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":">"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/collect()":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}]},"abstract":[{"type":"text","text":"Collects all received elements, and emits a single array of the collection when the upstream sequence finishes."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"collect"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier","text":"AsyncSequences"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO7CollectV","text":"Collect"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","title":"collect()","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/collect()","type":"topic","role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/collect()"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/sink(receiveCompletion:receiveOutput:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"sink"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"receiveCompletion"},{"text":": ((","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Completion","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO10CompletionO"},{"text":"<any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":">) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")?, "},{"text":"receiveOutput","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa","text":"Element"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":")?) -> "},{"text":"AnyCancellable","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AnyCancellableC"}],"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/sink(receivecompletion:receiveoutput:)","abstract":[{"type":"text","text":"Executes the current async sequence and returns an AnyCancellable token to cancel the subscription."}],"type":"topic","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/sink(receiveCompletion:receiveOutput:)","title":"sink(receiveCompletion:receiveOutput:)","role":"symbol","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/filter(_:)":{"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/filter(_:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"filter","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:Sci7ElementQa"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV","kind":"typeIdentifier","text":"AsyncFilterSequence"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"title":"filter(_:)","role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/filter(_:)","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/assertNoFailure()":{"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/assertnofailure()","abstract":[{"type":"text","text":"Raises a fatal error when its upstream sequence fails, and otherwise republishes all received input."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/assertNoFailure()","title":"assertNoFailure()","role":"symbol","kind":"symbol","type":"topic","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"assertNoFailure"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"AssertNoFailure","preciseIdentifier":"s:7Afluent14AsyncSequencesO15AssertNoFailureV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/flatMap(_:)-ha2j":{"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/flatmap(_:)-ha2j","abstract":[],"role":"symbol","title":"flatMap(_:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/flatMap(_:)-ha2j","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"flatMap","kind":"identifier"},{"kind":"text","text":"<"},{"text":"SegmentOfResult","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"text":"SegmentOfResult","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"AsyncFlatMapSequence","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"SegmentOfResult","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/mapError(_:)":{"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/maperror(_:)","abstract":[{"text":"Transforms the error produced by the ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":"."}],"title":"mapError(_:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/mapError(_:)","role":"symbol","kind":"symbol","type":"topic","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"mapError","kind":"identifier"},{"text":"((any ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":") -> any "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":") -> "},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"MapError","preciseIdentifier":"s:7Afluent14AsyncSequencesO8MapErrorV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/max()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"max","kind":"identifier"},{"text":"() ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa"},{"text":"?","kind":"text"}],"abstract":[],"title":"max()","conformance":{"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/max()","type":"topic","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/max()"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/drop(while:)":{"abstract":[],"type":"topic","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/drop(while:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/drop(while:)","title":"drop(while:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"drop","kind":"identifier"},{"text":"(","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sci7ElementQa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV","kind":"typeIdentifier","text":"AsyncDropWhileSequence"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/retry(_:on:_:)-38yzu":{"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/retry(_:on:_:)-38yzu","abstract":[{"type":"text","text":"Retries the upstream "},{"type":"codeVoice","code":"AsynchronousUnitOfWork"},{"type":"text","text":" up to a specified number of times only when a specific error occurs, while applying a transformation on error."}],"role":"symbol","title":"retry(_:on:_:)","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/retry(_:on:_:)-38yzu","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"retry"},{"text":"<","kind":"text"},{"text":"D","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"E"},{"kind":"text","text":">("},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":", ","kind":"text"},{"text":"on","kind":"externalParam"},{"kind":"text","text":": "},{"text":"E","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"D","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"text":"RetryOnAfterFlatMapping","preciseIdentifier":"s:7Afluent14AsyncSequencesO23RetryOnAfterFlatMappingC","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"D"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent20RetryByCountStrategyC","text":"RetryByCountStrategy"},{"text":">","kind":"text"}],"kind":"symbol","type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/compactMap(_:)-9f8zg":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"compactMap"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"ElementOfResult"},{"kind":"text","text":">(("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:Sci7ElementQa"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"ElementOfResult"},{"kind":"text","text":"?) -> "},{"text":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ElementOfResult"},{"text":">","kind":"text"}],"abstract":[],"title":"compactMap(_:)","kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/compactmap(_:)-9f8zg","type":"topic","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/compactMap(_:)-9f8zg"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/retry(_:on:_:)-3r3bs":{"title":"retry(_:on:_:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"retry","kind":"identifier"},{"text":"<","kind":"text"},{"text":"D","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"E"},{"kind":"text","text":", "},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"S","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"on"},{"text":": ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier","text":"AsyncSequences"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO23RetryOnAfterFlatMappingC","kind":"typeIdentifier","text":"RetryOnAfterFlatMapping"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"S"},{"text":">","kind":"text"}],"role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"abstract":[{"type":"text","text":"Retries the upstream "},{"type":"codeVoice","code":"AsynchronousUnitOfWork"},{"type":"text","text":" up to a specified number of times only when a specific error occurs, while applying a transformation on error."}],"kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/retry(_:on:_:)-3r3bs","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/retry(_:on:_:)-3r3bs"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/groupBy(keySelector:)":{"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/groupby(keyselector:)","abstract":[],"role":"symbol","title":"groupBy(keySelector:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/groupBy(keySelector:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"groupBy"},{"text":"<","kind":"text"},{"text":"Key","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"keySelector"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Key"},{"kind":"text","text":") -> "},{"text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"GroupBy","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO7GroupByV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/mapError(_:_:)":{"role":"symbol","kind":"symbol","title":"mapError(_:_:)","type":"topic","abstract":[{"type":"text","text":"Transforms the error produced by the "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":"."}],"conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"mapError","kind":"identifier"},{"text":"<","kind":"text"},{"text":"E","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"E"},{"text":", (any ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":") -> any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"MapError","preciseIdentifier":"s:7Afluent14AsyncSequencesO8MapErrorV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/mapError(_:_:)","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/maperror(_:_:)"}}}