{"variants":[{"paths":["\/documentation\/afluent\/asyncsequences\/assertnofailure\/breakpointonerror()"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"extendedModule":"_Concurrency","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"breakpointOnError","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"text":".","kind":"text"},{"text":"HandleEvents","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"remoteSource":{"fileName":"BreakpointSequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/BreakpointSequence.swift#L43"},"title":"breakpointOnError()","roleHeading":"Instance Method","role":"symbol","modules":[{"name":"Afluent","relatedModules":["_Concurrency"]}],"externalID":"s:Sci7Afluents8SendableRzrlE17breakpointOnErrorAA14AsyncSequencesO12HandleEventsVy_xGyF::SYNTHESIZED::s:7Afluent14AsyncSequencesO15AssertNoFailureV"},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/AsyncSequence-Implementations"]]},"abstract":[{"type":"text","text":"Introduces a breakpoint into the async sequence when an error occurs."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"breakpointOnError"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","text":"AsyncSequences"},{"text":".","kind":"text"},{"text":"HandleEvents","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","text":"Return Value","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"type":"codeVoice","code":"AsyncSequence"},{"text":" with the breakpoint-on-error condition applied.","type":"text"}]}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This function triggers a "},{"type":"codeVoice","code":"SIGTRAP"},{"type":"text","text":" signal, pausing execution in a debugger, whenever the async sequence produces an error."}]}]}],"sections":[],"kind":"symbol","identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/breakpointOnError()","interfaceLanguage":"swift"},"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/AsyncSequence-Implementations":{"kind":"article","abstract":[],"title":"AsyncSequence Implementations","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/asyncsequence-implementations","role":"collectionGroup","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/AsyncSequence-Implementations"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure":{"navigatorTitle":[{"text":"AssertNoFailure","kind":"identifier"}],"abstract":[],"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure","kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AssertNoFailure","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure","title":"AsyncSequences.AssertNoFailure"},"doc://Afluent/documentation/Afluent/AsyncSequences/HandleEvents":{"kind":"symbol","abstract":[],"title":"AsyncSequences.HandleEvents","url":"\/documentation\/afluent\/asyncsequences\/handleevents","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"HandleEvents","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"HandleEvents"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents"},"doc://Afluent/documentation/Afluent":{"kind":"symbol","abstract":[],"type":"topic","role":"collection","identifier":"doc:\/\/Afluent\/documentation\/Afluent","url":"\/documentation\/afluent","title":"Afluent"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/breakpointOnError()":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/breakpointOnError()","role":"symbol","title":"breakpointOnError()","abstract":[{"text":"Introduces a breakpoint into the async sequence when an error occurs.","type":"text"}],"kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/breakpointonerror()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"breakpointOnError","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV","text":"HandleEvents"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"type":"topic","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}]}},"doc://Afluent/documentation/Afluent/AsyncSequences":{"title":"AsyncSequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","url":"\/documentation\/afluent\/asyncsequences","abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncSequences","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"type":"topic","kind":"symbol"}}}