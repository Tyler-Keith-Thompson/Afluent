{"abstract":[{"text":"Replaces any ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" values from the upstream ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" with the provided non-nil value."}],"sections":[],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/AsyncSequence-Implementations"]]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"replaceNil"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"E"},{"kind":"text","text":">("},{"kind":"externalParam","text":"with"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":") -> "},{"text":"AsyncSequences","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/ReplaceNil","preciseIdentifier":"s:7Afluent14AsyncSequencesO10ReplaceNilV","kind":"typeIdentifier","text":"ReplaceNil"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"E","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"E","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:Sci7ElementQa","kind":"typeIdentifier"},{"kind":"text","text":" == "},{"text":"E","kind":"typeIdentifier"},{"text":"?","kind":"text"}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The value to emit when the upstream emits ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"}]}],"name":"value"}]},{"content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"inlineContent":[{"type":"text","text":"An "},{"type":"codeVoice","code":"AsyncSequence"},{"text":" that emits the specified value instead of ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" when the upstream emits ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}],"type":"paragraph"}],"kind":"content"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/replaceNil(with:)"},"variants":[{"paths":["\/documentation\/afluent\/asyncsequences\/assertnofailure\/replacenil(with:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"symbolKind":"method","modules":[{"name":"Afluent","relatedModules":["_Concurrency"]}],"conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"replaceNil","kind":"identifier"},{"text":"<","kind":"text"},{"text":"E","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO10ReplaceNilV","text":"ReplaceNil","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":">"}],"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/ReplaceNilSequence.swift#L46","fileName":"ReplaceNilSequence.swift"},"role":"symbol","externalID":"s:Sci7Afluents8SendableRzrlE10replaceNil4withAA14AsyncSequencesO07ReplaceD0Vy_xqd__Gqd___tsABRd__qd__Sg7ElementRtzlF::SYNTHESIZED::s:7Afluent14AsyncSequencesO15AssertNoFailureV","roleHeading":"Instance Method","title":"replaceNil(with:)","extendedModule":"_Concurrency"},"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/AsyncSequence-Implementations":{"kind":"article","abstract":[],"title":"AsyncSequence Implementations","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/asyncsequence-implementations","role":"collectionGroup","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/AsyncSequence-Implementations"},"doc://Afluent/documentation/Afluent/AsyncSequences/ReplaceNil":{"type":"topic","abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ReplaceNil","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences\/replacenil","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/ReplaceNil","kind":"symbol","navigatorTitle":[{"text":"ReplaceNil","kind":"identifier"}],"role":"symbol","title":"AsyncSequences.ReplaceNil"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"title":"AsyncSequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","url":"\/documentation\/afluent\/asyncsequences","abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncSequences","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"type":"topic","kind":"symbol"},"doc://Afluent/documentation/Afluent":{"kind":"symbol","abstract":[],"type":"topic","role":"collection","identifier":"doc:\/\/Afluent\/documentation\/Afluent","url":"\/documentation\/afluent","title":"Afluent"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure":{"navigatorTitle":[{"text":"AssertNoFailure","kind":"identifier"}],"abstract":[],"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure","kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AssertNoFailure","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure","title":"AsyncSequences.AssertNoFailure"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/replaceNil(with:)":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/replaceNil(with:)","role":"symbol","title":"replaceNil(with:)","abstract":[{"type":"text","text":"Replaces any "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" values from the upstream "},{"type":"codeVoice","code":"AsyncSequence"},{"text":" with the provided non-nil value.","type":"text"}],"kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/replacenil(with:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replaceNil"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"E"},{"text":">(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"text":"ReplaceNil","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO10ReplaceNilV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"kind":"text","text":">"}],"type":"topic","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}]}}}}