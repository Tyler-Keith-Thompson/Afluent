{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/retry(_:on:_:)-3r3bs"},"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"type":"text","text":"Retries the upstream "},{"code":"AsynchronousUnitOfWork","type":"codeVoice"},{"text":" up to a specified number of times only when a specific error occurs, while applying a transformation on error.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asyncsequences\/assertnofailure\/retry(_:on:_:)-3r3bs"]}],"metadata":{"externalID":"s:Sci7Afluents8SendableRzrlE5retry_2on_AA14AsyncSequencesO23RetryOnAfterFlatMappingCy_xqd_0_qd__qd_1_Gqd_1__qd_0_qd__qd_0_YaYbKctsABRd__SciRd__SQRd_0_s5ErrorRd_0_AA0G8StrategyRd_1_sAB7ElementRpzALQyd__AMRSr1_lF::SYNTHESIZED::s:7Afluent14AsyncSequencesO15AssertNoFailureV","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"retry","kind":"identifier"},{"text":"<","kind":"text"},{"text":"D","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"E","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"on"},{"kind":"text","text":": "},{"text":"E","kind":"typeIdentifier"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"E"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"D"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"kind":"text","text":"."},{"text":"RetryOnAfterFlatMapping","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO23RetryOnAfterFlatMappingC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":", "},{"text":"S","kind":"typeIdentifier"},{"text":">","kind":"text"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"retry(_:on:_:)","role":"symbol","remoteSource":{"fileName":"RetryAfterFlatMappingSequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/RetryAfterFlatMappingSequence.swift#L244"},"roleHeading":"Instance Method","extendedModule":"_Concurrency","modules":[{"name":"Afluent","relatedModules":["_Concurrency"]}]},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"retry","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"D"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"E"},{"text":", ","kind":"text"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"strategy","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"text":", ","kind":"text"},{"text":"on","kind":"externalParam"},{"kind":"text","text":" "},{"text":"error","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"E"},{"text":", ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"transform","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"E"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"D"},{"text":") -> ","kind":"text"},{"text":"AsyncSequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier"},{"kind":"text","text":"."},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOnAfterFlatMapping","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO23RetryOnAfterFlatMappingC","text":"RetryOnAfterFlatMapping"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"E","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"D","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"AsyncSequence","preciseIdentifier":"s:Sci"},{"kind":"text","text":", "},{"text":"E","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"Equatable","kind":"typeIdentifier","preciseIdentifier":"s:SQ"},{"text":", ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":", "},{"text":"S","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:7Afluent13RetryStrategyP","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","text":"RetryStrategy"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sci7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":" : ","kind":"text"},{"text":"Sendable","preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sci7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":"."},{"text":"Element","preciseIdentifier":"s:Sci7ElementQa","kind":"typeIdentifier"}]}]},{"kind":"parameters","parameters":[{"name":"strategy","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The strategy to use when retrying"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The specific error that should trigger a transform."}]}],"name":"error"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An async closure that takes the error from the upstream and returns a new "},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":"."}]}],"name":"transform"}]},{"kind":"content","content":[{"text":"Return Value","type":"heading","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"text":"An ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" that emits the same output as the upstream but retries on the specified error up to the specified number of times, with the applied transformation."}]}]}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/AsyncSequence-Implementations"]]},"kind":"symbol","references":{"doc://Afluent/documentation/Afluent/AsyncSequences":{"title":"AsyncSequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","url":"\/documentation\/afluent\/asyncsequences","abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncSequences","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"type":"topic","kind":"symbol"},"doc://Afluent/documentation/Afluent":{"kind":"symbol","abstract":[],"type":"topic","role":"collection","identifier":"doc:\/\/Afluent\/documentation\/Afluent","url":"\/documentation\/afluent","title":"Afluent"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/AsyncSequence-Implementations":{"kind":"article","abstract":[],"title":"AsyncSequence Implementations","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/asyncsequence-implementations","role":"collectionGroup","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/AsyncSequence-Implementations"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure":{"navigatorTitle":[{"text":"AssertNoFailure","kind":"identifier"}],"abstract":[],"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure","kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AssertNoFailure","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure","title":"AsyncSequences.AssertNoFailure"},"doc://Afluent/documentation/Afluent/AsyncSequences/RetryOnAfterFlatMapping":{"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RetryOnAfterFlatMapping","kind":"identifier"}],"title":"AsyncSequences.RetryOnAfterFlatMapping","abstract":[],"url":"\/documentation\/afluent\/asyncsequences\/retryonafterflatmapping","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOnAfterFlatMapping","navigatorTitle":[{"text":"RetryOnAfterFlatMapping","kind":"identifier"}],"kind":"symbol","role":"symbol"},"doc://Afluent/documentation/Afluent/RetryStrategy":{"kind":"symbol","url":"\/documentation\/afluent\/retrystrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","abstract":[{"type":"text","text":"A strategy for handling errors and determining whether to retry an operation."}],"title":"RetryStrategy","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"RetryStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"RetryStrategy","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/retry(_:on:_:)-3r3bs":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/retry(_:on:_:)-3r3bs","role":"symbol","title":"retry(_:on:_:)","abstract":[{"type":"text","text":"Retries the upstream "},{"code":"AsynchronousUnitOfWork","type":"codeVoice"},{"type":"text","text":" up to a specified number of times only when a specific error occurs, while applying a transformation on error."}],"kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/retry(_:on:_:)-3r3bs","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"retry"},{"kind":"text","text":"<"},{"text":"D","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"E","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"on","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO23RetryOnAfterFlatMappingC","kind":"typeIdentifier","text":"RetryOnAfterFlatMapping"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"E"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"D"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"text":">","kind":"text"}],"type":"topic","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}}}}