{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"text":"(","kind":"text"},{"text":"upstream","kind":"externalParam"},{"kind":"text","text":": "},{"text":"@escaping","kind":"keyword"},{"text":" (() -> ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"kind":"text","text":"))"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"upstream","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that returns an asynchronous sequence that will be used later during iteration."}]}]}]}],"metadata":{"externalID":"s:7Afluent14AsyncSequencesO8DeferredV8upstreamAEy_xGxyYbc_tcfc","roleHeading":"Initializer","remoteSource":{"fileName":"Deferred.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/Deferred.swift#L43"},"role":"symbol","title":"init(upstream:)","modules":[{"name":"Afluent"}],"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"upstream","kind":"externalParam"},{"kind":"text","text":": (() -> "},{"text":"Upstream","kind":"typeIdentifier"},{"text":"))","kind":"text"}],"symbolKind":"init"},"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Deferred\/init(upstream:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asyncsequences\/deferred\/init(upstream:)"]}],"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Deferred"]]},"abstract":[{"text":"Constructs an asynchronous sequence defining an closure that returns an asynchronous sequence","type":"text"},{"type":"text","text":" "},{"type":"text","text":"that will later be called at the time of iteration."}],"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/Deferred/init(upstream:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"upstream"},{"text":": (() -> ","kind":"text"},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":"))"}],"url":"\/documentation\/afluent\/asyncsequences\/deferred\/init(upstream:)","role":"symbol","type":"topic","abstract":[{"text":"Constructs an asynchronous sequence defining an closure that returns an asynchronous sequence","type":"text"},{"type":"text","text":" "},{"text":"that will later be called at the time of iteration.","type":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Deferred\/init(upstream:)","kind":"symbol","title":"init(upstream:)"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"AsyncSequences","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","title":"AsyncSequences","role":"symbol","kind":"symbol","abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}],"type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/Deferred":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Deferred","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences\/deferred","role":"symbol","type":"topic","abstract":[{"type":"text","text":"An asynchronous sequence that defers the execution of another asynchronous sequence until iteration."}],"title":"AsyncSequences.Deferred","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Deferred","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Deferred"}]},"doc://Afluent/documentation/Afluent":{"abstract":[],"title":"Afluent","role":"collection","identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol","url":"\/documentation\/afluent","type":"topic"}}}