{"sections":[],"metadata":{"symbolKind":"init","externalID":"s:7Afluent14AsyncSequencesO8DeferredV8upstreamAEy_xGxyYbc_tcfc","modules":[{"name":"Afluent"}],"remoteSource":{"fileName":"Deferred.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/Deferred.swift#L43"},"roleHeading":"Initializer","role":"symbol","title":"init(upstream:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"upstream","kind":"externalParam"},{"text":": (() -> ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":"))","kind":"text"}]},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Deferred"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asyncsequences\/deferred\/init(upstream:)"]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"kind":"text","text":"("},{"kind":"externalParam","text":"upstream"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"text":" (() -> ","kind":"text"},{"kind":"typeIdentifier","text":"Upstream"},{"text":"))","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"name":"upstream","content":[{"type":"paragraph","inlineContent":[{"text":"A closure that returns an asynchronous sequence that will be used later during iteration.","type":"text"}]}]}],"kind":"parameters"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Deferred\/init(upstream:)"},"abstract":[{"type":"text","text":"Constructs an asynchronous sequence defining an closure that returns an asynchronous sequence"},{"text":" ","type":"text"},{"text":"that will later be called at the time of iteration.","type":"text"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/Deferred":{"title":"AsyncSequences.Deferred","kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Deferred"}],"url":"\/documentation\/afluent\/asyncsequences\/deferred","abstract":[{"text":"An asynchronous sequence that defers the execution of another asynchronous sequence until iteration.","type":"text"}],"navigatorTitle":[{"text":"Deferred","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Deferred","role":"symbol"},"doc://Afluent/documentation/Afluent":{"kind":"symbol","abstract":[],"type":"topic","role":"collection","identifier":"doc:\/\/Afluent\/documentation\/Afluent","url":"\/documentation\/afluent","title":"Afluent"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"title":"AsyncSequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","url":"\/documentation\/afluent\/asyncsequences","abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncSequences","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"type":"topic","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/Deferred/init(upstream:)":{"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Deferred\/init(upstream:)","abstract":[{"type":"text","text":"Constructs an asynchronous sequence defining an closure that returns an asynchronous sequence"},{"text":" ","type":"text"},{"text":"that will later be called at the time of iteration.","type":"text"}],"title":"init(upstream:)","type":"topic","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"upstream","kind":"externalParam"},{"kind":"text","text":": (() -> "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":"))"}],"url":"\/documentation\/afluent\/asyncsequences\/deferred\/init(upstream:)"}}}