{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asyncsequences\/groupby\/breakpoint(receiveoutput:receiveerror:)"]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"breakpoint","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"receiveOutput"},{"kind":"text","text":": (("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":")? = nil, ","kind":"text"},{"text":"receiveError","kind":"externalParam"},{"kind":"text","text":": ((any "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":")? = nil) -> ","kind":"text"},{"kind":"typeIdentifier","text":"AsyncSequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents","text":"HandleEvents"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A closure that takes the successful output of the sequence. If this closure returns "},{"code":"true","type":"codeVoice"},{"type":"text","text":", a breakpoint is triggered. Default is "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}],"type":"paragraph"}],"name":"receiveOutput"},{"name":"receiveError","content":[{"inlineContent":[{"text":"A closure that takes any error produced by the sequence. If this closure returns ","type":"text"},{"code":"true","type":"codeVoice"},{"type":"text","text":", a breakpoint is triggered. Default is "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"An asynchronous unit of work with the breakpoint conditions applied.","type":"text"}]}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"inlineContent":[{"type":"text","text":"This function allows you to introduce conditional breakpoints based on the output or error of the async sequence."},{"text":" ","type":"text"},{"type":"text","text":"If the provided conditions are met, a "},{"code":"SIGTRAP","type":"codeVoice"},{"type":"text","text":" signal is raised, pausing execution in a debugger."}],"type":"paragraph"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/GroupBy","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/GroupBy\/AsyncSequence-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/GroupBy\/breakpoint(receiveOutput:receiveError:)"},"metadata":{"title":"breakpoint(receiveOutput:receiveError:)","extendedModule":"_Concurrency","remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/BreakpointSequence.swift#L21","fileName":"BreakpointSequence.swift"},"externalID":"s:Sci7Afluents8SendableRzrlE10breakpoint13receiveOutput0D5ErrorAA14AsyncSequencesO12HandleEventsVy_xGSb7ElementQzYaYbKcSg_Sbs0F0_pYaYbKcSgtF::SYNTHESIZED::s:7Afluent14AsyncSequencesO7GroupByV","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"breakpoint"},{"text":"(","kind":"text"},{"text":"receiveOutput","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sci7ElementQa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":")?, ","kind":"text"},{"text":"receiveError","kind":"externalParam"},{"kind":"text","text":": ((any "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":")?) -> ","kind":"text"},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV","text":"HandleEvents"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}]},"role":"symbol","symbolKind":"method","modules":[{"name":"Afluent","relatedModules":["_Concurrency"]}],"roleHeading":"Instance Method"},"sections":[],"kind":"symbol","abstract":[{"text":"Introduces a breakpoint into the async sequence.","type":"text"}],"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/HandleEvents":{"role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/handleevents","kind":"symbol","title":"AsyncSequences.HandleEvents","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"HandleEvents","kind":"identifier"}],"abstract":[],"navigatorTitle":[{"text":"HandleEvents","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents"},"doc://Afluent/documentation/Afluent/AsyncSequences/GroupBy/breakpoint(receiveOutput:receiveError:)":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"breakpoint","kind":"identifier"},{"kind":"text","text":"("},{"text":"receiveOutput","kind":"externalParam"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","preciseIdentifier":"s:Sci7ElementQa","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":")?, "},{"kind":"externalParam","text":"receiveError"},{"text":": ((any ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":")?) -> "},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV","kind":"typeIdentifier","text":"HandleEvents"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","title":"breakpoint(receiveOutput:receiveError:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/GroupBy\/breakpoint(receiveOutput:receiveError:)","abstract":[{"text":"Introduces a breakpoint into the async sequence.","type":"text"}],"role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/groupby\/breakpoint(receiveoutput:receiveerror:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}]}},"doc://Afluent/documentation/Afluent":{"abstract":[],"title":"Afluent","role":"collection","identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol","url":"\/documentation\/afluent","type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"AsyncSequences","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","title":"AsyncSequences","role":"symbol","kind":"symbol","abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}],"type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/GroupBy":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"GroupBy","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences\/groupby","role":"symbol","type":"topic","abstract":[],"kind":"symbol","title":"AsyncSequences.GroupBy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/GroupBy","navigatorTitle":[{"text":"GroupBy","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/GroupBy/AsyncSequence-Implementations":{"url":"\/documentation\/afluent\/asyncsequences\/groupby\/asyncsequence-implementations","title":"AsyncSequence Implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/GroupBy\/AsyncSequence-Implementations","abstract":[],"role":"collectionGroup","kind":"article","type":"topic"}}}