{"metadata":{"modules":[{"name":"Afluent"}],"navigatorTitle":[{"text":"ExponentialBackoffStrategy","kind":"identifier"}],"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/RetryStrategies\/RetryByBackoffStrategy.swift#L122","fileName":"RetryByBackoffStrategy.swift"},"externalID":"s:7Afluent26ExponentialBackoffStrategyC","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"ExponentialBackoffStrategy","kind":"identifier"}],"title":"ExponentialBackoffStrategy","roleHeading":"Class","platforms":[{"deprecated":false,"unavailable":false,"name":"iOS","beta":false,"introducedAt":"16.0"},{"deprecated":false,"introducedAt":"13.0","name":"macOS","beta":false,"unavailable":false},{"beta":false,"introducedAt":"16.0","name":"tvOS","deprecated":false,"unavailable":false},{"name":"watchOS","introducedAt":"9.0","unavailable":false,"beta":false,"deprecated":false}],"symbolKind":"class"},"abstract":[{"text":"An exponential backoff strategy for retrying operations.","type":"text"}],"kind":"symbol","topicSections":[{"title":"Initializers","anchor":"Initializers","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/init(base:maxCount:maxDelay:)-3j13l","doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/init(base:maxCount:maxDelay:)-4kgu6"]},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/backoff(clock:durationUnit:)"],"title":"Instance Methods","generated":true,"anchor":"Instance-Methods"},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/Actor-Implementations","doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/BackoffStrategy-Implementations"],"generated":true,"anchor":"Default-Implementations","title":"Default Implementations"}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"actor","kind":"keyword"},{"kind":"text","text":" "},{"text":"ExponentialBackoffStrategy","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Clock"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Clock"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency5ClockP","text":"Clock"}]}],"kind":"declarations"},{"content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"inlineContent":[{"text":"This actor calculates exponential delays between retries based on a specified base value. With each retry,","type":"text"},{"type":"text","text":" "},{"text":"the delay increases exponentially until the maximum retry count is reached.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","doc:\/\/Afluent\/s8SendableP","doc:\/\/Afluent\/ScA"],"kind":"relationships","type":"conformsTo"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/exponentialbackoffstrategy"]}],"sections":[],"references":{"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy/BackoffStrategy-Implementations":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/BackoffStrategy-Implementations","title":"BackoffStrategy Implementations","type":"topic","abstract":[],"kind":"article","url":"\/documentation\/afluent\/exponentialbackoffstrategy\/backoffstrategy-implementations","role":"collectionGroup"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy/backoff(clock:durationUnit:)":{"role":"symbol","abstract":[],"url":"\/documentation\/afluent\/exponentialbackoffstrategy\/backoff(clock:durationunit:)","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/backoff(clock:durationUnit:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"backoff"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"clock","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Clock"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"durationUnit"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Clock"},{"kind":"text","text":"."},{"preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa","text":"Duration","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"title":"backoff(clock:durationUnit:)","type":"topic"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy/init(base:maxCount:maxDelay:)-3j13l":{"kind":"symbol","abstract":[{"type":"text","text":"Creates a new exponential backoff strategy with the given base and maximum retry count."}],"type":"topic","title":"init(base:maxCount:maxDelay:)","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"base"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maxCount"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"maxDelay"},{"kind":"text","text":": "},{"text":"Clock","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Duration","preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa"},{"text":")","kind":"text"}],"url":"\/documentation\/afluent\/exponentialbackoffstrategy\/init(base:maxcount:maxdelay:)-3j13l","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/init(base:maxCount:maxDelay:)-3j13l"},"doc://Afluent/documentation/Afluent":{"type":"topic","title":"Afluent","abstract":[],"url":"\/documentation\/afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","role":"collection","kind":"symbol"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy/init(base:maxCount:maxDelay:)-4kgu6":{"role":"symbol","url":"\/documentation\/afluent\/exponentialbackoffstrategy\/init(base:maxcount:maxdelay:)-4kgu6","type":"topic","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"base","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"maxCount","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":", "},{"text":"maxDelay","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Clock"},{"text":".","kind":"text"},{"preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa","text":"Duration","kind":"typeIdentifier"},{"kind":"text","text":")"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/init(base:maxCount:maxDelay:)-4kgu6","title":"init(base:maxCount:maxDelay:)","abstract":[{"type":"text","text":"Creates a new exponential backoff strategy with the given base and maximum retry count."}]},"doc://Afluent/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/Afluent\/s8SendableP","title":"Swift.Sendable"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","url":"\/documentation\/afluent\/exponentialbackoffstrategy","kind":"symbol","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ExponentialBackoffStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"ExponentialBackoffStrategy"}],"abstract":[{"type":"text","text":"An exponential backoff strategy for retrying operations."}],"title":"ExponentialBackoffStrategy","type":"topic"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy/Actor-Implementations":{"kind":"article","abstract":[],"type":"topic","title":"Actor Implementations","role":"collectionGroup","url":"\/documentation\/afluent\/exponentialbackoffstrategy\/actor-implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/Actor-Implementations"},"doc://Afluent/documentation/Afluent/BackoffStrategy":{"title":"BackoffStrategy","role":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BackoffStrategy"}],"kind":"symbol","abstract":[{"type":"text","text":"A protocol for implementing custom backoff strategies in retry mechanisms."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","navigatorTitle":[{"kind":"identifier","text":"BackoffStrategy"}],"url":"\/documentation\/afluent\/backoffstrategy"},"doc://Afluent/ScA":{"title":"_Concurrency.Actor","type":"unresolvable","identifier":"doc:\/\/Afluent\/ScA"}}}