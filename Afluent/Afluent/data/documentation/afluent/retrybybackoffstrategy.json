{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy"},"schemaVersion":{"minor":3,"major":0,"patch":0},"topicSections":[{"anchor":"Initializers","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/init(_:clock:durationUnit:)"],"title":"Initializers","generated":true},{"generated":true,"anchor":"Instance-Methods","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/handle(error:beforeRetry:)"],"title":"Instance Methods"},{"title":"Default Implementations","anchor":"Default-Implementations","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/Actor-Implementations","doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/RetryStrategy-Implementations"],"generated":true}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RetryByBackoffStrategy","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Strategy","kind":"genericParameter"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Strategy"},{"kind":"text","text":" : "},{"text":"BackoffStrategy","preciseIdentifier":"s:7Afluent15BackoffStrategyP","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy"}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The type of "},{"type":"codeVoice","code":"Clock"},{"text":" used for measuring time between retries.","type":"text"}]}],"name":"C"}]},{"content":[{"level":2,"text":"Overview","anchor":"overview","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This actor manages retry attempts with a configurable "},{"type":"codeVoice","code":"BackoffStrategy"},{"type":"text","text":" and clock. It uses the clock to calculate"},{"type":"text","text":" "},{"text":"the time delays between retries, allowing more fine-grained control over the timing of retries based on the provided","type":"text"},{"type":"text","text":" "},{"text":"backoff strategy.","type":"text"}]},{"type":"aside","name":"Note","style":"note","content":[{"inlineContent":[{"type":"text","text":"This actor conforms to "},{"type":"codeVoice","code":"RetryStrategy"},{"text":" and is used to manage retries based on time delays.","type":"text"}],"type":"paragraph"}]}],"kind":"content"}],"kind":"symbol","sections":[],"metadata":{"symbolKind":"class","title":"RetryByBackoffStrategy","modules":[{"name":"Afluent"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RetryByBackoffStrategy"}],"externalID":"s:7Afluent22RetryByBackoffStrategyC","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RetryByBackoffStrategy","kind":"identifier"}],"roleHeading":"Class","platforms":[{"unavailable":false,"deprecated":false,"introducedAt":"16.0","name":"iOS","beta":false},{"introducedAt":"13.0","name":"macOS","unavailable":false,"beta":false,"deprecated":false},{"deprecated":false,"name":"tvOS","unavailable":false,"beta":false,"introducedAt":"16.0"},{"deprecated":false,"introducedAt":"9.0","beta":false,"unavailable":false,"name":"watchOS"}],"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/RetryStrategies\/RetryByBackoffStrategy.swift#L39","fileName":"RetryByBackoffStrategy.swift"}},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","doc:\/\/Afluent\/s8SendableP","doc:\/\/Afluent\/ScA"],"title":"Conforms To","type":"conformsTo"}],"variants":[{"paths":["\/documentation\/afluent\/retrybybackoffstrategy"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"A retry strategy using a specified backoff strategy and clock."}],"references":{"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/RetryStrategy-Implementations":{"kind":"article","title":"RetryStrategy Implementations","abstract":[],"role":"collectionGroup","url":"\/documentation\/afluent\/retrybybackoffstrategy\/retrystrategy-implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/RetryStrategy-Implementations","type":"topic"},"doc://Afluent/documentation/Afluent":{"abstract":[],"title":"Afluent","role":"collection","identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol","url":"\/documentation\/afluent","type":"topic"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/handle(error:beforeRetry:)":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/handle(error:beforeRetry:)","title":"handle(error:beforeRetry:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"handle"},{"kind":"text","text":"("},{"text":"error","kind":"externalParam"},{"kind":"text","text":": any "},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"beforeRetry","kind":"externalParam"},{"text":": (any ","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"role":"symbol","abstract":[],"url":"\/documentation\/afluent\/retrybybackoffstrategy\/handle(error:beforeretry:)","type":"topic","kind":"symbol"},"doc://Afluent/ScA":{"identifier":"doc:\/\/Afluent\/ScA","type":"unresolvable","title":"_Concurrency.Actor"},"doc://Afluent/documentation/Afluent/RetryStrategy":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RetryStrategy","kind":"identifier"}],"abstract":[{"text":"A strategy for handling errors and determining whether to retry an operation.","type":"text"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","role":"symbol","title":"RetryStrategy","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RetryStrategy"}],"url":"\/documentation\/afluent\/retrystrategy"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/init(_:clock:durationUnit:)":{"type":"topic","title":"init(_:clock:durationUnit:)","abstract":[{"type":"text","text":"Creates a new retry strategy with the given backoff strategy and clock."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/init(_:clock:durationUnit:)","url":"\/documentation\/afluent\/retrybybackoffstrategy\/init(_:clock:durationunit:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Strategy","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"clock","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Strategy"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa","text":"Clock"},{"kind":"text","text":", "},{"text":"durationUnit","kind":"externalParam"},{"kind":"text","text":": "},{"text":"ClockDurationUnit","preciseIdentifier":"s:7Afluent17ClockDurationUnita","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Strategy","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Clock","preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"kind":"text","text":">)"}],"kind":"symbol","role":"symbol"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/Actor-Implementations":{"type":"topic","title":"Actor Implementations","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/Actor-Implementations","url":"\/documentation\/afluent\/retrybybackoffstrategy\/actor-implementations","kind":"article","role":"collectionGroup"},"doc://Afluent/s8SendableP":{"identifier":"doc:\/\/Afluent\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RetryByBackoffStrategy"}],"role":"symbol","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","url":"\/documentation\/afluent\/retrybybackoffstrategy","title":"RetryByBackoffStrategy","navigatorTitle":[{"text":"RetryByBackoffStrategy","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"A retry strategy using a specified backoff strategy and clock.","type":"text"}]},"doc://Afluent/documentation/Afluent/BackoffStrategy":{"url":"\/documentation\/afluent\/backoffstrategy","abstract":[{"type":"text","text":"A protocol for implementing custom backoff strategies in retry mechanisms."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","type":"topic","role":"symbol","kind":"symbol","title":"BackoffStrategy","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BackoffStrategy"}],"navigatorTitle":[{"text":"BackoffStrategy","kind":"identifier"}]}}}