{"topicSections":[{"generated":true,"title":"Initializers","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/init(_:clock:durationUnit:)"],"anchor":"Initializers"},{"generated":true,"title":"Instance Methods","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/handle(error:beforeRetry:)"],"anchor":"Instance-Methods"},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/Actor-Implementations","doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/RetryStrategy-Implementations"],"anchor":"Default-Implementations"}],"variants":[{"paths":["\/documentation\/afluent\/retrybybackoffstrategy"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","interfaceLanguage":"swift"},"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","doc:\/\/Afluent\/s8SendableP","doc:\/\/Afluent\/ScA"],"type":"conformsTo","title":"Conforms To"}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"text":"RetryByBackoffStrategy","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Strategy","kind":"genericParameter"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"Strategy","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"BackoffStrategy","preciseIdentifier":"s:7Afluent15BackoffStrategyP","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The type of "},{"code":"Clock","type":"codeVoice"},{"text":" used for measuring time between retries.","type":"text"}]}],"name":"C"}]},{"kind":"content","content":[{"anchor":"overview","text":"Overview","level":2,"type":"heading"},{"inlineContent":[{"text":"This actor manages retry attempts with a configurable ","type":"text"},{"code":"BackoffStrategy","type":"codeVoice"},{"text":" and clock. It uses the clock to calculate","type":"text"},{"text":" ","type":"text"},{"text":"the time delays between retries, allowing more fine-grained control over the timing of retries based on the provided","type":"text"},{"type":"text","text":" "},{"type":"text","text":"backoff strategy."}],"type":"paragraph"},{"content":[{"inlineContent":[{"type":"text","text":"This actor conforms to "},{"type":"codeVoice","code":"RetryStrategy"},{"type":"text","text":" and is used to manage retries based on time delays."}],"type":"paragraph"}],"type":"aside","name":"Note","style":"note"}]}],"abstract":[{"type":"text","text":"A retry strategy using a specified backoff strategy and clock."}],"metadata":{"platforms":[{"deprecated":false,"unavailable":false,"beta":false,"introducedAt":"16.0","name":"iOS"},{"introducedAt":"13.0","unavailable":false,"deprecated":false,"name":"macOS","beta":false},{"name":"tvOS","unavailable":false,"beta":false,"deprecated":false,"introducedAt":"16.0"},{"unavailable":false,"beta":false,"deprecated":false,"introducedAt":"9.0","name":"watchOS"}],"navigatorTitle":[{"kind":"identifier","text":"RetryByBackoffStrategy"}],"externalID":"s:7Afluent22RetryByBackoffStrategyC","roleHeading":"Class","symbolKind":"class","remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/RetryStrategies\/RetryByBackoffStrategy.swift#L39","fileName":"RetryByBackoffStrategy.swift"},"modules":[{"name":"Afluent"}],"title":"RetryByBackoffStrategy","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RetryByBackoffStrategy","kind":"identifier"}]},"sections":[],"references":{"doc://Afluent/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/Afluent\/s8SendableP","type":"unresolvable"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy":{"abstract":[{"text":"A retry strategy using a specified backoff strategy and clock.","type":"text"}],"role":"symbol","title":"RetryByBackoffStrategy","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RetryByBackoffStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"RetryByBackoffStrategy","kind":"identifier"}],"type":"topic","kind":"symbol","url":"\/documentation\/afluent\/retrybybackoffstrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy"},"doc://Afluent/documentation/Afluent":{"type":"topic","title":"Afluent","abstract":[],"url":"\/documentation\/afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","role":"collection","kind":"symbol"},"doc://Afluent/documentation/Afluent/RetryStrategy":{"type":"topic","abstract":[{"type":"text","text":"A strategy for handling errors and determining whether to retry an operation."}],"title":"RetryStrategy","url":"\/documentation\/afluent\/retrystrategy","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RetryStrategy"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RetryStrategy","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/RetryStrategy-Implementations":{"type":"topic","role":"collectionGroup","kind":"article","url":"\/documentation\/afluent\/retrybybackoffstrategy\/retrystrategy-implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/RetryStrategy-Implementations","title":"RetryStrategy Implementations","abstract":[]},"doc://Afluent/documentation/Afluent/BackoffStrategy":{"title":"BackoffStrategy","role":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BackoffStrategy"}],"kind":"symbol","abstract":[{"type":"text","text":"A protocol for implementing custom backoff strategies in retry mechanisms."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","navigatorTitle":[{"kind":"identifier","text":"BackoffStrategy"}],"url":"\/documentation\/afluent\/backoffstrategy"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/handle(error:beforeRetry:)":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/handle(error:beforeRetry:)","abstract":[],"kind":"symbol","url":"\/documentation\/afluent\/retrybybackoffstrategy\/handle(error:beforeretry:)","role":"symbol","type":"topic","title":"handle(error:beforeRetry:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handle","kind":"identifier"},{"text":"(","kind":"text"},{"text":"error","kind":"externalParam"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"beforeRetry"},{"kind":"text","text":": (any "},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}]},"doc://Afluent/ScA":{"title":"_Concurrency.Actor","identifier":"doc:\/\/Afluent\/ScA","type":"unresolvable"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/init(_:clock:durationUnit:)":{"abstract":[{"type":"text","text":"Creates a new retry strategy with the given backoff strategy and clock."}],"kind":"symbol","url":"\/documentation\/afluent\/retrybybackoffstrategy\/init(_:clock:durationunit:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/init(_:clock:durationUnit:)","role":"symbol","type":"topic","title":"init(_:clock:durationUnit:)","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Strategy"},{"kind":"text","text":", "},{"text":"clock","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Strategy"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa","text":"Clock"},{"kind":"text","text":", "},{"text":"durationUnit","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ClockDurationUnit","preciseIdentifier":"s:7Afluent17ClockDurationUnita"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Strategy"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa","kind":"typeIdentifier","text":"Clock"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":">)"}]},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/Actor-Implementations":{"abstract":[],"url":"\/documentation\/afluent\/retrybybackoffstrategy\/actor-implementations","type":"topic","kind":"article","role":"collectionGroup","title":"Actor Implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/Actor-Implementations"}}}