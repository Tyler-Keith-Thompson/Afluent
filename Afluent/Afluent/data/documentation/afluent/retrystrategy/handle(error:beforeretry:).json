{"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy"]]},"abstract":[{"text":"Determines whether an operation should be retried after encountering an error.","type":"text"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"symbolKind":"method","required":true,"modules":[{"name":"Afluent"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handle"},{"text":"(","kind":"text"},{"text":"error","kind":"externalParam"},{"kind":"text","text":": any "},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":", "},{"kind":"externalParam","text":"beforeRetry"},{"text":": (any ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"remoteSource":{"fileName":"RetryStrategy.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/RetryStrategies\/RetryStrategy.swift#L25"},"role":"symbol","externalID":"s:7Afluent13RetryStrategyP6handle5error06beforeB0Sbs5Error_p_ysAG_pYaYbKXEtYaKF","roleHeading":"Instance Method","title":"handle(error:beforeRetry:)"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy\/handle(error:beforeRetry:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/retrystrategy\/handle(error:beforeretry:)"]}],"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"handle"},{"text":"(","kind":"text"},{"text":"error","kind":"externalParam"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"text":", ","kind":"text"},{"text":"beforeRetry","kind":"externalParam"},{"text":": (any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"name":"error","content":[{"inlineContent":[{"type":"text","text":"The error that occurred during the operation."}],"type":"paragraph"}]},{"name":"beforeRetry","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that is executed before a retry is attempted. The closure is passed the encountered error"},{"text":" ","type":"text"},{"type":"text","text":"and can perform actions such as logging or cleanup before the retry is made. The closure itself is asynchronous"},{"type":"text","text":" "},{"type":"text","text":"and can throw errors if needed."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"return-value","text":"Return Value","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"A Boolean value indicating whether a retry should be attempted ("},{"type":"codeVoice","code":"true"},{"type":"text","text":") or not ("},{"type":"codeVoice","code":"false"},{"type":"text","text":")."}],"type":"paragraph"}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"style":"note","name":"Throws","content":[{"inlineContent":[{"type":"text","text":"An error if either the retry strategy itself fails or if the "},{"type":"codeVoice","code":"beforeRetry"},{"type":"text","text":" closure encounters an error."}],"type":"paragraph"}],"type":"aside"}]}],"kind":"symbol","references":{"doc://Afluent/documentation/Afluent/RetryStrategy":{"kind":"symbol","url":"\/documentation\/afluent\/retrystrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","abstract":[{"type":"text","text":"A strategy for handling errors and determining whether to retry an operation."}],"title":"RetryStrategy","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"RetryStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"RetryStrategy","kind":"identifier"}]},"doc://Afluent/documentation/Afluent":{"kind":"symbol","abstract":[],"type":"topic","role":"collection","identifier":"doc:\/\/Afluent\/documentation\/Afluent","url":"\/documentation\/afluent","title":"Afluent"},"doc://Afluent/documentation/Afluent/RetryStrategy/handle(error:beforeRetry:)":{"abstract":[{"type":"text","text":"Determines whether an operation should be retried after encountering an error."}],"type":"topic","kind":"symbol","url":"\/documentation\/afluent\/retrystrategy\/handle(error:beforeretry:)","title":"handle(error:beforeRetry:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy\/handle(error:beforeRetry:)","required":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handle"},{"kind":"text","text":"("},{"text":"error","kind":"externalParam"},{"text":": any ","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"beforeRetry","kind":"externalParam"},{"kind":"text","text":": (any "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"role":"symbol"}}}