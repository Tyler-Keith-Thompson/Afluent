{"sections":[],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","interfaceLanguage":"swift"},"relationshipsSections":[{"type":"conformsTo","kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/Afluent\/s8SendableP"]}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"topicSections":[{"anchor":"Initializers","generated":true,"title":"Initializers","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/init()"]},{"generated":true,"anchor":"Instance-Methods","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/cancelAll()","doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/queue(_:)"],"title":"Instance Methods"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"final","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"SerialTaskQueue","kind":"identifier"}]}],"kind":"declarations"},{"content":[{"anchor":"overview","text":"Overview","type":"heading","level":2},{"inlineContent":[{"text":"This actor manages a queue of tasks, ensuring that only one task is executed at a time. If a task is currently running, any new tasks are added to the queue and executed sequentially.","type":"text"}],"type":"paragraph"},{"level":2,"type":"heading","anchor":"Discussion","text":"Discussion"},{"inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"SerialTaskQueue"},{"text":" actor provides a way to manage task execution in a serial manner. When a new task is queued, it checks if another task is currently running. If no task is running, the new task is executed immediately. If a task is already running, the new task is added to a queue and will be executed once the current task completes.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"This actor is useful in scenarios where tasks must be executed in a specific order or when you need to ensure that only one task is executed at a time to avoid race conditions."}],"type":"paragraph"}],"kind":"content"}],"kind":"symbol","abstract":[{"type":"text","text":"A serial task queue that ensures tasks are executed one at a time."}],"metadata":{"remoteSource":{"fileName":"SerialTaskQueue.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SerialTaskQueue.swift#L19"},"externalID":"s:7Afluent15SerialTaskQueueC","roleHeading":"Class","symbolKind":"class","role":"symbol","modules":[{"name":"Afluent"}],"title":"SerialTaskQueue","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SerialTaskQueue","kind":"identifier"}],"navigatorTitle":[{"text":"SerialTaskQueue","kind":"identifier"}]},"variants":[{"paths":["\/documentation\/afluent\/serialtaskqueue"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Afluent/documentation/Afluent/SerialTaskQueue/init()":{"kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"()","kind":"text"}],"url":"\/documentation\/afluent\/serialtaskqueue\/init()","title":"init()","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/init()","type":"topic","abstract":[],"role":"symbol"},"doc://Afluent/documentation/Afluent/SerialTaskQueue":{"role":"symbol","title":"SerialTaskQueue","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","kind":"symbol","abstract":[{"text":"A serial task queue that ensures tasks are executed one at a time.","type":"text"}],"type":"topic","url":"\/documentation\/afluent\/serialtaskqueue","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SerialTaskQueue"}],"navigatorTitle":[{"text":"SerialTaskQueue","kind":"identifier"}]},"doc://Afluent/documentation/Afluent":{"type":"topic","title":"Afluent","abstract":[],"url":"\/documentation\/afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","role":"collection","kind":"symbol"},"doc://Afluent/documentation/Afluent/SerialTaskQueue/queue(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"queue","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">(() "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"T","kind":"typeIdentifier"}],"title":"queue(_:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/queue(_:)","url":"\/documentation\/afluent\/serialtaskqueue\/queue(_:)","role":"symbol","abstract":[{"type":"text","text":"Queues a task to be executed serially."}],"kind":"symbol","type":"topic"},"doc://Afluent/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/Afluent\/s8SendableP","title":"Swift.Sendable"},"doc://Afluent/documentation/Afluent/SerialTaskQueue/cancelAll()":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/cancelAll()","title":"cancelAll()","type":"topic","abstract":[{"text":"Cancels all the ongoing tasks in the queue","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cancelAll"},{"text":"()","kind":"text"}],"url":"\/documentation\/afluent\/serialtaskqueue\/cancelall()","role":"symbol"}}}