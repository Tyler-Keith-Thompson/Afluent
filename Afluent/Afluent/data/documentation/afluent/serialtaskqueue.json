{"abstract":[{"type":"text","text":"A serial task queue that ensures tasks are executed one at a time."}],"sections":[],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"topicSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/init()"],"title":"Initializers","generated":true,"anchor":"Initializers"},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/cancelAll()","doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/queue(_:)"],"anchor":"Instance-Methods","title":"Instance Methods","generated":true}],"kind":"symbol","relationshipsSections":[{"kind":"relationships","title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/Afluent\/s8SendableP"]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"final","kind":"keyword"},{"kind":"text","text":" "},{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"SerialTaskQueue","kind":"identifier"}],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"level":2,"anchor":"overview","text":"Overview","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"This actor manages a queue of tasks, ensuring that only one task is executed at a time. If a task is currently running, any new tasks are added to the queue and executed sequentially.","type":"text"}]},{"type":"heading","anchor":"Discussion","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"SerialTaskQueue"},{"type":"text","text":" actor provides a way to manage task execution in a serial manner. When a new task is queued, it checks if another task is currently running. If no task is running, the new task is executed immediately. If a task is already running, the new task is added to a queue and will be executed once the current task completes."},{"type":"text","text":" "},{"type":"text","text":"This actor is useful in scenarios where tasks must be executed in a specific order or when you need to ensure that only one task is executed at a time to avoid race conditions."}]}],"kind":"content"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/serialtaskqueue"]}],"metadata":{"modules":[{"name":"Afluent"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"SerialTaskQueue","kind":"identifier"}],"roleHeading":"Class","role":"symbol","remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SerialTaskQueue.swift#L19","fileName":"SerialTaskQueue.swift"},"title":"SerialTaskQueue","navigatorTitle":[{"text":"SerialTaskQueue","kind":"identifier"}],"externalID":"s:7Afluent15SerialTaskQueueC","symbolKind":"class"},"references":{"doc://Afluent/documentation/Afluent/SerialTaskQueue":{"title":"SerialTaskQueue","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SerialTaskQueue"}],"navigatorTitle":[{"text":"SerialTaskQueue","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"A serial task queue that ensures tasks are executed one at a time.","type":"text"}],"type":"topic","url":"\/documentation\/afluent\/serialtaskqueue"},"doc://Afluent/documentation/Afluent":{"kind":"symbol","abstract":[],"type":"topic","role":"collection","identifier":"doc:\/\/Afluent\/documentation\/Afluent","url":"\/documentation\/afluent","title":"Afluent"},"doc://Afluent/documentation/Afluent/SerialTaskQueue/init()":{"title":"init()","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/init()","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"abstract":[],"type":"topic","url":"\/documentation\/afluent\/serialtaskqueue\/init()","kind":"symbol"},"doc://Afluent/documentation/Afluent/SerialTaskQueue/cancelAll()":{"abstract":[{"type":"text","text":"Cancels all the ongoing tasks in the queue"}],"url":"\/documentation\/afluent\/serialtaskqueue\/cancelall()","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/cancelAll()","type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"cancelAll"},{"text":"()","kind":"text"}],"title":"cancelAll()"},"doc://Afluent/documentation/Afluent/SerialTaskQueue/queue(_:)":{"type":"topic","abstract":[{"type":"text","text":"Queues a task to be executed serially."}],"url":"\/documentation\/afluent\/serialtaskqueue\/queue(_:)","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/queue(_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"queue","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(() ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"}],"title":"queue(_:)"},"doc://Afluent/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/Afluent\/s8SendableP"}}}