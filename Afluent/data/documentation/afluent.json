{"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent"},"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent"]}],"hierarchy":{"paths":[[]]},"metadata":{"symbolKind":"module","externalID":"Afluent","modules":[{"name":"Afluent"}],"roleHeading":"Framework","title":"Afluent","role":"collection"},"topicSections":[{"title":"Classes","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AnyCancellable","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousOperation","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/QueueExecutor","doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/RetryByCountStrategy","doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueSubject","doc:\/\/Afluent\/documentation\/Afluent\/TaskState"],"generated":true,"anchor":"Classes"},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","doc:\/\/Afluent\/documentation\/Afluent\/TopLevelDecoder","doc:\/\/Afluent\/documentation\/Afluent\/TopLevelEncoder"],"anchor":"Protocols","title":"Protocols","generated":true},{"title":"Structures","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence"],"anchor":"Structures"},{"anchor":"Functions","generated":true,"title":"Functions","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/Race(cancelAllOnWin:_:against:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","doc:\/\/Afluent\/documentation\/Afluent\/AnyAsyncSequence","doc:\/\/Afluent\/documentation\/Afluent\/AnySendableReference","doc:\/\/Afluent\/documentation\/Afluent\/ClockDurationUnit","doc:\/\/Afluent\/documentation\/Afluent\/Deferred","doc:\/\/Afluent\/documentation\/Afluent\/Just","doc:\/\/Afluent\/documentation\/Afluent\/TimerSequence"],"generated":true,"anchor":"Type-Aliases"},{"title":"Enumerations","anchor":"Enumerations","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/SubscriptionDemand","doc:\/\/Afluent\/documentation\/Afluent\/TimeoutError","doc:\/\/Afluent\/documentation\/Afluent\/UnretainedError","doc:\/\/Afluent\/documentation\/Afluent\/Workers"]},{"anchor":"Extended-Modules","title":"Extended Modules","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/Foundation","doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency"],"generated":true}],"sections":[],"references":{"doc://Afluent/documentation/Afluent/TaskState":{"navigatorTitle":[{"kind":"identifier","text":"TaskState"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TaskState","kind":"identifier"}],"kind":"symbol","role":"symbol","abstract":[],"title":"TaskState","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TaskState","url":"\/documentation\/afluent\/taskstate","type":"topic"},"doc://Afluent/documentation/Afluent/TimerSequence":{"role":"symbol","title":"TimerSequence","type":"topic","url":"\/documentation\/afluent\/timersequence","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TimerSequence"}],"navigatorTitle":[{"text":"TimerSequence","kind":"identifier"}],"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TimerSequence","kind":"symbol"},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork":{"url":"\/documentation\/afluent\/anyasynchronousunitofwork","navigatorTitle":[{"kind":"identifier","text":"AnyAsynchronousUnitOfWork"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"AnyAsynchronousUnitOfWork","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","abstract":[{"type":"text","text":"A unit of work that performs type erasure by wrapping another unit of work."}],"title":"AnyAsynchronousUnitOfWork"},"doc://Afluent/documentation/Afluent/Workers":{"abstract":[{"type":"text","text":"A namespace for grouping related asynchronous work operations."}],"url":"\/documentation\/afluent\/workers","type":"topic","kind":"symbol","title":"Workers","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Workers"}],"navigatorTitle":[{"text":"Workers","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Workers"},"doc://Afluent/documentation/Afluent":{"title":"Afluent","role":"collection","type":"topic","url":"\/documentation\/afluent","abstract":[],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent"},"doc://Afluent/documentation/Afluent/AnySendableReference":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnySendableReference","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnySendableReference","kind":"symbol","abstract":[],"title":"AnySendableReference","type":"topic","url":"\/documentation\/afluent\/anysendablereference","navigatorTitle":[{"kind":"identifier","text":"AnySendableReference"}],"role":"symbol"},"doc://Afluent/documentation/Afluent/SingleValueSubject":{"abstract":[{"type":"text","text":"A subject that emits a single value or an error."}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueSubject","kind":"symbol","role":"symbol","url":"\/documentation\/afluent\/singlevaluesubject","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"SingleValueSubject","kind":"identifier"}],"navigatorTitle":[{"text":"SingleValueSubject","kind":"identifier"}],"title":"SingleValueSubject"},"doc://Afluent/documentation/Afluent/AnyAsyncSequence":{"title":"AnyAsyncSequence","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsyncSequence","kind":"symbol","url":"\/documentation\/afluent\/anyasyncsequence","abstract":[],"role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"AnyAsyncSequence","kind":"identifier"}],"navigatorTitle":[{"text":"AnyAsyncSequence","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/Race(cancelAllOnWin:_:against:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"Race","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"cancelAllOnWin"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":", () "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"against","kind":"externalParam"},{"text":": (() ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":")...) "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"}],"url":"\/documentation\/afluent\/race(cancelallonwin:_:against:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Race(cancelAllOnWin:_:against:)","kind":"symbol","abstract":[{"text":"Executes two asynchronous tasks concurrently and returns the result of the first one that completes.","type":"text"}],"type":"topic","title":"Race(cancelAllOnWin:_:against:)","role":"symbol"},"doc://Afluent/documentation/Afluent/DeferredTask":{"kind":"symbol","title":"DeferredTask","abstract":[{"text":"A structure representing a deferred asynchronous unit of work.","type":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","type":"topic","url":"\/documentation\/afluent\/deferredtask","role":"symbol","navigatorTitle":[{"text":"DeferredTask","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DeferredTask","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/RetryByCountStrategy":{"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByCountStrategy","type":"topic","url":"\/documentation\/afluent\/retrybycountstrategy","title":"RetryByCountStrategy","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"RetryStrategy"},{"type":"text","text":" that limits the number of retry attempts."}],"navigatorTitle":[{"kind":"identifier","text":"RetryByCountStrategy"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"RetryByCountStrategy","kind":"identifier"}],"role":"symbol"},"doc://Afluent/documentation/Afluent/AnyCancellable":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyCancellable","navigatorTitle":[{"kind":"identifier","text":"AnyCancellable"}],"abstract":[{"type":"text","text":"Stores an erased unit of work and provides a mechanism to cancel it"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyCancellable"}],"role":"symbol","url":"\/documentation\/afluent\/anycancellable","kind":"symbol","title":"AnyCancellable","type":"topic"},"doc://Afluent/documentation/Afluent/AUOWCacheStrategy":{"title":"AUOWCacheStrategy","navigatorTitle":[{"kind":"identifier","text":"AUOWCacheStrategy"}],"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy","url":"\/documentation\/afluent\/auowcachestrategy","abstract":[{"isActive":true,"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy","type":"reference"},{"type":"text","text":" represents the available caching strategies for the "},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","type":"reference","isActive":true},{"text":".","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"AUOWCacheStrategy","kind":"identifier"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/SingleValueChannel":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel","url":"\/documentation\/afluent\/singlevaluechannel","title":"SingleValueChannel","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A channel that emits a single value or an error."}],"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"SingleValueChannel","kind":"identifier"}],"navigatorTitle":[{"text":"SingleValueChannel","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/QueueExecutor":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/QueueExecutor","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"QueueExecutor"}],"navigatorTitle":[{"text":"QueueExecutor","kind":"identifier"}],"kind":"symbol","role":"symbol","url":"\/documentation\/afluent\/queueexecutor","abstract":[],"title":"QueueExecutor"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy":{"title":"ExponentialBackoffStrategy","navigatorTitle":[{"kind":"identifier","text":"ExponentialBackoffStrategy"}],"role":"symbol","url":"\/documentation\/afluent\/exponentialbackoffstrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","type":"topic","abstract":[{"text":"An exponential backoff strategy for retrying operations.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"ExponentialBackoffStrategy","kind":"identifier"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/_Concurrency":{"abstract":[],"title":"_Concurrency","role":"collection","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency","type":"topic","kind":"symbol","url":"\/documentation\/afluent\/_concurrency"},"doc://Afluent/documentation/Afluent/TopLevelDecoder":{"type":"topic","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"TopLevelDecoder"}],"url":"\/documentation\/afluent\/topleveldecoder","kind":"symbol","title":"TopLevelDecoder","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TopLevelDecoder","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TopLevelDecoder","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/TopLevelEncoder":{"title":"TopLevelEncoder","abstract":[],"kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"TopLevelEncoder"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"TopLevelEncoder"}],"url":"\/documentation\/afluent\/toplevelencoder","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TopLevelEncoder"},"doc://Afluent/documentation/Afluent/SubscriptionDemand":{"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SubscriptionDemand","url":"\/documentation\/afluent\/subscriptiondemand","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SubscriptionDemand","kind":"identifier"}],"kind":"symbol","type":"topic","navigatorTitle":[{"text":"SubscriptionDemand","kind":"identifier"}],"title":"SubscriptionDemand"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"url":"\/documentation\/afluent\/asynchronousunitofwork","navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWork"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsynchronousUnitOfWork"}],"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","abstract":[{"type":"text","text":"Represents an asynchronous unit of work."}],"title":"AsynchronousUnitOfWork"},"doc://Afluent/documentation/Afluent/Foundation":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Foundation","kind":"symbol","title":"Foundation","abstract":[],"role":"collection","url":"\/documentation\/afluent\/foundation","type":"topic"},"doc://Afluent/documentation/Afluent/AsynchronousOperation":{"type":"topic","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousOperation","url":"\/documentation\/afluent\/asynchronousoperation","abstract":[{"type":"text","text":"Reference to an operation that an operator would execute"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsynchronousOperation"}],"title":"AsynchronousOperation","navigatorTitle":[{"text":"AsynchronousOperation","kind":"identifier"}],"role":"symbol"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence":{"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWorkSequence"}],"abstract":[{"type":"text","text":"A sequence that represents a single execution of an asynchronous unit of work."}],"title":"AsynchronousUnitOfWorkSequence","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence","role":"symbol","url":"\/documentation\/afluent\/asynchronousunitofworksequence","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RetryByBackoffStrategy"}],"kind":"symbol","type":"topic","title":"RetryByBackoffStrategy","abstract":[{"type":"text","text":"A retry strategy using a specified backoff strategy and clock."}],"url":"\/documentation\/afluent\/retrybybackoffstrategy","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RetryByBackoffStrategy"}]},"doc://Afluent/documentation/Afluent/TimeoutError":{"title":"TimeoutError","abstract":[{"type":"text","text":"An error indicating a timeout has occurred."}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TimeoutError"}],"navigatorTitle":[{"text":"TimeoutError","kind":"identifier"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TimeoutError","url":"\/documentation\/afluent\/timeouterror","type":"topic"},"doc://Afluent/documentation/Afluent/Deferred":{"url":"\/documentation\/afluent\/deferred","abstract":[],"title":"Deferred","navigatorTitle":[{"text":"Deferred","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Deferred","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"Deferred","kind":"identifier"}],"type":"topic"},"doc://Afluent/documentation/Afluent/UnretainedError":{"url":"\/documentation\/afluent\/unretainederror","title":"UnretainedError","type":"topic","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"UnretainedError"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnretainedError","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/UnretainedError","abstract":[]},"doc://Afluent/documentation/Afluent/SerialTaskQueue":{"type":"topic","abstract":[{"text":"A serial task queue that ensures tasks are executed one at a time.","type":"text"}],"navigatorTitle":[{"text":"SerialTaskQueue","kind":"identifier"}],"url":"\/documentation\/afluent\/serialtaskqueue","kind":"symbol","title":"SerialTaskQueue","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SerialTaskQueue","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/BackoffStrategy":{"role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"BackoffStrategy"}],"url":"\/documentation\/afluent\/backoffstrategy","title":"BackoffStrategy","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BackoffStrategy"}],"type":"topic","abstract":[{"type":"text","text":"A protocol for implementing custom backoff strategies in retry mechanisms."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy"},"doc://Afluent/documentation/Afluent/RetryStrategy":{"title":"RetryStrategy","abstract":[{"type":"text","text":"A strategy for handling errors and determining whether to retry an operation."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RetryStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"RetryStrategy"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","url":"\/documentation\/afluent\/retrystrategy","type":"topic"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache":{"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsynchronousUnitOfWorkCache"}],"navigatorTitle":[{"text":"AsynchronousUnitOfWorkCache","kind":"identifier"}],"kind":"symbol","role":"symbol","title":"AsynchronousUnitOfWorkCache","url":"\/documentation\/afluent\/asynchronousunitofworkcache","abstract":[{"type":"text","text":"A cache for asynchronous unit of work types."},{"text":" ","type":"text"},{"type":"text","text":"A stored unit of work should be both "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":" and a reference type (e.g. a unit of work shared via the "},{"type":"reference","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/share()","isActive":true},{"type":"text","text":" operator)."}]},"doc://Afluent/documentation/Afluent/ClockDurationUnit":{"fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"ClockDurationUnit","kind":"identifier"}],"title":"ClockDurationUnit","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ClockDurationUnit","url":"\/documentation\/afluent\/clockdurationunit","kind":"symbol","abstract":[],"type":"topic","navigatorTitle":[{"text":"ClockDurationUnit","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsyncSequences":{"abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"title":"AsyncSequences","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"AsyncSequences","kind":"identifier"}],"role":"symbol","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","url":"\/documentation\/afluent\/asyncsequences","kind":"symbol","navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork/share()":{"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/share()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"share"},{"text":"() -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsynchronousUnitOfWork","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa","text":"Success"},{"kind":"text","text":"> & "},{"text":"Actor","preciseIdentifier":"s:ScA","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","title":"share()","url":"\/documentation\/afluent\/asynchronousunitofwork\/share()","abstract":[{"text":"Shares the upstream ","type":"text"},{"code":"AsynchronousUnitOfWork","type":"codeVoice"},{"text":" among multiple downstream subscribers.","type":"text"}]},"doc://Afluent/documentation/Afluent/AUOWCache":{"role":"symbol","navigatorTitle":[{"text":"AUOWCache","kind":"identifier"}],"title":"AUOWCache","url":"\/documentation\/afluent\/auowcache","kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AUOWCache"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","type":"topic","abstract":[]},"doc://Afluent/documentation/Afluent/Just":{"url":"\/documentation\/afluent\/just","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Just","title":"Just","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Just"}],"kind":"symbol","abstract":[],"navigatorTitle":[{"text":"Just","kind":"identifier"}],"type":"topic","role":"symbol"}}}