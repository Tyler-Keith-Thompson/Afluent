{"sections":[],"topicSections":[{"anchor":"Classes","generated":true,"title":"Classes","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AnyCancellable","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousOperation","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/QueueExecutor","doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/RetryByCountStrategy","doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueSubject","doc:\/\/Afluent\/documentation\/Afluent\/TaskState"]},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","doc:\/\/Afluent\/documentation\/Afluent\/TopLevelDecoder","doc:\/\/Afluent\/documentation\/Afluent\/TopLevelEncoder"],"title":"Protocols","generated":true,"anchor":"Protocols"},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence"],"generated":true,"title":"Structures","anchor":"Structures"},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/Race(cancelAllOnWin:_:against:)"],"generated":true,"title":"Functions","anchor":"Functions"},{"title":"Type Aliases","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","doc:\/\/Afluent\/documentation\/Afluent\/AnyAsyncSequence","doc:\/\/Afluent\/documentation\/Afluent\/AnySendableReference","doc:\/\/Afluent\/documentation\/Afluent\/ClockDurationUnit","doc:\/\/Afluent\/documentation\/Afluent\/Deferred","doc:\/\/Afluent\/documentation\/Afluent\/Just","doc:\/\/Afluent\/documentation\/Afluent\/TimerSequence"],"generated":true,"anchor":"Type-Aliases"},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/SubscriptionDemand","doc:\/\/Afluent\/documentation\/Afluent\/TimeoutError","doc:\/\/Afluent\/documentation\/Afluent\/UnretainedError","doc:\/\/Afluent\/documentation\/Afluent\/Workers"],"anchor":"Enumerations","generated":true,"title":"Enumerations"},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/Foundation","doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency"],"generated":true,"title":"Extended Modules","anchor":"Extended-Modules"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent","interfaceLanguage":"swift"},"kind":"symbol","metadata":{"symbolKind":"module","title":"Afluent","role":"collection","roleHeading":"Framework","modules":[{"name":"Afluent"}],"externalID":"Afluent"},"variants":[{"paths":["\/documentation\/afluent"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[[]]},"references":{"doc://Afluent/documentation/Afluent/SingleValueChannel":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SingleValueChannel"}],"title":"SingleValueChannel","abstract":[{"type":"text","text":"A channel that emits a single value or an error."}],"url":"\/documentation\/afluent\/singlevaluechannel","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SingleValueChannel","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel"},"doc://Afluent/documentation/Afluent/Deferred":{"type":"topic","url":"\/documentation\/afluent\/deferred","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Deferred","kind":"identifier"}],"navigatorTitle":[{"text":"Deferred","kind":"identifier"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Deferred","title":"Deferred","abstract":[]},"doc://Afluent/documentation/Afluent/BackoffStrategy":{"navigatorTitle":[{"kind":"identifier","text":"BackoffStrategy"}],"url":"\/documentation\/afluent\/backoffstrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","title":"BackoffStrategy","abstract":[{"text":"A protocol for implementing custom backoff strategies in retry mechanisms.","type":"text"}],"type":"topic","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BackoffStrategy","kind":"identifier"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","title":"AsynchronousUnitOfWork","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWork"}],"type":"topic","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"abstract":[{"text":"Represents an asynchronous unit of work.","type":"text"}],"url":"\/documentation\/afluent\/asynchronousunitofwork"},"doc://Afluent/documentation/Afluent/Workers":{"abstract":[{"type":"text","text":"A namespace for grouping related asynchronous work operations."}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"Workers","kind":"identifier"}],"navigatorTitle":[{"text":"Workers","kind":"identifier"}],"title":"Workers","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Workers","role":"symbol","type":"topic","url":"\/documentation\/afluent\/workers"},"doc://Afluent/documentation/Afluent/TimerSequence":{"title":"TimerSequence","url":"\/documentation\/afluent\/timersequence","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"TimerSequence","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"TimerSequence"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TimerSequence","type":"topic","abstract":[]},"doc://Afluent/documentation/Afluent/TimeoutError":{"title":"TimeoutError","navigatorTitle":[{"text":"TimeoutError","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"TimeoutError","kind":"identifier"}],"role":"symbol","abstract":[{"text":"An error indicating a timeout has occurred.","type":"text"}],"type":"topic","kind":"symbol","url":"\/documentation\/afluent\/timeouterror","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TimeoutError"},"doc://Afluent/documentation/Afluent/DeferredTask":{"title":"DeferredTask","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"DeferredTask","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","navigatorTitle":[{"text":"DeferredTask","kind":"identifier"}],"abstract":[{"type":"text","text":"A structure representing a deferred asynchronous unit of work."}],"url":"\/documentation\/afluent\/deferredtask","kind":"symbol","role":"symbol"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy":{"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","role":"symbol","kind":"symbol","url":"\/documentation\/afluent\/retrybybackoffstrategy","title":"RetryByBackoffStrategy","abstract":[{"type":"text","text":"A retry strategy using a specified backoff strategy and clock."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"RetryByBackoffStrategy","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"RetryByBackoffStrategy"}]},"doc://Afluent/documentation/Afluent/SingleValueSubject":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueSubject","title":"SingleValueSubject","kind":"symbol","navigatorTitle":[{"text":"SingleValueSubject","kind":"identifier"}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SingleValueSubject"}],"abstract":[{"type":"text","text":"A subject that emits a single value or an error."}],"url":"\/documentation\/afluent\/singlevaluesubject"},"doc://Afluent/documentation/Afluent/AnyCancellable":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnyCancellable"}],"abstract":[{"type":"text","text":"Stores an erased unit of work and provides a mechanism to cancel it"}],"title":"AnyCancellable","url":"\/documentation\/afluent\/anycancellable","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnyCancellable"}],"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyCancellable"},"doc://Afluent/documentation/Afluent/Race(cancelAllOnWin:_:against:)":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Race(cancelAllOnWin:_:against:)","abstract":[{"text":"Executes two asynchronous tasks concurrently and returns the result of the first one that completes.","type":"text"}],"role":"symbol","type":"topic","kind":"symbol","title":"Race(cancelAllOnWin:_:against:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Race","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"cancelAllOnWin"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":", () "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"against","kind":"externalParam"},{"kind":"text","text":": (() "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")...) ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"url":"\/documentation\/afluent\/race(cancelallonwin:_:against:)"},"doc://Afluent/documentation/Afluent/AnySendableReference":{"abstract":[],"role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnySendableReference"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"AnySendableReference"}],"title":"AnySendableReference","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnySendableReference","url":"\/documentation\/afluent\/anysendablereference","kind":"symbol"},"doc://Afluent/documentation/Afluent/AnyAsyncSequence":{"type":"topic","url":"\/documentation\/afluent\/anyasyncsequence","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnyAsyncSequence"}],"navigatorTitle":[{"text":"AnyAsyncSequence","kind":"identifier"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsyncSequence","title":"AnyAsyncSequence","abstract":[]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache":{"navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWorkCache"}],"title":"AsynchronousUnitOfWorkCache","url":"\/documentation\/afluent\/asynchronousunitofworkcache","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsynchronousUnitOfWorkCache"}],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","abstract":[{"text":"A cache for asynchronous unit of work types.","type":"text"},{"text":" ","type":"text"},{"text":"A stored unit of work should be both ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":" and a reference type (e.g. a unit of work shared via the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/share()"},{"text":" operator).","type":"text"}],"type":"topic"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"ExponentialBackoffStrategy","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"An exponential backoff strategy for retrying operations."}],"navigatorTitle":[{"kind":"identifier","text":"ExponentialBackoffStrategy"}],"url":"\/documentation\/afluent\/exponentialbackoffstrategy","type":"topic","title":"ExponentialBackoffStrategy"},"doc://Afluent/documentation/Afluent/AUOWCache":{"title":"AUOWCache","type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AUOWCache","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","navigatorTitle":[{"text":"AUOWCache","kind":"identifier"}],"abstract":[],"url":"\/documentation\/afluent\/auowcache","kind":"symbol","role":"symbol"},"doc://Afluent/documentation/Afluent/QueueExecutor":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"QueueExecutor","kind":"identifier"}],"title":"QueueExecutor","type":"topic","role":"symbol","kind":"symbol","abstract":[],"url":"\/documentation\/afluent\/queueexecutor","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/QueueExecutor","navigatorTitle":[{"text":"QueueExecutor","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsyncSequences":{"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"AsyncSequences","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","kind":"symbol","type":"topic","abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}],"title":"AsyncSequences","url":"\/documentation\/afluent\/asyncsequences"},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork":{"url":"\/documentation\/afluent\/anyasynchronousunitofwork","navigatorTitle":[{"text":"AnyAsynchronousUnitOfWork","kind":"identifier"}],"type":"topic","kind":"symbol","title":"AnyAsynchronousUnitOfWork","abstract":[{"type":"text","text":"A unit of work that performs type erasure by wrapping another unit of work."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnyAsynchronousUnitOfWork"}],"role":"symbol"},"doc://Afluent/documentation/Afluent/ClockDurationUnit":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ClockDurationUnit","url":"\/documentation\/afluent\/clockdurationunit","role":"symbol","title":"ClockDurationUnit","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ClockDurationUnit"}],"type":"topic","kind":"symbol","navigatorTitle":[{"text":"ClockDurationUnit","kind":"identifier"}],"abstract":[]},"doc://Afluent/documentation/Afluent/AUOWCacheStrategy":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy","type":"topic","title":"AUOWCacheStrategy","role":"symbol","abstract":[{"type":"reference","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy","isActive":true},{"text":" represents the available caching strategies for the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","type":"reference"},{"type":"text","text":"."}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AUOWCacheStrategy"}],"navigatorTitle":[{"text":"AUOWCacheStrategy","kind":"identifier"}],"url":"\/documentation\/afluent\/auowcachestrategy"},"doc://Afluent/documentation/Afluent/RetryStrategy":{"url":"\/documentation\/afluent\/retrystrategy","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RetryStrategy"}],"abstract":[{"type":"text","text":"A strategy for handling errors and determining whether to retry an operation."}],"kind":"symbol","navigatorTitle":[{"text":"RetryStrategy","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","role":"symbol","title":"RetryStrategy"},"doc://Afluent/documentation/Afluent/Foundation":{"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Foundation","title":"Foundation","type":"topic","kind":"symbol","role":"collection","url":"\/documentation\/afluent\/foundation"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork/share()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"share","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"AsynchronousUnitOfWork","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Success","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa"},{"kind":"text","text":"> & "},{"text":"Actor","preciseIdentifier":"s:ScA","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/share()","kind":"symbol","abstract":[{"text":"Shares the upstream ","type":"text"},{"code":"AsynchronousUnitOfWork","type":"codeVoice"},{"text":" among multiple downstream subscribers.","type":"text"}],"url":"\/documentation\/afluent\/asynchronousunitofwork\/share()","title":"share()","role":"symbol"},"doc://Afluent/documentation/Afluent/TopLevelDecoder":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"TopLevelDecoder","kind":"identifier"}],"type":"topic","role":"symbol","title":"TopLevelDecoder","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TopLevelDecoder","url":"\/documentation\/afluent\/topleveldecoder","navigatorTitle":[{"kind":"identifier","text":"TopLevelDecoder"}],"abstract":[]},"doc://Afluent/documentation/Afluent/TopLevelEncoder":{"kind":"symbol","type":"topic","abstract":[],"title":"TopLevelEncoder","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"TopLevelEncoder","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TopLevelEncoder","navigatorTitle":[{"text":"TopLevelEncoder","kind":"identifier"}],"url":"\/documentation\/afluent\/toplevelencoder"},"doc://Afluent/documentation/Afluent/AsynchronousOperation":{"kind":"symbol","navigatorTitle":[{"text":"AsynchronousOperation","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsynchronousOperation"}],"role":"symbol","abstract":[{"type":"text","text":"Reference to an operation that an operator would execute"}],"type":"topic","title":"AsynchronousOperation","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousOperation","url":"\/documentation\/afluent\/asynchronousoperation"},"doc://Afluent/documentation/Afluent/Just":{"navigatorTitle":[{"text":"Just","kind":"identifier"}],"abstract":[],"role":"symbol","title":"Just","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Just","url":"\/documentation\/afluent\/just","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Just"}]},"doc://Afluent/documentation/Afluent/RetryByCountStrategy":{"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"RetryByCountStrategy","kind":"identifier"}],"type":"topic","role":"symbol","abstract":[{"type":"text","text":"A "},{"code":"RetryStrategy","type":"codeVoice"},{"type":"text","text":" that limits the number of retry attempts."}],"title":"RetryByCountStrategy","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RetryByCountStrategy"}],"url":"\/documentation\/afluent\/retrybycountstrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByCountStrategy"},"doc://Afluent/documentation/Afluent/SerialTaskQueue":{"type":"topic","title":"SerialTaskQueue","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SerialTaskQueue","kind":"identifier"}],"navigatorTitle":[{"text":"SerialTaskQueue","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","abstract":[{"text":"A serial task queue that ensures tasks are executed one at a time.","type":"text"}],"url":"\/documentation\/afluent\/serialtaskqueue","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence":{"role":"symbol","type":"topic","url":"\/documentation\/afluent\/asynchronousunitofworksequence","abstract":[{"text":"A sequence that represents a single execution of an asynchronous unit of work.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}],"navigatorTitle":[{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}],"kind":"symbol","title":"AsynchronousUnitOfWorkSequence","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence"},"doc://Afluent/documentation/Afluent/TaskState":{"type":"topic","url":"\/documentation\/afluent\/taskstate","title":"TaskState","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TaskState","role":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"TaskState","kind":"identifier"}],"navigatorTitle":[{"text":"TaskState","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/SubscriptionDemand":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"SubscriptionDemand"}],"role":"symbol","type":"topic","abstract":[],"navigatorTitle":[{"text":"SubscriptionDemand","kind":"identifier"}],"title":"SubscriptionDemand","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SubscriptionDemand","kind":"symbol","url":"\/documentation\/afluent\/subscriptiondemand"},"doc://Afluent/documentation/Afluent":{"url":"\/documentation\/afluent","abstract":[],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent","role":"collection","title":"Afluent","kind":"symbol"},"doc://Afluent/documentation/Afluent/UnretainedError":{"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/UnretainedError","title":"UnretainedError","navigatorTitle":[{"text":"UnretainedError","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/afluent\/unretainederror","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnretainedError"}]},"doc://Afluent/documentation/Afluent/_Concurrency":{"type":"topic","url":"\/documentation\/afluent\/_concurrency","abstract":[],"title":"_Concurrency","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency","role":"collection","kind":"symbol"}}}