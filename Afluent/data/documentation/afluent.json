{"hierarchy":{"paths":[[]]},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent"},"schemaVersion":{"patch":0,"minor":3,"major":0},"topicSections":[{"title":"Classes","generated":true,"anchor":"Classes","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AnyCancellable","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousOperation","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/QueueExecutor","doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/RetryByCountStrategy","doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueSubject","doc:\/\/Afluent\/documentation\/Afluent\/TaskState"]},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","doc:\/\/Afluent\/documentation\/Afluent\/TopLevelDecoder","doc:\/\/Afluent\/documentation\/Afluent\/TopLevelEncoder"],"title":"Protocols","generated":true,"anchor":"Protocols"},{"anchor":"Structures","title":"Structures","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence"]},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/Race(cancelAllOnWin:_:against:)"],"generated":true,"title":"Functions","anchor":"Functions"},{"anchor":"Type-Aliases","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","doc:\/\/Afluent\/documentation\/Afluent\/AnyAsyncSequence","doc:\/\/Afluent\/documentation\/Afluent\/AnySendableReference","doc:\/\/Afluent\/documentation\/Afluent\/ClockDurationUnit","doc:\/\/Afluent\/documentation\/Afluent\/Deferred","doc:\/\/Afluent\/documentation\/Afluent\/Just","doc:\/\/Afluent\/documentation\/Afluent\/TimerSequence"],"title":"Type Aliases"},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/SubscriptionDemand","doc:\/\/Afluent\/documentation\/Afluent\/TimeoutError","doc:\/\/Afluent\/documentation\/Afluent\/UnretainedError","doc:\/\/Afluent\/documentation\/Afluent\/Workers"],"generated":true,"title":"Enumerations","anchor":"Enumerations"},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/Foundation","doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency"],"anchor":"Extended-Modules","title":"Extended Modules","generated":true}],"sections":[],"metadata":{"role":"collection","roleHeading":"Framework","symbolKind":"module","externalID":"Afluent","modules":[{"name":"Afluent"}],"title":"Afluent"},"variants":[{"paths":["\/documentation\/afluent"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork/share()":{"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/share()","role":"symbol","kind":"symbol","url":"\/documentation\/afluent\/asynchronousunitofwork\/share()","title":"share()","abstract":[{"type":"text","text":"Shares the upstream "},{"type":"codeVoice","code":"AsynchronousUnitOfWork"},{"type":"text","text":" among multiple downstream subscribers."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"share"},{"text":"() -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","text":"AsynchronousUnitOfWork"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa","text":"Success"},{"text":"> & ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ScA","text":"Actor"}]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"url":"\/documentation\/afluent\/asynchronousunitofwork","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","type":"topic","abstract":[{"type":"text","text":"Represents an asynchronous unit of work."}],"title":"AsynchronousUnitOfWork","navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWork"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/AnyCancellable":{"abstract":[{"text":"Stores an erased unit of work and provides a mechanism to cancel it","type":"text"}],"type":"topic","role":"symbol","url":"\/documentation\/afluent\/anycancellable","kind":"symbol","title":"AnyCancellable","navigatorTitle":[{"kind":"identifier","text":"AnyCancellable"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyCancellable","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyCancellable","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/Just":{"kind":"symbol","title":"Just","navigatorTitle":[{"text":"Just","kind":"identifier"}],"role":"symbol","url":"\/documentation\/afluent\/just","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Just","abstract":[],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"Just","kind":"identifier"}],"type":"topic"},"doc://Afluent/documentation/Afluent/RetryByCountStrategy":{"type":"topic","title":"RetryByCountStrategy","navigatorTitle":[{"kind":"identifier","text":"RetryByCountStrategy"}],"abstract":[{"type":"text","text":"A "},{"code":"RetryStrategy","type":"codeVoice"},{"type":"text","text":" that limits the number of retry attempts."}],"url":"\/documentation\/afluent\/retrybycountstrategy","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"RetryByCountStrategy","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByCountStrategy"},"doc://Afluent/documentation/Afluent/Workers":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"Workers","kind":"identifier"}],"title":"Workers","kind":"symbol","abstract":[{"type":"text","text":"A namespace for grouping related asynchronous work operations."}],"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Workers"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Workers","url":"\/documentation\/afluent\/workers"},"doc://Afluent/documentation/Afluent/TaskState":{"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TaskState","kind":"symbol","abstract":[],"role":"symbol","title":"TaskState","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"TaskState","kind":"identifier"}],"navigatorTitle":[{"text":"TaskState","kind":"identifier"}],"url":"\/documentation\/afluent\/taskstate"},"doc://Afluent/documentation/Afluent/SingleValueSubject":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueSubject","type":"topic","title":"SingleValueSubject","url":"\/documentation\/afluent\/singlevaluesubject","navigatorTitle":[{"kind":"identifier","text":"SingleValueSubject"}],"role":"symbol","abstract":[{"text":"A subject that emits a single value or an error.","type":"text"}],"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SingleValueSubject"}]},"doc://Afluent/documentation/Afluent/AUOWCacheStrategy":{"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy","kind":"symbol","abstract":[{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy","type":"reference","isActive":true},{"text":" represents the available caching strategies for the ","type":"text"},{"type":"reference","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","isActive":true},{"text":".","type":"text"}],"role":"symbol","title":"AUOWCacheStrategy","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AUOWCacheStrategy"}],"navigatorTitle":[{"text":"AUOWCacheStrategy","kind":"identifier"}],"url":"\/documentation\/afluent\/auowcachestrategy"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"type":"topic","navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}],"title":"AsyncSequences","role":"symbol","url":"\/documentation\/afluent\/asyncsequences","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"AsyncSequences","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/Deferred":{"fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"Deferred","kind":"identifier"}],"type":"topic","role":"symbol","title":"Deferred","kind":"symbol","url":"\/documentation\/afluent\/deferred","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Deferred","navigatorTitle":[{"text":"Deferred","kind":"identifier"}],"abstract":[]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence":{"type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWorkSequence"}],"url":"\/documentation\/afluent\/asynchronousunitofworksequence","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsynchronousUnitOfWorkSequence"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence","abstract":[{"type":"text","text":"A sequence that represents a single execution of an asynchronous unit of work."}],"title":"AsynchronousUnitOfWorkSequence"},"doc://Afluent/documentation/Afluent/TimerSequence":{"kind":"symbol","title":"TimerSequence","navigatorTitle":[{"kind":"identifier","text":"TimerSequence"}],"role":"symbol","url":"\/documentation\/afluent\/timersequence","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TimerSequence","abstract":[],"fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"TimerSequence","kind":"identifier"}],"type":"topic"},"doc://Afluent/documentation/Afluent/AsynchronousOperation":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousOperation","role":"symbol","navigatorTitle":[{"text":"AsynchronousOperation","kind":"identifier"}],"type":"topic","title":"AsynchronousOperation","url":"\/documentation\/afluent\/asynchronousoperation","abstract":[{"type":"text","text":"Reference to an operation that an operator would execute"}],"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsynchronousOperation"}]},"doc://Afluent/documentation/Afluent/DeferredTask":{"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","kind":"symbol","abstract":[{"type":"text","text":"A structure representing a deferred asynchronous unit of work."}],"role":"symbol","title":"DeferredTask","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DeferredTask"}],"navigatorTitle":[{"kind":"identifier","text":"DeferredTask"}],"url":"\/documentation\/afluent\/deferredtask"},"doc://Afluent/documentation/Afluent/TopLevelDecoder":{"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TopLevelDecoder","url":"\/documentation\/afluent\/topleveldecoder","title":"TopLevelDecoder","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TopLevelDecoder","kind":"identifier"}],"navigatorTitle":[{"text":"TopLevelDecoder","kind":"identifier"}],"type":"topic","role":"symbol","abstract":[]},"doc://Afluent/documentation/Afluent/Race(cancelAllOnWin:_:against:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Race"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"cancelAllOnWin","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":", () "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"against","kind":"externalParam"},{"text":": (() ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":")...) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"T","kind":"typeIdentifier"}],"title":"Race(cancelAllOnWin:_:against:)","kind":"symbol","abstract":[{"text":"Executes two asynchronous tasks concurrently and returns the result of the first one that completes.","type":"text"}],"role":"symbol","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Race(cancelAllOnWin:_:against:)","url":"\/documentation\/afluent\/race(cancelallonwin:_:against:)"},"doc://Afluent/documentation/Afluent/Foundation":{"url":"\/documentation\/afluent\/foundation","abstract":[],"role":"collection","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Foundation","title":"Foundation","type":"topic","kind":"symbol"},"doc://Afluent/documentation/Afluent/AnySendableReference":{"abstract":[],"type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnySendableReference","navigatorTitle":[{"text":"AnySendableReference","kind":"identifier"}],"url":"\/documentation\/afluent\/anysendablereference","title":"AnySendableReference","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"AnySendableReference","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/SerialTaskQueue":{"url":"\/documentation\/afluent\/serialtaskqueue","type":"topic","abstract":[{"type":"text","text":"A serial task queue that ensures tasks are executed one at a time."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","title":"SerialTaskQueue","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SerialTaskQueue","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"SerialTaskQueue","kind":"identifier"}],"role":"symbol"},"doc://Afluent/documentation/Afluent/UnretainedError":{"abstract":[],"role":"symbol","url":"\/documentation\/afluent\/unretainederror","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/UnretainedError","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnretainedError","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"UnretainedError"}],"type":"topic","title":"UnretainedError","kind":"symbol"},"doc://Afluent/documentation/Afluent/SingleValueChannel":{"type":"topic","role":"symbol","abstract":[{"text":"A channel that emits a single value or an error.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"SingleValueChannel"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"SingleValueChannel","kind":"identifier"}],"title":"SingleValueChannel","url":"\/documentation\/afluent\/singlevaluechannel"},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork":{"abstract":[{"type":"text","text":"A unit of work that performs type erasure by wrapping another unit of work."}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AnyAsynchronousUnitOfWork","kind":"identifier"}],"kind":"symbol","type":"topic","title":"AnyAsynchronousUnitOfWork","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","url":"\/documentation\/afluent\/anyasynchronousunitofwork","navigatorTitle":[{"kind":"identifier","text":"AnyAsynchronousUnitOfWork"}]},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy":{"navigatorTitle":[{"text":"RetryByBackoffStrategy","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","type":"topic","url":"\/documentation\/afluent\/retrybybackoffstrategy","title":"RetryByBackoffStrategy","abstract":[{"type":"text","text":"A retry strategy using a specified backoff strategy and clock."}],"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"RetryByBackoffStrategy","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/_Concurrency":{"role":"collection","abstract":[],"kind":"symbol","type":"topic","url":"\/documentation\/afluent\/_concurrency","title":"_Concurrency","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency"},"doc://Afluent/documentation/Afluent/QueueExecutor":{"abstract":[],"type":"topic","role":"symbol","url":"\/documentation\/afluent\/queueexecutor","kind":"symbol","title":"QueueExecutor","navigatorTitle":[{"kind":"identifier","text":"QueueExecutor"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/QueueExecutor","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"QueueExecutor","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AnyAsyncSequence":{"url":"\/documentation\/afluent\/anyasyncsequence","title":"AnyAsyncSequence","navigatorTitle":[{"kind":"identifier","text":"AnyAsyncSequence"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyAsyncSequence","kind":"identifier"}],"kind":"symbol","abstract":[],"type":"topic","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsyncSequence"},"doc://Afluent/documentation/Afluent/TimeoutError":{"navigatorTitle":[{"text":"TimeoutError","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TimeoutError","title":"TimeoutError","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"TimeoutError"}],"type":"topic","url":"\/documentation\/afluent\/timeouterror","abstract":[{"text":"An error indicating a timeout has occurred.","type":"text"}],"role":"symbol"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","title":"AsynchronousUnitOfWorkCache","type":"topic","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWorkCache","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWorkCache"}],"abstract":[{"type":"text","text":"A cache for asynchronous unit of work types."},{"type":"text","text":" "},{"type":"text","text":"A stored unit of work should be both "},{"code":"Sendable","type":"codeVoice"},{"text":" and a reference type (e.g. a unit of work shared via the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/share()"},{"type":"text","text":" operator)."}],"url":"\/documentation\/afluent\/asynchronousunitofworkcache","role":"symbol"},"doc://Afluent/documentation/Afluent/ClockDurationUnit":{"navigatorTitle":[{"kind":"identifier","text":"ClockDurationUnit"}],"kind":"symbol","url":"\/documentation\/afluent\/clockdurationunit","type":"topic","title":"ClockDurationUnit","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ClockDurationUnit","role":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"ClockDurationUnit","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/BackoffStrategy":{"title":"BackoffStrategy","url":"\/documentation\/afluent\/backoffstrategy","type":"topic","abstract":[{"text":"A protocol for implementing custom backoff strategies in retry mechanisms.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"BackoffStrategy"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BackoffStrategy"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy"},"doc://Afluent/documentation/Afluent/AUOWCache":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","title":"AUOWCache","type":"topic","kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AUOWCache"}],"navigatorTitle":[{"text":"AUOWCache","kind":"identifier"}],"abstract":[],"url":"\/documentation\/afluent\/auowcache","role":"symbol"},"doc://Afluent/documentation/Afluent/RetryStrategy":{"abstract":[{"text":"A strategy for handling errors and determining whether to retry an operation.","type":"text"}],"role":"symbol","url":"\/documentation\/afluent\/retrystrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","navigatorTitle":[{"kind":"identifier","text":"RetryStrategy"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RetryStrategy"}],"type":"topic","title":"RetryStrategy","kind":"symbol"},"doc://Afluent/documentation/Afluent":{"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent","type":"topic","url":"\/documentation\/afluent","kind":"symbol","title":"Afluent","role":"collection"},"doc://Afluent/documentation/Afluent/TopLevelEncoder":{"abstract":[],"type":"topic","role":"symbol","url":"\/documentation\/afluent\/toplevelencoder","kind":"symbol","title":"TopLevelEncoder","navigatorTitle":[{"text":"TopLevelEncoder","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TopLevelEncoder","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"TopLevelEncoder","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy":{"type":"topic","title":"ExponentialBackoffStrategy","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ExponentialBackoffStrategy","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ExponentialBackoffStrategy"}],"url":"\/documentation\/afluent\/exponentialbackoffstrategy","kind":"symbol","abstract":[{"text":"An exponential backoff strategy for retrying operations.","type":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy"},"doc://Afluent/documentation/Afluent/SubscriptionDemand":{"role":"symbol","abstract":[],"kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SubscriptionDemand"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SubscriptionDemand","url":"\/documentation\/afluent\/subscriptiondemand","type":"topic","navigatorTitle":[{"text":"SubscriptionDemand","kind":"identifier"}],"title":"SubscriptionDemand"}}}