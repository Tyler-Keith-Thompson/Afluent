{"sections":[],"kind":"symbol","identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[[]]},"topicSections":[{"title":"Classes","anchor":"Classes","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AnyCancellable","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousOperation","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/QueueExecutor","doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/RetryByCountStrategy","doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueSubject","doc:\/\/Afluent\/documentation\/Afluent\/TaskState"]},{"generated":true,"title":"Protocols","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","doc:\/\/Afluent\/documentation\/Afluent\/TopLevelDecoder","doc:\/\/Afluent\/documentation\/Afluent\/TopLevelEncoder"],"anchor":"Protocols"},{"title":"Structures","anchor":"Structures","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence"],"generated":true},{"generated":true,"anchor":"Functions","title":"Functions","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/Race(cancelAllOnWin:_:against:)"]},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","doc:\/\/Afluent\/documentation\/Afluent\/AnyAsyncSequence","doc:\/\/Afluent\/documentation\/Afluent\/AnySendableReference","doc:\/\/Afluent\/documentation\/Afluent\/ClockDurationUnit","doc:\/\/Afluent\/documentation\/Afluent\/Deferred","doc:\/\/Afluent\/documentation\/Afluent\/Just","doc:\/\/Afluent\/documentation\/Afluent\/TimerSequence"],"generated":true,"title":"Type Aliases","anchor":"Type-Aliases"},{"title":"Enumerations","anchor":"Enumerations","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/SubscriptionDemand","doc:\/\/Afluent\/documentation\/Afluent\/TimeoutError","doc:\/\/Afluent\/documentation\/Afluent\/UnretainedError","doc:\/\/Afluent\/documentation\/Afluent\/Workers"],"generated":true},{"generated":true,"anchor":"Extended-Modules","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/Foundation","doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency"],"title":"Extended Modules"}],"variants":[{"paths":["\/documentation\/afluent"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"role":"collection","modules":[{"name":"Afluent"}],"symbolKind":"module","title":"Afluent","externalID":"Afluent","roleHeading":"Framework"},"references":{"doc://Afluent/documentation/Afluent/UnretainedError":{"kind":"symbol","url":"\/documentation\/afluent\/unretainederror","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/UnretainedError","title":"UnretainedError","type":"topic","navigatorTitle":[{"kind":"identifier","text":"UnretainedError"}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"UnretainedError","kind":"identifier"}],"abstract":[],"role":"symbol"},"doc://Afluent/documentation/Afluent/SerialTaskQueue":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","navigatorTitle":[{"kind":"identifier","text":"SerialTaskQueue"}],"role":"symbol","kind":"symbol","title":"SerialTaskQueue","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"SerialTaskQueue","kind":"identifier"}],"url":"\/documentation\/afluent\/serialtaskqueue","abstract":[{"type":"text","text":"A serial task queue that ensures tasks are executed one at a time."}],"type":"topic"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence":{"abstract":[{"type":"text","text":"A sequence that represents a single execution of an asynchronous unit of work."}],"kind":"symbol","type":"topic","title":"AsynchronousUnitOfWorkSequence","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence","url":"\/documentation\/afluent\/asynchronousunitofworksequence","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsynchronousUnitOfWorkSequence"}],"navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWorkSequence"}]},"doc://Afluent/documentation/Afluent/SingleValueChannel":{"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel","abstract":[{"type":"text","text":"A channel that emits a single value or an error."}],"kind":"symbol","title":"SingleValueChannel","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SingleValueChannel"}],"url":"\/documentation\/afluent\/singlevaluechannel","navigatorTitle":[{"text":"SingleValueChannel","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/TaskState":{"type":"topic","kind":"symbol","title":"TaskState","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TaskState","role":"symbol","navigatorTitle":[{"text":"TaskState","kind":"identifier"}],"abstract":[],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TaskState"}],"url":"\/documentation\/afluent\/taskstate"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"role":"symbol","title":"AsyncSequences","url":"\/documentation\/afluent\/asyncsequences","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequences"}],"navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}],"abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences"},"doc://Afluent/documentation/Afluent/QueueExecutor":{"abstract":[],"type":"topic","kind":"symbol","url":"\/documentation\/afluent\/queueexecutor","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"QueueExecutor"}],"title":"QueueExecutor","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/QueueExecutor","navigatorTitle":[{"text":"QueueExecutor","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AUOWCache":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","type":"topic","abstract":[],"kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"AUOWCache","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AUOWCache"}],"url":"\/documentation\/afluent\/auowcache","title":"AUOWCache","role":"symbol"},"doc://Afluent/documentation/Afluent/TimeoutError":{"role":"symbol","abstract":[{"type":"text","text":"An error indicating a timeout has occurred."}],"kind":"symbol","navigatorTitle":[{"text":"TimeoutError","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"TimeoutError","kind":"identifier"}],"type":"topic","title":"TimeoutError","url":"\/documentation\/afluent\/timeouterror","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TimeoutError"},"doc://Afluent/documentation/Afluent/Just":{"fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"Just","kind":"identifier"}],"title":"Just","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Just","kind":"symbol","type":"topic","url":"\/documentation\/afluent\/just","navigatorTitle":[{"text":"Just","kind":"identifier"}],"role":"symbol","abstract":[]},"doc://Afluent/documentation/Afluent/DeferredTask":{"navigatorTitle":[{"text":"DeferredTask","kind":"identifier"}],"title":"DeferredTask","kind":"symbol","type":"topic","url":"\/documentation\/afluent\/deferredtask","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"DeferredTask","kind":"identifier"}],"abstract":[{"type":"text","text":"A structure representing a deferred asynchronous unit of work."}]},"doc://Afluent/documentation/Afluent":{"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent","role":"collection","type":"topic","abstract":[],"title":"Afluent","url":"\/documentation\/afluent"},"doc://Afluent/documentation/Afluent/TopLevelEncoder":{"type":"topic","title":"TopLevelEncoder","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TopLevelEncoder","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TopLevelEncoder","kind":"identifier"}],"role":"symbol","abstract":[],"url":"\/documentation\/afluent\/toplevelencoder","navigatorTitle":[{"kind":"identifier","text":"TopLevelEncoder"}]},"doc://Afluent/documentation/Afluent/TimerSequence":{"url":"\/documentation\/afluent\/timersequence","kind":"symbol","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TimerSequence","abstract":[],"title":"TimerSequence","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"TimerSequence","kind":"identifier"}],"navigatorTitle":[{"text":"TimerSequence","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/SubscriptionDemand":{"type":"topic","navigatorTitle":[{"text":"SubscriptionDemand","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SubscriptionDemand","title":"SubscriptionDemand","abstract":[],"url":"\/documentation\/afluent\/subscriptiondemand","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SubscriptionDemand"}],"role":"symbol"},"doc://Afluent/documentation/Afluent/AsynchronousOperation":{"kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousOperation","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsynchronousOperation"}],"navigatorTitle":[{"text":"AsynchronousOperation","kind":"identifier"}],"url":"\/documentation\/afluent\/asynchronousoperation","abstract":[{"type":"text","text":"Reference to an operation that an operator would execute"}],"title":"AsynchronousOperation"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy":{"type":"topic","navigatorTitle":[{"text":"RetryByBackoffStrategy","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/afluent\/retrybybackoffstrategy","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RetryByBackoffStrategy"}],"role":"symbol","abstract":[{"type":"text","text":"A retry strategy using a specified backoff strategy and clock."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","title":"RetryByBackoffStrategy"},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnyAsynchronousUnitOfWork"}],"url":"\/documentation\/afluent\/anyasynchronousunitofwork","title":"AnyAsynchronousUnitOfWork","kind":"symbol","abstract":[{"text":"A unit of work that performs type erasure by wrapping another unit of work.","type":"text"}],"navigatorTitle":[{"text":"AnyAsynchronousUnitOfWork","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork/share()":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/share()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"share"},{"text":"() -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWork","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Success","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa"},{"kind":"text","text":"> & "},{"kind":"typeIdentifier","preciseIdentifier":"s:ScA","text":"Actor"}],"abstract":[{"text":"Shares the upstream ","type":"text"},{"code":"AsynchronousUnitOfWork","type":"codeVoice"},{"type":"text","text":" among multiple downstream subscribers."}],"role":"symbol","title":"share()","type":"topic","url":"\/documentation\/afluent\/asynchronousunitofwork\/share()","kind":"symbol"},"doc://Afluent/documentation/Afluent/Foundation":{"url":"\/documentation\/afluent\/foundation","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Foundation","title":"Foundation","role":"collection","type":"topic","abstract":[],"kind":"symbol"},"doc://Afluent/documentation/Afluent/_Concurrency":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency","type":"topic","role":"collection","url":"\/documentation\/afluent\/_concurrency","title":"_Concurrency","kind":"symbol","abstract":[]},"doc://Afluent/documentation/Afluent/RetryStrategy":{"navigatorTitle":[{"kind":"identifier","text":"RetryStrategy"}],"type":"topic","abstract":[{"text":"A strategy for handling errors and determining whether to retry an operation.","type":"text"}],"title":"RetryStrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"RetryStrategy","kind":"identifier"}],"url":"\/documentation\/afluent\/retrystrategy","kind":"symbol"},"doc://Afluent/documentation/Afluent/BackoffStrategy":{"url":"\/documentation\/afluent\/backoffstrategy","abstract":[{"text":"A protocol for implementing custom backoff strategies in retry mechanisms.","type":"text"}],"type":"topic","title":"BackoffStrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BackoffStrategy"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"BackoffStrategy"}]},"doc://Afluent/documentation/Afluent/RetryByCountStrategy":{"title":"RetryByCountStrategy","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"RetryStrategy"},{"type":"text","text":" that limits the number of retry attempts."}],"url":"\/documentation\/afluent\/retrybycountstrategy","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RetryByCountStrategy","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByCountStrategy","kind":"symbol","navigatorTitle":[{"text":"RetryByCountStrategy","kind":"identifier"}],"role":"symbol"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache":{"type":"topic","title":"AsynchronousUnitOfWorkCache","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsynchronousUnitOfWorkCache","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"A cache for asynchronous unit of work types."},{"text":" ","type":"text"},{"text":"A stored unit of work should be both ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" and a reference type (e.g. a unit of work shared via the "},{"isActive":true,"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/share()","type":"reference"},{"text":" operator).","type":"text"}],"url":"\/documentation\/afluent\/asynchronousunitofworkcache","navigatorTitle":[{"text":"AsynchronousUnitOfWorkCache","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AnyCancellable":{"role":"symbol","navigatorTitle":[{"text":"AnyCancellable","kind":"identifier"}],"url":"\/documentation\/afluent\/anycancellable","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"AnyCancellable","kind":"identifier"}],"type":"topic","title":"AnyCancellable","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyCancellable","kind":"symbol","abstract":[{"text":"Stores an erased unit of work and provides a mechanism to cancel it","type":"text"}]},"doc://Afluent/documentation/Afluent/ClockDurationUnit":{"kind":"symbol","role":"symbol","title":"ClockDurationUnit","url":"\/documentation\/afluent\/clockdurationunit","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ClockDurationUnit"}],"abstract":[],"navigatorTitle":[{"text":"ClockDurationUnit","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ClockDurationUnit","type":"topic"},"doc://Afluent/documentation/Afluent/SingleValueSubject":{"navigatorTitle":[{"text":"SingleValueSubject","kind":"identifier"}],"title":"SingleValueSubject","url":"\/documentation\/afluent\/singlevaluesubject","kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"SingleValueSubject","kind":"identifier"}],"abstract":[{"type":"text","text":"A subject that emits a single value or an error."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueSubject"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"url":"\/documentation\/afluent\/asynchronousunitofwork","abstract":[{"type":"text","text":"Represents an asynchronous unit of work."}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWork"}],"title":"AsynchronousUnitOfWork","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork"},"doc://Afluent/documentation/Afluent/AnyAsyncSequence":{"role":"symbol","kind":"symbol","abstract":[],"title":"AnyAsyncSequence","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsyncSequence","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyAsyncSequence","kind":"identifier"}],"url":"\/documentation\/afluent\/anyasyncsequence","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AnyAsyncSequence"}]},"doc://Afluent/documentation/Afluent/AUOWCacheStrategy":{"abstract":[{"isActive":true,"type":"reference","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy"},{"type":"text","text":" represents the available caching strategies for the "},{"type":"reference","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","isActive":true},{"type":"text","text":"."}],"type":"topic","kind":"symbol","url":"\/documentation\/afluent\/auowcachestrategy","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AUOWCacheStrategy","kind":"identifier"}],"title":"AUOWCacheStrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy","navigatorTitle":[{"text":"AUOWCacheStrategy","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/TopLevelDecoder":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TopLevelDecoder","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"TopLevelDecoder","kind":"identifier"}],"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TopLevelDecoder"}],"title":"TopLevelDecoder","abstract":[],"role":"symbol","url":"\/documentation\/afluent\/topleveldecoder"},"doc://Afluent/documentation/Afluent/Deferred":{"kind":"symbol","url":"\/documentation\/afluent\/deferred","role":"symbol","type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Deferred"}],"navigatorTitle":[{"text":"Deferred","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Deferred","title":"Deferred","abstract":[]},"doc://Afluent/documentation/Afluent/AnySendableReference":{"kind":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnySendableReference"}],"type":"topic","title":"AnySendableReference","abstract":[],"role":"symbol","navigatorTitle":[{"text":"AnySendableReference","kind":"identifier"}],"url":"\/documentation\/afluent\/anysendablereference","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnySendableReference"},"doc://Afluent/documentation/Afluent/Race(cancelAllOnWin:_:against:)":{"url":"\/documentation\/afluent\/race(cancelallonwin:_:against:)","kind":"symbol","abstract":[{"type":"text","text":"Executes two asynchronous tasks concurrently and returns the result of the first one that completes."}],"type":"topic","title":"Race(cancelAllOnWin:_:against:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Race(cancelAllOnWin:_:against:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"Race"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"cancelAllOnWin","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":", () ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"kind":"externalParam","text":"against"},{"text":": (() ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":")...) ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"T","kind":"typeIdentifier"}]},"doc://Afluent/documentation/Afluent/Workers":{"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Workers"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Workers","title":"Workers","navigatorTitle":[{"text":"Workers","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"A namespace for grouping related asynchronous work operations."}],"url":"\/documentation\/afluent\/workers"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","type":"topic","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ExponentialBackoffStrategy","kind":"identifier"}],"url":"\/documentation\/afluent\/exponentialbackoffstrategy","title":"ExponentialBackoffStrategy","kind":"symbol","abstract":[{"type":"text","text":"An exponential backoff strategy for retrying operations."}],"navigatorTitle":[{"kind":"identifier","text":"ExponentialBackoffStrategy"}]}}}