{"topicSections":[{"anchor":"Classes","title":"Classes","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AnyCancellable","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousOperation","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","doc:\/\/Afluent\/documentation\/Afluent\/CurrentValueSubject","doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject","doc:\/\/Afluent\/documentation\/Afluent\/QueueExecutor","doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/RetryByCountStrategy","doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueSubject","doc:\/\/Afluent\/documentation\/Afluent\/TaskState"]},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","doc:\/\/Afluent\/documentation\/Afluent\/TopLevelDecoder","doc:\/\/Afluent\/documentation\/Afluent\/TopLevelEncoder"],"generated":true,"anchor":"Protocols","title":"Protocols"},{"title":"Structures","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/AsyncBroadcastSequence","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence"],"anchor":"Structures"},{"title":"Functions","generated":true,"anchor":"Functions","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/Race(cancelAllOnWin:_:against:)"]},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","doc:\/\/Afluent\/documentation\/Afluent\/AnyAsyncSequence","doc:\/\/Afluent\/documentation\/Afluent\/AnySendableReference","doc:\/\/Afluent\/documentation\/Afluent\/ClockDurationUnit","doc:\/\/Afluent\/documentation\/Afluent\/Deferred","doc:\/\/Afluent\/documentation\/Afluent\/Just","doc:\/\/Afluent\/documentation\/Afluent\/TimerSequence"],"generated":true,"title":"Type Aliases","anchor":"Type-Aliases"},{"generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/SubscriptionDemand","doc:\/\/Afluent\/documentation\/Afluent\/TimeoutError","doc:\/\/Afluent\/documentation\/Afluent\/UnretainedError","doc:\/\/Afluent\/documentation\/Afluent\/Workers"],"title":"Enumerations","anchor":"Enumerations"},{"anchor":"Extended-Modules","generated":true,"title":"Extended Modules","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/Foundation","doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency"]}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Framework","externalID":"Afluent","symbolKind":"module","role":"collection","modules":[{"name":"Afluent"}],"title":"Afluent"},"hierarchy":{"paths":[[]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent"]}],"kind":"symbol","references":{"doc://Afluent/documentation/Afluent/AsynchronousOperation":{"title":"AsynchronousOperation","url":"\/documentation\/afluent\/asynchronousoperation","role":"symbol","abstract":[{"type":"text","text":"Reference to an operation that an operator would execute"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousOperation","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousOperation","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"AsynchronousOperation","kind":"identifier"}],"type":"topic"},"doc://Afluent/documentation/Afluent/QueueExecutor":{"role":"symbol","url":"\/documentation\/afluent\/queueexecutor","navigatorTitle":[{"kind":"identifier","text":"QueueExecutor"}],"title":"QueueExecutor","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/QueueExecutor","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"QueueExecutor","kind":"identifier"}],"abstract":[],"type":"topic","kind":"symbol"},"doc://Afluent/documentation/Afluent":{"title":"Afluent","role":"collection","kind":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent","url":"\/documentation\/afluent"},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork":{"url":"\/documentation\/afluent\/anyasynchronousunitofwork","title":"AnyAsynchronousUnitOfWork","abstract":[{"text":"A unit of work that performs type erasure by wrapping another unit of work.","type":"text"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","navigatorTitle":[{"kind":"identifier","text":"AnyAsynchronousUnitOfWork"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AnyAsynchronousUnitOfWork","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/UnretainedError":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/UnretainedError","abstract":[],"title":"UnretainedError","url":"\/documentation\/afluent\/unretainederror","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnretainedError"}],"role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"UnretainedError"}]},"doc://Afluent/documentation/Afluent/ClockDurationUnit":{"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ClockDurationUnit","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ClockDurationUnit"}],"kind":"symbol","title":"ClockDurationUnit","navigatorTitle":[{"kind":"identifier","text":"ClockDurationUnit"}],"url":"\/documentation\/afluent\/clockdurationunit","abstract":[],"role":"symbol"},"doc://Afluent/documentation/Afluent/RetryByCountStrategy":{"abstract":[{"text":"A ","type":"text"},{"code":"RetryStrategy","type":"codeVoice"},{"type":"text","text":" that limits the number of retry attempts."}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RetryByCountStrategy"}],"type":"topic","title":"RetryByCountStrategy","kind":"symbol","navigatorTitle":[{"text":"RetryByCountStrategy","kind":"identifier"}],"url":"\/documentation\/afluent\/retrybycountstrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByCountStrategy"},"doc://Afluent/documentation/Afluent/DeferredTask":{"title":"DeferredTask","url":"\/documentation\/afluent\/deferredtask","kind":"symbol","abstract":[{"type":"text","text":"A structure representing a deferred asynchronous unit of work."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DeferredTask","kind":"identifier"}],"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DeferredTask"}]},"doc://Afluent/documentation/Afluent/Race(cancelAllOnWin:_:against:)":{"title":"Race(cancelAllOnWin:_:against:)","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Race"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"cancelAllOnWin","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":", () "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"against","kind":"externalParam"},{"text":": (() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":")...) "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"url":"\/documentation\/afluent\/race(cancelallonwin:_:against:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Race(cancelAllOnWin:_:against:)","role":"symbol","abstract":[{"text":"Executes two asynchronous tasks concurrently and returns the result of the first one that completes.","type":"text"}]},"doc://Afluent/documentation/Afluent/TaskState":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"TaskState","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TaskState","type":"topic","title":"TaskState","abstract":[],"kind":"symbol","role":"symbol","url":"\/documentation\/afluent\/taskstate","navigatorTitle":[{"text":"TaskState","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/SingleValueSubject":{"kind":"symbol","title":"SingleValueSubject","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SingleValueSubject","kind":"identifier"}],"url":"\/documentation\/afluent\/singlevaluesubject","navigatorTitle":[{"kind":"identifier","text":"SingleValueSubject"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueSubject","type":"topic","abstract":[{"type":"text","text":"A subject that emits a single value or an error."}]},"doc://Afluent/documentation/Afluent/SerialTaskQueue":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SerialTaskQueue"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","role":"symbol","title":"SerialTaskQueue","type":"topic","url":"\/documentation\/afluent\/serialtaskqueue","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SerialTaskQueue"}],"abstract":[{"type":"text","text":"A serial task queue that ensures tasks are executed one at a time."}]},"doc://Afluent/documentation/Afluent/AsyncSequences":{"kind":"symbol","role":"symbol","abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequences"}],"url":"\/documentation\/afluent\/asyncsequences","title":"AsyncSequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","type":"topic","navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/_Concurrency":{"title":"_Concurrency","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency","role":"collection","type":"topic","url":"\/documentation\/afluent\/_concurrency","kind":"symbol"},"doc://Afluent/documentation/Afluent/AnySendableReference":{"title":"AnySendableReference","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnySendableReference","abstract":[],"url":"\/documentation\/afluent\/anysendablereference","kind":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnySendableReference"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"AnySendableReference"}]},"doc://Afluent/documentation/Afluent/TimerSequence":{"title":"TimerSequence","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TimerSequence","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"TimerSequence"}],"url":"\/documentation\/afluent\/timersequence","abstract":[],"fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"TimerSequence","kind":"identifier"}],"type":"topic","role":"symbol"},"doc://Afluent/documentation/Afluent/Just":{"url":"\/documentation\/afluent\/just","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"Just","kind":"identifier"}],"kind":"symbol","abstract":[],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"Just"}],"title":"Just","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Just","role":"symbol"},"doc://Afluent/documentation/Afluent/Deferred":{"title":"Deferred","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Deferred"}],"navigatorTitle":[{"text":"Deferred","kind":"identifier"}],"role":"symbol","type":"topic","url":"\/documentation\/afluent\/deferred","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Deferred","kind":"symbol"},"doc://Afluent/documentation/Afluent/AnyCancellable":{"type":"topic","abstract":[{"type":"text","text":"Stores an erased unit of work and provides a mechanism to cancel it"}],"kind":"symbol","url":"\/documentation\/afluent\/anycancellable","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyCancellable","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyCancellable","kind":"identifier"}],"title":"AnyCancellable","navigatorTitle":[{"kind":"identifier","text":"AnyCancellable"}]},"doc://Afluent/documentation/Afluent/AUOWCacheStrategy":{"kind":"symbol","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy","title":"AUOWCacheStrategy","url":"\/documentation\/afluent\/auowcachestrategy","navigatorTitle":[{"kind":"identifier","text":"AUOWCacheStrategy"}],"abstract":[{"type":"reference","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy","isActive":true},{"text":" represents the available caching strategies for the ","type":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","isActive":true,"type":"reference"},{"type":"text","text":"."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AUOWCacheStrategy"}],"role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequenceCache":{"abstract":[],"navigatorTitle":[{"text":"AsyncSequenceCache","kind":"identifier"}],"title":"AsyncSequenceCache","role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/afluent\/asyncsequencecache","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"AsyncSequenceCache","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy":{"title":"ExponentialBackoffStrategy","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ExponentialBackoffStrategy"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","kind":"symbol","url":"\/documentation\/afluent\/exponentialbackoffstrategy","abstract":[{"type":"text","text":"An exponential backoff strategy for retrying operations."}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ExponentialBackoffStrategy"}]},"doc://Afluent/documentation/Afluent/Foundation":{"type":"topic","title":"Foundation","url":"\/documentation\/afluent\/foundation","abstract":[],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Foundation","role":"collection"},"doc://Afluent/documentation/Afluent/AnyAsyncSequence":{"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsyncSequence","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyAsyncSequence","kind":"identifier"}],"kind":"symbol","title":"AnyAsyncSequence","navigatorTitle":[{"text":"AnyAsyncSequence","kind":"identifier"}],"url":"\/documentation\/afluent\/anyasyncsequence","abstract":[],"role":"symbol"},"doc://Afluent/documentation/Afluent/AUOWCache":{"title":"AUOWCache","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","type":"topic","abstract":[],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"AUOWCache","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"AUOWCache","kind":"identifier"}],"url":"\/documentation\/afluent\/auowcache","kind":"symbol"},"doc://Afluent/documentation/Afluent/PassthroughSubject":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject","type":"topic","abstract":[{"text":"A subject that broadcasts values to multiple consumers without storing a current value.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Unlike "},{"type":"codeVoice","code":"CurrentValueSubject"},{"type":"text","text":", "},{"code":"PassthroughSubject","type":"codeVoice"},{"text":" does not retain the most recent value.","type":"text"},{"text":" ","type":"text"},{"text":"It only sends values as they are emitted, meaning consumers will only receive values that are sent after they start listening.","type":"text"},{"text":" ","type":"text"},{"text":"This is an ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" that allows multiple tasks to asynchronously consume values and mimics Combine’s PassthroughSubject."}],"kind":"symbol","title":"PassthroughSubject","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"PassthroughSubject"}],"url":"\/documentation\/afluent\/passthroughsubject","navigatorTitle":[{"text":"PassthroughSubject","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/TopLevelEncoder":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TopLevelEncoder","title":"TopLevelEncoder","navigatorTitle":[{"text":"TopLevelEncoder","kind":"identifier"}],"abstract":[],"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/afluent\/toplevelencoder","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TopLevelEncoder","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence":{"type":"topic","title":"AsynchronousUnitOfWorkSequence","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsynchronousUnitOfWorkSequence"}],"navigatorTitle":[{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/afluent\/asynchronousunitofworksequence","abstract":[{"text":"A sequence that represents a single execution of an asynchronous unit of work.","type":"text"}]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork/share()":{"type":"topic","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/share()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"share"},{"text":"() -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"AsynchronousUnitOfWork","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa","text":"Success","kind":"typeIdentifier"},{"text":"> & ","kind":"text"},{"preciseIdentifier":"s:ScA","text":"Actor","kind":"typeIdentifier"}],"url":"\/documentation\/afluent\/asynchronousunitofwork\/share()","abstract":[{"text":"Shares the upstream ","type":"text"},{"type":"codeVoice","code":"AsynchronousUnitOfWork"},{"type":"text","text":" among multiple downstream subscribers."}],"title":"share()","kind":"symbol"},"doc://Afluent/documentation/Afluent/Workers":{"title":"Workers","kind":"symbol","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Workers","kind":"identifier"}],"url":"\/documentation\/afluent\/workers","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Workers","role":"symbol","abstract":[{"type":"text","text":"A namespace for grouping related asynchronous work operations."}],"navigatorTitle":[{"kind":"identifier","text":"Workers"}]},"doc://Afluent/documentation/Afluent/SubscriptionDemand":{"url":"\/documentation\/afluent\/subscriptiondemand","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SubscriptionDemand"}],"abstract":[],"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SubscriptionDemand"}],"kind":"symbol","title":"SubscriptionDemand","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SubscriptionDemand"},"doc://Afluent/documentation/Afluent/AsyncBroadcastSequence":{"navigatorTitle":[{"text":"AsyncBroadcastSequence","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncBroadcastSequence"}],"abstract":[],"title":"AsyncBroadcastSequence","url":"\/documentation\/afluent\/asyncbroadcastsequence","type":"topic","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncBroadcastSequence","role":"symbol"},"doc://Afluent/documentation/Afluent/TopLevelDecoder":{"type":"topic","url":"\/documentation\/afluent\/topleveldecoder","title":"TopLevelDecoder","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TopLevelDecoder","abstract":[],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"TopLevelDecoder"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TopLevelDecoder"}]},"doc://Afluent/documentation/Afluent/BackoffStrategy":{"abstract":[{"type":"text","text":"A protocol for implementing custom backoff strategies in retry mechanisms."}],"type":"topic","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","navigatorTitle":[{"text":"BackoffStrategy","kind":"identifier"}],"title":"BackoffStrategy","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"BackoffStrategy","kind":"identifier"}],"url":"\/documentation\/afluent\/backoffstrategy"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsynchronousUnitOfWorkCache"}],"type":"topic","navigatorTitle":[{"text":"AsynchronousUnitOfWorkCache","kind":"identifier"}],"abstract":[{"text":"A cache for asynchronous unit of work types.","type":"text"},{"text":" ","type":"text"},{"text":"A stored unit of work should be both ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" and a reference type (e.g. a unit of work shared via the "},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/share()","type":"reference","isActive":true},{"type":"text","text":" operator)."}],"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","kind":"symbol","url":"\/documentation\/afluent\/asynchronousunitofworkcache","title":"AsynchronousUnitOfWorkCache"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","url":"\/documentation\/afluent\/asynchronousunitofwork","role":"symbol","abstract":[{"text":"Represents an asynchronous unit of work.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWork"}],"type":"topic","title":"AsynchronousUnitOfWork","kind":"symbol"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","title":"RetryByBackoffStrategy","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A retry strategy using a specified backoff strategy and clock."}],"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RetryByBackoffStrategy"}],"navigatorTitle":[{"text":"RetryByBackoffStrategy","kind":"identifier"}],"url":"\/documentation\/afluent\/retrybybackoffstrategy"},"doc://Afluent/documentation/Afluent/TimeoutError":{"kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TimeoutError"}],"type":"topic","title":"TimeoutError","navigatorTitle":[{"kind":"identifier","text":"TimeoutError"}],"url":"\/documentation\/afluent\/timeouterror","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TimeoutError","abstract":[{"text":"An error indicating a timeout has occurred.","type":"text"}],"role":"symbol"},"doc://Afluent/documentation/Afluent/RetryStrategy":{"title":"RetryStrategy","kind":"symbol","url":"\/documentation\/afluent\/retrystrategy","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RetryStrategy"}],"abstract":[{"type":"text","text":"A strategy for handling errors and determining whether to retry an operation."}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"RetryStrategy","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy"},"doc://Afluent/documentation/Afluent/SingleValueChannel":{"kind":"symbol","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel","title":"SingleValueChannel","url":"\/documentation\/afluent\/singlevaluechannel","navigatorTitle":[{"text":"SingleValueChannel","kind":"identifier"}],"abstract":[{"type":"text","text":"A channel that emits a single value or an error."}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SingleValueChannel"}],"role":"symbol"},"doc://Afluent/documentation/Afluent/CurrentValueSubject":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/CurrentValueSubject","navigatorTitle":[{"kind":"identifier","text":"CurrentValueSubject"}],"title":"CurrentValueSubject","role":"symbol","abstract":[{"text":"A subject that broadcasts its current value and all subsequent values to multiple consumers.","type":"text"},{"text":" ","type":"text"},{"text":"It can also handle completion events, including normal termination and failure with an error.","type":"text"},{"text":" ","type":"text"},{"text":"This is an ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"text":" that allows multiple tasks to asynchronously consume values and mimics Combine’s CurrentValueSubject.","type":"text"}],"type":"topic","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CurrentValueSubject"}],"url":"\/documentation\/afluent\/currentvaluesubject"}}}