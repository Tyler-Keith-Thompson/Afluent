{"hierarchy":{"paths":[[]]},"metadata":{"role":"collection","roleHeading":"Framework","modules":[{"name":"Afluent"}],"title":"Afluent","externalID":"Afluent","symbolKind":"module"},"topicSections":[{"title":"Classes","anchor":"Classes","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AnyCancellable","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousOperation","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/QueueExecutor","doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/RetryByCountStrategy","doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueSubject","doc:\/\/Afluent\/documentation\/Afluent\/TaskState"],"generated":true},{"generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","doc:\/\/Afluent\/documentation\/Afluent\/TopLevelDecoder","doc:\/\/Afluent\/documentation\/Afluent\/TopLevelEncoder"],"title":"Protocols","anchor":"Protocols"},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence"],"anchor":"Structures","generated":true,"title":"Structures"},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/Race(cancelAllOnWin:_:against:)"],"generated":true,"title":"Functions","anchor":"Functions"},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","doc:\/\/Afluent\/documentation\/Afluent\/AnyAsyncSequence","doc:\/\/Afluent\/documentation\/Afluent\/ClockDurationUnit","doc:\/\/Afluent\/documentation\/Afluent\/Deferred","doc:\/\/Afluent\/documentation\/Afluent\/Just","doc:\/\/Afluent\/documentation\/Afluent\/TimerSequence"],"generated":true,"title":"Type Aliases","anchor":"Type-Aliases"},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/SubscriptionDemand","doc:\/\/Afluent\/documentation\/Afluent\/TimeoutError","doc:\/\/Afluent\/documentation\/Afluent\/UnretainedError","doc:\/\/Afluent\/documentation\/Afluent\/Workers"],"title":"Enumerations","anchor":"Enumerations","generated":true},{"generated":true,"title":"Extended Modules","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/Foundation","doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency"],"anchor":"Extended-Modules"}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent"},"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","references":{"doc://Afluent/documentation/Afluent/SingleValueChannel":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SingleValueChannel","kind":"identifier"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel","type":"topic","title":"SingleValueChannel","url":"\/documentation\/afluent\/singlevaluechannel","abstract":[{"type":"text","text":"A channel that emits a single value or an error."}],"navigatorTitle":[{"kind":"identifier","text":"SingleValueChannel"}]},"doc://Afluent/documentation/Afluent/UnretainedError":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/UnretainedError","url":"\/documentation\/afluent\/unretainederror","type":"topic","abstract":[],"title":"UnretainedError","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"UnretainedError","kind":"identifier"}],"role":"symbol","kind":"symbol","navigatorTitle":[{"text":"UnretainedError","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/ClockDurationUnit":{"url":"\/documentation\/afluent\/clockdurationunit","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ClockDurationUnit"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ClockDurationUnit","type":"topic","abstract":[],"title":"ClockDurationUnit","kind":"symbol","navigatorTitle":[{"text":"ClockDurationUnit","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/Foundation":{"type":"topic","url":"\/documentation\/afluent\/foundation","role":"collection","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Foundation","title":"Foundation","kind":"symbol","abstract":[]},"doc://Afluent/documentation/Afluent/RetryByCountStrategy":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByCountStrategy","url":"\/documentation\/afluent\/retrybycountstrategy","type":"topic","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"RetryStrategy"},{"type":"text","text":" that limits the number of retry attempts."}],"title":"RetryByCountStrategy","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RetryByCountStrategy"}],"role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RetryByCountStrategy"}]},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork":{"type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyAsynchronousUnitOfWork","kind":"identifier"}],"url":"\/documentation\/afluent\/anyasynchronousunitofwork","navigatorTitle":[{"text":"AnyAsynchronousUnitOfWork","kind":"identifier"}],"title":"AnyAsynchronousUnitOfWork","abstract":[{"type":"text","text":"A unit of work that performs type erasure by wrapping another unit of work."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncSequences"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","title":"AsyncSequences","type":"topic","url":"\/documentation\/afluent\/asyncsequences","abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy":{"role":"symbol","type":"topic","url":"\/documentation\/afluent\/retrybybackoffstrategy","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RetryByBackoffStrategy"}],"title":"RetryByBackoffStrategy","kind":"symbol","navigatorTitle":[{"text":"RetryByBackoffStrategy","kind":"identifier"}],"abstract":[{"type":"text","text":"A retry strategy using a specified backoff strategy and clock."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy"},"doc://Afluent/documentation/Afluent":{"abstract":[],"title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","type":"topic","kind":"symbol","role":"collection","url":"\/documentation\/afluent"},"doc://Afluent/documentation/Afluent/TaskState":{"url":"\/documentation\/afluent\/taskstate","role":"symbol","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TaskState","title":"TaskState","navigatorTitle":[{"text":"TaskState","kind":"identifier"}],"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TaskState"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/_Concurrency":{"abstract":[],"url":"\/documentation\/afluent\/_concurrency","role":"collection","title":"_Concurrency","kind":"symbol","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency"},"doc://Afluent/documentation/Afluent/AUOWCache":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AUOWCache","kind":"identifier"}],"title":"AUOWCache","abstract":[],"type":"topic","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","navigatorTitle":[{"text":"AUOWCache","kind":"identifier"}],"url":"\/documentation\/afluent\/auowcache","kind":"symbol"},"doc://Afluent/documentation/Afluent/TimerSequence":{"type":"topic","url":"\/documentation\/afluent\/timersequence","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TimerSequence","navigatorTitle":[{"text":"TimerSequence","kind":"identifier"}],"kind":"symbol","title":"TimerSequence","abstract":[],"fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"TimerSequence","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/TopLevelEncoder":{"kind":"symbol","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TopLevelEncoder","abstract":[],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"TopLevelEncoder"}],"title":"TopLevelEncoder","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"TopLevelEncoder","kind":"identifier"}],"url":"\/documentation\/afluent\/toplevelencoder"},"doc://Afluent/documentation/Afluent/Race(cancelAllOnWin:_:against:)":{"url":"\/documentation\/afluent\/race(cancelallonwin:_:against:)","title":"Race(cancelAllOnWin:_:against:)","abstract":[{"type":"text","text":"Executes two asynchronous tasks concurrently and returns the result of the first one that completes."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Race(cancelAllOnWin:_:against:)","type":"topic","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"Race"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"cancelAllOnWin","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", () "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"text":"against","kind":"externalParam"},{"text":": (() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":")...) "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"}]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"title":"AsynchronousUnitOfWork","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","abstract":[{"type":"text","text":"Represents an asynchronous unit of work."}],"type":"topic","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWork"}],"url":"\/documentation\/afluent\/asynchronousunitofwork"},"doc://Afluent/documentation/Afluent/RetryStrategy":{"url":"\/documentation\/afluent\/retrystrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","abstract":[{"text":"A strategy for handling errors and determining whether to retry an operation.","type":"text"}],"type":"topic","title":"RetryStrategy","role":"symbol","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RetryStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"RetryStrategy","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/Deferred":{"kind":"symbol","navigatorTitle":[{"text":"Deferred","kind":"identifier"}],"url":"\/documentation\/afluent\/deferred","abstract":[],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Deferred","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Deferred","kind":"identifier"}],"title":"Deferred"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}],"url":"\/documentation\/afluent\/asynchronousunitofworksequence","type":"topic","abstract":[{"text":"A sequence that represents a single execution of an asynchronous unit of work.","type":"text"}],"role":"symbol","title":"AsynchronousUnitOfWorkSequence","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence","navigatorTitle":[{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/AnyAsyncSequence":{"type":"topic","url":"\/documentation\/afluent\/anyasyncsequence","role":"symbol","navigatorTitle":[{"text":"AnyAsyncSequence","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsyncSequence","title":"AnyAsyncSequence","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"AnyAsyncSequence","kind":"identifier"}],"kind":"symbol","abstract":[]},"doc://Afluent/documentation/Afluent/SubscriptionDemand":{"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SubscriptionDemand","navigatorTitle":[{"text":"SubscriptionDemand","kind":"identifier"}],"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"SubscriptionDemand","kind":"identifier"}],"abstract":[],"url":"\/documentation\/afluent\/subscriptiondemand","kind":"symbol","title":"SubscriptionDemand"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy":{"url":"\/documentation\/afluent\/exponentialbackoffstrategy","abstract":[{"text":"An exponential backoff strategy for retrying operations.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","title":"ExponentialBackoffStrategy","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ExponentialBackoffStrategy"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"ExponentialBackoffStrategy"}]},"doc://Afluent/documentation/Afluent/Workers":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Workers","kind":"identifier"}],"url":"\/documentation\/afluent\/workers","navigatorTitle":[{"kind":"identifier","text":"Workers"}],"title":"Workers","abstract":[{"type":"text","text":"A namespace for grouping related asynchronous work operations."}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Workers","type":"topic"},"doc://Afluent/documentation/Afluent/BackoffStrategy":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"BackoffStrategy","kind":"identifier"}],"url":"\/documentation\/afluent\/backoffstrategy","navigatorTitle":[{"kind":"identifier","text":"BackoffStrategy"}],"title":"BackoffStrategy","abstract":[{"type":"text","text":"A protocol for implementing custom backoff strategies in retry mechanisms."}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","type":"topic"},"doc://Afluent/documentation/Afluent/TimeoutError":{"title":"TimeoutError","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TimeoutError","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TimeoutError"}],"navigatorTitle":[{"text":"TimeoutError","kind":"identifier"}],"abstract":[{"text":"An error indicating a timeout has occurred.","type":"text"}],"url":"\/documentation\/afluent\/timeouterror","type":"topic","role":"symbol"},"doc://Afluent/documentation/Afluent/QueueExecutor":{"abstract":[],"url":"\/documentation\/afluent\/queueexecutor","kind":"symbol","role":"symbol","title":"QueueExecutor","navigatorTitle":[{"text":"QueueExecutor","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/QueueExecutor","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"QueueExecutor"}]},"doc://Afluent/documentation/Afluent/TopLevelDecoder":{"url":"\/documentation\/afluent\/topleveldecoder","abstract":[],"title":"TopLevelDecoder","kind":"symbol","role":"symbol","type":"topic","navigatorTitle":[{"text":"TopLevelDecoder","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TopLevelDecoder","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"TopLevelDecoder","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AnyCancellable":{"abstract":[{"type":"text","text":"Stores an erased unit of work and provides a mechanism to cancel it"}],"type":"topic","url":"\/documentation\/afluent\/anycancellable","kind":"symbol","navigatorTitle":[{"text":"AnyCancellable","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyCancellable"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyCancellable","role":"symbol","title":"AnyCancellable"},"doc://Afluent/documentation/Afluent/SerialTaskQueue":{"abstract":[{"type":"text","text":"A serial task queue that ensures tasks are executed one at a time."}],"url":"\/documentation\/afluent\/serialtaskqueue","kind":"symbol","role":"symbol","title":"SerialTaskQueue","navigatorTitle":[{"text":"SerialTaskQueue","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"SerialTaskQueue","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsynchronousOperation":{"navigatorTitle":[{"kind":"identifier","text":"AsynchronousOperation"}],"title":"AsynchronousOperation","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousOperation","abstract":[{"text":"Reference to an operation that an operator would execute","type":"text"}],"url":"\/documentation\/afluent\/asynchronousoperation","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"AsynchronousOperation","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/DeferredTask":{"url":"\/documentation\/afluent\/deferredtask","title":"DeferredTask","abstract":[{"text":"A structure representing a deferred asynchronous unit of work.","type":"text"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","role":"symbol","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DeferredTask","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"DeferredTask"}]},"doc://Afluent/documentation/Afluent/Just":{"url":"\/documentation\/afluent\/just","title":"Just","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Just","type":"topic","role":"symbol","kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Just"}],"navigatorTitle":[{"text":"Just","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache":{"url":"\/documentation\/afluent\/asynchronousunitofworkcache","abstract":[],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","title":"AsynchronousUnitOfWorkCache","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWorkCache","kind":"identifier"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWorkCache"}]},"doc://Afluent/documentation/Afluent/SingleValueSubject":{"url":"\/documentation\/afluent\/singlevaluesubject","title":"SingleValueSubject","abstract":[{"type":"text","text":"A subject that emits a single value or an error."}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueSubject","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SingleValueSubject"}],"navigatorTitle":[{"text":"SingleValueSubject","kind":"identifier"}]}}}