{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent"]}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent","interfaceLanguage":"swift"},"sections":[],"topicSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AnyCancellable","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousOperation","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/QueueExecutor","doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/RetryByCountStrategy","doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueSubject","doc:\/\/Afluent\/documentation\/Afluent\/TaskState"],"anchor":"Classes","title":"Classes","generated":true},{"title":"Protocols","anchor":"Protocols","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","doc:\/\/Afluent\/documentation\/Afluent\/TopLevelDecoder","doc:\/\/Afluent\/documentation\/Afluent\/TopLevelEncoder"]},{"anchor":"Structures","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence"],"title":"Structures","generated":true},{"title":"Functions","anchor":"Functions","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/Race(cancelAllOnWin:_:against:)"]},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","doc:\/\/Afluent\/documentation\/Afluent\/AnyAsyncSequence","doc:\/\/Afluent\/documentation\/Afluent\/AnySendableReference","doc:\/\/Afluent\/documentation\/Afluent\/ClockDurationUnit","doc:\/\/Afluent\/documentation\/Afluent\/Deferred","doc:\/\/Afluent\/documentation\/Afluent\/Just","doc:\/\/Afluent\/documentation\/Afluent\/TimerSequence"],"anchor":"Type-Aliases","generated":true,"title":"Type Aliases"},{"title":"Enumerations","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/SubscriptionDemand","doc:\/\/Afluent\/documentation\/Afluent\/TimeoutError","doc:\/\/Afluent\/documentation\/Afluent\/UnretainedError","doc:\/\/Afluent\/documentation\/Afluent\/Workers"],"anchor":"Enumerations"},{"anchor":"Extended-Modules","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/Foundation","doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency"],"title":"Extended Modules","generated":true}],"metadata":{"title":"Afluent","roleHeading":"Framework","symbolKind":"module","externalID":"Afluent","modules":[{"name":"Afluent"}],"role":"collection"},"hierarchy":{"paths":[[]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","references":{"doc://Afluent/documentation/Afluent/DeferredTask":{"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","abstract":[{"text":"A structure representing a deferred asynchronous unit of work.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DeferredTask"}],"role":"symbol","url":"\/documentation\/afluent\/deferredtask","kind":"symbol","navigatorTitle":[{"text":"DeferredTask","kind":"identifier"}],"title":"DeferredTask"},"doc://Afluent/documentation/Afluent/ClockDurationUnit":{"url":"\/documentation\/afluent\/clockdurationunit","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ClockDurationUnit","title":"ClockDurationUnit","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ClockDurationUnit"}],"type":"topic","abstract":[],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"ClockDurationUnit"}]},"doc://Afluent/documentation/Afluent/SerialTaskQueue":{"abstract":[{"type":"text","text":"A serial task queue that ensures tasks are executed one at a time."}],"title":"SerialTaskQueue","navigatorTitle":[{"kind":"identifier","text":"SerialTaskQueue"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","type":"topic","url":"\/documentation\/afluent\/serialtaskqueue","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"SerialTaskQueue","kind":"identifier"}],"kind":"symbol","role":"symbol"},"doc://Afluent/documentation/Afluent/Workers":{"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"Workers","kind":"identifier"}],"navigatorTitle":[{"text":"Workers","kind":"identifier"}],"abstract":[{"type":"text","text":"A namespace for grouping related asynchronous work operations."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Workers","kind":"symbol","title":"Workers","url":"\/documentation\/afluent\/workers","role":"symbol","type":"topic"},"doc://Afluent/documentation/Afluent/AUOWCache":{"url":"\/documentation\/afluent\/auowcache","title":"AUOWCache","navigatorTitle":[{"text":"AUOWCache","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","kind":"symbol","role":"symbol","type":"topic","abstract":[],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AUOWCache","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/QueueExecutor":{"navigatorTitle":[{"text":"QueueExecutor","kind":"identifier"}],"title":"QueueExecutor","abstract":[],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/QueueExecutor","kind":"symbol","url":"\/documentation\/afluent\/queueexecutor","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"QueueExecutor","kind":"identifier"}],"role":"symbol"},"doc://Afluent/documentation/Afluent/AUOWCacheStrategy":{"navigatorTitle":[{"kind":"identifier","text":"AUOWCacheStrategy"}],"kind":"symbol","abstract":[{"type":"reference","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy","isActive":true},{"type":"text","text":" represents the available caching strategies for the "},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","type":"reference","isActive":true},{"type":"text","text":"."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy","title":"AUOWCacheStrategy","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"AUOWCacheStrategy","kind":"identifier"}],"url":"\/documentation\/afluent\/auowcachestrategy"},"doc://Afluent/documentation/Afluent/BackoffStrategy":{"abstract":[{"text":"A protocol for implementing custom backoff strategies in retry mechanisms.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"BackoffStrategy"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","navigatorTitle":[{"text":"BackoffStrategy","kind":"identifier"}],"title":"BackoffStrategy","role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/afluent\/backoffstrategy"},"doc://Afluent/documentation/Afluent/RetryStrategy":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","url":"\/documentation\/afluent\/retrystrategy","role":"symbol","title":"RetryStrategy","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"RetryStrategy","kind":"identifier"}],"abstract":[{"type":"text","text":"A strategy for handling errors and determining whether to retry an operation."}],"kind":"symbol","navigatorTitle":[{"text":"RetryStrategy","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/TopLevelEncoder":{"url":"\/documentation\/afluent\/toplevelencoder","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"TopLevelEncoder","kind":"identifier"}],"abstract":[],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TopLevelEncoder","role":"symbol","kind":"symbol","title":"TopLevelEncoder","navigatorTitle":[{"text":"TopLevelEncoder","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy":{"title":"ExponentialBackoffStrategy","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ExponentialBackoffStrategy"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","abstract":[{"text":"An exponential backoff strategy for retrying operations.","type":"text"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ExponentialBackoffStrategy"}],"url":"\/documentation\/afluent\/exponentialbackoffstrategy"},"doc://Afluent/documentation/Afluent/AnyCancellable":{"url":"\/documentation\/afluent\/anycancellable","title":"AnyCancellable","navigatorTitle":[{"text":"AnyCancellable","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyCancellable","kind":"symbol","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Stores an erased unit of work and provides a mechanism to cancel it"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyCancellable"}]},"doc://Afluent/documentation/Afluent/AnySendableReference":{"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnySendableReference","abstract":[],"fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnySendableReference"}],"role":"symbol","url":"\/documentation\/afluent\/anysendablereference","kind":"symbol","navigatorTitle":[{"text":"AnySendableReference","kind":"identifier"}],"title":"AnySendableReference"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache":{"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","abstract":[{"type":"text","text":"A cache for asynchronous unit of work types."},{"type":"text","text":" "},{"text":"A stored unit of work should be both ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":" and a reference type (e.g. a unit of work shared via the "},{"type":"reference","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/share()","isActive":true},{"type":"text","text":" operator)."}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWorkCache","kind":"identifier"}],"role":"symbol","url":"\/documentation\/afluent\/asynchronousunitofworkcache","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWorkCache"}],"title":"AsynchronousUnitOfWorkCache"},"doc://Afluent/documentation/Afluent/TaskState":{"url":"\/documentation\/afluent\/taskstate","title":"TaskState","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TaskState"}],"navigatorTitle":[{"text":"TaskState","kind":"identifier"}],"kind":"symbol","role":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TaskState"},"doc://Afluent/documentation/Afluent/TimerSequence":{"title":"TimerSequence","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TimerSequence"}],"url":"\/documentation\/afluent\/timersequence","navigatorTitle":[{"text":"TimerSequence","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TimerSequence","type":"topic","kind":"symbol","abstract":[]},"doc://Afluent/documentation/Afluent/SingleValueChannel":{"role":"symbol","kind":"symbol","url":"\/documentation\/afluent\/singlevaluechannel","title":"SingleValueChannel","abstract":[{"type":"text","text":"A channel that emits a single value or an error."}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SingleValueChannel"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel","navigatorTitle":[{"text":"SingleValueChannel","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/RetryByCountStrategy":{"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"RetryStrategy"},{"type":"text","text":" that limits the number of retry attempts."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByCountStrategy","type":"topic","title":"RetryByCountStrategy","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RetryByCountStrategy","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RetryByCountStrategy"}],"url":"\/documentation\/afluent\/retrybycountstrategy"},"doc://Afluent/documentation/Afluent":{"kind":"symbol","role":"collection","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","abstract":[],"type":"topic","url":"\/documentation\/afluent"},"doc://Afluent/documentation/Afluent/Race(cancelAllOnWin:_:against:)":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Race(cancelAllOnWin:_:against:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Race"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"cancelAllOnWin","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":", () "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":", ","kind":"text"},{"text":"against","kind":"externalParam"},{"text":": (() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")...) "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"}],"url":"\/documentation\/afluent\/race(cancelallonwin:_:against:)","abstract":[{"text":"Executes two asynchronous tasks concurrently and returns the result of the first one that completes.","type":"text"}],"title":"Race(cancelAllOnWin:_:against:)","role":"symbol","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence":{"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence","abstract":[{"type":"text","text":"A sequence that represents a single execution of an asynchronous unit of work."}],"title":"AsynchronousUnitOfWorkSequence","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsynchronousUnitOfWorkSequence"}],"navigatorTitle":[{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}],"type":"topic","url":"\/documentation\/afluent\/asynchronousunitofworksequence"},"doc://Afluent/documentation/Afluent/Just":{"title":"Just","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Just"}],"abstract":[],"navigatorTitle":[{"kind":"identifier","text":"Just"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Just","role":"symbol","url":"\/documentation\/afluent\/just","type":"topic","kind":"symbol"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy":{"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"RetryByBackoffStrategy","kind":"identifier"}],"title":"RetryByBackoffStrategy","kind":"symbol","navigatorTitle":[{"text":"RetryByBackoffStrategy","kind":"identifier"}],"role":"symbol","type":"topic","abstract":[{"type":"text","text":"A retry strategy using a specified backoff strategy and clock."}],"url":"\/documentation\/afluent\/retrybybackoffstrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy"},"doc://Afluent/documentation/Afluent/SubscriptionDemand":{"type":"topic","title":"SubscriptionDemand","url":"\/documentation\/afluent\/subscriptiondemand","role":"symbol","abstract":[],"kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SubscriptionDemand"}],"navigatorTitle":[{"text":"SubscriptionDemand","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SubscriptionDemand"},"doc://Afluent/documentation/Afluent/_Concurrency":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency","kind":"symbol","abstract":[],"url":"\/documentation\/afluent\/_concurrency","role":"collection","type":"topic","title":"_Concurrency"},"doc://Afluent/documentation/Afluent/AnyAsyncSequence":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsyncSequence","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AnyAsyncSequence"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyAsyncSequence"}],"url":"\/documentation\/afluent\/anyasyncsequence","abstract":[],"title":"AnyAsyncSequence","role":"symbol","kind":"symbol"},"doc://Afluent/documentation/Afluent/Foundation":{"url":"\/documentation\/afluent\/foundation","type":"topic","title":"Foundation","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Foundation","kind":"symbol","role":"collection","abstract":[]},"doc://Afluent/documentation/Afluent/TimeoutError":{"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"TimeoutError"}],"url":"\/documentation\/afluent\/timeouterror","abstract":[{"text":"An error indicating a timeout has occurred.","type":"text"}],"type":"topic","title":"TimeoutError","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"TimeoutError","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TimeoutError"},"doc://Afluent/documentation/Afluent/SingleValueSubject":{"kind":"symbol","abstract":[{"type":"text","text":"A subject that emits a single value or an error."}],"type":"topic","url":"\/documentation\/afluent\/singlevaluesubject","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueSubject","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"SingleValueSubject","kind":"identifier"}],"navigatorTitle":[{"text":"SingleValueSubject","kind":"identifier"}],"title":"SingleValueSubject","role":"symbol"},"doc://Afluent/documentation/Afluent/UnretainedError":{"role":"symbol","title":"UnretainedError","navigatorTitle":[{"kind":"identifier","text":"UnretainedError"}],"abstract":[],"url":"\/documentation\/afluent\/unretainederror","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/UnretainedError","type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UnretainedError"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/Deferred":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Deferred","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Deferred"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"Deferred","kind":"identifier"}],"url":"\/documentation\/afluent\/deferred","abstract":[],"title":"Deferred","role":"symbol","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsynchronousOperation":{"url":"\/documentation\/afluent\/asynchronousoperation","title":"AsynchronousOperation","navigatorTitle":[{"text":"AsynchronousOperation","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousOperation","kind":"symbol","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Reference to an operation that an operator would execute"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsynchronousOperation"}]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork/share()":{"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/share()","abstract":[{"text":"Shares the upstream ","type":"text"},{"type":"codeVoice","code":"AsynchronousUnitOfWork"},{"type":"text","text":" among multiple downstream subscribers."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"share"},{"text":"() -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","text":"AsynchronousUnitOfWork","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa","text":"Success","kind":"typeIdentifier"},{"text":"> & ","kind":"text"},{"text":"Actor","preciseIdentifier":"s:ScA","kind":"typeIdentifier"}],"role":"symbol","url":"\/documentation\/afluent\/asynchronousunitofwork\/share()","kind":"symbol","title":"share()"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"kind":"symbol","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"AsyncSequences","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"title":"AsyncSequences","role":"symbol","url":"\/documentation\/afluent\/asyncsequences"},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","title":"AnyAsynchronousUnitOfWork","abstract":[{"text":"A unit of work that performs type erasure by wrapping another unit of work.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"AnyAsynchronousUnitOfWork","kind":"identifier"}],"navigatorTitle":[{"text":"AnyAsynchronousUnitOfWork","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/afluent\/anyasynchronousunitofwork","type":"topic","role":"symbol"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"role":"symbol","kind":"symbol","url":"\/documentation\/afluent\/asynchronousunitofwork","title":"AsynchronousUnitOfWork","abstract":[{"text":"Represents an asynchronous unit of work.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWork"}]},"doc://Afluent/documentation/Afluent/TopLevelDecoder":{"kind":"symbol","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TopLevelDecoder","title":"TopLevelDecoder","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"TopLevelDecoder","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"TopLevelDecoder"}],"type":"topic","url":"\/documentation\/afluent\/topleveldecoder"}}}