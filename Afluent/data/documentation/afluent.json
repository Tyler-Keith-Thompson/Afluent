{"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[[]]},"kind":"symbol","variants":[{"paths":["\/documentation\/afluent"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"anchor":"Classes","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AnyCancellable","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousOperation","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/QueueExecutor","doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/RetryByCountStrategy","doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueSubject","doc:\/\/Afluent\/documentation\/Afluent\/TaskState"],"title":"Classes","generated":true},{"title":"Protocols","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","doc:\/\/Afluent\/documentation\/Afluent\/TopLevelDecoder","doc:\/\/Afluent\/documentation\/Afluent\/TopLevelEncoder"],"anchor":"Protocols","generated":true},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence"],"title":"Structures","generated":true,"anchor":"Structures"},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/Race(cancelAllOnWin:_:against:)"],"title":"Functions","generated":true,"anchor":"Functions"},{"title":"Type Aliases","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","doc:\/\/Afluent\/documentation\/Afluent\/AnyAsyncSequence","doc:\/\/Afluent\/documentation\/Afluent\/ClockDurationUnit","doc:\/\/Afluent\/documentation\/Afluent\/Deferred","doc:\/\/Afluent\/documentation\/Afluent\/Just","doc:\/\/Afluent\/documentation\/Afluent\/TimerSequence"],"generated":true,"anchor":"Type-Aliases"},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/SubscriptionDemand","doc:\/\/Afluent\/documentation\/Afluent\/TimeoutError","doc:\/\/Afluent\/documentation\/Afluent\/UnretainedError","doc:\/\/Afluent\/documentation\/Afluent\/Workers"],"anchor":"Enumerations","title":"Enumerations","generated":true},{"anchor":"Extended-Modules","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/Foundation","doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency"],"title":"Extended Modules","generated":true}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent"},"sections":[],"metadata":{"symbolKind":"module","modules":[{"name":"Afluent"}],"roleHeading":"Framework","role":"collection","title":"Afluent","externalID":"Afluent"},"references":{"doc://Afluent/documentation/Afluent/SingleValueSubject":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A subject that emits a single value or an error."}],"navigatorTitle":[{"text":"SingleValueSubject","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SingleValueSubject","kind":"identifier"}],"url":"\/documentation\/afluent\/singlevaluesubject","title":"SingleValueSubject","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueSubject","role":"symbol"},"doc://Afluent/documentation/Afluent/TimeoutError":{"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TimeoutError"}],"navigatorTitle":[{"kind":"identifier","text":"TimeoutError"}],"type":"topic","abstract":[{"text":"An error indicating a timeout has occurred.","type":"text"}],"url":"\/documentation\/afluent\/timeouterror","kind":"symbol","title":"TimeoutError","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TimeoutError","role":"symbol"},"doc://Afluent/documentation/Afluent/AnyAsyncSequence":{"title":"AnyAsyncSequence","url":"\/documentation\/afluent\/anyasyncsequence","abstract":[],"type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyAsyncSequence","kind":"identifier"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnyAsyncSequence"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsyncSequence"},"doc://Afluent/documentation/Afluent":{"url":"\/documentation\/afluent","type":"topic","role":"collection","title":"Afluent","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent","abstract":[]},"doc://Afluent/documentation/Afluent/SingleValueChannel":{"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SingleValueChannel"}],"navigatorTitle":[{"text":"SingleValueChannel","kind":"identifier"}],"title":"SingleValueChannel","abstract":[{"type":"text","text":"A channel that emits a single value or an error."}],"role":"symbol","url":"\/documentation\/afluent\/singlevaluechannel","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel","type":"topic"},"doc://Afluent/documentation/Afluent/UnretainedError":{"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/UnretainedError","kind":"symbol","title":"UnretainedError","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnretainedError"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"UnretainedError"}],"type":"topic","url":"\/documentation\/afluent\/unretainederror"},"doc://Afluent/documentation/Afluent/TimerSequence":{"abstract":[],"navigatorTitle":[{"text":"TimerSequence","kind":"identifier"}],"url":"\/documentation\/afluent\/timersequence","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"TimerSequence"}],"title":"TimerSequence","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TimerSequence","type":"topic","role":"symbol"},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork":{"navigatorTitle":[{"text":"AnyAsynchronousUnitOfWork","kind":"identifier"}],"abstract":[{"text":"A unit of work that performs type erasure by wrapping another unit of work.","type":"text"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","title":"AnyAsynchronousUnitOfWork","kind":"symbol","url":"\/documentation\/afluent\/anyasynchronousunitofwork","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnyAsynchronousUnitOfWork"}]},"doc://Afluent/documentation/Afluent/SerialTaskQueue":{"kind":"symbol","title":"SerialTaskQueue","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","navigatorTitle":[{"text":"SerialTaskQueue","kind":"identifier"}],"url":"\/documentation\/afluent\/serialtaskqueue","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"SerialTaskQueue","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A serial task queue that ensures tasks are executed one at a time."}]},"doc://Afluent/documentation/Afluent/DeferredTask":{"navigatorTitle":[{"text":"DeferredTask","kind":"identifier"}],"abstract":[{"type":"text","text":"A structure representing a deferred asynchronous unit of work."}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","title":"DeferredTask","url":"\/documentation\/afluent\/deferredtask","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"DeferredTask","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/RetryStrategy":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RetryStrategy","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","type":"topic","title":"RetryStrategy","navigatorTitle":[{"kind":"identifier","text":"RetryStrategy"}],"abstract":[{"text":"A strategy for handling errors and determining whether to retry an operation.","type":"text"}],"url":"\/documentation\/afluent\/retrystrategy","role":"symbol"},"doc://Afluent/documentation/Afluent/AnyCancellable":{"abstract":[{"type":"text","text":"Stores an erased unit of work and provides a mechanism to cancel it"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyCancellable","url":"\/documentation\/afluent\/anycancellable","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyCancellable","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnyCancellable"}],"role":"symbol","type":"topic","title":"AnyCancellable"},"doc://Afluent/documentation/Afluent/Workers":{"abstract":[{"text":"A namespace for grouping related asynchronous work operations.","type":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Workers","type":"topic","role":"symbol","navigatorTitle":[{"text":"Workers","kind":"identifier"}],"title":"Workers","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"Workers","kind":"identifier"}],"url":"\/documentation\/afluent\/workers"},"doc://Afluent/documentation/Afluent/AsynchronousOperation":{"kind":"symbol","type":"topic","url":"\/documentation\/afluent\/asynchronousoperation","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsynchronousOperation"}],"role":"symbol","navigatorTitle":[{"text":"AsynchronousOperation","kind":"identifier"}],"title":"AsynchronousOperation","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousOperation","abstract":[{"text":"Reference to an operation that an operator would execute","type":"text"}]},"doc://Afluent/documentation/Afluent/ClockDurationUnit":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ClockDurationUnit","type":"topic","role":"symbol","kind":"symbol","abstract":[],"url":"\/documentation\/afluent\/clockdurationunit","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ClockDurationUnit","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ClockDurationUnit"}],"title":"ClockDurationUnit"},"doc://Afluent/documentation/Afluent/TopLevelDecoder":{"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TopLevelDecoder","kind":"identifier"}],"navigatorTitle":[{"text":"TopLevelDecoder","kind":"identifier"}],"title":"TopLevelDecoder","abstract":[],"role":"symbol","url":"\/documentation\/afluent\/topleveldecoder","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TopLevelDecoder","type":"topic"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache":{"type":"topic","abstract":[],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsynchronousUnitOfWorkCache"}],"role":"symbol","title":"AsynchronousUnitOfWorkCache","url":"\/documentation\/afluent\/asynchronousunitofworkcache","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWorkCache"}]},"doc://Afluent/documentation/Afluent/Race(cancelAllOnWin:_:against:)":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Race(cancelAllOnWin:_:against:)","type":"topic","title":"Race(cancelAllOnWin:_:against:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"Race","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"cancelAllOnWin"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":", () "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"against","kind":"externalParam"},{"text":": (() ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")...) "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/afluent\/race(cancelallonwin:_:against:)","abstract":[{"text":"Executes two asynchronous tasks concurrently and returns the result of the first one that completes.","type":"text"}],"role":"symbol"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy":{"role":"symbol","title":"ExponentialBackoffStrategy","kind":"symbol","url":"\/documentation\/afluent\/exponentialbackoffstrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","type":"topic","abstract":[{"text":"An exponential backoff strategy for retrying operations.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ExponentialBackoffStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"ExponentialBackoffStrategy","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy":{"kind":"symbol","title":"RetryByBackoffStrategy","url":"\/documentation\/afluent\/retrybybackoffstrategy","navigatorTitle":[{"text":"RetryByBackoffStrategy","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RetryByBackoffStrategy","kind":"identifier"}],"abstract":[{"type":"text","text":"A retry strategy using a specified backoff strategy and clock."}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"AsyncSequences","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"title":"AsyncSequences","abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","url":"\/documentation\/afluent\/asyncsequences","type":"topic"},"doc://Afluent/documentation/Afluent/TaskState":{"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"TaskState","kind":"identifier"}],"role":"symbol","url":"\/documentation\/afluent\/taskstate","type":"topic","abstract":[],"navigatorTitle":[{"text":"TaskState","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TaskState","title":"TaskState"},"doc://Afluent/documentation/Afluent/AUOWCache":{"navigatorTitle":[{"text":"AUOWCache","kind":"identifier"}],"abstract":[],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","title":"AUOWCache","kind":"symbol","url":"\/documentation\/afluent\/auowcache","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AUOWCache","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/Foundation":{"type":"topic","url":"\/documentation\/afluent\/foundation","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Foundation","kind":"symbol","abstract":[],"role":"collection","title":"Foundation"},"doc://Afluent/documentation/Afluent/BackoffStrategy":{"kind":"symbol","navigatorTitle":[{"text":"BackoffStrategy","kind":"identifier"}],"title":"BackoffStrategy","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"BackoffStrategy","kind":"identifier"}],"type":"topic","abstract":[{"text":"A protocol for implementing custom backoff strategies in retry mechanisms.","type":"text"}],"url":"\/documentation\/afluent\/backoffstrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","role":"symbol"},"doc://Afluent/documentation/Afluent/Just":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Just","role":"symbol","url":"\/documentation\/afluent\/just","type":"topic","abstract":[],"kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Just"}],"navigatorTitle":[{"text":"Just","kind":"identifier"}],"title":"Just"},"doc://Afluent/documentation/Afluent/_Concurrency":{"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency","url":"\/documentation\/afluent\/_concurrency","kind":"symbol","role":"collection","type":"topic","title":"_Concurrency"},"doc://Afluent/documentation/Afluent/TopLevelEncoder":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TopLevelEncoder"}],"navigatorTitle":[{"text":"TopLevelEncoder","kind":"identifier"}],"role":"symbol","abstract":[],"type":"topic","title":"TopLevelEncoder","kind":"symbol","url":"\/documentation\/afluent\/toplevelencoder","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TopLevelEncoder"},"doc://Afluent/documentation/Afluent/SubscriptionDemand":{"url":"\/documentation\/afluent\/subscriptiondemand","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SubscriptionDemand","kind":"symbol","title":"SubscriptionDemand","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SubscriptionDemand","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"SubscriptionDemand","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence":{"url":"\/documentation\/afluent\/asynchronousunitofworksequence","type":"topic","abstract":[{"type":"text","text":"A sequence that represents a single execution of an asynchronous unit of work."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence","navigatorTitle":[{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}],"title":"AsynchronousUnitOfWorkSequence","kind":"symbol","role":"symbol"},"doc://Afluent/documentation/Afluent/QueueExecutor":{"abstract":[],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/QueueExecutor","type":"topic","url":"\/documentation\/afluent\/queueexecutor","title":"QueueExecutor","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"QueueExecutor","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"QueueExecutor"}]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"abstract":[{"type":"text","text":"Represents an asynchronous unit of work."}],"url":"\/documentation\/afluent\/asynchronousunitofwork","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","navigatorTitle":[{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"role":"symbol","title":"AsynchronousUnitOfWork","type":"topic","kind":"symbol"},"doc://Afluent/documentation/Afluent/RetryByCountStrategy":{"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByCountStrategy","title":"RetryByCountStrategy","url":"\/documentation\/afluent\/retrybycountstrategy","kind":"symbol","abstract":[{"type":"text","text":"A "},{"code":"RetryStrategy","type":"codeVoice"},{"text":" that limits the number of retry attempts.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RetryByCountStrategy","kind":"identifier"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"RetryByCountStrategy"}]},"doc://Afluent/documentation/Afluent/Deferred":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Deferred","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Deferred"}],"url":"\/documentation\/afluent\/deferred","abstract":[],"role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Deferred"}],"title":"Deferred"}}}