{"topicSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AnyCancellable","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousOperation","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/QueueExecutor","doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/RetryByCountStrategy","doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueSubject","doc:\/\/Afluent\/documentation\/Afluent\/TaskState"],"title":"Classes","generated":true,"anchor":"Classes"},{"title":"Protocols","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","doc:\/\/Afluent\/documentation\/Afluent\/TopLevelDecoder","doc:\/\/Afluent\/documentation\/Afluent\/TopLevelEncoder"],"anchor":"Protocols","generated":true},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence"],"anchor":"Structures","title":"Structures","generated":true},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/Race(cancelAllOnWin:_:against:)"],"anchor":"Functions","generated":true,"title":"Functions"},{"title":"Type Aliases","anchor":"Type-Aliases","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","doc:\/\/Afluent\/documentation\/Afluent\/AnyAsyncSequence","doc:\/\/Afluent\/documentation\/Afluent\/ClockDurationUnit","doc:\/\/Afluent\/documentation\/Afluent\/Deferred","doc:\/\/Afluent\/documentation\/Afluent\/Just","doc:\/\/Afluent\/documentation\/Afluent\/TimerSequence"]},{"anchor":"Enumerations","title":"Enumerations","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/SubscriptionDemand","doc:\/\/Afluent\/documentation\/Afluent\/TimeoutError","doc:\/\/Afluent\/documentation\/Afluent\/UnretainedError","doc:\/\/Afluent\/documentation\/Afluent\/Workers"]},{"generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/Foundation","doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency"],"anchor":"Extended-Modules","title":"Extended Modules"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent"},"hierarchy":{"paths":[[]]},"metadata":{"title":"Afluent","role":"collection","symbolKind":"module","modules":[{"name":"Afluent"}],"externalID":"Afluent","roleHeading":"Framework"},"sections":[],"variants":[{"paths":["\/documentation\/afluent"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","references":{"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsynchronousUnitOfWorkSequence"}],"title":"AsynchronousUnitOfWorkSequence","url":"\/documentation\/afluent\/asynchronousunitofworksequence","type":"topic","navigatorTitle":[{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence","role":"symbol","abstract":[{"text":"A sequence that represents a single execution of an asynchronous unit of work.","type":"text"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/UnretainedError":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/UnretainedError","role":"symbol","title":"UnretainedError","kind":"symbol","url":"\/documentation\/afluent\/unretainederror","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnretainedError"}],"abstract":[],"navigatorTitle":[{"text":"UnretainedError","kind":"identifier"}],"type":"topic"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy":{"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ExponentialBackoffStrategy"}],"abstract":[{"text":"An exponential backoff strategy for retrying operations.","type":"text"}],"navigatorTitle":[{"text":"ExponentialBackoffStrategy","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","kind":"symbol","title":"ExponentialBackoffStrategy","type":"topic","url":"\/documentation\/afluent\/exponentialbackoffstrategy"},"doc://Afluent/documentation/Afluent/QueueExecutor":{"abstract":[],"role":"symbol","navigatorTitle":[{"text":"QueueExecutor","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/QueueExecutor","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"QueueExecutor"}],"kind":"symbol","title":"QueueExecutor","url":"\/documentation\/afluent\/queueexecutor","type":"topic"},"doc://Afluent/documentation/Afluent/Race(cancelAllOnWin:_:against:)":{"title":"Race(cancelAllOnWin:_:against:)","url":"\/documentation\/afluent\/race(cancelallonwin:_:against:)","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Race(cancelAllOnWin:_:against:)","abstract":[{"type":"text","text":"Executes two asynchronous tasks concurrently and returns the result of the first one that completes."}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"Race","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"cancelAllOnWin"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":", () ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"against","kind":"externalParam"},{"kind":"text","text":": (() "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"text":")...) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/BackoffStrategy":{"abstract":[{"type":"text","text":"A protocol for implementing custom backoff strategies in retry mechanisms."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","role":"symbol","type":"topic","kind":"symbol","title":"BackoffStrategy","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"BackoffStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"BackoffStrategy"}],"url":"\/documentation\/afluent\/backoffstrategy"},"doc://Afluent/documentation/Afluent/SingleValueSubject":{"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueSubject","role":"symbol","title":"SingleValueSubject","url":"\/documentation\/afluent\/singlevaluesubject","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SingleValueSubject","kind":"identifier"}],"abstract":[{"text":"A subject that emits a single value or an error.","type":"text"}],"type":"topic","navigatorTitle":[{"text":"SingleValueSubject","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"abstract":[{"text":"Represents an asynchronous unit of work.","type":"text"}],"type":"topic","title":"AsynchronousUnitOfWork","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","kind":"symbol","url":"\/documentation\/afluent\/asynchronousunitofwork","navigatorTitle":[{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWork","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/TimeoutError":{"navigatorTitle":[{"text":"TimeoutError","kind":"identifier"}],"type":"topic","kind":"symbol","abstract":[{"text":"An error indicating a timeout has occurred.","type":"text"}],"title":"TimeoutError","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"TimeoutError","kind":"identifier"}],"url":"\/documentation\/afluent\/timeouterror","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TimeoutError","role":"symbol"},"doc://Afluent/documentation/Afluent/AnyCancellable":{"type":"topic","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyCancellable","title":"AnyCancellable","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyCancellable"}],"abstract":[{"text":"Stores an erased unit of work and provides a mechanism to cancel it","type":"text"}],"url":"\/documentation\/afluent\/anycancellable","navigatorTitle":[{"kind":"identifier","text":"AnyCancellable"}],"role":"symbol"},"doc://Afluent/documentation/Afluent/TaskState":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TaskState","kind":"symbol","url":"\/documentation\/afluent\/taskstate","title":"TaskState","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"TaskState"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TaskState","kind":"identifier"}],"abstract":[],"type":"topic"},"doc://Afluent/documentation/Afluent/AUOWCache":{"title":"AUOWCache","type":"topic","abstract":[],"role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AUOWCache"}],"url":"\/documentation\/afluent\/auowcache","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","navigatorTitle":[{"kind":"identifier","text":"AUOWCache"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/SubscriptionDemand":{"navigatorTitle":[{"text":"SubscriptionDemand","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SubscriptionDemand","abstract":[],"type":"topic","url":"\/documentation\/afluent\/subscriptiondemand","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SubscriptionDemand"}],"kind":"symbol","title":"SubscriptionDemand"},"doc://Afluent/documentation/Afluent/RetryStrategy":{"abstract":[{"type":"text","text":"A strategy for handling errors and determining whether to retry an operation."}],"title":"RetryStrategy","type":"topic","role":"symbol","url":"\/documentation\/afluent\/retrystrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","navigatorTitle":[{"text":"RetryStrategy","kind":"identifier"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"RetryStrategy","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/Foundation":{"abstract":[],"kind":"symbol","title":"Foundation","role":"collection","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Foundation","url":"\/documentation\/afluent\/foundation"},"doc://Afluent/documentation/Afluent/DeferredTask":{"title":"DeferredTask","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DeferredTask"}],"url":"\/documentation\/afluent\/deferredtask","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DeferredTask"}],"role":"symbol","abstract":[{"type":"text","text":"A structure representing a deferred asynchronous unit of work."}]},"doc://Afluent/documentation/Afluent/_Concurrency":{"kind":"symbol","role":"collection","title":"_Concurrency","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency","abstract":[],"type":"topic","url":"\/documentation\/afluent\/_concurrency"},"doc://Afluent/documentation/Afluent/Just":{"navigatorTitle":[{"text":"Just","kind":"identifier"}],"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Just","title":"Just","url":"\/documentation\/afluent\/just","role":"symbol","type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Just"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"role":"symbol","kind":"symbol","url":"\/documentation\/afluent\/asyncsequences","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequences"}],"navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}],"title":"AsyncSequences","abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences"},"doc://Afluent/documentation/Afluent/Deferred":{"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"Deferred","kind":"identifier"}],"abstract":[],"type":"topic","kind":"symbol","navigatorTitle":[{"text":"Deferred","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Deferred","url":"\/documentation\/afluent\/deferred","title":"Deferred","role":"symbol"},"doc://Afluent/documentation/Afluent/TopLevelEncoder":{"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TopLevelEncoder","role":"symbol","title":"TopLevelEncoder","url":"\/documentation\/afluent\/toplevelencoder","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"TopLevelEncoder","kind":"identifier"}],"abstract":[],"type":"topic","navigatorTitle":[{"text":"TopLevelEncoder","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/SerialTaskQueue":{"title":"SerialTaskQueue","url":"\/documentation\/afluent\/serialtaskqueue","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","abstract":[{"type":"text","text":"A serial task queue that ensures tasks are executed one at a time."}],"role":"symbol","navigatorTitle":[{"text":"SerialTaskQueue","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SerialTaskQueue"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache":{"role":"symbol","navigatorTitle":[{"text":"AsynchronousUnitOfWorkCache","kind":"identifier"}],"type":"topic","url":"\/documentation\/afluent\/asynchronousunitofworkcache","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","abstract":[],"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWorkCache","kind":"identifier"}],"title":"AsynchronousUnitOfWorkCache"},"doc://Afluent/documentation/Afluent/Workers":{"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"Workers","kind":"identifier"}],"abstract":[{"type":"text","text":"A namespace for grouping related asynchronous work operations."}],"title":"Workers","navigatorTitle":[{"text":"Workers","kind":"identifier"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Workers","role":"symbol","url":"\/documentation\/afluent\/workers"},"doc://Afluent/documentation/Afluent/TopLevelDecoder":{"abstract":[],"navigatorTitle":[{"text":"TopLevelDecoder","kind":"identifier"}],"url":"\/documentation\/afluent\/topleveldecoder","title":"TopLevelDecoder","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TopLevelDecoder","role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"TopLevelDecoder","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/RetryByCountStrategy":{"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"RetryStrategy"},{"type":"text","text":" that limits the number of retry attempts."}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"RetryByCountStrategy","kind":"identifier"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByCountStrategy","navigatorTitle":[{"text":"RetryByCountStrategy","kind":"identifier"}],"title":"RetryByCountStrategy","url":"\/documentation\/afluent\/retrybycountstrategy","role":"symbol"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RetryByBackoffStrategy","kind":"identifier"}],"url":"\/documentation\/afluent\/retrybybackoffstrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","kind":"symbol","role":"symbol","title":"RetryByBackoffStrategy","type":"topic","abstract":[{"text":"A retry strategy using a specified backoff strategy and clock.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"RetryByBackoffStrategy"}]},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","url":"\/documentation\/afluent\/anyasynchronousunitofwork","type":"topic","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"AnyAsynchronousUnitOfWork","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyAsynchronousUnitOfWork"}],"abstract":[{"text":"A unit of work that performs type erasure by wrapping another unit of work.","type":"text"}],"title":"AnyAsynchronousUnitOfWork"},"doc://Afluent/documentation/Afluent":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent","abstract":[],"kind":"symbol","title":"Afluent","url":"\/documentation\/afluent","role":"collection","type":"topic"},"doc://Afluent/documentation/Afluent/AnyAsyncSequence":{"title":"AnyAsyncSequence","url":"\/documentation\/afluent\/anyasyncsequence","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsyncSequence","abstract":[],"role":"symbol","navigatorTitle":[{"text":"AnyAsyncSequence","kind":"identifier"}],"fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"AnyAsyncSequence","kind":"identifier"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/SingleValueChannel":{"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel","role":"symbol","title":"SingleValueChannel","url":"\/documentation\/afluent\/singlevaluechannel","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"SingleValueChannel","kind":"identifier"}],"abstract":[{"text":"A channel that emits a single value or an error.","type":"text"}],"type":"topic","navigatorTitle":[{"text":"SingleValueChannel","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsynchronousOperation":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousOperation","type":"topic","abstract":[{"type":"text","text":"Reference to an operation that an operator would execute"}],"url":"\/documentation\/afluent\/asynchronousoperation","title":"AsynchronousOperation","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsynchronousOperation"}],"kind":"symbol","navigatorTitle":[{"text":"AsynchronousOperation","kind":"identifier"}],"role":"symbol"},"doc://Afluent/documentation/Afluent/TimerSequence":{"fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"TimerSequence","kind":"identifier"}],"abstract":[],"title":"TimerSequence","navigatorTitle":[{"text":"TimerSequence","kind":"identifier"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TimerSequence","role":"symbol","url":"\/documentation\/afluent\/timersequence"},"doc://Afluent/documentation/Afluent/ClockDurationUnit":{"title":"ClockDurationUnit","url":"\/documentation\/afluent\/clockdurationunit","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ClockDurationUnit","abstract":[],"role":"symbol","navigatorTitle":[{"text":"ClockDurationUnit","kind":"identifier"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ClockDurationUnit"}],"kind":"symbol"}}}