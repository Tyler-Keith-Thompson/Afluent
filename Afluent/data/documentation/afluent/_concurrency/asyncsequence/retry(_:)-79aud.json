{"abstract":[{"text":"Retries the upstream ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" up to a specified number of times."}],"metadata":{"title":"retry(_:)","extendedModule":"_Concurrency","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" and "},{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"retry","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"text":") -> ","kind":"text"},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO5RetryC","text":"Retry","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"RetryByCountStrategy","preciseIdentifier":"s:7Afluent20RetryByCountStrategyC"},{"text":">","kind":"text"}],"modules":[{"name":"Afluent","relatedModules":["_Concurrency"]}],"role":"symbol","roleHeading":"Instance Method","externalID":"s:Sci7Afluents8SendableRzsAB7ElementRpzrlE5retryyAA14AsyncSequencesO5RetryCy_xAA0G15ByCountStrategyCGSuF","symbolKind":"method","remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/RetrySequence.swift#L173","fileName":"RetrySequence.swift"}},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency","doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency\/AsyncSequence"]]},"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"retry"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"retries","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":" = 1) -> ","kind":"text"},{"kind":"typeIdentifier","text":"AsyncSequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"text":"Retry","preciseIdentifier":"s:7Afluent14AsyncSequencesO5RetryC","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Retry"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByCountStrategy","preciseIdentifier":"s:7Afluent20RetryByCountStrategyC","text":"RetryByCountStrategy","kind":"typeIdentifier"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"The maximum number of times to retry the upstream, defaulting to 1.","type":"text"}],"type":"paragraph"}],"name":"retries"}]},{"content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"inlineContent":[{"text":"An ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"text":" that emits the same output as the upstream but retries on failure up to the specified number of times.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"type":"aside","content":[{"inlineContent":[{"text":"Not every ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" can be retried, for this to work the sequence has to implement an iterator that doesnâ€™t preserve state across various creations."}],"type":"paragraph"}],"name":"Important","style":"important"},{"name":"Note","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"AsyncStream"},{"type":"text","text":" and "},{"code":"AsyncThrowingStream","type":"codeVoice"},{"text":" are notable sequences which cannot be retried on their own.","type":"text"}]}],"type":"aside","style":"note"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/_concurrency\/asyncsequence\/retry(_:)-79aud"]}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency\/AsyncSequence\/retry(_:)-79aud","interfaceLanguage":"swift"},"sections":[],"references":{"doc://Afluent/documentation/Afluent/_Concurrency/AsyncSequence":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency\/AsyncSequence","abstract":[],"role":"symbol","fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:Sci","text":"AsyncSequence","kind":"identifier"}],"navigatorTitle":[{"text":"AsyncSequence","kind":"identifier"}],"kind":"symbol","title":"AsyncSequence","url":"\/documentation\/afluent\/_concurrency\/asyncsequence","type":"topic"},"doc://Afluent/documentation/Afluent":{"abstract":[],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent","title":"Afluent","url":"\/documentation\/afluent","type":"topic","role":"collection"},"doc://Afluent/documentation/Afluent/RetryByCountStrategy":{"type":"topic","role":"symbol","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"RetryStrategy"},{"type":"text","text":" that limits the number of retry attempts."}],"kind":"symbol","url":"\/documentation\/afluent\/retrybycountstrategy","title":"RetryByCountStrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByCountStrategy","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RetryByCountStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"RetryByCountStrategy"}]},"doc://Afluent/documentation/Afluent/AsyncSequences":{"abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"AsyncSequences","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences","navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}],"type":"topic","title":"AsyncSequences","role":"symbol","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences"},"doc://Afluent/documentation/Afluent/AsyncSequences/Retry":{"navigatorTitle":[{"kind":"identifier","text":"Retry"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Retry","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Retry","abstract":[],"kind":"symbol","role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/retry","title":"AsyncSequences.Retry","type":"topic"},"doc://Afluent/documentation/Afluent/_Concurrency":{"title":"_Concurrency","role":"collection","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency","kind":"symbol","type":"topic","url":"\/documentation\/afluent\/_concurrency","abstract":[]},"doc://Afluent/documentation/Afluent/_Concurrency/AsyncSequence/retry(_:)-79aud":{"title":"retry(_:)","role":"symbol","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency\/AsyncSequence\/retry(_:)-79aud","url":"\/documentation\/afluent\/_concurrency\/asyncsequence\/retry(_:)-79aud","kind":"symbol","abstract":[{"type":"text","text":"Retries the upstream "},{"type":"codeVoice","code":"AsyncSequence"},{"text":" up to a specified number of times.","type":"text"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"text":" and ","type":"text"},{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}]},"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"retry","kind":"identifier"},{"text":"(","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Retry","preciseIdentifier":"s:7Afluent14AsyncSequencesO5RetryC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent20RetryByCountStrategyC","text":"RetryByCountStrategy"},{"text":">","kind":"text"}]}}}