{"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork"]]},"abstract":[{"text":"Type-erases this unit of work to ","type":"text"},{"type":"codeVoice","code":"AnyAsynchronousUnitOfWork"},{"text":", hiding its concrete type.","type":"text"}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyUnitOfWork","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AnyAsynchronousUnitOfWork","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent25AnyAsynchronousUnitOfWorkV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Success","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/Success","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa"},{"text":">","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"type":"codeVoice","code":"AnyAsynchronousUnitOfWork"},{"type":"text","text":" that wraps this unit of work."}]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"text":"Use this method when you need to store or pass around an ","type":"text"},{"code":"AsynchronousUnitOfWork","type":"codeVoice"},{"text":" without exposing its underlying type, such as when collecting heterogeneous unit of work instances in a single array.","type":"text"}],"type":"paragraph"},{"text":"Example","anchor":"Example","type":"heading","level":2},{"code":["struct User: Sendable {}","let original: some AsynchronousUnitOfWork<User> = DeferredTask { User() }","let erased: AnyAsynchronousUnitOfWork<User> = original.eraseToAnyUnitOfWork()","\/\/ 'erased' can now be used wherever a concrete type is needed."],"type":"codeListing","syntax":"swift"}]}],"metadata":{"roleHeading":"Instance Method","title":"eraseToAnyUnitOfWork()","role":"symbol","remoteSource":{"fileName":"EraseToAnyAsynchronousUnitOfWork.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/Workers\/EraseToAnyAsynchronousUnitOfWork.swift#L75"},"modules":[{"name":"Afluent"}],"extendedModule":"Afluent","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"eraseToAnyUnitOfWork"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"AnyAsynchronousUnitOfWork","preciseIdentifier":"s:7Afluent25AnyAsynchronousUnitOfWorkV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Success","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa"},{"kind":"text","text":">"}],"externalID":"s:7Afluent22AsynchronousUnitOfWorkPAAE010eraseToAnycdE0AA0hbcdE0Vy7SuccessQzGyF::SYNTHESIZED::s:7Afluent25AnyAsynchronousUnitOfWorkV"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/anyasynchronousunitofwork\/erasetoanyunitofwork()"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/eraseToAnyUnitOfWork()"},"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://Afluent/documentation/Afluent":{"title":"Afluent","url":"\/documentation\/afluent","role":"collection","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol","abstract":[]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork/Success":{"type":"topic","required":true,"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Success","kind":"identifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"}],"kind":"symbol","abstract":[{"text":"The type of data the unit of work will produce if it succeeds.","type":"text"}],"url":"\/documentation\/afluent\/asynchronousunitofwork\/success","title":"Success","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/Success","role":"symbol"},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","url":"\/documentation\/afluent\/anyasynchronousunitofwork","title":"AnyAsynchronousUnitOfWork","abstract":[{"type":"text","text":"A unit of work that performs type erasure by wrapping another unit of work."}],"role":"symbol","kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyAsynchronousUnitOfWork","kind":"identifier"}],"navigatorTitle":[{"text":"AnyAsynchronousUnitOfWork","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork/eraseToAnyUnitOfWork()":{"kind":"symbol","url":"\/documentation\/afluent\/anyasynchronousunitofwork\/erasetoanyunitofwork()","title":"eraseToAnyUnitOfWork()","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/eraseToAnyUnitOfWork()","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Type-erases this unit of work to "},{"code":"AnyAsynchronousUnitOfWork","type":"codeVoice"},{"type":"text","text":", hiding its concrete type."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyUnitOfWork","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent25AnyAsynchronousUnitOfWorkV","text":"AnyAsynchronousUnitOfWork","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa","text":"Success","kind":"typeIdentifier"},{"text":">","kind":"text"}]}}}