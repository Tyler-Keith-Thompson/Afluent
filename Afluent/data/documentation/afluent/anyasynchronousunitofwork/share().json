{"abstract":[{"text":"Shares the result of this unit of work among multiple subscribers, ensuring the upstream operation is only performed once.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/AsynchronousUnitOfWork-Implementations"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"modules":[{"name":"Afluent"}],"title":"share()","remoteSource":{"fileName":"Share.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/Workers\/Share.swift#L67"},"extendedModule":"Afluent","roleHeading":"Instance Method","role":"symbol","externalID":"s:7Afluent22AsynchronousUnitOfWorkPAAE5shareQryF::SYNTHESIZED::s:7Afluent25AnyAsynchronousUnitOfWorkV","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"share","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWork","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Success","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa"},{"text":"> & ","kind":"text"},{"text":"Actor","kind":"typeIdentifier","preciseIdentifier":"s:ScA"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/share()"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/anyasynchronousunitofwork\/share()"]}],"sections":[],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"share"},{"kind":"text","text":"() -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","text":"AsynchronousUnitOfWork"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/Success","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa","text":"Success"},{"kind":"text","text":"> & "},{"kind":"typeIdentifier","preciseIdentifier":"s:ScA","text":"Actor"},{"kind":"text","text":"\n"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"inlineContent":[{"text":"An ","type":"text"},{"type":"codeVoice","code":"AsynchronousUnitOfWork"},{"text":" that shares a single execution among all subscribers.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"text":"Use this operator to avoid duplicate work when multiple parts of your code need the result of the same asynchronous operation.","type":"text"}],"type":"paragraph"},{"anchor":"Example","level":2,"text":"Example","type":"heading"},{"syntax":null,"code":["let sharedTask = DeferredTask { UUID() }","    .share()","","async let value1 = sharedTask.execute()","async let value2 = sharedTask.execute()","let (a, b) = try await (value1, value2)","\/\/ 'a' and 'b' are guaranteed to be the same UUID instance"],"type":"codeListing"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The upstream operation runs only once, regardless of the number of calls to "},{"type":"codeVoice","code":"execute()"},{"type":"text","text":"."}]}],"name":"Note","style":"note","type":"aside"}]}],"references":{"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork/share()":{"type":"topic","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"share"},{"kind":"text","text":"() -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","text":"AsynchronousUnitOfWork"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa","text":"Success"},{"kind":"text","text":"> & "},{"kind":"typeIdentifier","preciseIdentifier":"s:ScA","text":"Actor"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/share()","title":"share()","url":"\/documentation\/afluent\/anyasynchronousunitofwork\/share()","abstract":[{"type":"text","text":"Shares the result of this unit of work among multiple subscribers, ensuring the upstream operation is only performed once."}]},"doc://Afluent/documentation/Afluent":{"abstract":[],"url":"\/documentation\/afluent","role":"collection","type":"topic","kind":"symbol","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent"},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork/AsynchronousUnitOfWork-Implementations":{"kind":"article","abstract":[],"type":"topic","title":"AsynchronousUnitOfWork Implementations","role":"collectionGroup","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/AsynchronousUnitOfWork-Implementations","url":"\/documentation\/afluent\/anyasynchronousunitofwork\/asynchronousunitofwork-implementations"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork/Success":{"required":true,"abstract":[{"text":"The type of data the unit of work will produce if it succeeds.","type":"text"}],"role":"symbol","title":"Success","url":"\/documentation\/afluent\/asynchronousunitofwork\/success","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/Success","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Success","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Sendable","preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier"}],"type":"topic"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"role":"symbol","title":"AsynchronousUnitOfWork","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","url":"\/documentation\/afluent\/asynchronousunitofwork","navigatorTitle":[{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"abstract":[{"type":"text","text":"Represents an asynchronous unit of work."}],"type":"topic"},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork":{"navigatorTitle":[{"kind":"identifier","text":"AnyAsynchronousUnitOfWork"}],"kind":"symbol","type":"topic","title":"AnyAsynchronousUnitOfWork","abstract":[{"text":"A unit of work that performs type erasure by wrapping another unit of work.","type":"text"}],"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyAsynchronousUnitOfWork"}],"url":"\/documentation\/afluent\/anyasynchronousunitofwork"}}}