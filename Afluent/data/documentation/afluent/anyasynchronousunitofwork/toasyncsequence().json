{"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/anyasynchronousunitofwork\/toasyncsequence()"]}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"toAsyncSequence","kind":"identifier"},{"text":"() -> ","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence","text":"AsynchronousUnitOfWorkSequence","preciseIdentifier":"s:7Afluent30AsynchronousUnitOfWorkSequenceV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}]}]},{"kind":"content","content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"inlineContent":[{"type":"text","text":"An "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" that emits the operationâ€™s result and then completes."}],"type":"paragraph"}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use this operator to integrate single-value asynchronous operations into sequence-based workflows, or to use sequence algorithms and idioms with a single result."}]},{"type":"heading","anchor":"Example","level":2,"text":"Example"},{"type":"codeListing","code":["for try await value in DeferredTask { 42 }.toAsyncSequence() {","    print(value) \/\/ prints 42","}"],"syntax":"swift"},{"type":"aside","style":"note","name":"Note","content":[{"inlineContent":[{"text":"The sequence emits one value if the operation succeeds or fails if the operation throws.","type":"text"}],"type":"paragraph"}]}]}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/toAsyncSequence()"},"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"toAsyncSequence"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent30AsynchronousUnitOfWorkSequenceV","text":"AsynchronousUnitOfWorkSequence"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"title":"toAsyncSequence()","modules":[{"name":"Afluent"}],"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/Workers\/ToAsyncSequence.swift#L75","fileName":"ToAsyncSequence.swift"},"roleHeading":"Instance Method","externalID":"s:7Afluent22AsynchronousUnitOfWorkPAAE15toAsyncSequenceAA0bcdeH0VyxGyF::SYNTHESIZED::s:7Afluent25AnyAsynchronousUnitOfWorkV","symbolKind":"method","role":"symbol","extendedModule":"Afluent"},"abstract":[{"text":"Converts this asynchronous unit of work into an ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"text":" that emits a single value and then completes.","type":"text"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://Afluent/documentation/Afluent":{"title":"Afluent","url":"\/documentation\/afluent","role":"collection","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol","abstract":[]},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","url":"\/documentation\/afluent\/anyasynchronousunitofwork","title":"AnyAsynchronousUnitOfWork","abstract":[{"type":"text","text":"A unit of work that performs type erasure by wrapping another unit of work."}],"role":"symbol","kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyAsynchronousUnitOfWork","kind":"identifier"}],"navigatorTitle":[{"text":"AnyAsynchronousUnitOfWork","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork/toAsyncSequence()":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/toAsyncSequence()","title":"toAsyncSequence()","abstract":[{"text":"Converts this asynchronous unit of work into an ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"text":" that emits a single value and then completes.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"toAsyncSequence","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AsynchronousUnitOfWorkSequence","preciseIdentifier":"s:7Afluent30AsynchronousUnitOfWorkSequenceV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","role":"symbol","url":"\/documentation\/afluent\/anyasynchronousunitofwork\/toasyncsequence()","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence":{"kind":"symbol","url":"\/documentation\/afluent\/asynchronousunitofworksequence","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}],"type":"topic","title":"AsynchronousUnitOfWorkSequence","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence","navigatorTitle":[{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}],"abstract":[{"text":"A sequence that represents a single execution of an asynchronous unit of work.","type":"text"}],"role":"symbol"}}}