{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/anyasynchronousunitofwork\/tostream()"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/toStream()","interfaceLanguage":"swift"},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This stream was replaced with a custom AsyncSequence which behaves better"}]}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/AsynchronousUnitOfWork-Implementations"]]},"sections":[],"metadata":{"externalID":"s:7Afluent22AsynchronousUnitOfWorkPAAE8toStreamScsy7SuccessQzs5Error_pGyF::SYNTHESIZED::s:7Afluent25AnyAsynchronousUnitOfWorkV","platforms":[],"modules":[{"name":"Afluent"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"toStream","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:Scs","kind":"typeIdentifier","text":"AsyncThrowingStream"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Success","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa","kind":"typeIdentifier"},{"kind":"text","text":", any "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"text":">","kind":"text"}],"role":"symbol","title":"toStream()","roleHeading":"Instance Method","extendedModule":"Afluent","symbolKind":"method","remoteSource":{"fileName":"ToAsyncSequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/Workers\/ToAsyncSequence.swift#L48"}},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"toStream"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:Scs","text":"AsyncThrowingStream","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Success","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/Success","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa"},{"kind":"text","text":", any "},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":">","kind":"text"}],"platforms":["macOS"]}]},{"content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"items":[{"content":[{"inlineContent":[{"text":"Deprecated: This stream was replaced with a custom ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" which behaves better."}],"type":"paragraph"}]}],"type":"unorderedList"}],"kind":"content"}],"abstract":[{"text":"Converts the asynchronous unit of work into an ","type":"text"},{"type":"codeVoice","code":"AsyncThrowingStream"},{"text":".","type":"text"}],"kind":"symbol","references":{"doc://Afluent/documentation/Afluent":{"abstract":[],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent","title":"Afluent","url":"\/documentation\/afluent","type":"topic","role":"collection"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork/Success":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/Success","required":true,"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Success"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier","text":"Sendable"}],"url":"\/documentation\/afluent\/asynchronousunitofwork\/success","title":"Success","kind":"symbol","type":"topic","role":"symbol","abstract":[{"text":"The type of data the unit of work will produce if it succeeds.","type":"text"}]},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork/toStream()":{"abstract":[{"type":"text","text":"Converts the asynchronous unit of work into an "},{"code":"AsyncThrowingStream","type":"codeVoice"},{"text":".","type":"text"}],"title":"toStream()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"toStream","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:Scs","text":"AsyncThrowingStream","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa","text":"Success","kind":"typeIdentifier"},{"kind":"text","text":", any "},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"kind":"text","text":">"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/toStream()","role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/afluent\/anyasynchronousunitofwork\/tostream()","deprecated":true},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork":{"abstract":[{"text":"A unit of work that performs type erasure by wrapping another unit of work.","type":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","kind":"symbol","title":"AnyAsynchronousUnitOfWork","role":"symbol","navigatorTitle":[{"text":"AnyAsynchronousUnitOfWork","kind":"identifier"}],"url":"\/documentation\/afluent\/anyasynchronousunitofwork","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnyAsynchronousUnitOfWork"}],"type":"topic"},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork/AsynchronousUnitOfWork-Implementations":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/AsynchronousUnitOfWork-Implementations","url":"\/documentation\/afluent\/anyasynchronousunitofwork\/asynchronousunitofwork-implementations","title":"AsynchronousUnitOfWork Implementations","kind":"article","type":"topic","role":"collectionGroup","abstract":[]}}}