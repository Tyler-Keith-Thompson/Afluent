{"metadata":{"modules":[{"name":"Afluent"}],"role":"collectionGroup","title":"AsyncIteratorProtocol Implementations","roleHeading":"API Collection"},"sections":[],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncBroadcastSequence","doc:\/\/Afluent\/documentation\/Afluent\/AsyncBroadcastSequence\/Iterator"]]},"topicSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncBroadcastSequence\/Iterator\/next(isolation:)"],"title":"Instance Methods","generated":true,"anchor":"Instance-Methods"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asyncbroadcastsequence\/iterator\/asynciteratorprotocol-implementations"]}],"kind":"article","identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncBroadcastSequence\/Iterator\/AsyncIteratorProtocol-Implementations","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://Afluent/documentation/Afluent":{"abstract":[],"url":"\/documentation\/afluent","role":"collection","type":"topic","kind":"symbol","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent"},"doc://Afluent/documentation/Afluent/AsyncBroadcastSequence/Iterator":{"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncBroadcastSequence\/Iterator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Iterator"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Iterator"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":", "},{"type":"codeVoice","code":"Base"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Base.Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}]},"abstract":[],"title":"AsyncBroadcastSequence.Iterator","kind":"symbol","url":"\/documentation\/afluent\/asyncbroadcastsequence\/iterator"},"doc://Afluent/documentation/Afluent/AsyncBroadcastSequence":{"title":"AsyncBroadcastSequence","abstract":[{"text":"An async sequence that multicasts elements from an upstream sequence to multiple concurrent consumers.","type":"text"}],"role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncBroadcastSequence","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncBroadcastSequence","navigatorTitle":[{"text":"AsyncBroadcastSequence","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/afluent\/asyncbroadcastsequence"},"doc://Afluent/documentation/Afluent/AsyncBroadcastSequence/Iterator/next(isolation:)":{"abstract":[],"url":"\/documentation\/afluent\/asyncbroadcastsequence\/iterator\/next(isolation:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"next","kind":"identifier"},{"text":"(","kind":"text"},{"text":"isolation","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"isolated","kind":"keyword"},{"text":" (any ","kind":"text"},{"text":"Actor","kind":"typeIdentifier","preciseIdentifier":"s:ScA"},{"text":")?) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ScI7FailureQa","text":"Failure","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ScI7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"role":"symbol","title":"next(isolation:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncBroadcastSequence\/Iterator\/next(isolation:)","kind":"symbol"}}}