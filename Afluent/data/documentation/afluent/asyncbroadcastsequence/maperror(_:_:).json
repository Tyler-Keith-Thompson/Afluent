{"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"mapError","kind":"identifier"},{"text":"<","kind":"text"},{"text":"E","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"error","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"transform","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (any ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":") -> any ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":") -> ","kind":"text"},{"text":"AsyncSequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"text":"MapError","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/MapError","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO8MapErrorV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Equatable","kind":"typeIdentifier","preciseIdentifier":"s:SQ"},{"text":", ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"type":"heading","text":"Example","anchor":"Example","level":2},{"syntax":"swift","type":"codeListing","code":["enum NetworkError: Error, Equatable { case timeout }","enum UserError: Error { case displayMessage(String) }","let throwing = Just(1).map { _ in throw NetworkError.timeout }","for try await _ in throwing.mapError(NetworkError.timeout) { _ in UserError.displayMessage(\"Request timed out\") } {","    \/\/ Will throw UserError.displayMessage(\"Request timed out\") if the error matched","}"]}]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncBroadcastSequence\/mapError(_:_:)"},"abstract":[{"text":"Transforms a specific error value produced by the sequence using the provided closure.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asyncbroadcastsequence\/maperror(_:_:)"]}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncBroadcastSequence","doc:\/\/Afluent\/documentation\/Afluent\/AsyncBroadcastSequence\/AsyncSequence-Implementations"]]},"metadata":{"role":"symbol","modules":[{"name":"Afluent","relatedModules":["_Concurrency"]}],"symbolKind":"method","extendedModule":"_Concurrency","roleHeading":"Instance Method","externalID":"s:Sci7Afluents8SendableRzrlE8mapErroryAA14AsyncSequencesO03MapD0Vy_xGqd___s0D0_psAI_pYbctSQRd__sAIRd__lF::SYNTHESIZED::s:7Afluent22AsyncBroadcastSequenceV","title":"mapError(_:_:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"mapError","kind":"identifier"},{"text":"<","kind":"text"},{"text":"E","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":", (any ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":") -> any ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":") -> ","kind":"text"},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"text":"MapError","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO8MapErrorV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"remoteSource":{"fileName":"MapErrorSequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/MapErrorSequence.swift#L75"}},"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://Afluent/documentation/Afluent/AsyncSequences":{"abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"type":"topic","title":"AsyncSequences","url":"\/documentation\/afluent\/asyncsequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequences"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/MapError":{"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MapError"}],"title":"AsyncSequences.MapError","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"MapError"}],"url":"\/documentation\/afluent\/asyncsequences\/maperror","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/MapError","role":"symbol","abstract":[{"type":"text","text":"Used as the implementation detail for the "},{"code":"AsyncSequence\/mapError(_:)","type":"codeVoice"},{"type":"text","text":" operator."}]},"doc://Afluent/documentation/Afluent/AsyncBroadcastSequence":{"kind":"symbol","abstract":[{"type":"text","text":"An async sequence that multicasts elements from an upstream sequence to multiple concurrent consumers."}],"navigatorTitle":[{"text":"AsyncBroadcastSequence","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncbroadcastsequence","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncBroadcastSequence","kind":"identifier"}],"title":"AsyncBroadcastSequence","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncBroadcastSequence","type":"topic"},"doc://Afluent/documentation/Afluent":{"type":"topic","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","abstract":[],"url":"\/documentation\/afluent","role":"collection","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncBroadcastSequence/mapError(_:_:)":{"title":"mapError(_:_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"mapError","kind":"identifier"},{"text":"<","kind":"text"},{"text":"E","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":", (any ","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":") -> any ","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"MapError","preciseIdentifier":"s:7Afluent14AsyncSequencesO8MapErrorV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncBroadcastSequence\/mapError(_:_:)","abstract":[{"type":"text","text":"Transforms a specific error value produced by the sequence using the provided closure."}],"type":"topic","url":"\/documentation\/afluent\/asyncbroadcastsequence\/maperror(_:_:)","role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}},"doc://Afluent/documentation/Afluent/AsyncBroadcastSequence/AsyncSequence-Implementations":{"url":"\/documentation\/afluent\/asyncbroadcastsequence\/asyncsequence-implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncBroadcastSequence\/AsyncSequence-Implementations","title":"AsyncSequence Implementations","role":"collectionGroup","abstract":[],"type":"topic","kind":"article"}}}