{"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"toAsyncSequence","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent30AsynchronousUnitOfWorkSequenceV","text":"AsynchronousUnitOfWorkSequence","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"platforms":["macOS"]}]},{"content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"inlineContent":[{"text":"An ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"text":" that emits the operationâ€™s result and then completes.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"Use this operator to integrate single-value asynchronous operations into sequence-based workflows, or to use sequence algorithms and idioms with a single result.","type":"text"}]},{"level":2,"text":"Example","type":"heading","anchor":"Example"},{"code":["for try await value in DeferredTask { 42 }.toAsyncSequence() {","    print(value) \/\/ prints 42","}"],"type":"codeListing","syntax":"swift"},{"style":"note","type":"aside","name":"Note","content":[{"type":"paragraph","inlineContent":[{"text":"The sequence emits one value if the operation succeeds or fails if the operation throws.","type":"text"}]}]}],"kind":"content"}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/toAsyncSequence()","interfaceLanguage":"swift"},"metadata":{"extendedModule":"Afluent","title":"toAsyncSequence()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"toAsyncSequence","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AsynchronousUnitOfWorkSequence","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent30AsynchronousUnitOfWorkSequenceV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"remoteSource":{"fileName":"ToAsyncSequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/Workers\/ToAsyncSequence.swift#L75"},"role":"symbol","externalID":"s:7Afluent22AsynchronousUnitOfWorkPAAE15toAsyncSequenceAA0bcdeH0VyxGyF","symbolKind":"method","modules":[{"name":"Afluent"}],"roleHeading":"Instance Method"},"kind":"symbol","variants":[{"paths":["\/documentation\/afluent\/asynchronousunitofwork\/toasyncsequence()"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork"]]},"abstract":[{"text":"Converts this asynchronous unit of work into an ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"text":" that emits a single value and then completes.","type":"text"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://Afluent/documentation/Afluent":{"type":"topic","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","abstract":[],"url":"\/documentation\/afluent","role":"collection","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}],"navigatorTitle":[{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}],"url":"\/documentation\/afluent\/asynchronousunitofworksequence","abstract":[{"text":"A sequence that represents a single execution of an asynchronous unit of work.","type":"text"}],"type":"topic","role":"symbol","kind":"symbol","title":"AsynchronousUnitOfWorkSequence"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsynchronousUnitOfWork"}],"navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWork"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","role":"symbol","abstract":[{"text":"Represents an asynchronous unit of work.","type":"text"}],"url":"\/documentation\/afluent\/asynchronousunitofwork","title":"AsynchronousUnitOfWork","kind":"symbol","type":"topic"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork/toAsyncSequence()":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/toAsyncSequence()","url":"\/documentation\/afluent\/asynchronousunitofwork\/toasyncsequence()","title":"toAsyncSequence()","role":"symbol","kind":"symbol","abstract":[{"text":"Converts this asynchronous unit of work into an ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"text":" that emits a single value and then completes.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"toAsyncSequence"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent30AsynchronousUnitOfWorkSequenceV","text":"AsynchronousUnitOfWorkSequence"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}]}}}