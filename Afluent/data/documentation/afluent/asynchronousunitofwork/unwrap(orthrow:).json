{"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"text":"Unwraps the optional value from this unit of work, or throws the given error if it is nil.","type":"text"}],"metadata":{"roleHeading":"Instance Method","modules":[{"name":"Afluent"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unwrap","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"orThrow","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@autoclosure ","kind":"attribute"},{"text":"() -> any ","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWork","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">\n","kind":"text"}],"extendedModule":"Afluent","title":"unwrap(orThrow:)","symbolKind":"method","remoteSource":{"fileName":"UnwrapOrThrow.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/Workers\/UnwrapOrThrow.swift#L25"},"externalID":"s:7Afluent22AsynchronousUnitOfWorkPAAE6unwrap7orThrowQrs5Error_pyYbXA_ts8SendableRd__qd__Sg7SuccessRtzlF"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unwrap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"orThrow"},{"kind":"text","text":" "},{"kind":"internalParam","text":"error"},{"kind":"text","text":": "},{"kind":"attribute","text":"@autoclosure "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" () -> any "},{"preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","kind":"typeIdentifier","text":"AsynchronousUnitOfWork","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier","text":"Sendable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa","kind":"typeIdentifier","text":"Success","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/Success"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?\n"}]}]},{"parameters":[{"name":"error","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The error to throw if the value is nil."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"inlineContent":[{"text":"An ","type":"text"},{"code":"AsynchronousUnitOfWork","type":"codeVoice"},{"text":" emitting the unwrapped value, or failing with the given error if nil.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"Use this operator to convert an optional result into a non-optional one, failing the operation with your custom error if no value is present."}],"type":"paragraph"},{"level":2,"anchor":"Example","text":"Example","type":"heading"},{"syntax":null,"code":["enum MyError: Error { case missing }","let result = try await DeferredTask { Int?.none }","    .unwrap(orThrow: MyError.missing)","    .execute() \/\/ throws MyError.missing if the task returns nil"],"type":"codeListing"}]}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork"]]},"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/unwrap(orThrow:)","interfaceLanguage":"swift"},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asynchronousunitofwork\/unwrap(orthrow:)"]}],"kind":"symbol","references":{"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork/unwrap(orThrow:)":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/unwrap(orThrow:)","url":"\/documentation\/afluent\/asynchronousunitofwork\/unwrap(orthrow:)","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Unwraps the optional value from this unit of work, or throws the given error if it is nil."}],"kind":"symbol","title":"unwrap(orThrow:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unwrap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"orThrow"},{"kind":"text","text":": "},{"kind":"attribute","text":"@autoclosure "},{"kind":"text","text":"() -> any "},{"preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","kind":"typeIdentifier","text":"AsynchronousUnitOfWork"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">\n"}]},"doc://Afluent/documentation/Afluent":{"abstract":[],"url":"\/documentation\/afluent","role":"collection","type":"topic","kind":"symbol","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"role":"symbol","title":"AsynchronousUnitOfWork","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","url":"\/documentation\/afluent\/asynchronousunitofwork","navigatorTitle":[{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"abstract":[{"type":"text","text":"Represents an asynchronous unit of work."}],"type":"topic"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork/Success":{"required":true,"abstract":[{"text":"The type of data the unit of work will produce if it succeeds.","type":"text"}],"role":"symbol","title":"Success","url":"\/documentation\/afluent\/asynchronousunitofwork\/success","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/Success","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Success","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Sendable","preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier"}],"type":"topic"}}}