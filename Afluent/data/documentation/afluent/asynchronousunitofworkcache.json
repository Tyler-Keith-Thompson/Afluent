{"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsynchronousUnitOfWorkCache"}],"remoteSource":{"fileName":"AsynchronousUnitOfWorkCache.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/AsynchronousUnitOfWorkCache.swift#L25"},"symbolKind":"class","role":"symbol","roleHeading":"Class","externalID":"s:7Afluent27AsynchronousUnitOfWorkCacheC","navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWorkCache"}],"title":"AsynchronousUnitOfWorkCache","modules":[{"name":"Afluent"}]},"sections":[],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsynchronousUnitOfWorkCache"}]}]},{"kind":"content","content":[{"anchor":"overview","type":"heading","level":2,"text":"Overview"},{"inlineContent":[{"text":"Store and retrieve reference-type, sendable units of work keyed by an integer. This cache is typically used by the ","type":"text"},{"code":"shareFromCache(_:strategy:keys:)","type":"codeVoice"},{"text":" operator to deduplicate and share underlying work across consumers.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Use this cache to avoid redundant execution of identical units of work, especially those that are expensive or should only be performed once for a given key."}],"type":"paragraph"},{"anchor":"Example","type":"heading","level":2,"text":"Example"},{"type":"codeListing","syntax":"swift","code":["let cache = AUOWCache()","let work = DeferredTask { await fetchUser() }","    .shareFromCache(cache, strategy: .cacheUntilCompletionOrCancellation, keys: \"user42\")","let _ = try await work.execute()"]}]}],"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/Afluent\/s8SendableP"],"title":"Conforms To","type":"conformsTo"}],"abstract":[{"text":"A thread-safe cache for storing and sharing asynchronous units of work.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asynchronousunitofworkcache"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache"},"schemaVersion":{"major":0,"minor":3,"patch":0},"topicSections":[{"generated":true,"anchor":"Structures","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CacheUntilCompletionOrCancellation","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CancelAndRetry"],"title":"Structures"},{"generated":true,"anchor":"Initializers","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/init()"],"title":"Initializers"},{"generated":true,"anchor":"Instance-Methods","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/clearAsynchronousUnitOfWork(withKey:)","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/create(unitOfWork:keyedBy:)","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/retrieve(keyedBy:)","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/retrieveOrCreate(unitOfWork:keyedBy:)"],"title":"Instance Methods"}],"references":{"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/init()":{"type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"abstract":[],"kind":"symbol","title":"init()","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/init()","role":"symbol","url":"\/documentation\/afluent\/asynchronousunitofworkcache\/init()"},"doc://Afluent/s8SendableP":{"identifier":"doc:\/\/Afluent\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/CancelAndRetry":{"abstract":[{"text":"A caching strategy that cancels any existing in-flight unit of work for a key, then starts the new one.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CancelAndRetry"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CancelAndRetry","navigatorTitle":[{"kind":"identifier","text":"CancelAndRetry"}],"title":"AsynchronousUnitOfWorkCache.CancelAndRetry","role":"symbol","kind":"symbol","url":"\/documentation\/afluent\/asynchronousunitofworkcache\/cancelandretry","type":"topic"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/retrieve(keyedBy:)":{"role":"symbol","title":"retrieve(keyedBy:)","abstract":[{"type":"text","text":"Retrieves a stored unit of work for the given key, if it exists in the cache."}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/retrieve(keyedBy:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"retrieve"},{"kind":"text","text":"("},{"kind":"externalParam","text":"keyedBy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> (any "},{"kind":"typeIdentifier","text":"AsynchronousUnitOfWork","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP"},{"kind":"text","text":" & "},{"kind":"typeIdentifier","text":"AnySendableReference","preciseIdentifier":"s:7Afluent20AnySendableReferencea"},{"kind":"text","text":")?"}],"url":"\/documentation\/afluent\/asynchronousunitofworkcache\/retrieve(keyedby:)","kind":"symbol"},"doc://Afluent/documentation/Afluent":{"title":"Afluent","url":"\/documentation\/afluent","role":"collection","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol","abstract":[]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/CacheUntilCompletionOrCancellation":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CacheUntilCompletionOrCancellation","type":"topic","navigatorTitle":[{"text":"CacheUntilCompletionOrCancellation","kind":"identifier"}],"url":"\/documentation\/afluent\/asynchronousunitofworkcache\/cacheuntilcompletionorcancellation","role":"symbol","kind":"symbol","abstract":[{"text":"A caching strategy that retains a unit of work in the cache until it completes, fails, or is cancelled.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CacheUntilCompletionOrCancellation","kind":"identifier"}],"title":"AsynchronousUnitOfWorkCache.CacheUntilCompletionOrCancellation"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache":{"url":"\/documentation\/afluent\/asynchronousunitofworkcache","abstract":[{"text":"A thread-safe cache for storing and sharing asynchronous units of work.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsynchronousUnitOfWorkCache"}],"kind":"symbol","title":"AsynchronousUnitOfWorkCache","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWorkCache"}],"role":"symbol"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/create(unitOfWork:keyedBy:)":{"type":"topic","url":"\/documentation\/afluent\/asynchronousunitofworkcache\/create(unitofwork:keyedby:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/create(unitOfWork:keyedBy:)","title":"create(unitOfWork:keyedBy:)","abstract":[{"type":"text","text":"Stores a unit of work in the cache for the given key."}],"role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"create","kind":"identifier"},{"text":"<","kind":"text"},{"text":"A","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"unitOfWork","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"keyedBy","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") -> ","kind":"text"},{"text":"A","kind":"typeIdentifier"}]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/retrieveOrCreate(unitOfWork:keyedBy:)":{"abstract":[{"text":"Retrieves the unit of work for the given key if present; otherwise, stores the provided unit of work and returns it.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"retrieveOrCreate"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"A"},{"kind":"text","text":">("},{"kind":"externalParam","text":"unitOfWork"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":", "},{"kind":"externalParam","text":"keyedBy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"A"}],"type":"topic","role":"symbol","url":"\/documentation\/afluent\/asynchronousunitofworkcache\/retrieveorcreate(unitofwork:keyedby:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/retrieveOrCreate(unitOfWork:keyedBy:)","title":"retrieveOrCreate(unitOfWork:keyedBy:)"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/clearAsynchronousUnitOfWork(withKey:)":{"kind":"symbol","abstract":[{"text":"Removes the cached unit of work for the given key, if present.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"clearAsynchronousUnitOfWork"},{"kind":"text","text":"("},{"kind":"externalParam","text":"withKey"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":")"}],"type":"topic","role":"symbol","url":"\/documentation\/afluent\/asynchronousunitofworkcache\/clearasynchronousunitofwork(withkey:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/clearAsynchronousUnitOfWork(withKey:)","title":"clearAsynchronousUnitOfWork(withKey:)"}}}