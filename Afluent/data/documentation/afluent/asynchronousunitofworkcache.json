{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache"},"sections":[],"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/Afluent\/s8SendableP"]}],"metadata":{"navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWorkCache"}],"role":"symbol","roleHeading":"Class","symbolKind":"class","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWorkCache","kind":"identifier"}],"title":"AsynchronousUnitOfWorkCache","modules":[{"name":"Afluent"}],"remoteSource":{"fileName":"AsynchronousUnitOfWorkCache.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/AsynchronousUnitOfWorkCache.swift#L25"},"externalID":"s:7Afluent27AsynchronousUnitOfWorkCacheC"},"topicSections":[{"title":"Structures","anchor":"Structures","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CacheUntilCompletionOrCancellation","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CancelAndRetry"]},{"title":"Initializers","anchor":"Initializers","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/init()"]},{"title":"Instance Methods","anchor":"Instance-Methods","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/clearAsynchronousUnitOfWork(withKey:)","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/create(unitOfWork:keyedBy:)","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/retrieve(keyedBy:)","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/retrieveOrCreate(unitOfWork:keyedBy:)"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWorkCache","kind":"identifier"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"anchor":"overview","text":"Overview","type":"heading"},{"inlineContent":[{"text":"Store and retrieve reference-type, sendable units of work keyed by an integer. This cache is typically used by the ","type":"text"},{"type":"codeVoice","code":"shareFromCache(_:strategy:keys:)"},{"text":" operator to deduplicate and share underlying work across consumers.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Use this cache to avoid redundant execution of identical units of work, especially those that are expensive or should only be performed once for a given key."}],"type":"paragraph"},{"level":2,"anchor":"Example","text":"Example","type":"heading"},{"syntax":null,"code":["let cache = AUOWCache()","let work = DeferredTask { await fetchUser() }","    .shareFromCache(cache, strategy: .cacheUntilCompletionOrCancellation, keys: \"user42\")","let _ = try await work.execute()"],"type":"codeListing"}]}],"abstract":[{"type":"text","text":"A thread-safe cache for storing and sharing asynchronous units of work."}],"variants":[{"paths":["\/documentation\/afluent\/asynchronousunitofworkcache"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"references":{"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/retrieve(keyedBy:)":{"title":"retrieve(keyedBy:)","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/retrieve(keyedBy:)","abstract":[{"text":"Retrieves a stored unit of work for the given key, if it exists in the cache.","type":"text"}],"url":"\/documentation\/afluent\/asynchronousunitofworkcache\/retrieve(keyedby:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"retrieve"},{"kind":"text","text":"("},{"kind":"externalParam","text":"keyedBy"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":") -> (any "},{"preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","kind":"typeIdentifier","text":"AsynchronousUnitOfWork"},{"kind":"text","text":" & "},{"preciseIdentifier":"s:7Afluent20AnySendableReferencea","kind":"typeIdentifier","text":"AnySendableReference"},{"kind":"text","text":")?"}],"type":"topic","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/CacheUntilCompletionOrCancellation":{"title":"AsynchronousUnitOfWorkCache.CacheUntilCompletionOrCancellation","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CacheUntilCompletionOrCancellation","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CacheUntilCompletionOrCancellation","navigatorTitle":[{"text":"CacheUntilCompletionOrCancellation","kind":"identifier"}],"role":"symbol","type":"topic","kind":"symbol","abstract":[{"text":"A caching strategy that retains a unit of work in the cache until it completes, fails, or is cancelled.","type":"text"}],"url":"\/documentation\/afluent\/asynchronousunitofworkcache\/cacheuntilcompletionorcancellation"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/init()":{"abstract":[],"type":"topic","url":"\/documentation\/afluent\/asynchronousunitofworkcache\/init()","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"role":"symbol","title":"init()"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/retrieveOrCreate(unitOfWork:keyedBy:)":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"retrieveOrCreate"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"A"},{"kind":"text","text":">("},{"kind":"externalParam","text":"unitOfWork"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":", "},{"kind":"externalParam","text":"keyedBy"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"A"}],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/retrieveOrCreate(unitOfWork:keyedBy:)","title":"retrieveOrCreate(unitOfWork:keyedBy:)","url":"\/documentation\/afluent\/asynchronousunitofworkcache\/retrieveorcreate(unitofwork:keyedby:)","role":"symbol","abstract":[{"type":"text","text":"Retrieves the unit of work for the given key if present; otherwise, stores the provided unit of work and returns it."}]},"doc://Afluent/documentation/Afluent":{"abstract":[],"url":"\/documentation\/afluent","role":"collection","type":"topic","kind":"symbol","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/CancelAndRetry":{"abstract":[{"text":"A caching strategy that cancels any existing in-flight unit of work for a key, then starts the new one.","type":"text"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"CancelAndRetry"}],"url":"\/documentation\/afluent\/asynchronousunitofworkcache\/cancelandretry","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CancelAndRetry","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CancelAndRetry"}],"role":"symbol","title":"AsynchronousUnitOfWorkCache.CancelAndRetry"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/clearAsynchronousUnitOfWork(withKey:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"clearAsynchronousUnitOfWork"},{"kind":"text","text":"("},{"kind":"externalParam","text":"withKey"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":")"}],"url":"\/documentation\/afluent\/asynchronousunitofworkcache\/clearasynchronousunitofwork(withkey:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/clearAsynchronousUnitOfWork(withKey:)","type":"topic","title":"clearAsynchronousUnitOfWork(withKey:)","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Removes the cached unit of work for the given key, if present."}]},"doc://Afluent/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/Afluent\/s8SendableP"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache":{"kind":"symbol","type":"topic","navigatorTitle":[{"text":"AsynchronousUnitOfWorkCache","kind":"identifier"}],"url":"\/documentation\/afluent\/asynchronousunitofworkcache","abstract":[{"type":"text","text":"A thread-safe cache for storing and sharing asynchronous units of work."}],"title":"AsynchronousUnitOfWorkCache","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWorkCache","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/create(unitOfWork:keyedBy:)":{"abstract":[{"type":"text","text":"Stores a unit of work in the cache for the given key."}],"type":"topic","url":"\/documentation\/afluent\/asynchronousunitofworkcache\/create(unitofwork:keyedby:)","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/create(unitOfWork:keyedBy:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"create","kind":"identifier"},{"text":"<","kind":"text"},{"text":"A","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"unitOfWork","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"keyedBy","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"A","kind":"typeIdentifier"}],"role":"symbol","title":"create(unitOfWork:keyedBy:)"}}}