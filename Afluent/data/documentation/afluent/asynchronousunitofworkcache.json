{"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CacheUntilCompletionOrCancellation","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CancelAndRetry"],"generated":true,"title":"Structures","anchor":"Structures"},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/init()"],"generated":true,"title":"Initializers","anchor":"Initializers"},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/clearAsynchronousUnitOfWork(withKey:)","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/create(unitOfWork:keyedBy:)","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/retrieve(keyedBy:)","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/retrieveOrCreate(unitOfWork:keyedBy:)"],"generated":true,"title":"Instance Methods","anchor":"Instance-Methods"}],"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/Afluent\/s8SendableP"],"type":"conformsTo","title":"Conforms To"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWorkCache","kind":"identifier"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Overview","level":2,"anchor":"overview","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Store and retrieve reference-type, sendable units of work keyed by an integer. This cache is typically used by the "},{"code":"shareFromCache(_:strategy:keys:)","type":"codeVoice"},{"type":"text","text":" operator to deduplicate and share underlying work across consumers."}]},{"type":"paragraph","inlineContent":[{"text":"Use this cache to avoid redundant execution of identical units of work, especially those that are expensive or should only be performed once for a given key.","type":"text"}]},{"text":"Example","level":2,"anchor":"Example","type":"heading"},{"syntax":"swift","type":"codeListing","code":["let cache = AUOWCache()","let work = DeferredTask { await fetchUser() }","    .shareFromCache(cache, strategy: .cacheUntilCompletionOrCancellation, keys: \"user42\")","let _ = try await work.execute()"]}]}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"abstract":[{"type":"text","text":"A thread-safe cache for storing and sharing asynchronous units of work."}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asynchronousunitofworkcache"]}],"metadata":{"roleHeading":"Class","role":"symbol","externalID":"s:7Afluent27AsynchronousUnitOfWorkCacheC","symbolKind":"class","remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/AsynchronousUnitOfWorkCache.swift#L25","fileName":"AsynchronousUnitOfWorkCache.swift"},"title":"AsynchronousUnitOfWorkCache","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsynchronousUnitOfWorkCache"}],"modules":[{"name":"Afluent"}],"navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWorkCache"}]},"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/retrieve(keyedBy:)":{"abstract":[{"text":"Retrieves a stored unit of work for the given key, if it exists in the cache.","type":"text"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/retrieve(keyedBy:)","kind":"symbol","title":"retrieve(keyedBy:)","url":"\/documentation\/afluent\/asynchronousunitofworkcache\/retrieve(keyedby:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"retrieve","kind":"identifier"},{"text":"(","kind":"text"},{"text":"keyedBy","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") -> (any ","kind":"text"},{"text":"AsynchronousUnitOfWork","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP"},{"text":" & ","kind":"text"},{"text":"AnySendableReference","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent20AnySendableReferencea"},{"kind":"text","text":")?"}],"role":"symbol"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache":{"kind":"symbol","type":"topic","url":"\/documentation\/afluent\/asynchronousunitofworkcache","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWorkCache","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","title":"AsynchronousUnitOfWorkCache","abstract":[{"type":"text","text":"A thread-safe cache for storing and sharing asynchronous units of work."}],"role":"symbol","navigatorTitle":[{"text":"AsynchronousUnitOfWorkCache","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/create(unitOfWork:keyedBy:)":{"abstract":[{"text":"Stores a unit of work in the cache for the given key.","type":"text"}],"url":"\/documentation\/afluent\/asynchronousunitofworkcache\/create(unitofwork:keyedby:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"create","kind":"identifier"},{"text":"<","kind":"text"},{"text":"A","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"unitOfWork","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"keyedBy","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") -> ","kind":"text"},{"text":"A","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/create(unitOfWork:keyedBy:)","type":"topic","title":"create(unitOfWork:keyedBy:)"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/CacheUntilCompletionOrCancellation":{"navigatorTitle":[{"kind":"identifier","text":"CacheUntilCompletionOrCancellation"}],"title":"AsynchronousUnitOfWorkCache.CacheUntilCompletionOrCancellation","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CacheUntilCompletionOrCancellation"}],"type":"topic","url":"\/documentation\/afluent\/asynchronousunitofworkcache\/cacheuntilcompletionorcancellation","abstract":[{"text":"A caching strategy that retains a unit of work in the cache until it completes, fails, or is cancelled.","type":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CacheUntilCompletionOrCancellation"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/init()":{"title":"init()","kind":"symbol","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/init()","abstract":[],"type":"topic","url":"\/documentation\/afluent\/asynchronousunitofworkcache\/init()"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/clearAsynchronousUnitOfWork(withKey:)":{"title":"clearAsynchronousUnitOfWork(withKey:)","abstract":[{"text":"Removes the cached unit of work for the given key, if present.","type":"text"}],"type":"topic","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/clearAsynchronousUnitOfWork(withKey:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"clearAsynchronousUnitOfWork"},{"kind":"text","text":"("},{"kind":"externalParam","text":"withKey"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":")"}],"url":"\/documentation\/afluent\/asynchronousunitofworkcache\/clearasynchronousunitofwork(withkey:)"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/CancelAndRetry":{"url":"\/documentation\/afluent\/asynchronousunitofworkcache\/cancelandretry","kind":"symbol","title":"AsynchronousUnitOfWorkCache.CancelAndRetry","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CancelAndRetry","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"CancelAndRetry","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CancelAndRetry","abstract":[{"type":"text","text":"A caching strategy that cancels any existing in-flight unit of work for a key, then starts the new one."}]},"doc://Afluent/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/Afluent\/s8SendableP"},"doc://Afluent/documentation/Afluent":{"type":"topic","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","abstract":[],"url":"\/documentation\/afluent","role":"collection","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/retrieveOrCreate(unitOfWork:keyedBy:)":{"kind":"symbol","title":"retrieveOrCreate(unitOfWork:keyedBy:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/retrieveOrCreate(unitOfWork:keyedBy:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"retrieveOrCreate"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"A"},{"kind":"text","text":">("},{"kind":"externalParam","text":"unitOfWork"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":", "},{"kind":"externalParam","text":"keyedBy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"A"}],"url":"\/documentation\/afluent\/asynchronousunitofworkcache\/retrieveorcreate(unitofwork:keyedby:)","role":"symbol","abstract":[{"type":"text","text":"Retrieves the unit of work for the given key if present; otherwise, stores the provided unit of work and returns it."}]}}}