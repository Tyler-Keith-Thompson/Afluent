{"abstract":[{"text":"A caching strategy that retains a unit of work in the cache until it completes, fails, or is cancelled.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asynchronousunitofworkcache\/cacheuntilcompletionorcancellation"]}],"topicSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CacheUntilCompletionOrCancellation\/handle(unitOfWork:keyedBy:storedIn:)"],"generated":true,"anchor":"Instance-Methods","title":"Instance Methods"},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CacheUntilCompletionOrCancellation\/AUOWCacheStrategy-Implementations"],"generated":true,"anchor":"Default-Implementations","title":"Default Implementations"}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache"]]},"metadata":{"title":"AsynchronousUnitOfWorkCache.CacheUntilCompletionOrCancellation","roleHeading":"Structure","navigatorTitle":[{"text":"CacheUntilCompletionOrCancellation","kind":"identifier"}],"externalID":"s:7Afluent27AsynchronousUnitOfWorkCacheC0F29UntilCompletionOrCancellationV","extendedModule":"Afluent","symbolKind":"struct","modules":[{"name":"Afluent"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CacheUntilCompletionOrCancellation","kind":"identifier"}],"remoteSource":{"fileName":"AUOWCache+CacheUntilCompletionOrCancellation.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/AUOWCacheStrategies\/AUOWCache+CacheUntilCompletionOrCancellation.swift#L44"}},"schemaVersion":{"minor":3,"patch":0,"major":0},"relationshipsSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy"],"type":"conformsTo","title":"Conforms To","kind":"relationships"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CacheUntilCompletionOrCancellation","kind":"identifier"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"This strategy is useful when you want to deduplicate concurrent requests for the same unit of work, ensuring that","type":"text"},{"text":" ","type":"text"},{"text":"all consumers receive the same result, and the cached value is automatically cleared after completion or cancellation.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"The cached entry is cleared on:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"successful completion (output received)","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"error thrown"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"cancellation"}]}]}]},{"type":"heading","text":"Example","level":2,"anchor":"Example"},{"type":"codeListing","code":["let cache = AUOWCache()","","\/\/ A unit of work that produces a String after a delay","@Sendable func unitOfWork() -> some AsynchronousUnitOfWork<String> {","    DeferredTask {","        \/\/ ... expensive computation or network call ...","        return \"result\"","    }","    .shareFromCache(cache, strategy: .cacheUntilCompletionOrCancellation)","}","","\/\/ First execution stores the value in the cache","let task1 = unitOfWork().execute()","\/\/ Second execution (if started before completion) shares the cached value","let task2 = unitOfWork().execute()","","\/\/ When task1 completes, the cache entry is cleared"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"See also: "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy\/cacheUntilCompletionOrCancellation"}]}]}],"kind":"symbol","sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CacheUntilCompletionOrCancellation"},"references":{"doc://Afluent/documentation/Afluent/AUOWCache":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AUOWCache"}],"title":"AUOWCache","type":"topic","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"AUOWCache"}],"kind":"symbol","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","url":"\/documentation\/afluent\/auowcache"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache":{"url":"\/documentation\/afluent\/asynchronousunitofworkcache","abstract":[{"text":"A thread-safe cache for storing and sharing asynchronous units of work.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsynchronousUnitOfWorkCache"}],"kind":"symbol","title":"AsynchronousUnitOfWorkCache","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWorkCache"}],"role":"symbol"},"doc://Afluent/documentation/Afluent/AUOWCacheStrategy/cacheUntilCompletionOrCancellation":{"abstract":[{"text":"Returns the ","type":"text"},{"code":".cacheUntilCompletionOrCancellation","type":"codeVoice"},{"text":" strategy.","type":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy\/cacheUntilCompletionOrCancellation","url":"\/documentation\/afluent\/auowcachestrategy\/cacheuntilcompletionorcancellation","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cacheUntilCompletionOrCancellation","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Afluent27AsynchronousUnitOfWorkCacheC","text":"AsynchronousUnitOfWorkCache","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent27AsynchronousUnitOfWorkCacheC0F29UntilCompletionOrCancellationV","text":"CacheUntilCompletionOrCancellation","kind":"typeIdentifier"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"AsynchronousUnitOfWorkCache.CacheUntilCompletionOrCancellation"},{"text":".","type":"text"}]},"kind":"symbol","type":"topic","title":"cacheUntilCompletionOrCancellation","role":"symbol"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/CacheUntilCompletionOrCancellation/handle(unitOfWork:keyedBy:storedIn:)":{"abstract":[],"url":"\/documentation\/afluent\/asynchronousunitofworkcache\/cacheuntilcompletionorcancellation\/handle(unitofwork:keyedby:storedin:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handle"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"A"},{"kind":"text","text":">("},{"kind":"externalParam","text":"unitOfWork"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":", "},{"kind":"externalParam","text":"keyedBy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"storedIn"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AUOWCache","preciseIdentifier":"s:7Afluent9AUOWCachea"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AnyAsynchronousUnitOfWork","preciseIdentifier":"s:7Afluent25AnyAsynchronousUnitOfWorkV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Success","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa"},{"kind":"text","text":">"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CacheUntilCompletionOrCancellation\/handle(unitOfWork:keyedBy:storedIn:)","role":"symbol","kind":"symbol","type":"topic","title":"handle(unitOfWork:keyedBy:storedIn:)"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/CacheUntilCompletionOrCancellation/AUOWCacheStrategy-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CacheUntilCompletionOrCancellation\/AUOWCacheStrategy-Implementations","title":"AUOWCacheStrategy Implementations","kind":"article","type":"topic","abstract":[],"url":"\/documentation\/afluent\/asynchronousunitofworkcache\/cacheuntilcompletionorcancellation\/auowcachestrategy-implementations"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/CacheUntilCompletionOrCancellation":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CacheUntilCompletionOrCancellation","type":"topic","navigatorTitle":[{"text":"CacheUntilCompletionOrCancellation","kind":"identifier"}],"url":"\/documentation\/afluent\/asynchronousunitofworkcache\/cacheuntilcompletionorcancellation","role":"symbol","kind":"symbol","abstract":[{"text":"A caching strategy that retains a unit of work in the cache until it completes, fails, or is cancelled.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CacheUntilCompletionOrCancellation","kind":"identifier"}],"title":"AsynchronousUnitOfWorkCache.CacheUntilCompletionOrCancellation"},"doc://Afluent/documentation/Afluent":{"title":"Afluent","url":"\/documentation\/afluent","role":"collection","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol","abstract":[]},"doc://Afluent/documentation/Afluent/AUOWCacheStrategy":{"url":"\/documentation\/afluent\/auowcachestrategy","role":"symbol","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Represents a cache strategy for use with "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache"},{"type":"text","text":"."}],"navigatorTitle":[{"text":"AUOWCacheStrategy","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AUOWCacheStrategy","kind":"identifier"}],"title":"AUOWCacheStrategy"}}}