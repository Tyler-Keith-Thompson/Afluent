{"abstract":[{"type":"text","text":"A caching strategy that retains a unit of work in the cache until it completes, fails, or is cancelled."}],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"title":"AsynchronousUnitOfWorkCache.CacheUntilCompletionOrCancellation","remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/AUOWCacheStrategies\/AUOWCache+CacheUntilCompletionOrCancellation.swift#L44","fileName":"AUOWCache+CacheUntilCompletionOrCancellation.swift"},"modules":[{"name":"Afluent"}],"roleHeading":"Structure","externalID":"s:7Afluent27AsynchronousUnitOfWorkCacheC0F29UntilCompletionOrCancellationV","navigatorTitle":[{"kind":"identifier","text":"CacheUntilCompletionOrCancellation"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CacheUntilCompletionOrCancellation"}],"extendedModule":"Afluent","symbolKind":"struct","role":"symbol"},"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CacheUntilCompletionOrCancellation","interfaceLanguage":"swift"},"topicSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CacheUntilCompletionOrCancellation\/handle(unitOfWork:keyedBy:storedIn:)"],"anchor":"Instance-Methods","generated":true,"title":"Instance Methods"},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CacheUntilCompletionOrCancellation\/AUOWCacheStrategy-Implementations"],"anchor":"Default-Implementations","generated":true,"title":"Default Implementations"}],"relationshipsSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy"],"kind":"relationships","type":"conformsTo","title":"Conforms To"}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CacheUntilCompletionOrCancellation"}],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","anchor":"overview","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"This strategy is useful when you want to deduplicate concurrent requests for the same unit of work, ensuring that","type":"text"},{"text":" ","type":"text"},{"text":"all consumers receive the same result, and the cached value is automatically cleared after completion or cancellation.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The cached entry is cleared on:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"successful completion (output received)"}]}]},{"content":[{"inlineContent":[{"text":"error thrown","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"cancellation","type":"text"}]}]}]},{"type":"heading","anchor":"Example","level":2,"text":"Example"},{"type":"codeListing","syntax":"swift","code":["let cache = AUOWCache()","","\/\/ A unit of work that produces a String after a delay","@Sendable func unitOfWork() -> some AsynchronousUnitOfWork<String> {","    DeferredTask {","        \/\/ ... expensive computation or network call ...","        return \"result\"","    }","    .shareFromCache(cache, strategy: .cacheUntilCompletionOrCancellation)","}","","\/\/ First execution stores the value in the cache","let task1 = unitOfWork().execute()","\/\/ Second execution (if started before completion) shares the cached value","let task2 = unitOfWork().execute()","","\/\/ When task1 completes, the cache entry is cleared"]},{"type":"paragraph","inlineContent":[{"text":"See also: ","type":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy\/cacheUntilCompletionOrCancellation","isActive":true,"type":"reference"}]}]}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asynchronousunitofworkcache\/cacheuntilcompletionorcancellation"]}],"kind":"symbol","references":{"doc://Afluent/documentation/Afluent/AUOWCacheStrategy/cacheUntilCompletionOrCancellation":{"kind":"symbol","abstract":[{"text":"Returns the ","type":"text"},{"type":"codeVoice","code":".cacheUntilCompletionOrCancellation"},{"text":" strategy.","type":"text"}],"title":"cacheUntilCompletionOrCancellation","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"AsynchronousUnitOfWorkCache.CacheUntilCompletionOrCancellation","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"url":"\/documentation\/afluent\/auowcachestrategy\/cacheuntilcompletionorcancellation","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy\/cacheUntilCompletionOrCancellation","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cacheUntilCompletionOrCancellation","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Afluent27AsynchronousUnitOfWorkCacheC","text":"AsynchronousUnitOfWorkCache","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent27AsynchronousUnitOfWorkCacheC0F29UntilCompletionOrCancellationV","text":"CacheUntilCompletionOrCancellation","kind":"typeIdentifier"}],"role":"symbol"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache":{"kind":"symbol","type":"topic","url":"\/documentation\/afluent\/asynchronousunitofworkcache","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWorkCache","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","title":"AsynchronousUnitOfWorkCache","abstract":[{"type":"text","text":"A thread-safe cache for storing and sharing asynchronous units of work."}],"role":"symbol","navigatorTitle":[{"text":"AsynchronousUnitOfWorkCache","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/CacheUntilCompletionOrCancellation/handle(unitOfWork:keyedBy:storedIn:)":{"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CacheUntilCompletionOrCancellation\/handle(unitOfWork:keyedBy:storedIn:)","type":"topic","abstract":[],"title":"handle(unitOfWork:keyedBy:storedIn:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handle","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"A"},{"kind":"text","text":">("},{"kind":"externalParam","text":"unitOfWork"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":", "},{"kind":"externalParam","text":"keyedBy"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"storedIn","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Afluent9AUOWCachea","text":"AUOWCache","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent25AnyAsynchronousUnitOfWorkV","text":"AnyAsynchronousUnitOfWork","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa","text":"Success","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/afluent\/asynchronousunitofworkcache\/cacheuntilcompletionorcancellation\/handle(unitofwork:keyedby:storedin:)"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/CacheUntilCompletionOrCancellation/AUOWCacheStrategy-Implementations":{"kind":"article","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CacheUntilCompletionOrCancellation\/AUOWCacheStrategy-Implementations","type":"topic","abstract":[],"title":"AUOWCacheStrategy Implementations","role":"collectionGroup","url":"\/documentation\/afluent\/asynchronousunitofworkcache\/cacheuntilcompletionorcancellation\/auowcachestrategy-implementations"},"doc://Afluent/documentation/Afluent/AUOWCache":{"navigatorTitle":[{"text":"AUOWCache","kind":"identifier"}],"title":"AUOWCache","type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AUOWCache","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","url":"\/documentation\/afluent\/auowcache","role":"symbol","abstract":[],"kind":"symbol"},"doc://Afluent/documentation/Afluent/AUOWCacheStrategy":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy","type":"topic","url":"\/documentation\/afluent\/auowcachestrategy","role":"symbol","navigatorTitle":[{"text":"AUOWCacheStrategy","kind":"identifier"}],"abstract":[{"text":"Represents a cache strategy for use with ","type":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","type":"reference","isActive":true},{"text":".","type":"text"}],"title":"AUOWCacheStrategy","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AUOWCacheStrategy","kind":"identifier"}]},"doc://Afluent/documentation/Afluent":{"type":"topic","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","abstract":[],"url":"\/documentation\/afluent","role":"collection","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/CacheUntilCompletionOrCancellation":{"navigatorTitle":[{"kind":"identifier","text":"CacheUntilCompletionOrCancellation"}],"title":"AsynchronousUnitOfWorkCache.CacheUntilCompletionOrCancellation","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CacheUntilCompletionOrCancellation"}],"type":"topic","url":"\/documentation\/afluent\/asynchronousunitofworkcache\/cacheuntilcompletionorcancellation","abstract":[{"text":"A caching strategy that retains a unit of work in the cache until it completes, fails, or is cancelled.","type":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CacheUntilCompletionOrCancellation"}}}