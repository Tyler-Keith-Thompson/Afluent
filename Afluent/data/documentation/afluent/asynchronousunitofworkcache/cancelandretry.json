{"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CancelAndRetry","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asynchronousunitofworkcache\/cancelandretry"]}],"metadata":{"role":"symbol","modules":[{"name":"Afluent"}],"roleHeading":"Structure","remoteSource":{"fileName":"AUOWCache+CancelAndRetry.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/AUOWCacheStrategies\/AUOWCache+CancelAndRetry.swift#L11"},"title":"AsynchronousUnitOfWorkCache.CancelAndRetry","symbolKind":"struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CancelAndRetry"}],"navigatorTitle":[{"text":"CancelAndRetry","kind":"identifier"}],"extendedModule":"Afluent","externalID":"s:7Afluent27AsynchronousUnitOfWorkCacheC14CancelAndRetryV"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CancelAndRetry","kind":"identifier"}],"platforms":["macOS"]}]}],"sections":[],"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"topicSections":[{"anchor":"Instance-Methods","title":"Instance Methods","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CancelAndRetry\/handle(unitOfWork:keyedBy:storedIn:)"],"generated":true},{"anchor":"Default-Implementations","title":"Default Implementations","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CancelAndRetry\/AUOWCacheStrategy-Implementations"]}],"relationshipsSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy"],"kind":"relationships","type":"conformsTo","title":"Conforms To"}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache"]]},"references":{"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/CancelAndRetry":{"url":"\/documentation\/afluent\/asynchronousunitofworkcache\/cancelandretry","kind":"symbol","title":"AsynchronousUnitOfWorkCache.CancelAndRetry","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"CancelAndRetry","kind":"identifier"}],"navigatorTitle":[{"text":"CancelAndRetry","kind":"identifier"}],"role":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CancelAndRetry"},"doc://Afluent/documentation/Afluent":{"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent","type":"topic","url":"\/documentation\/afluent","kind":"symbol","title":"Afluent","role":"collection"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/CancelAndRetry/AUOWCacheStrategy-Implementations":{"title":"AUOWCacheStrategy Implementations","abstract":[],"role":"collectionGroup","type":"topic","kind":"article","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CancelAndRetry\/AUOWCacheStrategy-Implementations","url":"\/documentation\/afluent\/asynchronousunitofworkcache\/cancelandretry\/auowcachestrategy-implementations"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/CancelAndRetry/handle(unitOfWork:keyedBy:storedIn:)":{"title":"handle(unitOfWork:keyedBy:storedIn:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CancelAndRetry\/handle(unitOfWork:keyedBy:storedIn:)","type":"topic","abstract":[],"url":"\/documentation\/afluent\/asynchronousunitofworkcache\/cancelandretry\/handle(unitofwork:keyedby:storedin:)","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"handle"},{"kind":"text","text":"<"},{"text":"A","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"unitOfWork"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":", "},{"text":"keyedBy","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"storedIn"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AUOWCache","preciseIdentifier":"s:7Afluent9AUOWCachea"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"AnyAsynchronousUnitOfWork","preciseIdentifier":"s:7Afluent25AnyAsynchronousUnitOfWorkV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"A"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa","text":"Success"},{"text":">","kind":"text"}]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork/share()":{"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/share()","role":"symbol","kind":"symbol","url":"\/documentation\/afluent\/asynchronousunitofwork\/share()","title":"share()","abstract":[{"type":"text","text":"Shares the upstream "},{"type":"codeVoice","code":"AsynchronousUnitOfWork"},{"type":"text","text":" among multiple downstream subscribers."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"share"},{"text":"() -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","text":"AsynchronousUnitOfWork"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa","text":"Success"},{"text":"> & ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ScA","text":"Actor"}]},"doc://Afluent/documentation/Afluent/AUOWCacheStrategy":{"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy","kind":"symbol","abstract":[{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy","type":"reference","isActive":true},{"text":" represents the available caching strategies for the ","type":"text"},{"type":"reference","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","isActive":true},{"text":".","type":"text"}],"role":"symbol","title":"AUOWCacheStrategy","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AUOWCacheStrategy"}],"navigatorTitle":[{"text":"AUOWCacheStrategy","kind":"identifier"}],"url":"\/documentation\/afluent\/auowcachestrategy"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","title":"AsynchronousUnitOfWorkCache","type":"topic","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWorkCache","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWorkCache"}],"abstract":[{"type":"text","text":"A cache for asynchronous unit of work types."},{"type":"text","text":" "},{"type":"text","text":"A stored unit of work should be both "},{"code":"Sendable","type":"codeVoice"},{"text":" and a reference type (e.g. a unit of work shared via the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/share()"},{"type":"text","text":" operator)."}],"url":"\/documentation\/afluent\/asynchronousunitofworkcache","role":"symbol"},"doc://Afluent/documentation/Afluent/AUOWCache":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","title":"AUOWCache","type":"topic","kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AUOWCache"}],"navigatorTitle":[{"text":"AUOWCache","kind":"identifier"}],"abstract":[],"url":"\/documentation\/afluent\/auowcache","role":"symbol"}}}