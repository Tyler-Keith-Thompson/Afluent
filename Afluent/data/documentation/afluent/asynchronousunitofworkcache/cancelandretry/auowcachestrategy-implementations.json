{"metadata":{"modules":[{"name":"Afluent"}],"roleHeading":"API Collection","title":"AUOWCacheStrategy Implementations","role":"collectionGroup"},"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CancelAndRetry\/AUOWCacheStrategy-Implementations","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asynchronousunitofworkcache\/cancelandretry\/auowcachestrategy-implementations"]}],"kind":"article","hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CancelAndRetry"]]},"sections":[],"topicSections":[{"title":"Type Properties","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CancelAndRetry\/cancelAndRestart"],"anchor":"Type-Properties","generated":true}],"references":{"doc://Afluent/documentation/Afluent":{"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent","role":"collection","type":"topic","abstract":[],"title":"Afluent","url":"\/documentation\/afluent"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork/share()":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/share()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"share"},{"text":"() -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWork","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Success","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa"},{"kind":"text","text":"> & "},{"kind":"typeIdentifier","preciseIdentifier":"s:ScA","text":"Actor"}],"abstract":[{"text":"Shares the upstream ","type":"text"},{"code":"AsynchronousUnitOfWork","type":"codeVoice"},{"type":"text","text":" among multiple downstream subscribers."}],"role":"symbol","title":"share()","type":"topic","url":"\/documentation\/afluent\/asynchronousunitofwork\/share()","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache":{"type":"topic","title":"AsynchronousUnitOfWorkCache","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsynchronousUnitOfWorkCache","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"A cache for asynchronous unit of work types."},{"text":" ","type":"text"},{"text":"A stored unit of work should be both ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" and a reference type (e.g. a unit of work shared via the "},{"isActive":true,"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/share()","type":"reference"},{"text":" operator).","type":"text"}],"url":"\/documentation\/afluent\/asynchronousunitofworkcache","navigatorTitle":[{"text":"AsynchronousUnitOfWorkCache","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/CancelAndRetry":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CancelAndRetry","navigatorTitle":[{"kind":"identifier","text":"CancelAndRetry"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CancelAndRetry","kind":"identifier"}],"abstract":[],"role":"symbol","title":"AsynchronousUnitOfWorkCache.CancelAndRetry","type":"topic","url":"\/documentation\/afluent\/asynchronousunitofworkcache\/cancelandretry","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/CancelAndRetry/cancelAndRestart":{"type":"topic","title":"cancelAndRestart","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CancelAndRetry\/cancelAndRestart","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"cancelAndRestart"},{"kind":"text","text":": "},{"text":"AsynchronousUnitOfWorkCache","preciseIdentifier":"s:7Afluent27AsynchronousUnitOfWorkCacheC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent27AsynchronousUnitOfWorkCacheC14CancelAndRetryV","text":"CancelAndRetry"}],"role":"symbol","abstract":[{"text":"This strategy indicates that any existing work should be cancelled before restarting the upstream work again.","type":"text"}],"url":"\/documentation\/afluent\/asynchronousunitofworkcache\/cancelandretry\/cancelandrestart","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" is "},{"code":"AsynchronousUnitOfWorkCache.CancelAndRetry","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}}}}