{"kind":"article","identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CancelAndRetry\/AUOWCacheStrategy-Implementations","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asynchronousunitofworkcache\/cancelandretry\/auowcachestrategy-implementations"]}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"topicSections":[{"title":"Type Properties","anchor":"Type-Properties","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CancelAndRetry\/cancelAndRestart"],"generated":true}],"metadata":{"role":"collectionGroup","modules":[{"name":"Afluent"}],"roleHeading":"API Collection","title":"AUOWCacheStrategy Implementations"},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CancelAndRetry"]]},"references":{"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/CancelAndRetry/cancelAndRestart":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CancelAndRetry\/cancelAndRestart","abstract":[{"type":"text","text":"This strategy indicates that any existing work should be cancelled before restarting the upstream work again."}],"kind":"symbol","title":"cancelAndRestart","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"cancelAndRestart","kind":"identifier"},{"text":": ","kind":"text"},{"text":"AsynchronousUnitOfWorkCache","preciseIdentifier":"s:7Afluent27AsynchronousUnitOfWorkCacheC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"CancelAndRetry","preciseIdentifier":"s:7Afluent27AsynchronousUnitOfWorkCacheC14CancelAndRetryV","kind":"typeIdentifier"}],"url":"\/documentation\/afluent\/asynchronousunitofworkcache\/cancelandretry\/cancelandrestart","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" is "},{"code":"AsynchronousUnitOfWorkCache.CancelAndRetry","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"type":"topic"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork/share()":{"type":"topic","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/share()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"share"},{"text":"() -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"AsynchronousUnitOfWork","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa","text":"Success","kind":"typeIdentifier"},{"text":"> & ","kind":"text"},{"preciseIdentifier":"s:ScA","text":"Actor","kind":"typeIdentifier"}],"url":"\/documentation\/afluent\/asynchronousunitofwork\/share()","abstract":[{"text":"Shares the upstream ","type":"text"},{"type":"codeVoice","code":"AsynchronousUnitOfWork"},{"type":"text","text":" among multiple downstream subscribers."}],"title":"share()","kind":"symbol"},"doc://Afluent/documentation/Afluent":{"title":"Afluent","role":"collection","kind":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent","url":"\/documentation\/afluent"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/CancelAndRetry":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"CancelAndRetry","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CancelAndRetry","abstract":[],"navigatorTitle":[{"text":"CancelAndRetry","kind":"identifier"}],"title":"AsynchronousUnitOfWorkCache.CancelAndRetry","url":"\/documentation\/afluent\/asynchronousunitofworkcache\/cancelandretry","kind":"symbol","role":"symbol"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsynchronousUnitOfWorkCache"}],"type":"topic","navigatorTitle":[{"text":"AsynchronousUnitOfWorkCache","kind":"identifier"}],"abstract":[{"text":"A cache for asynchronous unit of work types.","type":"text"},{"text":" ","type":"text"},{"text":"A stored unit of work should be both ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" and a reference type (e.g. a unit of work shared via the "},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/share()","type":"reference","isActive":true},{"type":"text","text":" operator)."}],"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","kind":"symbol","url":"\/documentation\/afluent\/asynchronousunitofworkcache","title":"AsynchronousUnitOfWorkCache"}}}