{"metadata":{"title":"AUOWCacheStrategy Implementations","role":"collectionGroup","modules":[{"name":"Afluent"}],"roleHeading":"API Collection"},"schemaVersion":{"major":0,"minor":3,"patch":0},"topicSections":[{"title":"Type Properties","anchor":"Type-Properties","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CancelAndRetry\/cancelAndRestart"],"generated":true}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CancelAndRetry\/AUOWCacheStrategy-Implementations","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asynchronousunitofworkcache\/cancelandretry\/auowcachestrategy-implementations"]}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CancelAndRetry"]]},"sections":[],"kind":"article","references":{"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache":{"url":"\/documentation\/afluent\/asynchronousunitofworkcache","abstract":[{"text":"A thread-safe cache for storing and sharing asynchronous units of work.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsynchronousUnitOfWorkCache"}],"kind":"symbol","title":"AsynchronousUnitOfWorkCache","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWorkCache"}],"role":"symbol"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/CancelAndRetry/cancelAndRestart":{"title":"cancelAndRestart","url":"\/documentation\/afluent\/asynchronousunitofworkcache\/cancelandretry\/cancelandrestart","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CancelAndRetry\/cancelAndRestart","role":"symbol","kind":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"AsynchronousUnitOfWorkCache.CancelAndRetry"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"type":"topic","abstract":[{"text":"Returns the ","type":"text"},{"code":".cancelAndRestart","type":"codeVoice"},{"text":" strategy.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cancelAndRestart","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Afluent27AsynchronousUnitOfWorkCacheC","text":"AsynchronousUnitOfWorkCache","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent27AsynchronousUnitOfWorkCacheC14CancelAndRetryV","text":"CancelAndRetry","kind":"typeIdentifier"}]},"doc://Afluent/documentation/Afluent":{"title":"Afluent","url":"\/documentation\/afluent","role":"collection","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol","abstract":[]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/CancelAndRetry":{"abstract":[{"text":"A caching strategy that cancels any existing in-flight unit of work for a key, then starts the new one.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CancelAndRetry"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CancelAndRetry","navigatorTitle":[{"kind":"identifier","text":"CancelAndRetry"}],"title":"AsynchronousUnitOfWorkCache.CancelAndRetry","role":"symbol","kind":"symbol","url":"\/documentation\/afluent\/asynchronousunitofworkcache\/cancelandretry","type":"topic"}}}