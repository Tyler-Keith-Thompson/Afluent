{"kind":"article","identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CancelAndRetry\/AUOWCacheStrategy-Implementations","interfaceLanguage":"swift"},"metadata":{"title":"AUOWCacheStrategy Implementations","modules":[{"name":"Afluent"}],"role":"collectionGroup","roleHeading":"API Collection"},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CancelAndRetry"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"topicSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CancelAndRetry\/cancelAndRestart"],"generated":true,"title":"Type Properties","anchor":"Type-Properties"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asynchronousunitofworkcache\/cancelandretry\/auowcachestrategy-implementations"]}],"sections":[],"references":{"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache":{"abstract":[{"text":"A cache for asynchronous unit of work types.","type":"text"},{"type":"text","text":" "},{"text":"A stored unit of work should be both ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":" and a reference type (e.g. a unit of work shared via the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/share()","type":"reference"},{"type":"text","text":" operator)."}],"kind":"symbol","role":"symbol","type":"topic","title":"AsynchronousUnitOfWorkCache","url":"\/documentation\/afluent\/asynchronousunitofworkcache","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsynchronousUnitOfWorkCache"}],"navigatorTitle":[{"text":"AsynchronousUnitOfWorkCache","kind":"identifier"}]},"doc://Afluent/documentation/Afluent":{"title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol","abstract":[],"type":"topic","role":"collection","url":"\/documentation\/afluent"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork/share()":{"abstract":[{"text":"Shares the upstream ","type":"text"},{"type":"codeVoice","code":"AsynchronousUnitOfWork"},{"type":"text","text":" among multiple downstream subscribers."}],"kind":"symbol","role":"symbol","type":"topic","title":"share()","url":"\/documentation\/afluent\/asynchronousunitofwork\/share()","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/share()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"share","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsynchronousUnitOfWork","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa","text":"Success","kind":"typeIdentifier"},{"kind":"text","text":"> & "},{"preciseIdentifier":"s:ScA","text":"Actor","kind":"typeIdentifier"}]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/CancelAndRetry":{"type":"topic","title":"AsynchronousUnitOfWorkCache.CancelAndRetry","url":"\/documentation\/afluent\/asynchronousunitofworkcache\/cancelandretry","navigatorTitle":[{"text":"CancelAndRetry","kind":"identifier"}],"kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CancelAndRetry"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CancelAndRetry","abstract":[]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/CancelAndRetry/cancelAndRestart":{"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" is "},{"code":"AsynchronousUnitOfWorkCache.CancelAndRetry","type":"codeVoice"},{"type":"text","text":"."}]},"title":"cancelAndRestart","url":"\/documentation\/afluent\/asynchronousunitofworkcache\/cancelandretry\/cancelandrestart","kind":"symbol","abstract":[{"text":"This strategy indicates that any existing work should be cancelled before restarting the upstream work again.","type":"text"}],"role":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cancelAndRestart","kind":"identifier"},{"kind":"text","text":": "},{"text":"AsynchronousUnitOfWorkCache","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent27AsynchronousUnitOfWorkCacheC"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Afluent27AsynchronousUnitOfWorkCacheC14CancelAndRetryV","kind":"typeIdentifier","text":"CancelAndRetry"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CancelAndRetry\/cancelAndRestart"}}}