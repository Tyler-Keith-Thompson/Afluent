{"kind":"symbol","sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handle"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"A"},{"kind":"text","text":">("},{"kind":"externalParam","text":"unitOfWork"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":", "},{"kind":"externalParam","text":"keyedBy"},{"text":" ","kind":"text"},{"text":"key","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"storedIn","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"cache","kind":"internalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","text":"AUOWCache","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent9AUOWCachea"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent25AnyAsynchronousUnitOfWorkV","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","text":"AnyAsynchronousUnitOfWork","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/Success","text":"Success","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","text":"AsynchronousUnitOfWork","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"unitOfWork","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The unit of work to perform."}]}]},{"name":"key","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The cache key associated with the unit of work."}]}]},{"name":"cache","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The cache to use for sharing or cancelling work."}]}]}]},{"kind":"content","content":[{"type":"heading","anchor":"return-value","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"An asynchronous unit of work that will clear its cache entry after completion, error, or cancellation.","type":"text"}]}]}],"variants":[{"paths":["\/documentation\/afluent\/asynchronousunitofworkcache\/cancelandretry\/handle(unitofwork:keyedby:storedin:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CancelAndRetry"]]},"metadata":{"symbolKind":"method","remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/AUOWCacheStrategies\/AUOWCache+CancelAndRetry.swift#L56","fileName":"AUOWCache+CancelAndRetry.swift"},"role":"symbol","title":"handle(unitOfWork:keyedBy:storedIn:)","roleHeading":"Instance Method","externalID":"s:7Afluent27AsynchronousUnitOfWorkCacheC14CancelAndRetryV6handle04unitdE07keyedBy8storedInAA03AnybcdE0Vy7SuccessQzGx_SiACtAA0bcdE0RzlF","modules":[{"name":"Afluent"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handle","kind":"identifier"},{"text":"<","kind":"text"},{"text":"A","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"unitOfWork","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"keyedBy","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"storedIn","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AUOWCache","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent9AUOWCachea"},{"text":") -> ","kind":"text"},{"text":"AnyAsynchronousUnitOfWork","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent25AnyAsynchronousUnitOfWorkV"},{"text":"<","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Success","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa"},{"text":">","kind":"text"}]},"abstract":[{"text":"Handles the unit of work for this strategy, cancelling any in-flight work with the same key and starting the new one.","type":"text"}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CancelAndRetry\/handle(unitOfWork:keyedBy:storedIn:)","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://Afluent/documentation/Afluent":{"abstract":[],"url":"\/documentation\/afluent","role":"collection","type":"topic","kind":"symbol","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent"},"doc://Afluent/documentation/Afluent/AUOWCache":{"abstract":[],"role":"symbol","title":"AUOWCache","kind":"symbol","navigatorTitle":[{"text":"AUOWCache","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","url":"\/documentation\/afluent\/auowcache","type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AUOWCache","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork":{"navigatorTitle":[{"kind":"identifier","text":"AnyAsynchronousUnitOfWork"}],"kind":"symbol","type":"topic","title":"AnyAsynchronousUnitOfWork","abstract":[{"text":"A unit of work that performs type erasure by wrapping another unit of work.","type":"text"}],"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyAsynchronousUnitOfWork"}],"url":"\/documentation\/afluent\/anyasynchronousunitofwork"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/CancelAndRetry/handle(unitOfWork:keyedBy:storedIn:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handle"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"A"},{"kind":"text","text":">("},{"kind":"externalParam","text":"unitOfWork"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":", "},{"kind":"externalParam","text":"keyedBy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"storedIn"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AUOWCache","preciseIdentifier":"s:7Afluent9AUOWCachea"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AnyAsynchronousUnitOfWork","preciseIdentifier":"s:7Afluent25AnyAsynchronousUnitOfWorkV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Success","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Handles the unit of work for this strategy, cancelling any in-flight work with the same key and starting the new one."}],"kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CancelAndRetry\/handle(unitOfWork:keyedBy:storedIn:)","title":"handle(unitOfWork:keyedBy:storedIn:)","url":"\/documentation\/afluent\/asynchronousunitofworkcache\/cancelandretry\/handle(unitofwork:keyedby:storedin:)"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache":{"kind":"symbol","type":"topic","navigatorTitle":[{"text":"AsynchronousUnitOfWorkCache","kind":"identifier"}],"url":"\/documentation\/afluent\/asynchronousunitofworkcache","abstract":[{"type":"text","text":"A thread-safe cache for storing and sharing asynchronous units of work."}],"title":"AsynchronousUnitOfWorkCache","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWorkCache","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork/Success":{"required":true,"abstract":[{"text":"The type of data the unit of work will produce if it succeeds.","type":"text"}],"role":"symbol","title":"Success","url":"\/documentation\/afluent\/asynchronousunitofwork\/success","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/Success","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Success","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Sendable","preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier"}],"type":"topic"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"role":"symbol","title":"AsynchronousUnitOfWork","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","url":"\/documentation\/afluent\/asynchronousunitofwork","navigatorTitle":[{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"abstract":[{"type":"text","text":"Represents an asynchronous unit of work."}],"type":"topic"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/CancelAndRetry":{"abstract":[{"text":"A caching strategy that cancels any existing in-flight unit of work for a key, then starts the new one.","type":"text"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"CancelAndRetry"}],"url":"\/documentation\/afluent\/asynchronousunitofworkcache\/cancelandretry","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CancelAndRetry","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CancelAndRetry"}],"role":"symbol","title":"AsynchronousUnitOfWorkCache.CancelAndRetry"}}}