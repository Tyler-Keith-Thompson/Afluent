{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/init()"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asynchronousunitofworkcache\/init()"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"()","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache"]]},"kind":"symbol","metadata":{"fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"symbolKind":"init","title":"init()","role":"symbol","roleHeading":"Initializer","remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/AsynchronousUnitOfWorkCache.swift#L29","fileName":"AsynchronousUnitOfWorkCache.swift"},"externalID":"s:7Afluent27AsynchronousUnitOfWorkCacheCACycfc","modules":[{"name":"Afluent"}]},"sections":[],"references":{"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/init()":{"abstract":[],"type":"topic","url":"\/documentation\/afluent\/asynchronousunitofworkcache\/init()","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"role":"symbol","title":"init()"},"doc://Afluent/documentation/Afluent":{"abstract":[],"url":"\/documentation\/afluent","role":"collection","type":"topic","kind":"symbol","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache":{"kind":"symbol","type":"topic","navigatorTitle":[{"text":"AsynchronousUnitOfWorkCache","kind":"identifier"}],"url":"\/documentation\/afluent\/asynchronousunitofworkcache","abstract":[{"type":"text","text":"A thread-safe cache for storing and sharing asynchronous units of work."}],"title":"AsynchronousUnitOfWorkCache","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWorkCache","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache"}}}