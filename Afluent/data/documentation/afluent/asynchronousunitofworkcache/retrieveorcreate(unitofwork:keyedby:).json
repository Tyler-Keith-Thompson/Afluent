{"variants":[{"paths":["\/documentation\/afluent\/asynchronousunitofworkcache\/retrieveorcreate(unitofwork:keyedby:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"text":"Retrieves the unit of work for the given key if present; otherwise, stores the provided unit of work and returns it.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/retrieveOrCreate(unitOfWork:keyedBy:)"},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"retrieveOrCreate","kind":"identifier"},{"text":"<","kind":"text"},{"text":"A","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"unitOfWork","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"keyedBy","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"key","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"text":" : AnyObject, ","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"AsynchronousUnitOfWork","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The unit of work to cache if a value does not yet exist for the key."}]}],"name":"unitOfWork"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The integer cache key to lookup or store under.","type":"text"}]}],"name":"key"}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"inlineContent":[{"type":"text","text":"The cached or newly created unit of work."}],"type":"paragraph"}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"text":"This is typically used to deduplicate work by sharing a single instance for the same key.","type":"text"}],"type":"paragraph"}]}],"sections":[],"metadata":{"externalID":"s:7Afluent27AsynchronousUnitOfWorkCacheC16retrieveOrCreate04unitdE07keyedByxx_SitRlzCAA0bcdE0RzlF","roleHeading":"Instance Method","title":"retrieveOrCreate(unitOfWork:keyedBy:)","remoteSource":{"fileName":"AsynchronousUnitOfWorkCache.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/AsynchronousUnitOfWorkCache.swift#L69"},"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"retrieveOrCreate","kind":"identifier"},{"text":"<","kind":"text"},{"text":"A","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"unitOfWork","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"keyedBy","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"A","kind":"typeIdentifier"}],"modules":[{"name":"Afluent"}],"symbolKind":"method"},"references":{"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/retrieveOrCreate(unitOfWork:keyedBy:)":{"abstract":[{"text":"Retrieves the unit of work for the given key if present; otherwise, stores the provided unit of work and returns it.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"retrieveOrCreate"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"A"},{"kind":"text","text":">("},{"kind":"externalParam","text":"unitOfWork"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":", "},{"kind":"externalParam","text":"keyedBy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"A"}],"type":"topic","role":"symbol","url":"\/documentation\/afluent\/asynchronousunitofworkcache\/retrieveorcreate(unitofwork:keyedby:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/retrieveOrCreate(unitOfWork:keyedBy:)","title":"retrieveOrCreate(unitOfWork:keyedBy:)"},"doc://Afluent/documentation/Afluent":{"title":"Afluent","url":"\/documentation\/afluent","role":"collection","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol","abstract":[]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache":{"url":"\/documentation\/afluent\/asynchronousunitofworkcache","abstract":[{"text":"A thread-safe cache for storing and sharing asynchronous units of work.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsynchronousUnitOfWorkCache"}],"kind":"symbol","title":"AsynchronousUnitOfWorkCache","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWorkCache"}],"role":"symbol"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"title":"AsynchronousUnitOfWork","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"role":"symbol","abstract":[{"text":"Represents an asynchronous unit of work.","type":"text"}],"navigatorTitle":[{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/afluent\/asynchronousunitofwork","type":"topic"}}}