{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"Strategy","kind":"identifier"}],"languages":["swift"]}]}],"variants":[{"paths":["\/documentation\/afluent\/asynchronousunitofworkcache\/strategy"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/Strategy","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"modules":[{"name":"Afluent"}],"extendedModule":"Afluent","role":"symbol","title":"AsynchronousUnitOfWorkCache.Strategy","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Strategy"}],"navigatorTitle":[{"text":"Strategy","kind":"identifier"}],"roleHeading":"Enumeration","externalID":"s:7Afluent27AsynchronousUnitOfWorkCacheC8StrategyO","symbolKind":"enum","remoteSource":{"fileName":"AsynchronousUnitOfWorkCache.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/AsynchronousUnitOfWorkCache.swift#L67"}},"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache"]]},"topicSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/Strategy\/cacheUntilCompletionOrCancellation","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/Strategy\/cancelAndRestart"],"generated":true,"title":"Enumeration Cases","anchor":"Enumeration-Cases"},{"generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/Strategy\/Equatable-Implementations"],"anchor":"Default-Implementations","title":"Default Implementations"}],"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/Afluent\/SQ","doc:\/\/Afluent\/SH"],"kind":"relationships","type":"conformsTo"}],"abstract":[{"code":"Strategy","type":"codeVoice"},{"text":" represents the available caching strategies for the ","type":"text"},{"code":"AsynchronousUnitOfWorkCache","type":"codeVoice"},{"type":"text","text":"."}],"references":{"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/Strategy":{"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/Strategy","abstract":[{"code":"Strategy","type":"codeVoice"},{"type":"text","text":" represents the available caching strategies for the "},{"code":"AsynchronousUnitOfWorkCache","type":"codeVoice"},{"type":"text","text":"."}],"title":"AsynchronousUnitOfWorkCache.Strategy","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Strategy","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Strategy"}],"url":"\/documentation\/afluent\/asynchronousunitofworkcache\/strategy"},"doc://Afluent/SH":{"title":"Swift.Hashable","type":"unresolvable","identifier":"doc:\/\/Afluent\/SH"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/Strategy/cacheUntilCompletionOrCancellation":{"role":"symbol","title":"AsynchronousUnitOfWorkCache.Strategy.cacheUntilCompletionOrCancellation","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"cacheUntilCompletionOrCancellation","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/Strategy\/cacheUntilCompletionOrCancellation","url":"\/documentation\/afluent\/asynchronousunitofworkcache\/strategy\/cacheuntilcompletionorcancellation","abstract":[{"type":"text","text":"With the "},{"code":".cacheUntilCompletionOrCancellation","type":"codeVoice"},{"text":" strategy, the cache","type":"text"},{"type":"text","text":" "},{"type":"text","text":"retains the result until the unit of work completes or is cancelled."}],"type":"topic"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/Strategy/cancelAndRestart":{"role":"symbol","url":"\/documentation\/afluent\/asynchronousunitofworkcache\/strategy\/cancelandrestart","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/Strategy\/cancelAndRestart","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"cancelAndRestart","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"This strategy indicates that any existing work should be cancelled before restarting the upstream work again."}],"kind":"symbol","title":"AsynchronousUnitOfWorkCache.Strategy.cancelAndRestart"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache":{"kind":"symbol","url":"\/documentation\/afluent\/asynchronousunitofworkcache","role":"symbol","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWorkCache","kind":"identifier"}],"navigatorTitle":[{"text":"AsynchronousUnitOfWorkCache","kind":"identifier"}],"title":"AsynchronousUnitOfWorkCache","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","abstract":[]},"doc://Afluent/documentation/Afluent":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent","url":"\/documentation\/afluent","kind":"symbol","type":"topic","title":"Afluent","role":"collection","abstract":[]},"doc://Afluent/SQ":{"type":"unresolvable","identifier":"doc:\/\/Afluent\/SQ","title":"Swift.Equatable"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/Strategy/Equatable-Implementations":{"url":"\/documentation\/afluent\/asynchronousunitofworkcache\/strategy\/equatable-implementations","role":"collectionGroup","abstract":[],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/Strategy\/Equatable-Implementations","title":"Equatable Implementations","kind":"article"}}}