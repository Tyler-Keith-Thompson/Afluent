{"metadata":{"role":"symbol","title":"AsynchronousUnitOfWorkCache.Strategy","externalID":"s:7Afluent27AsynchronousUnitOfWorkCacheC8StrategyO","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"Strategy","kind":"identifier"}],"navigatorTitle":[{"text":"Strategy","kind":"identifier"}],"symbolKind":"enum","remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/AsynchronousUnitOfWorkCache.swift#L67","fileName":"AsynchronousUnitOfWorkCache.swift"},"extendedModule":"Afluent","modules":[{"name":"Afluent"}],"roleHeading":"Enumeration"},"relationshipsSections":[{"identifiers":["doc:\/\/Afluent\/SQ","doc:\/\/Afluent\/SH"],"type":"conformsTo","title":"Conforms To","kind":"relationships"}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/Strategy"},"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"type":"codeVoice","code":"Strategy"},{"text":" represents the available caching strategies for the ","type":"text"},{"type":"codeVoice","code":"AsynchronousUnitOfWorkCache"},{"type":"text","text":"."}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Strategy","kind":"identifier"}],"languages":["swift"],"platforms":["macOS"]}]}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache"]]},"topicSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/Strategy\/cacheUntilCompletionOrCancellation","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/Strategy\/cancelAndRestart"],"title":"Enumeration Cases","generated":true,"anchor":"Enumeration-Cases"},{"anchor":"Default-Implementations","title":"Default Implementations","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/Strategy\/Equatable-Implementations"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asynchronousunitofworkcache\/strategy"]}],"references":{"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache":{"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsynchronousUnitOfWorkCache"}],"kind":"symbol","navigatorTitle":[{"text":"AsynchronousUnitOfWorkCache","kind":"identifier"}],"type":"topic","abstract":[],"title":"AsynchronousUnitOfWorkCache","url":"\/documentation\/afluent\/asynchronousunitofworkcache","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/Strategy/cacheUntilCompletionOrCancellation":{"kind":"symbol","type":"topic","title":"AsynchronousUnitOfWorkCache.Strategy.cacheUntilCompletionOrCancellation","abstract":[{"type":"text","text":"With the "},{"type":"codeVoice","code":".cacheUntilCompletionOrCancellation"},{"type":"text","text":" strategy, the cache"},{"type":"text","text":" "},{"type":"text","text":"retains the result until the unit of work completes or is cancelled."}],"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/Strategy\/cacheUntilCompletionOrCancellation","url":"\/documentation\/afluent\/asynchronousunitofworkcache\/strategy\/cacheuntilcompletionorcancellation","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"cacheUntilCompletionOrCancellation"}]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/Strategy":{"type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Strategy"}],"role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"Strategy","kind":"identifier"}],"abstract":[{"code":"Strategy","type":"codeVoice"},{"type":"text","text":" represents the available caching strategies for the "},{"code":"AsynchronousUnitOfWorkCache","type":"codeVoice"},{"type":"text","text":"."}],"url":"\/documentation\/afluent\/asynchronousunitofworkcache\/strategy","title":"AsynchronousUnitOfWorkCache.Strategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/Strategy"},"doc://Afluent/documentation/Afluent":{"kind":"symbol","abstract":[],"url":"\/documentation\/afluent","type":"topic","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","role":"collection"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/Strategy/Equatable-Implementations":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/Strategy\/Equatable-Implementations","type":"topic","abstract":[],"url":"\/documentation\/afluent\/asynchronousunitofworkcache\/strategy\/equatable-implementations","kind":"article","role":"collectionGroup","title":"Equatable Implementations"},"doc://Afluent/SQ":{"title":"Swift.Equatable","identifier":"doc:\/\/Afluent\/SQ","type":"unresolvable"},"doc://Afluent/SH":{"title":"Swift.Hashable","identifier":"doc:\/\/Afluent\/SH","type":"unresolvable"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/Strategy/cancelAndRestart":{"abstract":[{"type":"text","text":"This strategy indicates that any existing work should be cancelled before restarting the upstream work again."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/Strategy\/cancelAndRestart","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cancelAndRestart","kind":"identifier"}],"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/afluent\/asynchronousunitofworkcache\/strategy\/cancelandrestart","title":"AsynchronousUnitOfWorkCache.Strategy.cancelAndRestart"}}}