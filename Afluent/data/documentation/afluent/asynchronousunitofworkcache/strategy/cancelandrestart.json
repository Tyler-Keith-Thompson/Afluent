{"sections":[],"metadata":{"modules":[{"name":"Afluent"}],"roleHeading":"Case","externalID":"s:7Afluent27AsynchronousUnitOfWorkCacheC8StrategyO16cancelAndRestartyA2EmF","role":"symbol","remoteSource":{"fileName":"AsynchronousUnitOfWorkCache.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/AsynchronousUnitOfWorkCache.swift#L72"},"title":"AsynchronousUnitOfWorkCache.Strategy.cancelAndRestart","symbolKind":"case","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"cancelAndRestart","kind":"identifier"}]},"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"This strategy indicates that any existing work should be cancelled before restarting the upstream work again."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"cancelAndRestart","kind":"identifier"}],"languages":["swift"],"platforms":["macOS"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asynchronousunitofworkcache\/strategy\/cancelandrestart"]}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/Strategy"]]},"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/Strategy\/cancelAndRestart","interfaceLanguage":"swift"},"references":{"doc://Afluent/documentation/Afluent":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent","url":"\/documentation\/afluent","kind":"symbol","type":"topic","title":"Afluent","role":"collection","abstract":[]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache":{"kind":"symbol","url":"\/documentation\/afluent\/asynchronousunitofworkcache","role":"symbol","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWorkCache","kind":"identifier"}],"navigatorTitle":[{"text":"AsynchronousUnitOfWorkCache","kind":"identifier"}],"title":"AsynchronousUnitOfWorkCache","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","abstract":[]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/Strategy/cancelAndRestart":{"role":"symbol","url":"\/documentation\/afluent\/asynchronousunitofworkcache\/strategy\/cancelandrestart","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/Strategy\/cancelAndRestart","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"cancelAndRestart","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"This strategy indicates that any existing work should be cancelled before restarting the upstream work again."}],"kind":"symbol","title":"AsynchronousUnitOfWorkCache.Strategy.cancelAndRestart"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/Strategy":{"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/Strategy","abstract":[{"code":"Strategy","type":"codeVoice"},{"type":"text","text":" represents the available caching strategies for the "},{"code":"AsynchronousUnitOfWorkCache","type":"codeVoice"},{"type":"text","text":"."}],"title":"AsynchronousUnitOfWorkCache.Strategy","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Strategy","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Strategy"}],"url":"\/documentation\/afluent\/asynchronousunitofworkcache\/strategy"}}}