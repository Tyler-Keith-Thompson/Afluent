{"variants":[{"paths":["\/documentation\/afluent\/asynchronousunitofworksequence"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsynchronousUnitOfWorkSequence"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"UnitOfWork"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"UnitOfWork"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","kind":"typeIdentifier","text":"AsynchronousUnitOfWork"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"code":"AsynchronousUnitOfWorkSequence","type":"codeVoice"},{"type":"text","text":" is an "},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" that wraps an "},{"code":"AsynchronousUnitOfWork","type":"codeVoice"},{"type":"text","text":". It provides a way to use asynchronous units of work in contexts where an "},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" is expected. This sequence emits a single value and then completes."}]},{"type":"aside","name":"Note","content":[{"inlineContent":[{"text":"The sequence will only execute the unit of work once. Subsequent iterations will receive ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":", indicating the end of the sequence.","type":"text"}],"type":"paragraph"}],"style":"note"}],"kind":"content"}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"abstract":[{"text":"A sequence that represents a single execution of an asynchronous unit of work.","type":"text"}],"relationshipsSections":[{"type":"conformsTo","kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/Afluent\/s8SendableP","doc:\/\/Afluent\/Sci"]}],"metadata":{"symbolKind":"struct","roleHeading":"Structure","role":"symbol","title":"AsynchronousUnitOfWorkSequence","modules":[{"name":"Afluent"}],"navigatorTitle":[{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}],"externalID":"s:7Afluent30AsynchronousUnitOfWorkSequenceV","remoteSource":{"fileName":"ToAsyncSequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/Workers\/ToAsyncSequence.swift#L15"},"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}]},"topicSections":[{"anchor":"Structures","generated":true,"title":"Structures","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/AsyncIterator"]},{"anchor":"Instance-Methods","generated":true,"title":"Instance Methods","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/makeAsyncIterator()"]},{"anchor":"Type-Aliases","generated":true,"title":"Type Aliases","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/Element"]},{"anchor":"Default-Implementations","generated":true,"title":"Default Implementations","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/AsyncSequence-Implementations","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/AsyncSequence-Implementations"]}],"references":{"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence/Element":{"navigatorTitle":[{"text":"Element","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/Element","title":"AsynchronousUnitOfWorkSequence.Element","url":"\/documentation\/afluent\/asynchronousunitofworksequence\/element","role":"symbol","type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}],"abstract":[],"kind":"symbol"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsynchronousUnitOfWork"}],"navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWork"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","role":"symbol","abstract":[{"text":"Represents an asynchronous unit of work.","type":"text"}],"url":"\/documentation\/afluent\/asynchronousunitofwork","title":"AsynchronousUnitOfWork","kind":"symbol","type":"topic"},"doc://Afluent/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/Afluent\/s8SendableP","title":"Swift.Sendable"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence/makeAsyncIterator()":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/makeAsyncIterator()","url":"\/documentation\/afluent\/asynchronousunitofworksequence\/makeasynciterator()","kind":"symbol","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeAsyncIterator","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AsynchronousUnitOfWorkSequence","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent30AsynchronousUnitOfWorkSequenceV"},{"text":"<","kind":"text"},{"text":"UnitOfWork","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"AsyncIterator","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent30AsynchronousUnitOfWorkSequenceV13AsyncIteratorV"}],"role":"symbol","title":"makeAsyncIterator()","type":"topic"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence/AsyncIterator":{"abstract":[],"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/AsyncIterator","type":"topic","title":"AsynchronousUnitOfWorkSequence.AsyncIterator","navigatorTitle":[{"kind":"identifier","text":"AsyncIterator"}],"kind":"symbol","url":"\/documentation\/afluent\/asynchronousunitofworksequence\/asynciterator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncIterator"}]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence/AsyncSequence-Implementations":{"title":"AsyncSequence Implementations","type":"topic","role":"collectionGroup","url":"\/documentation\/afluent\/asynchronousunitofworksequence\/asyncsequence-implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/AsyncSequence-Implementations","abstract":[],"kind":"article"},"doc://Afluent/documentation/Afluent":{"type":"topic","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","abstract":[],"url":"\/documentation\/afluent","role":"collection","kind":"symbol"},"doc://Afluent/Sci":{"type":"unresolvable","title":"_Concurrency.AsyncSequence","identifier":"doc:\/\/Afluent\/Sci"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}],"navigatorTitle":[{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}],"url":"\/documentation\/afluent\/asynchronousunitofworksequence","abstract":[{"text":"A sequence that represents a single execution of an asynchronous unit of work.","type":"text"}],"type":"topic","role":"symbol","kind":"symbol","title":"AsynchronousUnitOfWorkSequence"}}}