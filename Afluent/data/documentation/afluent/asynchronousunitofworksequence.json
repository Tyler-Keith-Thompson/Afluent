{"relationshipsSections":[{"kind":"relationships","title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/Afluent\/s8SendableP","doc:\/\/Afluent\/Sci"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"paths":["\/documentation\/afluent\/asynchronousunitofworksequence"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"A sequence that represents a single execution of an asynchronous unit of work."}],"topicSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/AsyncIterator"],"title":"Structures","anchor":"Structures","generated":true},{"title":"Instance Methods","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/makeAsyncIterator()"],"anchor":"Instance-Methods","generated":true},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/Element"],"anchor":"Type-Aliases","title":"Type Aliases","generated":true},{"title":"Default Implementations","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/AsyncSequence-Implementations","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/AsyncSequence-Implementations"],"generated":true,"anchor":"Default-Implementations"}],"metadata":{"remoteSource":{"fileName":"ToAsyncSequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/Workers\/ToAsyncSequence.swift#L15"},"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsynchronousUnitOfWorkSequence"}],"roleHeading":"Structure","externalID":"s:7Afluent30AsynchronousUnitOfWorkSequenceV","role":"symbol","title":"AsynchronousUnitOfWorkSequence","symbolKind":"struct","modules":[{"name":"Afluent"}],"navigatorTitle":[{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}]},"sections":[],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"},{"text":"<","kind":"text"},{"text":"UnitOfWork","kind":"genericParameter"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"UnitOfWork"},{"text":" : ","kind":"text"},{"text":"AsynchronousUnitOfWork","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","kind":"typeIdentifier"}]}]},{"kind":"content","content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"code":"AsynchronousUnitOfWorkSequence","type":"codeVoice"},{"text":" is an ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"text":" that wraps an ","type":"text"},{"type":"codeVoice","code":"AsynchronousUnitOfWork"},{"type":"text","text":". It provides a way to use asynchronous units of work in contexts where an "},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" is expected. This sequence emits a single value and then completes."}]},{"name":"Note","style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The sequence will only execute the unit of work once. Subsequent iterations will receive "},{"type":"codeVoice","code":"nil"},{"text":", indicating the end of the sequence.","type":"text"}]}]}]}],"kind":"symbol","identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence","interfaceLanguage":"swift"},"references":{"doc://Afluent/Sci":{"type":"unresolvable","title":"_Concurrency.AsyncSequence","identifier":"doc:\/\/Afluent\/Sci"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence":{"abstract":[{"type":"text","text":"A sequence that represents a single execution of an asynchronous unit of work."}],"kind":"symbol","type":"topic","title":"AsynchronousUnitOfWorkSequence","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence","url":"\/documentation\/afluent\/asynchronousunitofworksequence","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsynchronousUnitOfWorkSequence"}],"navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWorkSequence"}]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence/Element":{"url":"\/documentation\/afluent\/asynchronousunitofworksequence\/element","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}],"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/Element","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Element"}],"type":"topic","title":"AsynchronousUnitOfWorkSequence.Element"},"doc://Afluent/documentation/Afluent":{"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent","role":"collection","type":"topic","abstract":[],"title":"Afluent","url":"\/documentation\/afluent"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence/AsyncSequence-Implementations":{"role":"collectionGroup","type":"topic","kind":"article","title":"AsyncSequence Implementations","url":"\/documentation\/afluent\/asynchronousunitofworksequence\/asyncsequence-implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/AsyncSequence-Implementations","abstract":[]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"url":"\/documentation\/afluent\/asynchronousunitofwork","abstract":[{"type":"text","text":"Represents an asynchronous unit of work."}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWork"}],"title":"AsynchronousUnitOfWork","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence/AsyncIterator":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/AsyncIterator","type":"topic","abstract":[],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AsyncIterator","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AsyncIterator"}],"url":"\/documentation\/afluent\/asynchronousunitofworksequence\/asynciterator","title":"AsynchronousUnitOfWorkSequence.AsyncIterator","role":"symbol"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence/makeAsyncIterator()":{"abstract":[],"kind":"symbol","type":"topic","title":"makeAsyncIterator()","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/makeAsyncIterator()","url":"\/documentation\/afluent\/asynchronousunitofworksequence\/makeasynciterator()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"makeAsyncIterator","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"AsynchronousUnitOfWorkSequence","preciseIdentifier":"s:7Afluent30AsynchronousUnitOfWorkSequenceV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"UnitOfWork","kind":"typeIdentifier"},{"kind":"text","text":">."},{"preciseIdentifier":"s:7Afluent30AsynchronousUnitOfWorkSequenceV13AsyncIteratorV","text":"AsyncIterator","kind":"typeIdentifier"}]},"doc://Afluent/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/Afluent\/s8SendableP"}}}