{"metadata":{"symbolKind":"class","modules":[{"name":"Afluent"}],"externalID":"s:7Afluent18AsyncSequenceCacheC","navigatorTitle":[{"kind":"identifier","text":"AsyncSequenceCache"}],"title":"AsyncSequenceCache","roleHeading":"Class","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequenceCache"}],"remoteSource":{"fileName":"AsyncSequenceCache.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/AsyncSequenceCache.swift#L20"}},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache"},"abstract":[{"type":"text","text":"A thread-safe cache for sharing async sequences by integer key."},{"type":"text","text":" "},{"type":"text","text":"This cache is commonly used with the "},{"type":"codeVoice","code":"shareFromCache"},{"type":"text","text":" operator to reuse sequences."}],"kind":"symbol","relationshipsSections":[{"kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/Afluent\/s8SendableP"],"title":"Conforms To"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequenceCache"}]}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Example","anchor":"Example"},{"syntax":"swift","type":"codeListing","code":["let cache = AsyncSequenceCache()","let sequence = fetchData() \/\/ Some async sequence","let shared = sequence.shareFromCache(cache, strategy: .cacheUntilCompletionOrCancellation, keys: \"myKey\")","for await value in shared { print(value) }"]}]}],"variants":[{"paths":["\/documentation\/afluent\/asyncsequencecache"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"topicSections":[{"generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache\/init()"],"title":"Initializers","anchor":"Initializers"},{"generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache\/Strategy"],"title":"Enumerations","anchor":"Enumerations"}],"references":{"doc://Afluent/documentation/Afluent":{"type":"topic","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","abstract":[],"url":"\/documentation\/afluent","role":"collection","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequenceCache/Strategy":{"abstract":[{"type":"codeVoice","code":"Strategy"},{"type":"text","text":" represents the available caching strategies for the "},{"type":"codeVoice","code":"AsyncSequenceCache"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"These strategies determine how long the cache retains the async sequences."}],"title":"AsyncSequenceCache.Strategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache\/Strategy","url":"\/documentation\/afluent\/asyncsequencecache\/strategy","type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Strategy"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Strategy"}]},"doc://Afluent/documentation/Afluent/AsyncSequenceCache":{"navigatorTitle":[{"kind":"identifier","text":"AsyncSequenceCache"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache","title":"AsyncSequenceCache","abstract":[{"text":"A thread-safe cache for sharing async sequences by integer key.","type":"text"},{"text":" ","type":"text"},{"text":"This cache is commonly used with the ","type":"text"},{"code":"shareFromCache","type":"codeVoice"},{"text":" operator to reuse sequences.","type":"text"}],"role":"symbol","url":"\/documentation\/afluent\/asyncsequencecache","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequenceCache"}],"type":"topic","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequenceCache/init()":{"url":"\/documentation\/afluent\/asyncsequencecache\/init()","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"abstract":[{"text":"Creates a new, empty async sequence cache.","type":"text"}],"role":"symbol","kind":"symbol","title":"init()","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache\/init()"},"doc://Afluent/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/Afluent\/s8SendableP"}}}