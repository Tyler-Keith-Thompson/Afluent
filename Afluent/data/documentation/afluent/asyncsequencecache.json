{"topicSections":[{"generated":true,"title":"Initializers","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache\/init()"],"anchor":"Initializers"},{"generated":true,"title":"Enumerations","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache\/Strategy"],"anchor":"Enumerations"}],"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/Afluent\/s8SendableP"],"type":"conformsTo","kind":"relationships"}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asyncsequencecache"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequenceCache"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"level":2,"text":"Example","type":"heading","anchor":"Example"},{"code":["let cache = AsyncSequenceCache()","let sequence = fetchData() \/\/ Some async sequence","let shared = sequence.shareFromCache(cache, strategy: .cacheUntilCompletionOrCancellation, keys: \"myKey\")","for await value in shared { print(value) }"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"metadata":{"title":"AsyncSequenceCache","externalID":"s:7Afluent18AsyncSequenceCacheC","roleHeading":"Class","role":"symbol","symbolKind":"class","modules":[{"name":"Afluent"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncSequenceCache","kind":"identifier"}],"navigatorTitle":[{"text":"AsyncSequenceCache","kind":"identifier"}],"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/AsyncSequenceCache.swift#L20","fileName":"AsyncSequenceCache.swift"}},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","abstract":[{"type":"text","text":"A thread-safe cache for sharing async sequences by integer key."},{"type":"text","text":" "},{"type":"text","text":"This cache is commonly used with the "},{"type":"codeVoice","code":"shareFromCache"},{"type":"text","text":" operator to reuse sequences."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache"},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"references":{"doc://Afluent/documentation/Afluent/AsyncSequenceCache/Strategy":{"type":"topic","url":"\/documentation\/afluent\/asyncsequencecache\/strategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache\/Strategy","abstract":[{"type":"codeVoice","code":"Strategy"},{"type":"text","text":" represents the available caching strategies for the "},{"type":"codeVoice","code":"AsyncSequenceCache"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"These strategies determine how long the cache retains the async sequences."}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Strategy","kind":"identifier"}],"kind":"symbol","role":"symbol","title":"AsyncSequenceCache.Strategy","navigatorTitle":[{"text":"Strategy","kind":"identifier"}]},"doc://Afluent/documentation/Afluent":{"title":"Afluent","url":"\/documentation\/afluent","role":"collection","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol","abstract":[]},"doc://Afluent/documentation/Afluent/AsyncSequenceCache/init()":{"abstract":[{"text":"Creates a new, empty async sequence cache.","type":"text"}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"role":"symbol","url":"\/documentation\/afluent\/asyncsequencecache\/init()","title":"init()","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache\/init()","type":"topic","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequenceCache":{"abstract":[{"text":"A thread-safe cache for sharing async sequences by integer key.","type":"text"},{"text":" ","type":"text"},{"text":"This cache is commonly used with the ","type":"text"},{"code":"shareFromCache","type":"codeVoice"},{"text":" operator to reuse sequences.","type":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache","navigatorTitle":[{"kind":"identifier","text":"AsyncSequenceCache"}],"title":"AsyncSequenceCache","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequenceCache"}],"url":"\/documentation\/afluent\/asyncsequencecache","kind":"symbol","type":"topic","role":"symbol"},"doc://Afluent/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/Afluent\/s8SendableP","title":"Swift.Sendable"}}}