{"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Strategy","kind":"identifier"}]}],"kind":"declarations"}],"metadata":{"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/AsyncSequenceCache.swift#L58","fileName":"AsyncSequenceCache.swift"},"role":"symbol","symbolKind":"enum","extendedModule":"Afluent","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Strategy"}],"externalID":"s:7Afluent18AsyncSequenceCacheC8StrategyO","modules":[{"name":"Afluent"}],"navigatorTitle":[{"kind":"identifier","text":"Strategy"}],"roleHeading":"Enumeration","title":"AsyncSequenceCache.Strategy"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache\/Strategy"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asyncsequencecache\/strategy"]}],"abstract":[{"code":"Strategy","type":"codeVoice"},{"text":" represents the available caching strategies for the ","type":"text"},{"code":"AsyncSequenceCache","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"These strategies determine how long the cache retains the async sequences.","type":"text"}],"topicSections":[{"anchor":"Enumeration-Cases","title":"Enumeration Cases","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache\/Strategy\/cacheUntilCompletionOrCancellation"],"generated":true},{"anchor":"Default-Implementations","title":"Default Implementations","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache\/Strategy\/Equatable-Implementations"],"generated":true}],"sections":[],"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/Afluent\/SQ","doc:\/\/Afluent\/SH"],"kind":"relationships","type":"conformsTo"}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache"]]},"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://Afluent/documentation/Afluent/AsyncSequenceCache":{"navigatorTitle":[{"kind":"identifier","text":"AsyncSequenceCache"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache","title":"AsyncSequenceCache","abstract":[{"text":"A thread-safe cache for sharing async sequences by integer key.","type":"text"},{"text":" ","type":"text"},{"text":"This cache is commonly used with the ","type":"text"},{"code":"shareFromCache","type":"codeVoice"},{"text":" operator to reuse sequences.","type":"text"}],"role":"symbol","url":"\/documentation\/afluent\/asyncsequencecache","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequenceCache"}],"type":"topic","kind":"symbol"},"doc://Afluent/SH":{"identifier":"doc:\/\/Afluent\/SH","title":"Swift.Hashable","type":"unresolvable"},"doc://Afluent/documentation/Afluent/AsyncSequenceCache/Strategy/Equatable-Implementations":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache\/Strategy\/Equatable-Implementations","type":"topic","title":"Equatable Implementations","url":"\/documentation\/afluent\/asyncsequencecache\/strategy\/equatable-implementations","kind":"article","role":"collectionGroup","abstract":[]},"doc://Afluent/SQ":{"title":"Swift.Equatable","type":"unresolvable","identifier":"doc:\/\/Afluent\/SQ"},"doc://Afluent/documentation/Afluent/AsyncSequenceCache/Strategy":{"abstract":[{"type":"codeVoice","code":"Strategy"},{"type":"text","text":" represents the available caching strategies for the "},{"type":"codeVoice","code":"AsyncSequenceCache"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"These strategies determine how long the cache retains the async sequences."}],"title":"AsyncSequenceCache.Strategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache\/Strategy","url":"\/documentation\/afluent\/asyncsequencecache\/strategy","type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Strategy"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Strategy"}]},"doc://Afluent/documentation/Afluent":{"type":"topic","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","abstract":[],"url":"\/documentation\/afluent","role":"collection","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequenceCache/Strategy/cacheUntilCompletionOrCancellation":{"role":"symbol","title":"AsyncSequenceCache.Strategy.cacheUntilCompletionOrCancellation","abstract":[{"text":"With the ","type":"text"},{"type":"codeVoice","code":".cacheUntilCompletionOrCancellation"},{"text":" strategy, the cache","type":"text"},{"text":" ","type":"text"},{"text":"retains the result until the sequence completes or is canceled.","type":"text"},{"text":" ","type":"text"},{"text":"This strategy is used when it is desirable to keep the cached sequence","type":"text"},{"text":" ","type":"text"},{"text":"active only for its lifetime, releasing it once it finishes or is cancelled.","type":"text"}],"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cacheUntilCompletionOrCancellation","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequencecache\/strategy\/cacheuntilcompletionorcancellation","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache\/Strategy\/cacheUntilCompletionOrCancellation","kind":"symbol","type":"topic"}}}