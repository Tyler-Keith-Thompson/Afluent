{"topicSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache\/Strategy\/cacheUntilCompletionOrCancellation"],"title":"Enumeration Cases","anchor":"Enumeration-Cases","generated":true},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache\/Strategy\/Equatable-Implementations"],"title":"Default Implementations","anchor":"Default-Implementations","generated":true}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache\/Strategy"},"abstract":[{"type":"codeVoice","code":"Strategy"},{"type":"text","text":" represents the available caching strategies for the "},{"type":"codeVoice","code":"AsyncSequenceCache"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"These strategies determine how long the cache retains the async sequences."}],"relationshipsSections":[{"identifiers":["doc:\/\/Afluent\/SQ","doc:\/\/Afluent\/SH"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Strategy","kind":"identifier"}],"languages":["swift"]}]}],"variants":[{"paths":["\/documentation\/afluent\/asyncsequencecache\/strategy"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"externalID":"s:7Afluent18AsyncSequenceCacheC8StrategyO","roleHeading":"Enumeration","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Strategy","kind":"identifier"}],"extendedModule":"Afluent","navigatorTitle":[{"text":"Strategy","kind":"identifier"}],"title":"AsyncSequenceCache.Strategy","remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/AsyncSequenceCache.swift#L58","fileName":"AsyncSequenceCache.swift"},"modules":[{"name":"Afluent"}],"symbolKind":"enum"},"sections":[],"kind":"symbol","references":{"doc://Afluent/documentation/Afluent/AsyncSequenceCache/Strategy/Equatable-Implementations":{"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache\/Strategy\/Equatable-Implementations","abstract":[],"title":"Equatable Implementations","role":"collectionGroup","url":"\/documentation\/afluent\/asyncsequencecache\/strategy\/equatable-implementations","kind":"article"},"doc://Afluent/documentation/Afluent/AsyncSequenceCache/Strategy/cacheUntilCompletionOrCancellation":{"type":"topic","url":"\/documentation\/afluent\/asyncsequencecache\/strategy\/cacheuntilcompletionorcancellation","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache\/Strategy\/cacheUntilCompletionOrCancellation","role":"symbol","kind":"symbol","title":"AsyncSequenceCache.Strategy.cacheUntilCompletionOrCancellation","abstract":[{"type":"text","text":"With the "},{"code":".cacheUntilCompletionOrCancellation","type":"codeVoice"},{"type":"text","text":" strategy, the cache"},{"type":"text","text":" "},{"type":"text","text":"retains the result until the sequence completes or is canceled."},{"type":"text","text":" "},{"type":"text","text":"This strategy is used when it is desirable to keep the cached sequence"},{"type":"text","text":" "},{"type":"text","text":"active only for its lifetime, releasing it once it finishes or is cancelled."}],"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cacheUntilCompletionOrCancellation"}]},"doc://Afluent/documentation/Afluent":{"title":"Afluent","url":"\/documentation\/afluent","role":"collection","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol","abstract":[]},"doc://Afluent/SH":{"type":"unresolvable","identifier":"doc:\/\/Afluent\/SH","title":"Swift.Hashable"},"doc://Afluent/documentation/Afluent/AsyncSequenceCache":{"abstract":[{"text":"A thread-safe cache for sharing async sequences by integer key.","type":"text"},{"text":" ","type":"text"},{"text":"This cache is commonly used with the ","type":"text"},{"code":"shareFromCache","type":"codeVoice"},{"text":" operator to reuse sequences.","type":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache","navigatorTitle":[{"kind":"identifier","text":"AsyncSequenceCache"}],"title":"AsyncSequenceCache","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequenceCache"}],"url":"\/documentation\/afluent\/asyncsequencecache","kind":"symbol","type":"topic","role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequenceCache/Strategy":{"type":"topic","url":"\/documentation\/afluent\/asyncsequencecache\/strategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache\/Strategy","abstract":[{"type":"codeVoice","code":"Strategy"},{"type":"text","text":" represents the available caching strategies for the "},{"type":"codeVoice","code":"AsyncSequenceCache"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"These strategies determine how long the cache retains the async sequences."}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Strategy","kind":"identifier"}],"kind":"symbol","role":"symbol","title":"AsyncSequenceCache.Strategy","navigatorTitle":[{"text":"Strategy","kind":"identifier"}]},"doc://Afluent/SQ":{"identifier":"doc:\/\/Afluent\/SQ","title":"Swift.Equatable","type":"unresolvable"}}}