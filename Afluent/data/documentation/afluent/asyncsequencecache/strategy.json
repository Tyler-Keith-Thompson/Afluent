{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Strategy","kind":"identifier"}]}]}],"relationshipsSections":[{"identifiers":["doc:\/\/Afluent\/SQ","doc:\/\/Afluent\/SH"],"title":"Conforms To","kind":"relationships","type":"conformsTo"}],"metadata":{"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/AsyncSequenceCache.swift#L58","fileName":"AsyncSequenceCache.swift"},"modules":[{"name":"Afluent"}],"role":"symbol","roleHeading":"Enumeration","externalID":"s:7Afluent18AsyncSequenceCacheC8StrategyO","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Strategy","kind":"identifier"}],"navigatorTitle":[{"text":"Strategy","kind":"identifier"}],"extendedModule":"Afluent","title":"AsyncSequenceCache.Strategy","symbolKind":"enum"},"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"topicSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache\/Strategy\/cacheUntilCompletionOrCancellation"],"title":"Enumeration Cases","anchor":"Enumeration-Cases","generated":true},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache\/Strategy\/Equatable-Implementations"],"title":"Default Implementations","anchor":"Default-Implementations","generated":true}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache\/Strategy"},"kind":"symbol","variants":[{"paths":["\/documentation\/afluent\/asyncsequencecache\/strategy"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"code":"Strategy","type":"codeVoice"},{"text":" represents the available caching strategies for the ","type":"text"},{"code":"AsyncSequenceCache","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"These strategies determine how long the cache retains the async sequences.","type":"text"}],"references":{"doc://Afluent/documentation/Afluent/AsyncSequenceCache/Strategy/cacheUntilCompletionOrCancellation":{"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cacheUntilCompletionOrCancellation"}],"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"With the "},{"code":".cacheUntilCompletionOrCancellation","type":"codeVoice"},{"type":"text","text":" strategy, the cache"},{"type":"text","text":" "},{"type":"text","text":"retains the result until the sequence completes or is canceled."},{"type":"text","text":" "},{"type":"text","text":"This strategy is used when it is desirable to keep the cached sequence"},{"type":"text","text":" "},{"type":"text","text":"active only for its lifetime, releasing it once it finishes or is cancelled."}],"title":"AsyncSequenceCache.Strategy.cacheUntilCompletionOrCancellation","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache\/Strategy\/cacheUntilCompletionOrCancellation","url":"\/documentation\/afluent\/asyncsequencecache\/strategy\/cacheuntilcompletionorcancellation","role":"symbol"},"doc://Afluent/documentation/Afluent":{"abstract":[],"url":"\/documentation\/afluent","role":"collection","type":"topic","kind":"symbol","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent"},"doc://Afluent/documentation/Afluent/AsyncSequenceCache":{"type":"topic","url":"\/documentation\/afluent\/asyncsequencecache","abstract":[{"type":"text","text":"A thread-safe cache for sharing async sequences by integer key."},{"type":"text","text":" "},{"type":"text","text":"This cache is commonly used with the "},{"type":"codeVoice","code":"shareFromCache"},{"type":"text","text":" operator to reuse sequences."}],"title":"AsyncSequenceCache","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncSequenceCache","kind":"identifier"}],"navigatorTitle":[{"text":"AsyncSequenceCache","kind":"identifier"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequenceCache/Strategy":{"abstract":[{"code":"Strategy","type":"codeVoice"},{"type":"text","text":" represents the available caching strategies for the "},{"code":"AsyncSequenceCache","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"These strategies determine how long the cache retains the async sequences."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache\/Strategy","navigatorTitle":[{"text":"Strategy","kind":"identifier"}],"type":"topic","title":"AsyncSequenceCache.Strategy","url":"\/documentation\/afluent\/asyncsequencecache\/strategy","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Strategy","kind":"identifier"}],"kind":"symbol"},"doc://Afluent/SQ":{"type":"unresolvable","identifier":"doc:\/\/Afluent\/SQ","title":"Swift.Equatable"},"doc://Afluent/documentation/Afluent/AsyncSequenceCache/Strategy/Equatable-Implementations":{"role":"collectionGroup","title":"Equatable Implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache\/Strategy\/Equatable-Implementations","type":"topic","kind":"article","url":"\/documentation\/afluent\/asyncsequencecache\/strategy\/equatable-implementations","abstract":[]},"doc://Afluent/SH":{"type":"unresolvable","identifier":"doc:\/\/Afluent\/SH","title":"Swift.Hashable"}}}