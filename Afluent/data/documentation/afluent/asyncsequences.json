{"schemaVersion":{"patch":0,"major":0,"minor":3},"topicSections":[{"generated":true,"anchor":"Classes","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Retry","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryAfterFlatMapping","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOn","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOnAfterFlatMapping"],"title":"Classes"},{"generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AnyAsyncIterator","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AnyAsyncSequence","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Catch","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Collect","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Decode","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Deferred","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Delay","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Dematerialize","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Encode","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/FlatMap","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/GroupBy","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/MapError","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Materialize","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/ReplaceError","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/ReplaceNil","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Throttle","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/TimerSequence"],"title":"Structures","anchor":"Structures"},{"anchor":"Enumerations","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Completion","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Event"],"title":"Enumerations","generated":true}],"sections":[],"variants":[{"paths":["\/documentation\/afluent\/asyncsequences"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncSequences"}]}]},{"kind":"content","content":[{"level":2,"text":"Overview","anchor":"overview","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"AsyncSequences","type":"codeVoice"},{"type":"text","text":" enum itself doesnâ€™t contain values, serving solely as a container for nested types and functionalities to keep them organized."},{"text":" ","type":"text"},{"type":"text","text":"For example, it might contain static methods, nested types, or enums that deal with specific aspects of asynchronous work."}]}]}],"metadata":{"modules":[{"name":"Afluent"}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncSequences"}],"roleHeading":"Enumeration","navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}],"remoteSource":{"fileName":"AsyncSequences.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/AsyncSequences.swift#L14"},"role":"symbol","title":"AsyncSequences","externalID":"s:7Afluent14AsyncSequencesO","symbolKind":"enum"},"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/HandleEvents":{"role":"symbol","navigatorTitle":[{"text":"HandleEvents","kind":"identifier"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HandleEvents","kind":"identifier"}],"abstract":[],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents","url":"\/documentation\/afluent\/asyncsequences\/handleevents","title":"AsyncSequences.HandleEvents"},"doc://Afluent/documentation/Afluent/AsyncSequences/Encode":{"url":"\/documentation\/afluent\/asyncsequences\/encode","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Encode","kind":"symbol","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Encode"}],"navigatorTitle":[{"kind":"identifier","text":"Encode"}],"type":"topic","title":"AsyncSequences.Encode"},"doc://Afluent/documentation/Afluent/AsyncSequences/RetryOn":{"navigatorTitle":[{"kind":"identifier","text":"RetryOn"}],"kind":"symbol","title":"AsyncSequences.RetryOn","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOn","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"RetryOn","kind":"identifier"}],"role":"symbol","abstract":[],"url":"\/documentation\/afluent\/asyncsequences\/retryon"},"doc://Afluent/documentation/Afluent/AsyncSequences/Completion":{"navigatorTitle":[{"text":"Completion","kind":"identifier"}],"kind":"symbol","title":"AsyncSequences.Completion","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Completion","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Completion"}],"role":"symbol","abstract":[{"type":"text","text":"A type that represents the completion of a sequence, either due to a normal completion with "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" or an error."}],"url":"\/documentation\/afluent\/asyncsequences\/completion"},"doc://Afluent/documentation/Afluent":{"kind":"symbol","abstract":[],"url":"\/documentation\/afluent","type":"topic","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","role":"collection"},"doc://Afluent/documentation/Afluent/AsyncSequences/Just":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Just","kind":"identifier"}],"title":"AsyncSequences.Just","navigatorTitle":[{"text":"Just","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just","kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/just","abstract":[{"text":"An ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" that emits a single specified element and then completes."}]},"doc://Afluent/documentation/Afluent/AsyncSequences/Decode":{"kind":"symbol","type":"topic","url":"\/documentation\/afluent\/asyncsequences\/decode","navigatorTitle":[{"kind":"identifier","text":"Decode"}],"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Decode","role":"symbol","title":"AsyncSequences.Decode","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Decode","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure":{"type":"topic","kind":"symbol","navigatorTitle":[{"text":"AssertNoFailure","kind":"identifier"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AssertNoFailure","kind":"identifier"}],"abstract":[],"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure","title":"AsyncSequences.AssertNoFailure","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure"},"doc://Afluent/documentation/Afluent/AsyncSequences/RetryAfterFlatMapping":{"type":"topic","kind":"symbol","title":"AsyncSequences.RetryAfterFlatMapping","abstract":[],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RetryAfterFlatMapping"}],"url":"\/documentation\/afluent\/asyncsequences\/retryafterflatmapping","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryAfterFlatMapping","navigatorTitle":[{"kind":"identifier","text":"RetryAfterFlatMapping"}],"role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/ReplaceNil":{"type":"topic","abstract":[],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReplaceNil"}],"navigatorTitle":[{"text":"ReplaceNil","kind":"identifier"}],"role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/replacenil","title":"AsyncSequences.ReplaceNil","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/ReplaceNil"},"doc://Afluent/documentation/Afluent/AsyncSequences/Throttle":{"url":"\/documentation\/afluent\/asyncsequences\/throttle","title":"AsyncSequences.Throttle","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Throttle"}],"role":"symbol","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Throttle","kind":"symbol","type":"topic","navigatorTitle":[{"text":"Throttle","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/Collect":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Collect"}],"navigatorTitle":[{"kind":"identifier","text":"Collect"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Collect","role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/collect","type":"topic","abstract":[],"kind":"symbol","title":"AsyncSequences.Collect"},"doc://Afluent/documentation/Afluent/AsyncSequences/TimerSequence":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"TimerSequence"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"TimerSequence"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/TimerSequence","abstract":[{"text":"A sequence that repeatedly emits an instant on a given interval.","type":"text"}],"kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/timersequence","title":"AsyncSequences.TimerSequence"},"doc://Afluent/documentation/Afluent/AsyncSequences/ReplaceError":{"type":"topic","kind":"symbol","title":"AsyncSequences.ReplaceError","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ReplaceError","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences\/replaceerror","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/ReplaceError","navigatorTitle":[{"text":"ReplaceError","kind":"identifier"}],"role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/GroupBy":{"url":"\/documentation\/afluent\/asyncsequences\/groupby","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"GroupBy","kind":"identifier"}],"abstract":[],"navigatorTitle":[{"kind":"identifier","text":"GroupBy"}],"kind":"symbol","title":"AsyncSequences.GroupBy","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/GroupBy"},"doc://Afluent/documentation/Afluent/AsyncSequences/Materialize":{"abstract":[],"type":"topic","url":"\/documentation\/afluent\/asyncsequences\/materialize","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Materialize"}],"kind":"symbol","title":"AsyncSequences.Materialize","navigatorTitle":[{"text":"Materialize","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Materialize","role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/AnyAsyncIterator":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AnyAsyncIterator","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnyAsyncIterator"}],"title":"AsyncSequences.AnyAsyncIterator","url":"\/documentation\/afluent\/asyncsequences\/anyasynciterator","role":"symbol","navigatorTitle":[{"text":"AnyAsyncIterator","kind":"identifier"}],"abstract":[],"kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/FlatMap":{"type":"topic","kind":"symbol","navigatorTitle":[{"text":"FlatMap","kind":"identifier"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlatMap"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/FlatMap","url":"\/documentation\/afluent\/asyncsequences\/flatmap","title":"AsyncSequences.FlatMap","abstract":[]},"doc://Afluent/documentation/Afluent/AsyncSequences/RetryOnAfterFlatMapping":{"title":"AsyncSequences.RetryOnAfterFlatMapping","navigatorTitle":[{"text":"RetryOnAfterFlatMapping","kind":"identifier"}],"abstract":[],"url":"\/documentation\/afluent\/asyncsequences\/retryonafterflatmapping","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOnAfterFlatMapping","role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"RetryOnAfterFlatMapping","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/MapError":{"type":"topic","kind":"symbol","title":"AsyncSequences.MapError","abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"MapError","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences\/maperror","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/MapError","navigatorTitle":[{"kind":"identifier","text":"MapError"}],"role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/AnyAsyncSequence":{"type":"topic","kind":"symbol","title":"AsyncSequences.AnyAsyncSequence","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyAsyncSequence","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences\/anyasyncsequence","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AnyAsyncSequence","navigatorTitle":[{"text":"AnyAsyncSequence","kind":"identifier"}],"role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/Event":{"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Event","abstract":[{"text":"Represents the different kinds of events that can be emitted by ","type":"text"},{"type":"codeVoice","code":"Materialize"},{"text":".","type":"text"}],"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Event"}],"navigatorTitle":[{"text":"Event","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences\/event","title":"AsyncSequences.Event","type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/Delay":{"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Delay","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Delay"}],"abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Delay"}],"url":"\/documentation\/afluent\/asyncsequences\/delay","title":"AsyncSequences.Delay","type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/Deferred":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Deferred"}],"kind":"symbol","title":"AsyncSequences.Deferred","url":"\/documentation\/afluent\/asyncsequences\/deferred","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Deferred","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Deferred","abstract":[{"text":"An asynchronous sequence that defers the execution of another asynchronous sequence until iteration.","type":"text"}],"type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"role":"symbol","navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}],"type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncSequences","kind":"identifier"}],"abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","url":"\/documentation\/afluent\/asyncsequences","title":"AsyncSequences"},"doc://Afluent/documentation/Afluent/AsyncSequences/Catch":{"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Catch","role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/catch","navigatorTitle":[{"kind":"identifier","text":"Catch"}],"abstract":[],"title":"AsyncSequences.Catch","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Catch","kind":"identifier"}],"type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/Retry":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Retry","url":"\/documentation\/afluent\/asyncsequences\/retry","type":"topic","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Retry","kind":"identifier"}],"navigatorTitle":[{"text":"Retry","kind":"identifier"}],"role":"symbol","abstract":[],"title":"AsyncSequences.Retry"},"doc://Afluent/documentation/Afluent/AsyncSequences/Dematerialize":{"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Dematerialize","title":"AsyncSequences.Dematerialize","url":"\/documentation\/afluent\/asyncsequences\/dematerialize","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Dematerialize","kind":"identifier"}],"navigatorTitle":[{"text":"Dematerialize","kind":"identifier"}],"type":"topic","abstract":[],"role":"symbol"}}}