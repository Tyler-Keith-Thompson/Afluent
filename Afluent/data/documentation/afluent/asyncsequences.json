{"variants":[{"paths":["\/documentation\/afluent\/asyncsequences"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequences"}]}]},{"kind":"content","content":[{"anchor":"overview","type":"heading","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"AsyncSequences","type":"codeVoice"},{"type":"text","text":" enum itself doesnâ€™t contain values, serving solely as a container for nested types and functionalities to keep them organized."},{"text":" ","type":"text"},{"text":"For example, it might contain static methods, nested types, or enums that deal with specific aspects of asynchronous work.","type":"text"}]}]}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"role":"symbol","modules":[{"name":"Afluent"}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncSequences","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"externalID":"s:7Afluent14AsyncSequencesO","remoteSource":{"fileName":"AsyncSequences.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/AsyncSequences.swift#L14"},"title":"AsyncSequences","roleHeading":"Enumeration","symbolKind":"enum"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences"},"abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"topicSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Retry","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryAfterFlatMapping","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOn","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOnAfterFlatMapping"],"generated":true,"anchor":"Classes","title":"Classes"},{"generated":true,"anchor":"Structures","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AnyAsyncIterator","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AnyAsyncSequence","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Catch","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Collect","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Decode","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Deferred","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Delay","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Dematerialize","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Encode","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/FlatMap","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/GroupBy","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/MapError","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Materialize","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/ReplaceError","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/ReplaceNil","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Throttle","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/TimerSequence"],"title":"Structures"},{"title":"Enumerations","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Completion","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Event"],"generated":true,"anchor":"Enumerations"}],"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/MapError":{"url":"\/documentation\/afluent\/asyncsequences\/maperror","navigatorTitle":[{"text":"MapError","kind":"identifier"}],"title":"AsyncSequences.MapError","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/MapError","abstract":[],"type":"topic","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"MapError","kind":"identifier"}],"role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/Completion":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Completion","url":"\/documentation\/afluent\/asyncsequences\/completion","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Completion"}],"navigatorTitle":[{"kind":"identifier","text":"Completion"}],"kind":"symbol","abstract":[{"type":"text","text":"A type that represents the completion of a sequence, either due to a normal completion with "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" or an error."}],"title":"AsyncSequences.Completion","type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/TimerSequence":{"url":"\/documentation\/afluent\/asyncsequences\/timersequence","abstract":[{"type":"text","text":"A sequence that repeatedly emits an instant on a given interval."}],"title":"AsyncSequences.TimerSequence","kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TimerSequence","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/TimerSequence","role":"symbol","navigatorTitle":[{"text":"TimerSequence","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"AssertNoFailure","kind":"identifier"}],"navigatorTitle":[{"text":"AssertNoFailure","kind":"identifier"}],"abstract":[],"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure","type":"topic","title":"AsyncSequences.AssertNoFailure","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure","role":"symbol","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/Retry":{"navigatorTitle":[{"kind":"identifier","text":"Retry"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Retry","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Retry","abstract":[],"kind":"symbol","role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/retry","title":"AsyncSequences.Retry","type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/FlatMap":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlatMap"}],"navigatorTitle":[{"text":"FlatMap","kind":"identifier"}],"abstract":[],"url":"\/documentation\/afluent\/asyncsequences\/flatmap","type":"topic","title":"AsyncSequences.FlatMap","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/FlatMap","role":"symbol","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/Throttle":{"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Throttle","role":"symbol","navigatorTitle":[{"text":"Throttle","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences\/throttle","title":"AsyncSequences.Throttle","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Throttle","kind":"identifier"}],"type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/RetryOnAfterFlatMapping":{"role":"symbol","abstract":[],"navigatorTitle":[{"text":"RetryOnAfterFlatMapping","kind":"identifier"}],"title":"AsyncSequences.RetryOnAfterFlatMapping","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RetryOnAfterFlatMapping","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOnAfterFlatMapping","url":"\/documentation\/afluent\/asyncsequences\/retryonafterflatmapping"},"doc://Afluent/documentation/Afluent/AsyncSequences/ReplaceError":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ReplaceError"}],"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/ReplaceError","url":"\/documentation\/afluent\/asyncsequences\/replaceerror","kind":"symbol","title":"AsyncSequences.ReplaceError","type":"topic","abstract":[],"navigatorTitle":[{"text":"ReplaceError","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/AnyAsyncIterator":{"kind":"symbol","title":"AsyncSequences.AnyAsyncIterator","url":"\/documentation\/afluent\/asyncsequences\/anyasynciterator","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AnyAsyncIterator","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"AnyAsyncIterator","kind":"identifier"}],"abstract":[],"navigatorTitle":[{"kind":"identifier","text":"AnyAsyncIterator"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/Decode":{"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Decode","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Decode"}],"url":"\/documentation\/afluent\/asyncsequences\/decode","navigatorTitle":[{"text":"Decode","kind":"identifier"}],"title":"AsyncSequences.Decode","abstract":[],"type":"topic","role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/AnyAsyncSequence":{"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AnyAsyncSequence","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnyAsyncSequence"}],"url":"\/documentation\/afluent\/asyncsequences\/anyasyncsequence","navigatorTitle":[{"text":"AnyAsyncSequence","kind":"identifier"}],"title":"AsyncSequences.AnyAsyncSequence","abstract":[],"type":"topic","role":"symbol"},"doc://Afluent/documentation/Afluent":{"abstract":[],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent","title":"Afluent","url":"\/documentation\/afluent","type":"topic","role":"collection"},"doc://Afluent/documentation/Afluent/AsyncSequences/Delay":{"role":"symbol","abstract":[],"navigatorTitle":[{"text":"Delay","kind":"identifier"}],"title":"AsyncSequences.Delay","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Delay","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Delay","url":"\/documentation\/afluent\/asyncsequences\/delay"},"doc://Afluent/documentation/Afluent/AsyncSequences/Materialize":{"title":"AsyncSequences.Materialize","navigatorTitle":[{"kind":"identifier","text":"Materialize"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Materialize","url":"\/documentation\/afluent\/asyncsequences\/materialize","kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Materialize","kind":"identifier"}],"abstract":[]},"doc://Afluent/documentation/Afluent/AsyncSequences/GroupBy":{"role":"symbol","navigatorTitle":[{"text":"GroupBy","kind":"identifier"}],"abstract":[],"title":"AsyncSequences.GroupBy","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/GroupBy","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"GroupBy"}],"url":"\/documentation\/afluent\/asyncsequences\/groupby","type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/RetryOn":{"abstract":[],"type":"topic","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOn","title":"AsyncSequences.RetryOn","url":"\/documentation\/afluent\/asyncsequences\/retryon","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"RetryOn","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"RetryOn"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/Dematerialize":{"navigatorTitle":[{"kind":"identifier","text":"Dematerialize"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Dematerialize","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Dematerialize","abstract":[],"kind":"symbol","role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/dematerialize","type":"topic","title":"AsyncSequences.Dematerialize"},"doc://Afluent/documentation/Afluent/AsyncSequences/ReplaceNil":{"type":"topic","role":"symbol","kind":"symbol","abstract":[],"url":"\/documentation\/afluent\/asyncsequences\/replacenil","title":"AsyncSequences.ReplaceNil","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/ReplaceNil","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ReplaceNil"}],"navigatorTitle":[{"text":"ReplaceNil","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/HandleEvents":{"type":"topic","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HandleEvents","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/handleevents","navigatorTitle":[{"text":"HandleEvents","kind":"identifier"}],"role":"symbol","title":"AsyncSequences.HandleEvents"},"doc://Afluent/documentation/Afluent/AsyncSequences/Encode":{"url":"\/documentation\/afluent\/asyncsequences\/encode","title":"AsyncSequences.Encode","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Encode","abstract":[],"kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Encode"}],"navigatorTitle":[{"text":"Encode","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsyncSequences":{"abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"AsyncSequences","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences","navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}],"type":"topic","title":"AsyncSequences","role":"symbol","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences"},"doc://Afluent/documentation/Afluent/AsyncSequences/Deferred":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Deferred","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Deferred","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences\/deferred","title":"AsyncSequences.Deferred","kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Deferred"}],"abstract":[{"type":"text","text":"An asynchronous sequence that defers the execution of another asynchronous sequence until iteration."}]},"doc://Afluent/documentation/Afluent/AsyncSequences/RetryAfterFlatMapping":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RetryAfterFlatMapping"}],"navigatorTitle":[{"kind":"identifier","text":"RetryAfterFlatMapping"}],"type":"topic","title":"AsyncSequences.RetryAfterFlatMapping","abstract":[],"role":"symbol","kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/retryafterflatmapping","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryAfterFlatMapping"},"doc://Afluent/documentation/Afluent/AsyncSequences/Event":{"role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Event"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Represents the different kinds of events that can be emitted by "},{"type":"codeVoice","code":"Materialize"},{"text":".","type":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Event","navigatorTitle":[{"text":"Event","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences\/event","title":"AsyncSequences.Event"},"doc://Afluent/documentation/Afluent/AsyncSequences/Catch":{"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Catch","url":"\/documentation\/afluent\/asyncsequences\/catch","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Catch"}],"title":"AsyncSequences.Catch","abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Catch"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/Collect":{"abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Collect"}],"url":"\/documentation\/afluent\/asyncsequences\/collect","navigatorTitle":[{"text":"Collect","kind":"identifier"}],"type":"topic","title":"AsyncSequences.Collect","role":"symbol","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Collect"},"doc://Afluent/documentation/Afluent/AsyncSequences/Just":{"navigatorTitle":[{"kind":"identifier","text":"Just"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Just"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just","abstract":[{"text":"An ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"text":" that emits a single specified element and then completes.","type":"text"}],"kind":"symbol","role":"symbol","type":"topic","title":"AsyncSequences.Just","url":"\/documentation\/afluent\/asyncsequences\/just"}}}