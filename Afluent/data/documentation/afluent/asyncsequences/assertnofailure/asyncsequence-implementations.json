{"variants":[{"paths":["\/documentation\/afluent\/asyncsequences\/assertnofailure\/asyncsequence-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"roleHeading":"API Collection","role":"collectionGroup","title":"AsyncSequence Implementations","modules":[{"name":"Afluent"}]},"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/AsyncSequence-Implementations","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"kind":"article","hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure"]]},"topicSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/characters","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/lines","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/unicodeScalars"],"title":"Instance Properties","anchor":"Instance-Properties","generated":true},{"title":"Instance Methods","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/allSatisfy(_:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/assertNoFailure()","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/breakpoint(receiveOutput:receiveError:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/breakpointOnError()","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/catch(_:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/catch(_:_:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/collect()","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/compactMap(_:)-9f8zg","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/compactMap(_:)-9pzuh","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/contains(_:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/contains(where:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/decode(type:decoder:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/delay(for:tolerance:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/delay(for:tolerance:clock:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/dematerialize()","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/discardOutput()","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/drop(while:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/dropFirst(_:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/encode(encoder:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/eraseToAnyAsyncSequence()","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/filter(_:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/first()","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/first(where:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/flatMap(_:)-44j4j","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/flatMap(_:)-5mybx","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/flatMap(_:)-6bssq","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/flatMap(_:)-ha2j","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/flatMap(maxSubscriptions:_:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/groupBy(keySelector:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/handleEvents(receiveMakeIterator:receiveNext:receiveOutput:receiveError:receiveComplete:receiveCancel:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/map(_:)-279ry","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/map(_:)-ghp5","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/mapError(_:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/mapError(_:_:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/materialize()","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/max()","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/max(by:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/min()","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/min(by:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/prefix(_:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/prefix(while:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/print(_:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/reduce(_:_:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/reduce(into:_:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/replaceError(with:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/replaceNil(with:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/retry(_:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/retry(_:_:)-6jq30","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/retry(_:_:)-s4lz","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/retry(_:on:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/retry(_:on:_:)-38yzu","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/retry(_:on:_:)-3r3bs","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/sink(receiveCompletion:receiveOutput:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/throttle(for:clock:latest:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/tryCatch(_:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/tryCatch(_:_:)"],"anchor":"Instance-Methods"}],"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/collect()":{"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/collect()","abstract":[{"text":"Collects all received elements, and emits a single array of the collection when the upstream sequence finishes.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"collect"},{"kind":"text","text":"() -> "},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO7CollectV","kind":"typeIdentifier","text":"Collect"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/collect()","title":"collect()","type":"topic","kind":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]}},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/map(_:)-ghp5":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"map"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Transformed"},{"text":">((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa","text":"Element"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"text":"Transformed","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV","kind":"typeIdentifier","text":"AsyncMapSequence"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Transformed"},{"kind":"text","text":">"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/map(_:)-ghp5","abstract":[],"type":"topic","role":"symbol","kind":"symbol","title":"map(_:)","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/map(_:)-ghp5"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/min(by:)":{"role":"symbol","abstract":[],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"min"},{"kind":"text","text":"("},{"text":"by","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sci7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sci7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/min(by:)","title":"min(by:)","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/min(by:)"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/first()":{"abstract":[{"type":"text","text":"Returns the first element of the sequence"}],"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/first()","conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"first"},{"kind":"text","text":"() "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","preciseIdentifier":"s:Sci7ElementQa","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"type":"topic","title":"first()","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/first()","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/allSatisfy(_:)":{"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/allsatisfy(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"allSatisfy"},{"text":"((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:Sci7ElementQa"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/allSatisfy(_:)","type":"topic","abstract":[],"title":"allSatisfy(_:)","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure":{"navigatorTitle":[{"kind":"identifier","text":"AssertNoFailure"}],"type":"topic","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AssertNoFailure"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure","abstract":[],"title":"AsyncSequences.AssertNoFailure","kind":"symbol","role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/catch(_:)":{"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/catch(_:)","abstract":[{"type":"text","text":"Catches any errors emitted by the upstream "},{"type":"codeVoice","code":"AsyncSequence"},{"text":" and handles them using the provided closure.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`catch`"},{"kind":"text","text":"<"},{"text":"D","kind":"genericParameter"},{"kind":"text","text":">((any "},{"preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"text":"D","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Catch","preciseIdentifier":"s:7Afluent14AsyncSequencesO5CatchV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"D","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/catch(_:)","title":"catch(_:)","type":"topic","kind":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/prefix(while:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"prefix","kind":"identifier"},{"kind":"text","text":"("},{"text":"while","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sci7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV","text":"AsyncPrefixWhileSequence","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/prefix(while:)","abstract":[],"type":"topic","role":"symbol","kind":"symbol","title":"prefix(while:)","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/prefix(while:)"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/throttle(for:clock:latest:)":{"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/throttle(for:clock:latest:)","abstract":[{"text":"Emits either the first or latest element received during a specified amount of time.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"throttle","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"C"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"for"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":"."},{"preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa","text":"Duration","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"clock","kind":"externalParam"},{"kind":"text","text":": "},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"latest","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO8ThrottleV","text":"Throttle"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":">"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/throttle(for:clock:latest:)","title":"throttle(for:clock:latest:)","type":"topic","kind":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/lines":{"type":"topic","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/lines","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/lines","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" is ","type":"text"},{"code":"UInt8","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"title":"lines","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"lines"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AsyncLineSequence","preciseIdentifier":"s:10Foundation17AsyncLineSequenceV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"kind":"symbol","abstract":[]},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/min()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"min","kind":"identifier"},{"kind":"text","text":"() "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa","text":"Element"},{"kind":"text","text":"?"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"code":"Comparable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/min()","abstract":[],"type":"topic","role":"symbol","kind":"symbol","title":"min()","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/min()"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/max(by:)":{"abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"max","kind":"identifier"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sci7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sci7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa"},{"kind":"text","text":"?"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/max(by:)","kind":"symbol","title":"max(by:)","role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/max(by:)"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/flatMap(maxSubscriptions:_:)":{"type":"topic","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/flatmap(maxsubscriptions:_:)","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/flatMap(maxSubscriptions:_:)","title":"flatMap(maxSubscriptions:_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"flatMap","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"SegmentOfResult"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"maxSubscriptions"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Afluent18SubscriptionDemandO","kind":"typeIdentifier","text":"SubscriptionDemand"},{"text":", (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:Sci7ElementQa"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"SegmentOfResult","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"text":"FlatMap","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO7FlatMapV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"SegmentOfResult"},{"text":">","kind":"text"}],"kind":"symbol","abstract":[]},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/reduce(into:_:)":{"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/reduce(into:_:)","type":"topic","role":"symbol","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"reduce","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Result"},{"text":">(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"Result","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"text":"Result","kind":"typeIdentifier"}],"title":"reduce(into:_:)","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/reduce(into:_:)"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/materialize()":{"type":"topic","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/materialize()","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/materialize()","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}]},"title":"materialize()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"materialize"},{"text":"() -> ","kind":"text"},{"text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO11MaterializeV","text":"Materialize","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"kind":"symbol","abstract":[{"text":"Transforms the elements, completion, and errors of the current ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" into "},{"type":"codeVoice","code":"Event"},{"type":"text","text":" values."}]},"doc://Afluent/documentation/Afluent/AsyncSequences":{"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncSequences"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","title":"AsyncSequences","type":"topic","url":"\/documentation\/afluent\/asyncsequences","abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/replaceNil(with:)":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}]},"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/replacenil(with:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/replaceNil(with:)","type":"topic","abstract":[{"type":"text","text":"Replaces any "},{"type":"codeVoice","code":"nil"},{"text":" values from the upstream ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" with the provided non-nil value."}],"title":"replaceNil(with:)","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"replaceNil","kind":"identifier"},{"kind":"text","text":"<"},{"text":"E","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"ReplaceNil","preciseIdentifier":"s:7Afluent14AsyncSequencesO10ReplaceNilV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"kind":"text","text":">"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/retry(_:on:_:)-3r3bs":{"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/retry(_:on:_:)-3r3bs","type":"topic","role":"symbol","abstract":[{"text":"Retries the upstream ","type":"text"},{"code":"AsynchronousUnitOfWork","type":"codeVoice"},{"type":"text","text":" up to a specified number of times only when a specific error occurs, while applying a transformation on error."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"retry","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"D"},{"text":", ","kind":"text"},{"text":"E","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"S","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"on"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"E"},{"text":", (","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":") -> "},{"text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"RetryOnAfterFlatMapping","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO23RetryOnAfterFlatMappingC"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"E","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"D","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"text":">","kind":"text"}],"title":"retry(_:on:_:)","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/retry(_:on:_:)-3r3bs","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/retry(_:)":{"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/retry(_:)","title":"retry(_:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/retry(_:)","type":"topic","abstract":[{"type":"text","text":"Retries the upstream "},{"type":"codeVoice","code":"AsyncSequence"},{"text":" up to a specified number of times.","type":"text"}],"role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" and "},{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"retry"},{"kind":"text","text":"("},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO5RetryC","text":"Retry"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"RetryByCountStrategy","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent20RetryByCountStrategyC"},{"kind":"text","text":">"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/discardOutput()":{"type":"topic","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/discardoutput()","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/discardOutput()","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"title":"discardOutput()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"discardOutput","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"AsyncMapSequence","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":">","kind":"text"}],"kind":"symbol","abstract":[{"type":"text","text":"Discards the output values from the upstream "},{"code":"AsyncSequence","type":"codeVoice"},{"text":".","type":"text"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/mapError(_:_:)":{"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/maperror(_:_:)","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Transforms the error produced by the "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":"."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"mapError","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"E"},{"kind":"text","text":">("},{"text":"E","kind":"typeIdentifier"},{"kind":"text","text":", (any "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":") -> any "},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"text":".","kind":"text"},{"text":"MapError","preciseIdentifier":"s:7Afluent14AsyncSequencesO8MapErrorV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"title":"mapError(_:_:)","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/mapError(_:_:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}]}},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/retry(_:on:_:)-38yzu":{"type":"topic","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/retry(_:on:_:)-38yzu","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/retry(_:on:_:)-38yzu","kind":"symbol","title":"retry(_:on:_:)","abstract":[{"type":"text","text":"Retries the upstream "},{"type":"codeVoice","code":"AsynchronousUnitOfWork"},{"type":"text","text":" up to a specified number of times only when a specific error occurs, while applying a transformation on error."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"retry"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"D"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"E"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"on"},{"text":": ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"kind":"text","text":", ("},{"text":"E","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO23RetryOnAfterFlatMappingC","text":"RetryOnAfterFlatMapping","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":", "},{"text":"D","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent20RetryByCountStrategyC","text":"RetryByCountStrategy"},{"text":">","kind":"text"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}]}},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/delay(for:tolerance:clock:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"delay"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">("},{"text":"for","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Duration","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa"},{"kind":"text","text":", "},{"text":"tolerance","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":"."},{"preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa","text":"Duration","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"clock"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"C"},{"text":") -> ","kind":"text"},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Delay","preciseIdentifier":"s:7Afluent14AsyncSequencesO5DelayV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"C"},{"text":">","kind":"text"}],"role":"symbol","kind":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"text":" and ","type":"text"},{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}]},"title":"delay(for:tolerance:clock:)","abstract":[{"type":"text","text":"Delays delivery of all output to the downstream receiver by a specified amount of time"}],"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/delay(for:tolerance:clock:)","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/delay(for:tolerance:clock:)"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/encode(encoder:)":{"type":"topic","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/encode(encoder:)","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/encode(encoder:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}]},"title":"encode(encoder:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"E"},{"kind":"text","text":">("},{"kind":"externalParam","text":"encoder"},{"text":": ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Encode","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO6EncodeV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"E"},{"text":">","kind":"text"}],"kind":"symbol","abstract":[{"type":"text","text":"Encodes the output from upstream using a specified encoder."}]},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/map(_:)-279ry":{"title":"map(_:)","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/map(_:)-279ry","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/map(_:)-279ry","abstract":[],"type":"topic","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"map","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Transformed","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:Sci7ElementQa","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Transformed","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"AsyncThrowingMapSequence","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"Transformed","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/decode(type:decoder:)":{"type":"topic","title":"decode(type:decoder:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/decode(type:decoder:)","abstract":[{"type":"text","text":"Decodes the output from the upstream using a specified decoder."}],"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/decode(type:decoder:)","kind":"symbol","role":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}]},"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"decode"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":", ","kind":"text"},{"text":"D","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"type","kind":"externalParam"},{"kind":"text","text":": "},{"text":"T","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"decoder","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"text":"Decode","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO6DecodeV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/retry(_:_:)-s4lz":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"retry","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"D"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":", (any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO21RetryAfterFlatMappingC","text":"RetryAfterFlatMapping","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":", "},{"text":"S","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/retry(_:_:)-s4lz","title":"retry(_:_:)","type":"topic","abstract":[{"text":"Retries the upstream ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" up to a specified number of times while applying a transformation on error."}],"kind":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}]},"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/retry(_:_:)-s4lz"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/groupBy(keySelector:)":{"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/groupby(keyselector:)","type":"topic","role":"symbol","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"groupBy"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Key"},{"text":">(","kind":"text"},{"text":"keySelector","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Key"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"GroupBy","preciseIdentifier":"s:7Afluent14AsyncSequencesO7GroupByV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"groupBy(keySelector:)","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/groupBy(keySelector:)","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"doc://Afluent/documentation/Afluent":{"abstract":[],"title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","type":"topic","kind":"symbol","role":"collection","url":"\/documentation\/afluent"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/breakpointOnError()":{"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/breakpointonerror()","type":"topic","role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}]},"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"breakpointOnError","kind":"identifier"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"HandleEvents","preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"abstract":[{"text":"Introduces a breakpoint into the async sequence when an error occurs.","type":"text"}],"title":"breakpointOnError()","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/breakpointOnError()"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/reduce(_:_:)":{"type":"topic","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/reduce(_:_:)","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/reduce(_:_:)","title":"reduce(_:_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"reduce"},{"kind":"text","text":"<"},{"text":"Result","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Result"},{"text":", (","kind":"text"},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"}],"kind":"symbol","abstract":[]},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/flatMap(_:)-5mybx":{"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/flatmap(_:)-5mybx","type":"topic","role":"symbol","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"flatMap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"SegmentOfResult"},{"kind":"text","text":">(("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:Sci7ElementQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"text":"SegmentOfResult","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV","kind":"typeIdentifier","text":"AsyncFlatMapSequence"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"SegmentOfResult"},{"kind":"text","text":">"}],"title":"flatMap(_:)","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/flatMap(_:)-5mybx"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/assertNoFailure()":{"type":"topic","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/assertnofailure()","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/assertNoFailure()","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}]},"title":"assertNoFailure()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"assertNoFailure"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier","text":"AsyncSequences"},{"text":".","kind":"text"},{"text":"AssertNoFailure","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO15AssertNoFailureV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"kind":"symbol","abstract":[{"type":"text","text":"Raises a fatal error when its upstream sequence fails, and otherwise republishes all received input."}]},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/retry(_:_:)-6jq30":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/retry(_:_:)-6jq30","conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/retry(_:_:)-6jq30","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"retry","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"D"},{"text":">(","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"kind":"text","text":", (any "},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO21RetryAfterFlatMappingC","text":"RetryAfterFlatMapping","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"RetryByCountStrategy","preciseIdentifier":"s:7Afluent20RetryByCountStrategyC","kind":"typeIdentifier"},{"kind":"text","text":">"}],"title":"retry(_:_:)","role":"symbol","abstract":[{"type":"text","text":"Retries the upstream "},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" up to a specified number of times while applying a transformation on error."}],"type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/compactMap(_:)-9f8zg":{"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/compactmap(_:)-9f8zg","type":"topic","role":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"compactMap"},{"text":"<","kind":"text"},{"text":"ElementOfResult","kind":"genericParameter"},{"text":">((","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa","text":"Element"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"ElementOfResult"},{"kind":"text","text":"?) -> "},{"text":"AsyncThrowingCompactMapSequence","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ElementOfResult","kind":"typeIdentifier"},{"kind":"text","text":">"}],"title":"compactMap(_:)","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/compactMap(_:)-9f8zg"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/flatMap(_:)-6bssq":{"type":"topic","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/flatmap(_:)-6bssq","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/flatMap(_:)-6bssq","title":"flatMap(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"flatMap","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"SegmentOfResult"},{"text":">((","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa","text":"Element"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"SegmentOfResult","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV","kind":"typeIdentifier","text":"AsyncFlatMapSequence"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"SegmentOfResult","kind":"typeIdentifier"},{"kind":"text","text":">"}],"kind":"symbol","abstract":[]},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/breakpoint(receiveOutput:receiveError:)":{"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/breakpoint(receiveoutput:receiveerror:)","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Introduces a breakpoint into the async sequence."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"breakpoint","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"receiveOutput"},{"kind":"text","text":": (("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sci7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":")?, ","kind":"text"},{"text":"receiveError","kind":"externalParam"},{"text":": ((any ","kind":"text"},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":")?) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV","text":"HandleEvents","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"title":"breakpoint(receiveOutput:receiveError:)","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/breakpoint(receiveOutput:receiveError:)","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}]}},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/retry(_:on:)":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/retry(_:on:)","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/retry(_:on:)","type":"topic","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"kind":"symbol","title":"retry(_:on:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"retry","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"E"},{"kind":"text","text":">("},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"on","kind":"externalParam"},{"kind":"text","text":": "},{"text":"E","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"text":"RetryOn","preciseIdentifier":"s:7Afluent14AsyncSequencesO7RetryOnC","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:7Afluent20RetryByCountStrategyC","text":"RetryByCountStrategy","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"Retries the upstream "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" up to a specified number of times only when a specific error occurs."}],"role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/catch(_:_:)":{"kind":"symbol","title":"catch(_:_:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`catch`"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"D"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"E"},{"text":">(","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"text":".","kind":"text"},{"text":"Catch","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO5CatchV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"D","kind":"typeIdentifier"},{"kind":"text","text":">"}],"abstract":[{"text":"Catches a specific type of error emitted by the upstream ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" and handles them using the provided closure."}],"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/catch(_:_:)","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/catch(_:_:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/compactMap(_:)-9pzuh":{"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/compactmap(_:)-9pzuh","role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/compactMap(_:)-9pzuh","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"compactMap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ElementOfResult"},{"kind":"text","text":">(("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:Sci7ElementQa","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"text":"ElementOfResult","kind":"typeIdentifier"},{"kind":"text","text":"?) -> "},{"text":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"ElementOfResult","kind":"typeIdentifier"},{"kind":"text","text":">"}],"title":"compactMap(_:)"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/handleEvents(receiveMakeIterator:receiveNext:receiveOutput:receiveError:receiveComplete:receiveCancel:)":{"abstract":[{"type":"text","text":"Adds side-effects to the receiving events of the upstream "},{"type":"codeVoice","code":"AsyncSequence"},{"text":".","type":"text"}],"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/handleevents(receivemakeiterator:receivenext:receiveoutput:receiveerror:receivecomplete:receivecancel:)","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/handleEvents(receiveMakeIterator:receiveNext:receiveOutput:receiveError:receiveComplete:receiveCancel:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handleEvents","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"receiveMakeIterator"},{"kind":"text","text":": (() -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":")?, ","kind":"text"},{"text":"receiveNext","kind":"externalParam"},{"kind":"text","text":": (() "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")?, "},{"kind":"externalParam","text":"receiveOutput"},{"kind":"text","text":": (("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sci7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":")?, ","kind":"text"},{"kind":"externalParam","text":"receiveError"},{"text":": ((any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")?, "},{"text":"receiveComplete","kind":"externalParam"},{"text":": (() ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?, "},{"kind":"externalParam","text":"receiveCancel"},{"kind":"text","text":": (() "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"text":")?) -> ","kind":"text"},{"text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"HandleEvents","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"title":"handleEvents(receiveMakeIterator:receiveNext:receiveOutput:receiveError:receiveComplete:receiveCancel:)","role":"symbol","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/filter(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"filter","kind":"identifier"},{"text":"((","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/filter(_:)","abstract":[],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/filter(_:)","kind":"symbol","title":"filter(_:)"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/prefix(_:)":{"abstract":[],"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/prefix(_:)","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/prefix(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"prefix","kind":"identifier"},{"kind":"text","text":"("},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"AsyncPrefixSequence","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"title":"prefix(_:)","role":"symbol","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/replaceError(with:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"replaceError","kind":"identifier"},{"kind":"text","text":"("},{"text":"with","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:Sci7ElementQa"},{"text":") -> ","kind":"text"},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"text":"ReplaceError","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO12ReplaceErrorV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:Sci7ElementQa"},{"text":">","kind":"text"}],"role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/replaceerror(with:)","abstract":[{"text":"Replaces any errors from the upstream ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"text":" with the provided value.","type":"text"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/replaceError(with:)","kind":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"title":"replaceError(with:)"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/dropFirst(_:)":{"title":"dropFirst(_:)","role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/dropfirst(_:)","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/dropFirst(_:)","abstract":[],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"dropFirst","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV","text":"AsyncDropFirstSequence"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/max()":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"max"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sci7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":"?","kind":"text"}],"title":"max()","kind":"symbol","role":"symbol","conformance":{"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/max()","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/max()"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/tryCatch(_:_:)":{"abstract":[{"type":"text","text":"Tries to catch a specific type of error emitted by the upstream "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" and handles them using the provided throwing closure."}],"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/trycatch(_:_:)","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/tryCatch(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"tryCatch"},{"kind":"text","text":"<"},{"text":"D","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"E","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"E"},{"text":", (","kind":"text"},{"kind":"typeIdentifier","text":"E"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO5CatchV","text":"Catch"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"D","kind":"typeIdentifier"},{"kind":"text","text":">"}],"conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"title":"tryCatch(_:_:)","role":"symbol","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/sink(receiveCompletion:receiveOutput:)":{"type":"topic","title":"sink(receiveCompletion:receiveOutput:)","role":"symbol","abstract":[{"type":"text","text":"Executes the current async sequence and returns an AnyCancellable token to cancel the subscription."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"sink"},{"kind":"text","text":"("},{"text":"receiveCompletion","kind":"externalParam"},{"kind":"text","text":": (("},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO10CompletionO","text":"Completion"},{"text":"<any ","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":">) ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":")?, "},{"kind":"externalParam","text":"receiveOutput"},{"text":": ((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:Sci7ElementQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?) -> "},{"text":"AnyCancellable","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AnyCancellableC"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/sink(receiveCompletion:receiveOutput:)","kind":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/sink(receivecompletion:receiveoutput:)"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/contains(_:)":{"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/contains(_:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/contains(_:)","role":"symbol","type":"topic","abstract":[],"kind":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Equatable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"title":"contains(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"contains","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sci7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/print(_:)":{"type":"topic","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/print(_:)","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/print(_:)","kind":"symbol","title":"print(_:)","abstract":[{"text":"Logs events from the upstream ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" to the console."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV","text":"HandleEvents"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}]}},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/flatMap(_:)-44j4j":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"flatMap"},{"kind":"text","text":"<"},{"text":"SegmentOfResult","kind":"genericParameter"},{"text":">((","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","preciseIdentifier":"s:Sci7ElementQa","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"SegmentOfResult"},{"text":") -> ","kind":"text"},{"text":"AsyncThrowingFlatMapSequence","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"SegmentOfResult","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/flatmap(_:)-44j4j","abstract":[],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/flatMap(_:)-44j4j","kind":"symbol","title":"flatMap(_:)"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/tryCatch(_:)":{"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/trycatch(_:)","type":"topic","role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}]},"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"tryCatch","kind":"identifier"},{"text":"<","kind":"text"},{"text":"D","kind":"genericParameter"},{"kind":"text","text":">((any "},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"kind":"text","text":"."},{"text":"Catch","preciseIdentifier":"s:7Afluent14AsyncSequencesO5CatchV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"D","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"text":"Tries to catch any errors emitted by the upstream ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"text":" and handles them using the provided throwing closure.","type":"text"}],"title":"tryCatch(_:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/tryCatch(_:)"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/unicodeScalars":{"abstract":[],"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/unicodescalars","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/unicodeScalars","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unicodeScalars","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10Foundation26AsyncUnicodeScalarSequenceV","text":"AsyncUnicodeScalarSequence","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"UInt8"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"title":"unicodeScalars","role":"symbol","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/mapError(_:)":{"type":"topic","role":"symbol","abstract":[{"text":"Transforms the error produced by the ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/mapError(_:)","title":"mapError(_:)","kind":"symbol","conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/maperror(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"mapError"},{"text":"((any ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":") -> any "},{"preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO8MapErrorV","text":"MapError"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/drop(while:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"drop"},{"text":"(","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa","text":"Element"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"AsyncDropWhileSequence","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"role":"symbol","title":"drop(while:)","type":"topic","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/drop(while:)","kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/drop(while:)"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/delay(for:tolerance:)":{"type":"topic","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/delay(for:tolerance:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"delay"},{"kind":"text","text":"("},{"text":"for","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s8DurationV","text":"Duration"},{"text":", ","kind":"text"},{"text":"tolerance","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s8DurationV","text":"Duration","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO5DelayV","text":"Delay","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"SuspendingClock","preciseIdentifier":"s:12_Concurrency15SuspendingClockV","kind":"typeIdentifier"},{"text":">","kind":"text"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/delay(for:tolerance:)","abstract":[{"type":"text","text":"Delays delivery of all output to the downstream receiver by a specified amount of time"}],"title":"delay(for:tolerance:)","kind":"symbol","role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/dematerialize()":{"role":"symbol","abstract":[{"type":"text","text":"Transforms a sequence of "},{"type":"codeVoice","code":"Event"},{"text":" values back into their original form in an ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"text":".","type":"text"}],"title":"dematerialize()","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/dematerialize()","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/dematerialize()","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"dematerialize","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Dematerialize","preciseIdentifier":"s:7Afluent14AsyncSequencesO13DematerializeV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}]}},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/characters":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"characters"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AsyncCharacterSequence","preciseIdentifier":"s:10Foundation22AsyncCharacterSequenceV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/characters","abstract":[],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/characters","kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" is "},{"code":"UInt8","type":"codeVoice"},{"text":".","type":"text"}]},"title":"characters"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/first(where:)":{"abstract":[],"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/first(where:)","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/first(where:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"first","kind":"identifier"},{"text":"(","kind":"text"},{"text":"where","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa","text":"Element"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa","text":"Element"},{"text":"?","kind":"text"}],"title":"first(where:)","role":"symbol","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/eraseToAnyAsyncSequence()":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"eraseToAnyAsyncSequence","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"AnyAsyncSequence","preciseIdentifier":"s:7Afluent14AsyncSequencesO03AnyB8SequenceV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa","text":"Element"},{"text":">","kind":"text"}],"title":"eraseToAnyAsyncSequence()","kind":"symbol","role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}]},"abstract":[{"type":"text","text":"Type erases the current sequence, useful when you need a concrete type that’s easy to predict."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/eraseToAnyAsyncSequence()","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/erasetoanyasyncsequence()"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/contains(where:)":{"type":"topic","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/contains(where:)","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/contains(where:)","kind":"symbol","title":"contains(where:)","abstract":[],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"contains","kind":"identifier"},{"text":"(","kind":"text"},{"text":"where","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sci7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/flatMap(_:)-ha2j":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"flatMap"},{"kind":"text","text":"<"},{"text":"SegmentOfResult","kind":"genericParameter"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sci7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"SegmentOfResult","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"SegmentOfResult","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/flatMap(_:)-ha2j","title":"flatMap(_:)","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/flatmap(_:)-ha2j"}}}