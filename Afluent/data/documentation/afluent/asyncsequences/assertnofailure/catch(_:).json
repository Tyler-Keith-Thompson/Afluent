{"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/catch(_:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"`catch`","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"D"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"handler","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"text":" (any ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"D","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"AsyncSequences","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"text":"Catch","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO5CatchV","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Catch"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"D"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"AsyncSequence","preciseIdentifier":"s:Sci"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sci7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"D"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sci7ElementQa","kind":"typeIdentifier","text":"Element"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"name":"handler","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that takes an "},{"code":"Error","type":"codeVoice"},{"text":" and returns an ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"text":".","type":"text"}]}]}],"kind":"parameters"},{"content":[{"anchor":"return-value","text":"Return Value","level":2,"type":"heading"},{"inlineContent":[{"text":"An ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" that will catch and handle any errors emitted by the upstream sequence."}],"type":"paragraph"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/afluent\/asyncsequences\/assertnofailure\/catch(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Catches any errors emitted by the upstream "},{"type":"codeVoice","code":"AsyncSequence"},{"text":" and handles them using the provided closure.","type":"text"}],"metadata":{"role":"symbol","externalID":"s:Sci7Afluents8SendableRzrlE5catchyAA14AsyncSequencesO5CatchVy_xqd__Gqd__s5Error_pYaYbcsABRd__SciRd__7ElementQyd__AJRtzlF::SYNTHESIZED::s:7Afluent14AsyncSequencesO15AssertNoFailureV","modules":[{"name":"Afluent","relatedModules":["_Concurrency"]}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}]},"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/CatchSequence.swift#L63","fileName":"CatchSequence.swift"},"roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`catch`"},{"text":"<","kind":"text"},{"text":"D","kind":"genericParameter"},{"text":">((any ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO5CatchV","text":"Catch","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"D","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"catch(_:)","symbolKind":"method","extendedModule":"_Concurrency"},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/AsyncSequence-Implementations"]]},"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/Catch":{"url":"\/documentation\/afluent\/asyncsequences\/catch","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Catch","kind":"identifier"}],"title":"AsyncSequences.Catch","role":"symbol","abstract":[],"kind":"symbol","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Catch","navigatorTitle":[{"kind":"identifier","text":"Catch"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/catch(_:)":{"kind":"symbol","conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/catch(_:)","abstract":[{"text":"Catches any errors emitted by the upstream ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" and handles them using the provided closure."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`catch`"},{"kind":"text","text":"<"},{"text":"D","kind":"genericParameter"},{"kind":"text","text":">((any "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"D"},{"text":") -> ","kind":"text"},{"text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Catch","preciseIdentifier":"s:7Afluent14AsyncSequencesO5CatchV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"kind":"text","text":">"}],"title":"catch(_:)","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/catch(_:)"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/AsyncSequence-Implementations":{"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/asyncsequence-implementations","type":"topic","kind":"article","abstract":[],"title":"AsyncSequence Implementations","role":"collectionGroup","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/AsyncSequence-Implementations"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure":{"title":"AsyncSequences.AssertNoFailure","abstract":[],"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AssertNoFailure"}],"kind":"symbol","type":"topic","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure","navigatorTitle":[{"kind":"identifier","text":"AssertNoFailure"}]},"doc://Afluent/documentation/Afluent":{"title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol","abstract":[],"type":"topic","role":"collection","url":"\/documentation\/afluent"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"title":"AsyncSequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","type":"topic","abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncSequences","kind":"identifier"}],"navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences"}}}