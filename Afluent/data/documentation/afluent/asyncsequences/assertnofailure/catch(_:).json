{"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/catch(_:)","interfaceLanguage":"swift"},"metadata":{"role":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"roleHeading":"Instance Method","modules":[{"name":"Afluent","relatedModules":["_Concurrency"]}],"remoteSource":{"fileName":"CatchSequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/CatchSequence.swift#L63"},"title":"catch(_:)","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"`catch`","kind":"identifier"},{"text":"<","kind":"text"},{"text":"D","kind":"genericParameter"},{"text":">((any ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Catch","preciseIdentifier":"s:7Afluent14AsyncSequencesO5CatchV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":">"}],"extendedModule":"_Concurrency","externalID":"s:Sci7Afluents8SendableRzrlE5catchyAA14AsyncSequencesO5CatchVy_xqd__Gqd__s5Error_pYaYbcsABRd__SciRd__7ElementQyd__AJRtzlF::SYNTHESIZED::s:7Afluent14AsyncSequencesO15AssertNoFailureV"},"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"`catch`","kind":"identifier"},{"kind":"text","text":"<"},{"text":"D","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"handler"},{"kind":"text","text":": "},{"text":"@escaping","kind":"keyword"},{"text":" (any ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"D"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO5CatchV","text":"Catch","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Catch"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"D"},{"text":" : ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"},{"text":", ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:Sci","text":"AsyncSequence","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:Sci7ElementQa"},{"text":" == ","kind":"text"},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa","text":"Element"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"handler","content":[{"type":"paragraph","inlineContent":[{"text":"A closure that takes an ","type":"text"},{"code":"Error","type":"codeVoice"},{"type":"text","text":" and returns an "},{"code":"AsyncSequence","type":"codeVoice"},{"text":".","type":"text"}]}]}]},{"kind":"content","content":[{"level":2,"anchor":"return-value","text":"Return Value","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"An ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" that will catch and handle any errors emitted by the upstream sequence."}]}]}],"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asyncsequences\/assertnofailure\/catch(_:)"]}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/AsyncSequence-Implementations"]]},"abstract":[{"type":"text","text":"Catches any errors emitted by the upstream "},{"type":"codeVoice","code":"AsyncSequence"},{"text":" and handles them using the provided closure.","type":"text"}],"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure":{"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure","kind":"symbol","abstract":[],"role":"symbol","title":"AsyncSequences.AssertNoFailure","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AssertNoFailure"}],"navigatorTitle":[{"text":"AssertNoFailure","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure"},"doc://Afluent/documentation/Afluent":{"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent","type":"topic","url":"\/documentation\/afluent","kind":"symbol","title":"Afluent","role":"collection"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/catch(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`catch`","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"D"},{"text":">((any ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"D"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Catch","preciseIdentifier":"s:7Afluent14AsyncSequencesO5CatchV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"D"},{"text":">","kind":"text"}],"kind":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/catch(_:)","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/catch(_:)","abstract":[{"type":"text","text":"Catches any errors emitted by the upstream "},{"code":"AsyncSequence","type":"codeVoice"},{"text":" and handles them using the provided closure.","type":"text"}],"role":"symbol","title":"catch(_:)"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"type":"topic","navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}],"title":"AsyncSequences","role":"symbol","url":"\/documentation\/afluent\/asyncsequences","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"AsyncSequences","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/Catch":{"role":"symbol","title":"AsyncSequences.Catch","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Catch","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences\/catch","abstract":[],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Catch","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Catch"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/AsyncSequence-Implementations":{"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/AsyncSequence-Implementations","kind":"article","abstract":[],"role":"collectionGroup","title":"AsyncSequence Implementations","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/asyncsequence-implementations"}}}