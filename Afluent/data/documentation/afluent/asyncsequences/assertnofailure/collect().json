{"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/AsyncSequence-Implementations"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"collect","kind":"identifier"},{"kind":"text","text":"() -> "},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO7CollectV","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Collect","text":"Collect","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}]}],"kind":"declarations"},{"content":[{"type":"heading","anchor":"Discussion","text":"Discussion:","level":3},{"inlineContent":[{"text":"Use ","type":"text"},{"type":"codeVoice","code":"collect()"},{"type":"text","text":" to gather elements into an array that the operator emits after the upstream sequence finishes."},{"type":"text","text":" "},{"text":"If the upstream sequence fails with an error, this sequence forwards the error to the downstream receiver instead of sending its output.","type":"text"}],"type":"paragraph"},{"type":"aside","style":"important","content":[{"inlineContent":[{"type":"text","text":"Be cautious when using "},{"code":"collect","type":"codeVoice"},{"type":"text","text":" on sequences that can emit a large number of elements or do not complete, as it can lead to high memory usage or even memory exhaustion."}],"type":"paragraph"}],"name":"Important"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/afluent\/asyncsequences\/assertnofailure\/collect()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/collect()"},"sections":[],"metadata":{"title":"collect()","symbolKind":"method","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"remoteSource":{"fileName":"CollectSequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/CollectSequence.swift#L44"},"extendedModule":"_Concurrency","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"collect"},{"kind":"text","text":"() -> "},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO7CollectV","kind":"typeIdentifier","text":"Collect"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"roleHeading":"Instance Method","modules":[{"name":"Afluent","relatedModules":["_Concurrency"]}],"externalID":"s:Sci7Afluents8SendableRzrlE7collectAA14AsyncSequencesO7CollectVy_xGyF::SYNTHESIZED::s:7Afluent14AsyncSequencesO15AssertNoFailureV","role":"symbol"},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Collects all received elements, and emits a single array of the collection when the upstream sequence finishes."}],"kind":"symbol","references":{"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/AsyncSequence-Implementations":{"kind":"article","title":"AsyncSequence Implementations","abstract":[],"role":"collectionGroup","type":"topic","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/asyncsequence-implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/AsyncSequence-Implementations"},"doc://Afluent/documentation/Afluent":{"role":"collection","title":"Afluent","type":"topic","abstract":[],"kind":"symbol","url":"\/documentation\/afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent"},"doc://Afluent/documentation/Afluent/AsyncSequences/Collect":{"abstract":[],"url":"\/documentation\/afluent\/asyncsequences\/collect","navigatorTitle":[{"kind":"identifier","text":"Collect"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Collect","kind":"symbol","role":"symbol","type":"topic","title":"AsyncSequences.Collect","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Collect"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/collect()":{"role":"symbol","abstract":[{"type":"text","text":"Collects all received elements, and emits a single array of the collection when the upstream sequence finishes."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"collect","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"text":"Collect","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO7CollectV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/collect()","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/collect()","title":"collect()","kind":"symbol","type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"url":"\/documentation\/afluent\/asyncsequences","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"AsyncSequences","kind":"identifier"}],"title":"AsyncSequences","role":"symbol","navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}],"abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","kind":"symbol","type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure":{"kind":"symbol","title":"AsyncSequences.AssertNoFailure","abstract":[],"role":"symbol","type":"topic","navigatorTitle":[{"text":"AssertNoFailure","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AssertNoFailure"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure"}}}