{"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"externalID":"s:Sci7Afluents8SendableRzrlE6output2inAA14AsyncSequencesO8OutputInVy_xGqd___tSXRd__sABRd__Si5BoundRtd__lF::SYNTHESIZED::s:7Afluent14AsyncSequencesO15AssertNoFailureV","role":"symbol","symbolKind":"method","remoteSource":{"fileName":"OutputSequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/OutputSequence.swift#L96"},"roleHeading":"Instance Method","title":"output(in:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"output","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"in","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO8OutputInV","text":"OutputIn"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"modules":[{"relatedModules":["_Concurrency"],"name":"Afluent"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"extendedModule":"_Concurrency"},"abstract":[{"text":"Returns an async sequence that contains, in order, the elements of the base sequence specified by the range.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/AsyncSequence-Implementations"]]},"sections":[],"variants":[{"paths":["\/documentation\/afluent\/asyncsequences\/assertnofailure\/output(in:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/output(in:)","interfaceLanguage":"swift"},"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"output","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"in","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"range","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":") -> "},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","kind":"typeIdentifier","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO8OutputInV","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/OutputIn","text":"OutputIn","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"RangeExpression","preciseIdentifier":"s:SX","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP","text":"Sendable"},{"kind":"text","text":", "},{"text":"R","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SX5BoundQa","text":"Bound"},{"text":" == ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"range","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A range that indicates which elements to include."}]}]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"inlineContent":[{"type":"text","text":"An async sequence that contains, in order, the elements of the base sequence specified by the range."}],"type":"paragraph"}]},{"kind":"content","content":[{"type":"heading","level":3,"anchor":"Discussion","text":"Discussion:"},{"inlineContent":[{"type":"text","text":"Completes normally after range is exhausted."}],"type":"paragraph"},{"text":"Example:","type":"heading","level":3,"anchor":"Example"},{"syntax":"swift","code":[" let originalSequence = [0, 3, 5, 7, 9].async"," for try await element in originalSequence.output(in: 1..<4) {","     print(\"\\(element)\")"," }"," \/\/ Prints 3, 5, 7"],"type":"codeListing"}]}],"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AssertNoFailure","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure","type":"topic","title":"AsyncSequences.AssertNoFailure","abstract":[],"kind":"symbol","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure","navigatorTitle":[{"text":"AssertNoFailure","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/AsyncSequence-Implementations":{"abstract":[],"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/asyncsequence-implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/AsyncSequence-Implementations","title":"AsyncSequence Implementations","role":"collectionGroup","kind":"article","type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/OutputIn":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/OutputIn","type":"topic","navigatorTitle":[{"text":"OutputIn","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"OutputIn"}],"title":"AsyncSequences.OutputIn","abstract":[],"url":"\/documentation\/afluent\/asyncsequences\/outputin"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/output(in:)":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/output(in:)","kind":"symbol","abstract":[{"type":"text","text":"Returns an async sequence that contains, in order, the elements of the base sequence specified by the range."}],"role":"symbol","title":"output(in:)","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/output(in:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"output","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"kind":"externalParam","text":"in"},{"text":": ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"OutputIn","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO8OutputInV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}]},"doc://Afluent/documentation/Afluent/AsyncSequences":{"navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}],"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"url":"\/documentation\/afluent\/asyncsequences","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncSequences"}],"title":"AsyncSequences"},"doc://Afluent/documentation/Afluent":{"kind":"symbol","role":"collection","abstract":[],"url":"\/documentation\/afluent","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent","title":"Afluent"}}}