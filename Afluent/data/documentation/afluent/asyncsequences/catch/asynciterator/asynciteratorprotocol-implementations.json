{"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"article","metadata":{"modules":[{"name":"Afluent"}],"roleHeading":"API Collection","role":"collectionGroup","title":"AsyncIteratorProtocol Implementations"},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Catch","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Catch\/AsyncIterator"]]},"sections":[],"topicSections":[{"generated":true,"anchor":"Instance-Methods","title":"Instance Methods","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Catch\/AsyncIterator\/next(isolation:)"]}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Catch\/AsyncIterator\/AsyncIteratorProtocol-Implementations","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/afluent\/asyncsequences\/catch\/asynciterator\/asynciteratorprotocol-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/Catch/AsyncIterator/next(isolation:)":{"kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/catch\/asynciterator\/next(isolation:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Catch\/AsyncIterator\/next(isolation:)","role":"symbol","type":"topic","title":"next(isolation:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"next","kind":"identifier"},{"text":"(","kind":"text"},{"text":"isolation","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"isolated","kind":"keyword"},{"text":" (any ","kind":"text"},{"text":"Actor","preciseIdentifier":"s:ScA","kind":"typeIdentifier"},{"text":")?) ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ScI7FailureQa","kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ScI7ElementQa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"?"}],"abstract":[]},"doc://Afluent/documentation/Afluent/AsyncSequences":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","url":"\/documentation\/afluent\/asyncsequences","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequences"}],"title":"AsyncSequences","type":"topic","abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}]},"doc://Afluent/documentation/Afluent":{"abstract":[],"url":"\/documentation\/afluent","role":"collection","type":"topic","kind":"symbol","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent"},"doc://Afluent/documentation/Afluent/AsyncSequences/Catch/AsyncIterator":{"role":"symbol","title":"AsyncSequences.Catch.AsyncIterator","type":"topic","url":"\/documentation\/afluent\/asyncsequences\/catch\/asynciterator","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Catch\/AsyncIterator","abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncIterator"}],"navigatorTitle":[{"kind":"identifier","text":"AsyncIterator"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/Catch":{"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Catch","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Catch","kind":"identifier"}],"role":"symbol","title":"AsyncSequences.Catch","url":"\/documentation\/afluent\/asyncsequences\/catch","navigatorTitle":[{"text":"Catch","kind":"identifier"}],"type":"topic","abstract":[{"text":"Used as the implementation detail for the catch\/tryCatch sequence operators.","type":"text"}]}}}