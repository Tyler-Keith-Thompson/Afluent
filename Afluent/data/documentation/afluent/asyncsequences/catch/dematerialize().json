{"variants":[{"paths":["\/documentation\/afluent\/asyncsequences\/catch\/dematerialize()"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"dematerialize"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","text":"AsyncSequences"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO13DematerializeV","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Dematerialize","text":"Dematerialize"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"T","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sci7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":" == "},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO5EventO","text":"Event","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Event"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"languages":["swift"]}]},{"content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"code":"AsyncSequences.Dematerialize","type":"codeVoice"},{"type":"text","text":" instance that represents the original "},{"type":"codeVoice","code":"AsyncSequence"},{"text":" with its elements and errors.","type":"text"}]}],"kind":"content"},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"This method is the inverse of ","type":"text"},{"type":"codeVoice","code":"materialize"},{"text":". It takes an ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" of "},{"type":"codeVoice","code":"Event"},{"type":"text","text":" values and transforms it back into an "},{"code":"AsyncSequence","type":"codeVoice"},{"text":" of the original elements, propagating errors as thrown exceptions.","type":"text"}]},{"style":"note","type":"aside","name":"Note","content":[{"inlineContent":[{"type":"text","text":"The sequence must be of type "},{"type":"codeVoice","code":"AsyncSequences.Event<T>"},{"text":". The ","type":"text"},{"type":"codeVoice","code":"dematerialize"},{"text":" method will extract the original elements and errors from these events.","type":"text"}],"type":"paragraph"}]},{"style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"Re-throws any errors that were encapsulated in the ","type":"text"},{"type":"codeVoice","code":"Event.failure"},{"text":" cases.","type":"text"}]}],"name":"Throws"}]}],"kind":"symbol","identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Catch\/dematerialize()","interfaceLanguage":"swift"},"sections":[],"abstract":[{"type":"text","text":"Transforms a sequence of "},{"type":"codeVoice","code":"Event"},{"text":" values back into their original form in an ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":"."}],"metadata":{"role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"extendedModule":"_Concurrency","externalID":"s:Sci7Afluents8SendableRzrlE13dematerializeAA14AsyncSequencesO13DematerializeVy_xqd__GysABRd__AE5EventOy_qd__G7ElementRtzlF::SYNTHESIZED::s:7Afluent14AsyncSequencesO5CatchV","title":"dematerialize()","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"dematerialize"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">() -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO13DematerializeV","kind":"typeIdentifier","text":"Dematerialize"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"roleHeading":"Instance Method","remoteSource":{"fileName":"DematerializeSequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/DematerializeSequence.swift#L48"},"modules":[{"name":"Afluent","relatedModules":["_Concurrency"]}]},"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Catch","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Catch\/AsyncSequence-Implementations"]]},"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/Event":{"kind":"symbol","title":"AsyncSequences.Event","abstract":[{"text":"Represents the different kinds of events that can be emitted by ","type":"text"},{"code":"Materialize","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Event"}],"url":"\/documentation\/afluent\/asyncsequences\/event","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"Event","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Event"},"doc://Afluent/documentation/Afluent":{"role":"collection","title":"Afluent","type":"topic","abstract":[],"kind":"symbol","url":"\/documentation\/afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent"},"doc://Afluent/documentation/Afluent/AsyncSequences/Catch":{"kind":"symbol","navigatorTitle":[{"text":"Catch","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences\/catch","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Catch","kind":"identifier"}],"type":"topic","title":"AsyncSequences.Catch","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Catch","role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/Dematerialize":{"url":"\/documentation\/afluent\/asyncsequences\/dematerialize","navigatorTitle":[{"text":"Dematerialize","kind":"identifier"}],"abstract":[],"type":"topic","title":"AsyncSequences.Dematerialize","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Dematerialize","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Dematerialize","kind":"identifier"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/Catch/dematerialize()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"dematerialize","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO13DematerializeV","text":"Dematerialize","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">","kind":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Catch\/dematerialize()","abstract":[{"text":"Transforms a sequence of ","type":"text"},{"type":"codeVoice","code":"Event"},{"text":" values back into their original form in an ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"text":".","type":"text"}],"title":"dematerialize()","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}]},"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/catch\/dematerialize()"},"doc://Afluent/documentation/Afluent/AsyncSequences/Catch/AsyncSequence-Implementations":{"kind":"article","url":"\/documentation\/afluent\/asyncsequences\/catch\/asyncsequence-implementations","abstract":[],"type":"topic","title":"AsyncSequence Implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Catch\/AsyncSequence-Implementations","role":"collectionGroup"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"url":"\/documentation\/afluent\/asyncsequences","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"AsyncSequences","kind":"identifier"}],"title":"AsyncSequences","role":"symbol","navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}],"abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","kind":"symbol","type":"topic"}}}