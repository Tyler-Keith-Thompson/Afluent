{"sections":[],"abstract":[{"text":"Logs events from the sequence to the console, optionally with a prefix.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asyncsequences\/catch\/print(_:)"]}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Catch\/print(_:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Catch","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Catch\/AsyncSequence-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"prefix","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":" = \"\") -> ","kind":"text"},{"text":"AsyncSequences","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV","text":"HandleEvents"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}]},{"parameters":[{"name":"prefix","content":[{"inlineContent":[{"type":"text","text":"A string to prefix each log message with. Default is an empty string."}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"Use this for debugging or observing the lifecycle of a sequence."}],"type":"paragraph"},{"anchor":"Example","text":"Example","level":2,"type":"heading"},{"code":["for try await value in Just(1).print(\"MyPrefix\") {","    \/\/ Prints lifecycle events and value to the console with prefix \"MyPrefix\"","}"],"syntax":null,"type":"codeListing"}]}],"metadata":{"title":"print(_:)","roleHeading":"Instance Method","externalID":"s:Sci7Afluents8SendableRzrlE5printyAA14AsyncSequencesO12HandleEventsVy_xGSSF::SYNTHESIZED::s:7Afluent14AsyncSequencesO5CatchV","modules":[{"relatedModules":["_Concurrency"],"name":"Afluent"}],"symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"print"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV","text":"HandleEvents"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"remoteSource":{"fileName":"PrintSequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/PrintSequence.swift#L23"},"extendedModule":"_Concurrency","role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}]}},"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","references":{"doc://Afluent/documentation/Afluent/AsyncSequences/Catch/print(_:)":{"title":"print(_:)","url":"\/documentation\/afluent\/asyncsequences\/catch\/print(_:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Catch\/print(_:)","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"print"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV","text":"HandleEvents"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}]},"role":"symbol","abstract":[{"type":"text","text":"Logs events from the sequence to the console, optionally with a prefix."}]},"doc://Afluent/documentation/Afluent/AsyncSequences":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","url":"\/documentation\/afluent\/asyncsequences","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequences"}],"title":"AsyncSequences","type":"topic","abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}]},"doc://Afluent/documentation/Afluent":{"abstract":[],"url":"\/documentation\/afluent","role":"collection","type":"topic","kind":"symbol","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent"},"doc://Afluent/documentation/Afluent/AsyncSequences/Catch/AsyncSequence-Implementations":{"kind":"article","role":"collectionGroup","url":"\/documentation\/afluent\/asyncsequences\/catch\/asyncsequence-implementations","title":"AsyncSequence Implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Catch\/AsyncSequence-Implementations","abstract":[],"type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/Catch":{"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Catch","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Catch","kind":"identifier"}],"role":"symbol","title":"AsyncSequences.Catch","url":"\/documentation\/afluent\/asyncsequences\/catch","navigatorTitle":[{"text":"Catch","kind":"identifier"}],"type":"topic","abstract":[{"text":"Used as the implementation detail for the catch\/tryCatch sequence operators.","type":"text"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/HandleEvents":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HandleEvents"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HandleEvents"}],"title":"AsyncSequences.HandleEvents","url":"\/documentation\/afluent\/asyncsequences\/handleevents","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Used as the implementation detail for the "},{"type":"codeVoice","code":"AsyncSequence\/handleEvents(receiveMakeIterator:receiveNext:receiveOutput:receiveError:receiveComplete:receiveCancel:)"},{"type":"text","text":" operator."}]}}}