{"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asyncsequences\/catch\/retry(_:on:_:)-1na47"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"retry","kind":"identifier"},{"text":"<","kind":"text"},{"text":"D","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"E","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"strategy","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"on","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"error","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"transform","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"AsyncSequences","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"text":"RetryOnCastAfterFlatMapping","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOnCastAfterFlatMapping","preciseIdentifier":"s:7Afluent14AsyncSequencesO27RetryOnCastAfterFlatMappingC"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"},{"text":", ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"AsyncSequence","kind":"typeIdentifier","preciseIdentifier":"s:Sci"},{"text":", ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":", ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"RetryStrategy","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","preciseIdentifier":"s:7Afluent13RetryStrategyP"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa"},{"text":" : ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa"},{"text":" == ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"strategy","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The retry strategy to apply."}]}]},{"name":"error","content":[{"inlineContent":[{"type":"text","text":"The error type to match via casting."}],"type":"paragraph"}]},{"name":"transform","content":[{"type":"paragraph","inlineContent":[{"text":"The transformation executed before retrying when the cast succeeds, fully consuming the returned sequence.","type":"text"}]}]}],"kind":"parameters"},{"content":[{"type":"heading","anchor":"return-value","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" retrying with the given strategy only when the error can be cast to the specified type."}]}],"kind":"content"},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The transformation runs "},{"type":"emphasis","inlineContent":[{"type":"text","text":"before"}]},{"type":"text","text":" each retry if the error cast succeeds, useful for side effects like refreshing tokens."},{"type":"text","text":" "},{"type":"text","text":"The returned sequence is fully consumed before retrying, ignoring its elements."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This enables retrying with custom strategy only when the error can be cast to the specified type,"},{"type":"text","text":" "},{"type":"text","text":"performing asynchronous side effects prior to retry."}]},{"type":"heading","level":2,"text":"Example: Custom retry on casted error with side effect","anchor":"Example-Custom-retry-on-casted-error-with-side-effect"},{"type":"codeListing","code":["let retried = myAsyncSequence.retry(.byCount(3), on: MyError.self) { error in","    DeferredTask {","        try await refreshAuthToken()","    }","    .toAsyncSequence() \/\/ Fully consumed before retry","}"],"syntax":"swift"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Catch","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Catch\/AsyncSequence-Implementations"]]},"kind":"symbol","abstract":[{"text":"Retries the upstream ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"text":" with a custom strategy when the error is castable to a specific type.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Catch\/retry(_:on:_:)-1na47"},"metadata":{"symbolKind":"method","externalID":"s:Sci7Afluents8SendableRzrlE5retry_2on_AA14AsyncSequencesO27RetryOnCastAfterFlatMappingCy_xqd_0_qd__qd_1_Gqd_1__qd_0_mqd__qd_0_YaYbKctsABRd__SciRd__s5ErrorRd_0_AA0G8StrategyRd_1_sAB7ElementRpzALQyd__AMRSr1_lF::SYNTHESIZED::s:7Afluent14AsyncSequencesO5CatchV","conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"role":"symbol","roleHeading":"Instance Method","remoteSource":{"fileName":"RetryAfterFlatMappingSequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/RetryAfterFlatMappingSequence.swift#L472"},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"retry","kind":"identifier"},{"text":"<","kind":"text"},{"text":"D","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"E","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"on","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":".Type, (","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO27RetryOnCastAfterFlatMappingC","text":"RetryOnCastAfterFlatMapping","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":">","kind":"text"}],"modules":[{"relatedModules":["_Concurrency"],"name":"Afluent"}],"extendedModule":"_Concurrency","title":"retry(_:on:_:)"},"sections":[],"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/RetryOnCastAfterFlatMapping":{"abstract":[],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RetryOnCastAfterFlatMapping","kind":"identifier"}],"title":"AsyncSequences.RetryOnCastAfterFlatMapping","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOnCastAfterFlatMapping","url":"\/documentation\/afluent\/asyncsequences\/retryoncastafterflatmapping","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"RetryOnCastAfterFlatMapping","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/Catch/retry(_:on:_:)-1na47":{"abstract":[{"text":"Retries the upstream ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"text":" with a custom strategy when the error is castable to a specific type.","type":"text"}],"title":"retry(_:on:_:)","kind":"symbol","role":"symbol","type":"topic","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}]},"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Catch\/retry(_:on:_:)-1na47","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"retry","kind":"identifier"},{"text":"<","kind":"text"},{"text":"D","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"E","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"on","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":".Type, (","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO27RetryOnCastAfterFlatMappingC","text":"RetryOnCastAfterFlatMapping","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/afluent\/asyncsequences\/catch\/retry(_:on:_:)-1na47"},"doc://Afluent/documentation/Afluent/AsyncSequences/Catch":{"title":"AsyncSequences.Catch","abstract":[{"type":"text","text":"Used as the implementation detail for the catch\/tryCatch sequence operators."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Catch","url":"\/documentation\/afluent\/asyncsequences\/catch","kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Catch"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Catch"}]},"doc://Afluent/documentation/Afluent/AsyncSequences":{"abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"type":"topic","title":"AsyncSequences","url":"\/documentation\/afluent\/asyncsequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequences"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/Catch/AsyncSequence-Implementations":{"kind":"article","url":"\/documentation\/afluent\/asyncsequences\/catch\/asyncsequence-implementations","title":"AsyncSequence Implementations","role":"collectionGroup","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Catch\/AsyncSequence-Implementations","abstract":[],"type":"topic"},"doc://Afluent/documentation/Afluent":{"type":"topic","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","abstract":[],"url":"\/documentation\/afluent","role":"collection","kind":"symbol"},"doc://Afluent/documentation/Afluent/RetryStrategy":{"abstract":[{"text":"A strategy for handling errors and determining whether to retry an operation.","type":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","type":"topic","role":"symbol","title":"RetryStrategy","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RetryStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"RetryStrategy","kind":"identifier"}],"url":"\/documentation\/afluent\/retrystrategy","kind":"symbol"}}}