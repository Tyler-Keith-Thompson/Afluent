{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asyncsequences\/deferred"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"roleHeading":"Structure","externalID":"s:7Afluent14AsyncSequencesO8DeferredV","extendedModule":"Afluent","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Deferred","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Deferred"}],"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/Deferred.swift#L35","fileName":"Deferred.swift"},"title":"AsyncSequences.Deferred","role":"symbol","modules":[{"name":"Afluent"}],"symbolKind":"struct"},"topicSections":[{"title":"Structures","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Deferred\/AsyncIterator"],"generated":true,"anchor":"Structures"},{"anchor":"Initializers","generated":true,"title":"Initializers","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Deferred\/init(upstream:)"]},{"anchor":"Instance-Methods","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Deferred\/makeAsyncIterator()"],"title":"Instance Methods"},{"title":"Type Aliases","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Deferred\/Element"],"anchor":"Type-Aliases","generated":true},{"title":"Default Implementations","generated":true,"anchor":"Default-Implementations","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Deferred\/AsyncSequence-Implementations","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Deferred\/AsyncSequence-Implementations"]}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences"]]},"kind":"symbol","sections":[],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Deferred","interfaceLanguage":"swift"},"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/Afluent\/s8SendableP","doc:\/\/Afluent\/Sci"],"kind":"relationships"}],"abstract":[{"text":"An asynchronous sequence that defers the execution of another asynchronous sequence until iteration.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Deferred","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Upstream","kind":"genericParameter"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier","text":"Sendable"},{"text":", ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:Sci","kind":"typeIdentifier","text":"AsyncSequence"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"Using this type allows for an asynchronous sequence to be created without eagerly beginning execution.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Notably, "},{"code":"AsyncStream","type":"codeVoice"},{"type":"text","text":" and "},{"code":"AsyncThrowingStream","type":"codeVoice"},{"type":"text","text":" immediately execute their passed closure to start yielding and buffering values."},{"type":"text","text":" "},{"type":"text","text":"By wrapping either of these in a "},{"code":"Deferred","type":"codeVoice"},{"text":", you can define the creation of an asynchronous sequence without executing it immediately.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Each time iteration begins using this type, the passed closure is called to create a new asynchronous sequence."},{"type":"text","text":" "},{"text":"This can allow for a sequence to be created and iterated over multiple times.","type":"text"}]},{"syntax":"swift","code":["let deferred = Deferred {","    AsyncStream { continuation in","        \/\/ yield some values asynchronously","    }","}","","for try await value in deferred {","    \/\/ starts at the first element","}","","for try await value in deferred {","    \/\/ starts at the first element","}"],"type":"codeListing"}]}],"references":{"doc://Afluent/documentation/Afluent":{"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent","role":"collection","type":"topic","abstract":[],"title":"Afluent","url":"\/documentation\/afluent"},"doc://Afluent/documentation/Afluent/AsyncSequences/Deferred/AsyncIterator":{"type":"topic","kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/deferred\/asynciterator","role":"symbol","navigatorTitle":[{"text":"AsyncIterator","kind":"identifier"}],"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Deferred\/AsyncIterator","title":"AsyncSequences.Deferred.AsyncIterator","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncIterator"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/Deferred/init(upstream:)":{"type":"topic","title":"init(upstream:)","abstract":[{"type":"text","text":"Constructs an asynchronous sequence defining an closure that returns an asynchronous sequence"},{"text":" ","type":"text"},{"text":"that will later be called at the time of iteration.","type":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Deferred\/init(upstream:)","url":"\/documentation\/afluent\/asyncsequences\/deferred\/init(upstream:)","role":"symbol","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"upstream"},{"text":": (() -> ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"kind":"text","text":"))"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/Deferred/AsyncSequence-Implementations":{"type":"topic","kind":"article","url":"\/documentation\/afluent\/asyncsequences\/deferred\/asyncsequence-implementations","role":"collectionGroup","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Deferred\/AsyncSequence-Implementations","title":"AsyncSequence Implementations"},"doc://Afluent/documentation/Afluent/AsyncSequences/Deferred":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Deferred"}],"navigatorTitle":[{"text":"Deferred","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences\/deferred","abstract":[{"text":"An asynchronous sequence that defers the execution of another asynchronous sequence until iteration.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Deferred","type":"topic","title":"AsyncSequences.Deferred"},"doc://Afluent/documentation/Afluent/AsyncSequences/Deferred/makeAsyncIterator()":{"abstract":[],"title":"makeAsyncIterator()","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeAsyncIterator"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO8DeferredV","kind":"typeIdentifier","text":"Deferred"},{"text":"<","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"AsyncIterator","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO8DeferredV0B8IteratorV"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Deferred\/makeAsyncIterator()","role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/deferred\/makeasynciterator()"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"role":"symbol","title":"AsyncSequences","url":"\/documentation\/afluent\/asyncsequences","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequences"}],"navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}],"abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences"},"doc://Afluent/s8SendableP":{"identifier":"doc:\/\/Afluent\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://Afluent/Sci":{"identifier":"doc:\/\/Afluent\/Sci","type":"unresolvable","title":"_Concurrency.AsyncSequence"},"doc://Afluent/documentation/Afluent/AsyncSequences/Deferred/Element":{"role":"symbol","title":"AsyncSequences.Deferred.Element","url":"\/documentation\/afluent\/asyncsequences\/deferred\/element","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Deferred\/Element","navigatorTitle":[{"text":"Element","kind":"identifier"}],"type":"topic","abstract":[],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]}}}