{"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Deferred","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Deferred\/AsyncSequence-Implementations"]]},"abstract":[{"type":"text","text":"Catches any errors emitted by the upstream "},{"type":"codeVoice","code":"AsyncSequence"},{"text":" and handles them using the provided closure.","type":"text"}],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`catch`","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"D"},{"text":">((any ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO5CatchV","text":"Catch"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"D"},{"text":">","kind":"text"}],"remoteSource":{"fileName":"CatchSequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/CatchSequence.swift#L63"},"modules":[{"relatedModules":["_Concurrency"],"name":"Afluent"}],"externalID":"s:Sci7Afluents8SendableRzrlE5catchyAA14AsyncSequencesO5CatchVy_xqd__Gqd__s5Error_pYaYbcsABRd__SciRd__7ElementQyd__AJRtzlF::SYNTHESIZED::s:7Afluent14AsyncSequencesO8DeferredV","title":"catch(_:)","symbolKind":"method","role":"symbol","roleHeading":"Instance Method","extendedModule":"_Concurrency","conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`catch`","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"D"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"handler","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"@escaping"},{"text":" (any ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","text":"AsyncSequences"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO5CatchV","text":"Catch","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Catch"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"D"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"D"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP","text":"Sendable"},{"kind":"text","text":", "},{"text":"D","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"AsyncSequence","kind":"typeIdentifier","preciseIdentifier":"s:Sci"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sci7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":" == ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:Sci7ElementQa","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"handler","content":[{"inlineContent":[{"text":"A closure that takes an ","type":"text"},{"type":"codeVoice","code":"Error"},{"text":" and returns an ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"text":".","type":"text"}],"type":"paragraph"}]}]},{"content":[{"text":"Return Value","type":"heading","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"code":"AsyncSequence","type":"codeVoice"},{"text":" that will catch and handle any errors emitted by the upstream sequence.","type":"text"}]}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Deferred\/catch(_:)"},"sections":[],"variants":[{"paths":["\/documentation\/afluent\/asyncsequences\/deferred\/catch(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Afluent/documentation/Afluent":{"kind":"symbol","abstract":[],"url":"\/documentation\/afluent","type":"topic","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","role":"collection"},"doc://Afluent/documentation/Afluent/AsyncSequences/Catch":{"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Catch","role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/catch","navigatorTitle":[{"kind":"identifier","text":"Catch"}],"abstract":[],"title":"AsyncSequences.Catch","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Catch","kind":"identifier"}],"type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/Deferred/AsyncSequence-Implementations":{"role":"collectionGroup","kind":"article","title":"AsyncSequence Implementations","url":"\/documentation\/afluent\/asyncsequences\/deferred\/asyncsequence-implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Deferred\/AsyncSequence-Implementations","abstract":[],"type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/Deferred/catch(_:)":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"type":"topic","abstract":[{"type":"text","text":"Catches any errors emitted by the upstream "},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" and handles them using the provided closure."}],"title":"catch(_:)","role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/deferred\/catch(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`catch`","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"D"},{"kind":"text","text":">((any "},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"D"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier","text":"AsyncSequences"},{"kind":"text","text":"."},{"text":"Catch","preciseIdentifier":"s:7Afluent14AsyncSequencesO5CatchV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":">"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Deferred\/catch(_:)","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"role":"symbol","navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}],"type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncSequences","kind":"identifier"}],"abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","url":"\/documentation\/afluent\/asyncsequences","title":"AsyncSequences"},"doc://Afluent/documentation/Afluent/AsyncSequences/Deferred":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Deferred"}],"kind":"symbol","title":"AsyncSequences.Deferred","url":"\/documentation\/afluent\/asyncsequences\/deferred","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Deferred","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Deferred","abstract":[{"text":"An asynchronous sequence that defers the execution of another asynchronous sequence until iteration.","type":"text"}],"type":"topic"}}}