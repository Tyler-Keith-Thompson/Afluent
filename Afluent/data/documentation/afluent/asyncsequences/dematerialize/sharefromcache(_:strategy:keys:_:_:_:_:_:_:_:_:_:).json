{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"shareFromCache"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"H0"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H1"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H2"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H3"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H4"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H5"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H6"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H7"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H8"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H9"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"cache"},{"kind":"text","text":": "},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent18AsyncSequenceCacheC","text":"AsyncSequenceCache"},{"kind":"text","text":", "},{"kind":"externalParam","text":"strategy"},{"kind":"text","text":": "},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent18AsyncSequenceCacheC","text":"AsyncSequenceCache"},{"kind":"text","text":"."},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache\/Strategy","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent18AsyncSequenceCacheC8StrategyO","text":"Strategy"},{"kind":"text","text":", "},{"kind":"externalParam","text":"keys"},{"kind":"text","text":" "},{"kind":"internalParam","text":"k0"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"H0"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"k1"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"H1"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"k2"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"H2"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"k3"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"H3"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"k4"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"H4"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"k5"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"H5"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"k6"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"H6"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"k7"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"H7"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"k8"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"H8"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"üê∂"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"H9"},{"kind":"text","text":") -> "},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncBroadcastSequence","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsyncBroadcastSequenceV","text":"AsyncBroadcastSequence"},{"kind":"text","text":"<"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"kind":"text","text":"."},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV","text":"HandleEvents"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"H0"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SH","text":"Hashable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H1"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SH","text":"Hashable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H2"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SH","text":"Hashable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H3"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SH","text":"Hashable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H4"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SH","text":"Hashable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H5"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SH","text":"Hashable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H6"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SH","text":"Hashable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H7"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SH","text":"Hashable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H8"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SH","text":"Hashable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H9"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SH","text":"Hashable"}]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The cache from which to share data."}],"type":"paragraph"}],"name":"cache"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The caching strategy to use."}]}],"name":"strategy"},{"content":[{"inlineContent":[{"type":"text","text":"The second hashable key."}],"type":"paragraph"}],"name":"k1"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The third hashable key."}]}],"name":"k2"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The fourth hashable key.","type":"text"}]}],"name":"k3"},{"content":[{"inlineContent":[{"text":"The fifth hashable key.","type":"text"}],"type":"paragraph"}],"name":"k4"},{"content":[{"inlineContent":[{"type":"text","text":"The sixth hashable key."}],"type":"paragraph"}],"name":"k5"},{"content":[{"inlineContent":[{"text":"The seventh hashable key.","type":"text"}],"type":"paragraph"}],"name":"k6"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The eighth hashable key.","type":"text"}]}],"name":"k7"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The ninth hashable key."}]}],"name":"k8"},{"content":[{"inlineContent":[{"text":"The tenth hashable key.","type":"text"}],"type":"paragraph"}],"name":"üê∂"}],"kind":"parameters"},{"content":[{"anchor":"return-value","type":"heading","text":"Return Value","level":2},{"inlineContent":[{"text":"An asynchronous broadcast sequence that shares the underlying sequence‚Äôs values according to the cache and strategy.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"level":2,"type":"heading","text":"Example","anchor":"Example"},{"type":"codeListing","syntax":"swift","code":["let cache = AsyncSequenceCache()","let sequence = fetchData(a: 1, b: 2, c: 3, d: 4, e: 5, f: 6, g: 7, h: 8, i: 9, j: 10)","let sharedSequence = sequence.shareFromCache(cache, strategy: .cacheUntilCompletionOrCancellation, keys: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10)","","Task {","    for await item in sharedSequence {","        print(\"Item: \\(item)\")","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"These ten keys combined provide a unique cache key."}]},{"name":"Important","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This operator should generally be placed at the end of an operator chain. Any operators applied after "},{"type":"codeVoice","code":"shareFromCache"},{"type":"text","text":" will not be shared and may result in duplicated work or side effects."}]}],"style":"important"}],"kind":"content"}],"abstract":[{"type":"text","text":"This operator enables sharing and caching of results from an async sequence"},{"type":"text","text":" "},{"type":"text","text":"based on a specified caching strategy and ten hashable cache keys."},{"type":"text","text":" "},{"type":"text","text":"The combined hashable keys uniquely identify the shared sequence in the cache."}],"sections":[],"metadata":{"extendedModule":"_Concurrency","title":"shareFromCache(_:strategy:keys:_:_:_:_:_:_:_:_:_:)","modules":[{"name":"Afluent","relatedModules":["_Concurrency"]}],"role":"symbol","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shareFromCache","kind":"identifier"},{"text":"<","kind":"text"},{"text":"H0","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"H1","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"H2","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"H3","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"H4","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"H5","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"H6","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"H7","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"H8","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"H9"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"AsyncSequenceCache","preciseIdentifier":"s:7Afluent18AsyncSequenceCacheC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"strategy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AsyncSequenceCache","preciseIdentifier":"s:7Afluent18AsyncSequenceCacheC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Strategy","preciseIdentifier":"s:7Afluent18AsyncSequenceCacheC8StrategyO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"keys"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"H0"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H1"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H2"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H3"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H4"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H5"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H6"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H7"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H8"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H9"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AsyncBroadcastSequence","preciseIdentifier":"s:7Afluent22AsyncBroadcastSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"HandleEvents","preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">>"}],"externalID":"s:Sci7Afluents8SendableRzsAB7ElementRpzrlE14shareFromCache_8strategy4keys_________AA22AsyncBroadcastSequenceVyAA0I9SequencesO12HandleEventsVy_xGGAA0ikF0C_AQ8StrategyOqd__qd_0_qd_1_qd_2_qd_3_qd_4_qd_5_qd_6_qd_7_qd_8_tSHRd__SHRd_0_SHRd_1_SHRd_2_SHRd_3_SHRd_4_SHRd_5_SHRd_6_SHRd_7_SHRd_8_r8_lF::SYNTHESIZED::s:7Afluent14AsyncSequencesO13DematerializeV","symbolKind":"method","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/ShareFromCacheSequence.swift#L512","fileName":"ShareFromCacheSequence.swift"}},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Dematerialize\/shareFromCache(_:strategy:keys:_:_:_:_:_:_:_:_:_:)"},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Dematerialize"]]},"variants":[{"paths":["\/documentation\/afluent\/asyncsequences\/dematerialize\/sharefromcache(_:strategy:keys:_:_:_:_:_:_:_:_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","references":{"doc://Afluent/documentation/Afluent/AsyncSequenceCache/Strategy":{"type":"topic","url":"\/documentation\/afluent\/asyncsequencecache\/strategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache\/Strategy","abstract":[{"type":"codeVoice","code":"Strategy"},{"type":"text","text":" represents the available caching strategies for the "},{"type":"codeVoice","code":"AsyncSequenceCache"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"These strategies determine how long the cache retains the async sequences."}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Strategy","kind":"identifier"}],"kind":"symbol","role":"symbol","title":"AsyncSequenceCache.Strategy","navigatorTitle":[{"text":"Strategy","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsyncBroadcastSequence":{"title":"AsyncBroadcastSequence","kind":"symbol","url":"\/documentation\/afluent\/asyncbroadcastsequence","abstract":[{"type":"text","text":"An async sequence that multicasts elements from an upstream sequence to multiple concurrent consumers."}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncBroadcastSequence","kind":"identifier"}],"navigatorTitle":[{"text":"AsyncBroadcastSequence","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncBroadcastSequence"},"doc://Afluent/documentation/Afluent/AsyncSequenceCache":{"abstract":[{"text":"A thread-safe cache for sharing async sequences by integer key.","type":"text"},{"text":" ","type":"text"},{"text":"This cache is commonly used with the ","type":"text"},{"code":"shareFromCache","type":"codeVoice"},{"text":" operator to reuse sequences.","type":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache","navigatorTitle":[{"kind":"identifier","text":"AsyncSequenceCache"}],"title":"AsyncSequenceCache","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequenceCache"}],"url":"\/documentation\/afluent\/asyncsequencecache","kind":"symbol","type":"topic","role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/HandleEvents":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HandleEvents"}],"kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/handleevents","title":"AsyncSequences.HandleEvents","abstract":[{"type":"text","text":"Used as the implementation detail for the "},{"type":"codeVoice","code":"AsyncSequence\/handleEvents(receiveMakeIterator:receiveNext:receiveOutput:receiveError:receiveComplete:receiveCancel:)"},{"type":"text","text":" operator."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HandleEvents"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/Dematerialize":{"navigatorTitle":[{"text":"Dematerialize","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences\/dematerialize","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Dematerialize","kind":"identifier"}],"title":"AsyncSequences.Dematerialize","kind":"symbol","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Dematerialize","abstract":[{"text":"Used as the implementation detail for the ","type":"text"},{"code":"AsyncSequence\/dematerialize()","type":"codeVoice"},{"type":"text","text":" operator."}],"role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/Dematerialize/shareFromCache(_:strategy:keys:_:_:_:_:_:_:_:_:_:)":{"abstract":[{"type":"text","text":"This operator enables sharing and caching of results from an async sequence"},{"type":"text","text":" "},{"type":"text","text":"based on a specified caching strategy and ten hashable cache keys."},{"type":"text","text":" "},{"type":"text","text":"The combined hashable keys uniquely identify the shared sequence in the cache."}],"title":"shareFromCache(_:strategy:keys:_:_:_:_:_:_:_:_:_:)","type":"topic","kind":"symbol","role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Dematerialize\/shareFromCache(_:strategy:keys:_:_:_:_:_:_:_:_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"shareFromCache"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"H0"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H1"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H2"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H3"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H4"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H5"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H6"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H7"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H8"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H9"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent18AsyncSequenceCacheC","text":"AsyncSequenceCache"},{"kind":"text","text":", "},{"kind":"externalParam","text":"strategy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent18AsyncSequenceCacheC","text":"AsyncSequenceCache"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent18AsyncSequenceCacheC8StrategyO","text":"Strategy"},{"kind":"text","text":", "},{"kind":"externalParam","text":"keys"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"H0"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H1"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H2"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H3"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H4"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H5"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H6"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H7"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H8"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H9"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsyncBroadcastSequenceV","text":"AsyncBroadcastSequence"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV","text":"HandleEvents"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">>"}],"url":"\/documentation\/afluent\/asyncsequences\/dematerialize\/sharefromcache(_:strategy:keys:_:_:_:_:_:_:_:_:_:)"},"doc://Afluent/documentation/Afluent":{"title":"Afluent","url":"\/documentation\/afluent","role":"collection","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol","abstract":[]},"doc://Afluent/documentation/Afluent/AsyncSequences":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","url":"\/documentation\/afluent\/asyncsequences","abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"kind":"symbol","title":"AsyncSequences","type":"topic","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncSequences","kind":"identifier"}],"navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}]}}}