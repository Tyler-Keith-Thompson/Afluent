{"metadata":{"role":"symbol","roleHeading":"Instance Method","platforms":[{"beta":false,"introducedAt":"16.0","unavailable":false,"name":"iOS","deprecated":false},{"unavailable":false,"name":"macOS","beta":false,"deprecated":false,"introducedAt":"13.0"},{"introducedAt":"16.0","deprecated":false,"beta":false,"name":"tvOS","unavailable":false},{"beta":false,"introducedAt":"1.0","deprecated":false,"unavailable":false,"name":"visionOS"},{"deprecated":false,"beta":false,"introducedAt":"9.0","unavailable":false,"name":"watchOS"}],"modules":[{"relatedModules":["_Concurrency"],"name":"Afluent"}],"externalID":"s:Sci7Afluents8SendableRzsAB7ElementRpzrlE8throttle3for5clock6latestAA14AsyncSequencesO8ThrottleVy_xqd__G8DurationQyd___qd__Sbt12_Concurrency5ClockRd__lF::SYNTHESIZED::s:7Afluent14AsyncSequencesO13DematerializeV","symbolKind":"method","title":"throttle(for:clock:latest:)","conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"text":" and ","type":"text"},{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"throttle","kind":"identifier"},{"kind":"text","text":"<"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"for","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Duration","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa"},{"kind":"text","text":", "},{"text":"clock","kind":"externalParam"},{"kind":"text","text":": "},{"text":"C","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"latest","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Throttle","preciseIdentifier":"s:7Afluent14AsyncSequencesO8ThrottleV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":">"}],"remoteSource":{"fileName":"ThrottleSequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/ThrottleSequence.swift#L114"},"extendedModule":"_Concurrency"},"abstract":[{"type":"text","text":"Emits either the first or latest element received during a specified amount of time."}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Dematerialize","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Dematerialize\/AsyncSequence-Implementations"]]},"variants":[{"paths":["\/documentation\/afluent\/asyncsequences\/dematerialize\/throttle(for:clock:latest:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","sections":[],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Dematerialize\/throttle(for:clock:latest:)","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"throttle","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"C"},{"text":">(","kind":"text"},{"text":"for","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"interval"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Duration","preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa"},{"kind":"text","text":", "},{"text":"clock","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"latest","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Throttle","text":"Throttle","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO8ThrottleV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"C","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:12_Concurrency5ClockP","kind":"typeIdentifier","text":"Clock"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The interval of time in which to observe and emit either the first or latest element."}]}],"name":"interval"},{"content":[{"type":"paragraph","inlineContent":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"true"},{"type":"text","text":", emits the latest element in the time interval.  If "},{"type":"codeVoice","code":"false"},{"type":"text","text":", emits the first element in the time interval."}]}],"name":"latest"}]},{"content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The first element in upstream will always be returned immediately.  Once a second element is received, then the clock will begin for the given time interval and return the first or latest element once completed.","type":"text"}]}],"name":"Note","type":"aside","style":"note"}],"kind":"content"}],"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/Dematerialize/AsyncSequence-Implementations":{"kind":"article","title":"AsyncSequence Implementations","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Dematerialize\/AsyncSequence-Implementations","role":"collectionGroup","type":"topic","url":"\/documentation\/afluent\/asyncsequences\/dematerialize\/asyncsequence-implementations"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"role":"symbol","url":"\/documentation\/afluent\/asyncsequences","type":"topic","abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncSequences","kind":"identifier"}],"title":"AsyncSequences"},"doc://Afluent/documentation/Afluent/AsyncSequences/Throttle":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Throttle","type":"topic","abstract":[],"title":"AsyncSequences.Throttle","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Throttle","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences\/throttle","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Throttle","kind":"identifier"}]},"doc://Afluent/documentation/Afluent":{"kind":"symbol","role":"collection","identifier":"doc:\/\/Afluent\/documentation\/Afluent","type":"topic","title":"Afluent","abstract":[],"url":"\/documentation\/afluent"},"doc://Afluent/documentation/Afluent/AsyncSequences/Dematerialize":{"kind":"symbol","navigatorTitle":[{"text":"Dematerialize","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Dematerialize","kind":"identifier"}],"abstract":[],"title":"AsyncSequences.Dematerialize","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Dematerialize","role":"symbol","type":"topic","url":"\/documentation\/afluent\/asyncsequences\/dematerialize"},"doc://Afluent/documentation/Afluent/AsyncSequences/Dematerialize/throttle(for:clock:latest:)":{"abstract":[{"type":"text","text":"Emits either the first or latest element received during a specified amount of time."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throttle","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"for"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"C"},{"text":".","kind":"text"},{"preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa","kind":"typeIdentifier","text":"Duration"},{"text":", ","kind":"text"},{"text":"clock","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":", "},{"kind":"externalParam","text":"latest"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO8ThrottleV","kind":"typeIdentifier","text":"Throttle"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"C"},{"text":">","kind":"text"}],"role":"symbol","type":"topic","title":"throttle(for:clock:latest:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Dematerialize\/throttle(for:clock:latest:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"text":" and ","type":"text"},{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}]},"kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/dematerialize\/throttle(for:clock:latest:)"}}}