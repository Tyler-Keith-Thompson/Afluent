{"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Encode","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Encode\/AsyncSequence-Implementations"]]},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Encode\/output(in:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asyncsequences\/encode\/output(in:)"]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"output","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"in","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"range","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","text":"AsyncSequences"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO8OutputInV","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/OutputIn","text":"OutputIn"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"R"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SX","text":"RangeExpression","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:SX5BoundQa","text":"Bound","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A range that indicates which elements to include."}]}],"name":"range"}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"An async sequence that contains, in order, the elements of the base sequence specified by the range.","type":"text"}]}]},{"kind":"content","content":[{"anchor":"Discussion","type":"heading","level":3,"text":"Discussion:"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Completes normally after range is exhausted."}]},{"anchor":"Example","type":"heading","level":3,"text":"Example:"},{"type":"codeListing","syntax":"swift","code":[" let originalSequence = [0, 3, 5, 7, 9].async"," for try await element in originalSequence.output(in: 1..<4) {","     print(\"\\(element)\")"," }"," \/\/ Prints 3, 5, 7"]}]}],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"output"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"kind":"externalParam","text":"in"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO8OutputInV","text":"OutputIn"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"symbolKind":"method","remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/OutputSequence.swift#L96","fileName":"OutputSequence.swift"},"title":"output(in:)","role":"symbol","externalID":"s:Sci7Afluents8SendableRzrlE6output2inAA14AsyncSequencesO8OutputInVy_xGqd___tSXRd__sABRd__Si5BoundRtd__lF::SYNTHESIZED::s:7Afluent14AsyncSequencesO6EncodeV","extendedModule":"_Concurrency","roleHeading":"Instance Method","modules":[{"name":"Afluent","relatedModules":["_Concurrency"]}],"conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]}},"abstract":[{"type":"text","text":"Returns an async sequence that contains, in order, the elements of the base sequence specified by the range."}],"references":{"doc://Afluent/documentation/Afluent":{"type":"topic","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","abstract":[],"url":"\/documentation\/afluent","role":"collection","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"type":"topic","title":"AsyncSequences","url":"\/documentation\/afluent\/asyncsequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequences"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/Encode/output(in:)":{"title":"output(in:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Encode\/output(in:)","kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"output","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"in","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO8OutputInV","text":"OutputIn","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/afluent\/asyncsequences\/encode\/output(in:)","abstract":[{"type":"text","text":"Returns an async sequence that contains, in order, the elements of the base sequence specified by the range."}]},"doc://Afluent/documentation/Afluent/AsyncSequences/OutputIn":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/OutputIn","role":"symbol","abstract":[],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OutputIn","kind":"identifier"}],"type":"topic","url":"\/documentation\/afluent\/asyncsequences\/outputin","navigatorTitle":[{"text":"OutputIn","kind":"identifier"}],"title":"AsyncSequences.OutputIn"},"doc://Afluent/documentation/Afluent/AsyncSequences/Encode":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Encode","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Encode","kind":"identifier"}],"abstract":[{"text":"Used as the implementation detail for the ","type":"text"},{"type":"codeVoice","code":"AsyncSequence\/encode(encoder:)"},{"type":"text","text":" operator."}],"role":"symbol","navigatorTitle":[{"text":"Encode","kind":"identifier"}],"type":"topic","title":"AsyncSequences.Encode","url":"\/documentation\/afluent\/asyncsequences\/encode","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/Encode/AsyncSequence-Implementations":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Encode\/AsyncSequence-Implementations","abstract":[],"role":"collectionGroup","type":"topic","title":"AsyncSequence Implementations","url":"\/documentation\/afluent\/asyncsequences\/encode\/asyncsequence-implementations","kind":"article"}}}