{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asyncsequences\/flatmap\/first()"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/FlatMap"]]},"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/FlatMap\/first()","interfaceLanguage":"swift"},"abstract":[{"text":"Returns the first element of the sequence, or ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" if the sequence is empty.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"first"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:Sci7ElementQa"},{"kind":"text","text":"?"}],"platforms":["macOS"],"languages":["swift"]}]},{"content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"This method is a convenience overload for async sequences, returning the first element encountered, or "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if none is produced."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"If the sequence throws before yielding a value, the error is rethrown."}],"type":"paragraph"},{"level":2,"text":"Example","anchor":"Example","type":"heading"},{"syntax":"swift","code":["let stream = AsyncStream<Int> { continuation in","    continuation.yield(42)","    continuation.yield(100)","    continuation.finish()","}","","if let first = try await stream.first() {","    print(\"First: \\(first)\") \/\/ Prints: First: 42","}"],"type":"codeListing"}],"kind":"content"}],"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"symbolKind":"method","remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/Extensions\/AsyncSequenceExtensions.swift#L30","fileName":"AsyncSequenceExtensions.swift"},"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"first"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:Sci7ElementQa"},{"kind":"text","text":"?"}],"externalID":"s:Sci7Afluents8Sendable7ElementRpzrlE5firstADSgyYaKF::SYNTHESIZED::s:7Afluent14AsyncSequencesO7FlatMapV","role":"symbol","extendedModule":"_Concurrency","modules":[{"name":"Afluent","relatedModules":["_Concurrency"]}],"title":"first()","roleHeading":"Instance Method","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}]}},"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/FlatMap":{"title":"AsyncSequences.FlatMap","url":"\/documentation\/afluent\/asyncsequences\/flatmap","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/FlatMap","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"FlatMap","kind":"identifier"}],"abstract":[{"type":"text","text":"Used as the implementation detail for the "},{"type":"codeVoice","code":"AsyncSequence\/flatMap(maxSubscriptions:_:)"},{"type":"text","text":" operator."}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FlatMap","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/FlatMap/first()":{"title":"first()","url":"\/documentation\/afluent\/asyncsequences\/flatmap\/first()","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"first","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sci7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/FlatMap\/first()","conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"abstract":[{"type":"text","text":"Returns the first element of the sequence, or "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if the sequence is empty."}],"type":"topic","role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","url":"\/documentation\/afluent\/asyncsequences","abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"kind":"symbol","title":"AsyncSequences","type":"topic","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncSequences","kind":"identifier"}],"navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}]},"doc://Afluent/documentation/Afluent":{"title":"Afluent","url":"\/documentation\/afluent","role":"collection","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol","abstract":[]}}}