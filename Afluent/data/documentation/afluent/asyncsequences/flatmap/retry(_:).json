{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asyncsequences\/flatmap\/retry(_:)"]}],"metadata":{"externalID":"s:Sci7Afluents8SendableRzsAB7ElementRpzrlE5retryyAA14AsyncSequencesO5RetryCy_xAA0G15ByCountStrategyCGSuF::SYNTHESIZED::s:7Afluent14AsyncSequencesO7FlatMapV","title":"retry(_:)","modules":[{"relatedModules":["_Concurrency"],"name":"Afluent"}],"symbolKind":"method","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}]},"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/RetrySequence.swift#L173","fileName":"RetrySequence.swift"},"roleHeading":"Instance Method","extendedModule":"_Concurrency","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"retry","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Retry","preciseIdentifier":"s:7Afluent14AsyncSequencesO5RetryC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"RetryByCountStrategy","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent20RetryByCountStrategyC"},{"text":">","kind":"text"}],"role":"symbol"},"sections":[],"abstract":[{"text":"Retries the upstream ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"text":" up to a specified number of times.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/FlatMap\/retry(_:)"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"retry","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"retries","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":" = 1) -> ","kind":"text"},{"text":"AsyncSequences","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Retry","kind":"typeIdentifier","text":"Retry","preciseIdentifier":"s:7Afluent14AsyncSequencesO5RetryC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:7Afluent20RetryByCountStrategyC","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByCountStrategy","text":"RetryByCountStrategy"},{"text":">","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"retries","content":[{"inlineContent":[{"type":"text","text":"The maximum number of times to retry the upstream, defaulting to 1."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"type":"heading","text":"Return Value","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"An ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"text":" that emits the same output as the upstream but retries on failure up to the specified number of times.","type":"text"}]}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"type":"aside","style":"important","name":"Important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Not every "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" can be retried, for this to work the sequence has to implement an iterator that doesnâ€™t preserve state across various creations."}]}]},{"style":"note","type":"aside","name":"Note","content":[{"inlineContent":[{"type":"text","text":""},{"code":"AsyncStream","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"AsyncThrowingStream"},{"text":" are notable sequences which cannot be retried on their own.","type":"text"}],"type":"paragraph"}]}]}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/FlatMap","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/FlatMap\/AsyncSequence-Implementations"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","references":{"doc://Afluent/documentation/Afluent":{"title":"Afluent","role":"collection","type":"topic","url":"\/documentation\/afluent","abstract":[],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent"},"doc://Afluent/documentation/Afluent/RetryByCountStrategy":{"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByCountStrategy","type":"topic","url":"\/documentation\/afluent\/retrybycountstrategy","title":"RetryByCountStrategy","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"RetryStrategy"},{"type":"text","text":" that limits the number of retry attempts."}],"navigatorTitle":[{"kind":"identifier","text":"RetryByCountStrategy"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"RetryByCountStrategy","kind":"identifier"}],"role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/FlatMap/retry(_:)":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/FlatMap\/retry(_:)","kind":"symbol","title":"retry(_:)","abstract":[{"type":"text","text":"Retries the upstream "},{"type":"codeVoice","code":"AsyncSequence"},{"text":" up to a specified number of times.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"retry","kind":"identifier"},{"kind":"text","text":"("},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Retry","preciseIdentifier":"s:7Afluent14AsyncSequencesO5RetryC"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"preciseIdentifier":"s:7Afluent20RetryByCountStrategyC","text":"RetryByCountStrategy","kind":"typeIdentifier"},{"kind":"text","text":">"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}]},"url":"\/documentation\/afluent\/asyncsequences\/flatmap\/retry(_:)","type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/Retry":{"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Retry","type":"topic","url":"\/documentation\/afluent\/asyncsequences\/retry","title":"AsyncSequences.Retry","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"Retry"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Retry"}],"role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/FlatMap/AsyncSequence-Implementations":{"type":"topic","abstract":[],"url":"\/documentation\/afluent\/asyncsequences\/flatmap\/asyncsequence-implementations","kind":"article","title":"AsyncSequence Implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/FlatMap\/AsyncSequence-Implementations","role":"collectionGroup"},"doc://Afluent/documentation/Afluent/AsyncSequences/FlatMap":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/FlatMap","navigatorTitle":[{"kind":"identifier","text":"FlatMap"}],"kind":"symbol","abstract":[],"url":"\/documentation\/afluent\/asyncsequences\/flatmap","title":"AsyncSequences.FlatMap","type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlatMap"}]},"doc://Afluent/documentation/Afluent/AsyncSequences":{"abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"title":"AsyncSequences","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"AsyncSequences","kind":"identifier"}],"role":"symbol","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","url":"\/documentation\/afluent\/asyncsequences","kind":"symbol","navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}]}}}