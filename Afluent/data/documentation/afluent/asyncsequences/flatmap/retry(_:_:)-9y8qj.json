{"abstract":[{"type":"text","text":"Retries the upstream "},{"code":"AsyncSequence","type":"codeVoice"},{"text":" up to a specified number of times while applying a transformation on error.","type":"text"}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/FlatMap\/retry(_:_:)-9y8qj","interfaceLanguage":"swift"},"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/FlatMap","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/FlatMap\/AsyncSequence-Implementations"]]},"variants":[{"paths":["\/documentation\/afluent\/asyncsequences\/flatmap\/retry(_:_:)-9y8qj"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"modules":[{"name":"Afluent","relatedModules":["_Concurrency"]}],"extendedModule":"_Concurrency","title":"retry(_:_:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}]},"roleHeading":"Instance Method","remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/RetryAfterFlatMappingSequence.swift#L214","fileName":"RetryAfterFlatMappingSequence.swift"},"externalID":"s:Sci7Afluents8SendableRzrlE5retryyAA14AsyncSequencesO21RetryAfterFlatMappingCy_xqd__AA0F15ByCountStrategyCGSu_qd__s5Error_pYaYbKctsABRd__SciRd__sAB7ElementRpzALQyd__AMRSlF::SYNTHESIZED::s:7Afluent14AsyncSequencesO7FlatMapV","role":"symbol","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"retry","kind":"identifier"},{"text":"<","kind":"text"},{"text":"D","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":", (any ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO21RetryAfterFlatMappingC","text":"RetryAfterFlatMapping","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"D","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"RetryByCountStrategy","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent20RetryByCountStrategyC"},{"kind":"text","text":">"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"retry"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"D"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"retries"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"kind":"text","text":" = 1, "},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"transform","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"kind":"text","text":" (any "},{"preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"AsyncSequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryAfterFlatMapping","preciseIdentifier":"s:7Afluent14AsyncSequencesO21RetryAfterFlatMappingC","text":"RetryAfterFlatMapping"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"D","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByCountStrategy","preciseIdentifier":"s:7Afluent20RetryByCountStrategyC","text":"RetryByCountStrategy"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"D","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:Sci","kind":"typeIdentifier","text":"AsyncSequence"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sci7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier","text":"Sendable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa","text":"Element"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"D"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:Sci7ElementQa"}]}]},{"parameters":[{"name":"retries","content":[{"type":"paragraph","inlineContent":[{"text":"The maximum number of times to retry the upstream, defaulting to 1.","type":"text"}]}]},{"name":"transform","content":[{"type":"paragraph","inlineContent":[{"text":"An async closure that takes the error from the upstream and returns a new ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":"."}]}]}],"kind":"parameters"},{"content":[{"type":"heading","text":"Return Value","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"type":"codeVoice","code":"AsyncSequence"},{"text":" that emits the same output as the upstream but retries on failure up to the specified number of times, with the applied transformation.","type":"text"}]}],"kind":"content"}],"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/FlatMap/retry(_:_:)-9y8qj":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/FlatMap\/retry(_:_:)-9y8qj","kind":"symbol","title":"retry(_:_:)","url":"\/documentation\/afluent\/asyncsequences\/flatmap\/retry(_:_:)-9y8qj","abstract":[{"text":"Retries the upstream ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"text":" up to a specified number of times while applying a transformation on error.","type":"text"}],"type":"topic","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"retry","kind":"identifier"},{"kind":"text","text":"<"},{"text":"D","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"text":", (any ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"D"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO21RetryAfterFlatMappingC","text":"RetryAfterFlatMapping"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent20RetryByCountStrategyC","text":"RetryByCountStrategy"},{"kind":"text","text":">"}]},"doc://Afluent/documentation/Afluent":{"kind":"symbol","role":"collection","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","abstract":[],"type":"topic","url":"\/documentation\/afluent"},"doc://Afluent/documentation/Afluent/AsyncSequences/FlatMap/AsyncSequence-Implementations":{"url":"\/documentation\/afluent\/asyncsequences\/flatmap\/asyncsequence-implementations","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/FlatMap\/AsyncSequence-Implementations","abstract":[],"kind":"article","role":"collectionGroup","title":"AsyncSequence Implementations"},"doc://Afluent/documentation/Afluent/AsyncSequences/FlatMap":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/FlatMap","url":"\/documentation\/afluent\/asyncsequences\/flatmap","role":"symbol","title":"AsyncSequences.FlatMap","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"FlatMap","kind":"identifier"}],"abstract":[],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"FlatMap"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/RetryAfterFlatMapping":{"type":"topic","navigatorTitle":[{"text":"RetryAfterFlatMapping","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RetryAfterFlatMapping"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryAfterFlatMapping","abstract":[],"title":"AsyncSequences.RetryAfterFlatMapping","url":"\/documentation\/afluent\/asyncsequences\/retryafterflatmapping","role":"symbol","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"kind":"symbol","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"AsyncSequences","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"title":"AsyncSequences","role":"symbol","url":"\/documentation\/afluent\/asyncsequences"},"doc://Afluent/documentation/Afluent/RetryByCountStrategy":{"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"RetryStrategy"},{"type":"text","text":" that limits the number of retry attempts."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByCountStrategy","type":"topic","title":"RetryByCountStrategy","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RetryByCountStrategy","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RetryByCountStrategy"}],"url":"\/documentation\/afluent\/retrybycountstrategy"}}}