{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asyncsequences\/groupby\/breakpoint(receiveoutput:receiveerror:)"]}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/GroupBy\/breakpoint(receiveOutput:receiveError:)","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"modules":[{"relatedModules":["_Concurrency"],"name":"Afluent"}],"roleHeading":"Instance Method","role":"symbol","extendedModule":"_Concurrency","remoteSource":{"fileName":"BreakpointSequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/BreakpointSequence.swift#L21"},"symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"breakpoint","kind":"identifier"},{"text":"(","kind":"text"},{"text":"receiveOutput","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa","text":"Element"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":")?, ","kind":"text"},{"text":"receiveError","kind":"externalParam"},{"text":": ((any ","kind":"text"},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":")?) -> ","kind":"text"},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"text":"HandleEvents","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"externalID":"s:Sci7Afluents8SendableRzrlE10breakpoint13receiveOutput0D5ErrorAA14AsyncSequencesO12HandleEventsVy_xGSb7ElementQzYaYbKcSg_Sbs0F0_pYaYbKcSgtF::SYNTHESIZED::s:7Afluent14AsyncSequencesO7GroupByV","title":"breakpoint(receiveOutput:receiveError:)"},"sections":[],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/GroupBy","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/GroupBy\/AsyncSequence-Implementations"]]},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"breakpoint","kind":"identifier"},{"text":"(","kind":"text"},{"text":"receiveOutput","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sci7ElementQa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":")? = nil, "},{"kind":"externalParam","text":"receiveError"},{"text":": ((any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":")? = nil) -> ","kind":"text"},{"text":"AsyncSequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"HandleEvents","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents","preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that takes the successful output of the sequence. If this closure returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":", a breakpoint is triggered. Default is "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"}]}],"name":"receiveOutput"},{"name":"receiveError","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that takes any error produced by the sequence. If this closure returns "},{"type":"codeVoice","code":"true"},{"text":", a breakpoint is triggered. Default is ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"}]}]}]},{"content":[{"anchor":"return-value","type":"heading","text":"Return Value","level":2},{"inlineContent":[{"text":"An asynchronous unit of work with the breakpoint conditions applied.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This function allows you to introduce conditional breakpoints based on the output or error of the async sequence."},{"type":"text","text":" "},{"text":"If the provided conditions are met, a ","type":"text"},{"code":"SIGTRAP","type":"codeVoice"},{"text":" signal is raised, pausing execution in a debugger.","type":"text"}]}],"kind":"content"}],"kind":"symbol","abstract":[{"type":"text","text":"Introduces a breakpoint into the async sequence."}],"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/GroupBy":{"type":"topic","title":"AsyncSequences.GroupBy","abstract":[],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"GroupBy"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"GroupBy"}],"url":"\/documentation\/afluent\/asyncsequences\/groupby","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/GroupBy"},"doc://Afluent/documentation/Afluent/AsyncSequences/HandleEvents":{"url":"\/documentation\/afluent\/asyncsequences\/handleevents","abstract":[],"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HandleEvents","kind":"identifier"}],"kind":"symbol","title":"AsyncSequences.HandleEvents","navigatorTitle":[{"kind":"identifier","text":"HandleEvents"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents"},"doc://Afluent/documentation/Afluent/AsyncSequences/GroupBy/breakpoint(receiveOutput:receiveError:)":{"role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"breakpoint"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"receiveOutput"},{"text":": ((","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa","text":"Element"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":")?, "},{"kind":"externalParam","text":"receiveError"},{"text":": ((any ","kind":"text"},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":")?) -> "},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier","text":"AsyncSequences"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"HandleEvents","preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/GroupBy\/breakpoint(receiveOutput:receiveError:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}]},"title":"breakpoint(receiveOutput:receiveError:)","url":"\/documentation\/afluent\/asyncsequences\/groupby\/breakpoint(receiveoutput:receiveerror:)","abstract":[{"text":"Introduces a breakpoint into the async sequence.","type":"text"}]},"doc://Afluent/documentation/Afluent/AsyncSequences":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"role":"symbol","url":"\/documentation\/afluent\/asyncsequences","type":"topic","abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncSequences","kind":"identifier"}],"title":"AsyncSequences"},"doc://Afluent/documentation/Afluent":{"kind":"symbol","role":"collection","identifier":"doc:\/\/Afluent\/documentation\/Afluent","type":"topic","title":"Afluent","abstract":[],"url":"\/documentation\/afluent"},"doc://Afluent/documentation/Afluent/AsyncSequences/GroupBy/AsyncSequence-Implementations":{"type":"topic","title":"AsyncSequence Implementations","abstract":[],"kind":"article","role":"collectionGroup","url":"\/documentation\/afluent\/asyncsequences\/groupby\/asyncsequence-implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/GroupBy\/AsyncSequence-Implementations"}}}