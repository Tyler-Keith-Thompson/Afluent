{"kind":"symbol","sections":[],"abstract":[{"text":"Replaces any ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" values from the upstream ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"text":" with the provided non-nil value.","type":"text"}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replaceNil"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"E"},{"kind":"text","text":">("},{"kind":"externalParam","text":"with"},{"kind":"text","text":" "},{"kind":"internalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","kind":"typeIdentifier","text":"AsyncSequences"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO10ReplaceNilV","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/ReplaceNil","kind":"typeIdentifier","text":"ReplaceNil"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier","text":"Sendable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sci7ElementQa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":"?"}]}],"kind":"declarations"},{"parameters":[{"name":"value","content":[{"type":"paragraph","inlineContent":[{"text":"The value to emit when the upstream emits ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"}]}]}],"kind":"parameters"},{"content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"inlineContent":[{"type":"text","text":"An "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" that emits the specified value instead of "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" when the upstream emits "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}],"type":"paragraph"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/GroupBy","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/GroupBy\/AsyncSequence-Implementations"]]},"metadata":{"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/ReplaceNilSequence.swift#L46","fileName":"ReplaceNilSequence.swift"},"externalID":"s:Sci7Afluents8SendableRzrlE10replaceNil4withAA14AsyncSequencesO07ReplaceD0Vy_xqd__Gqd___tsABRd__qd__Sg7ElementRtzlF::SYNTHESIZED::s:7Afluent14AsyncSequencesO7GroupByV","role":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"replaceNil","kind":"identifier"},{"text":"<","kind":"text"},{"text":"E","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO10ReplaceNilV","text":"ReplaceNil","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":">","kind":"text"}],"roleHeading":"Instance Method","modules":[{"name":"Afluent","relatedModules":["_Concurrency"]}],"symbolKind":"method","title":"replaceNil(with:)","extendedModule":"_Concurrency"},"variants":[{"paths":["\/documentation\/afluent\/asyncsequences\/groupby\/replacenil(with:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/GroupBy\/replaceNil(with:)","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/GroupBy":{"url":"\/documentation\/afluent\/asyncsequences\/groupby","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/GroupBy","kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"GroupBy"}],"navigatorTitle":[{"kind":"identifier","text":"GroupBy"}],"title":"AsyncSequences.GroupBy"},"doc://Afluent/documentation/Afluent/AsyncSequences/GroupBy/AsyncSequence-Implementations":{"kind":"article","url":"\/documentation\/afluent\/asyncsequences\/groupby\/asyncsequence-implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/GroupBy\/AsyncSequence-Implementations","type":"topic","title":"AsyncSequence Implementations","abstract":[],"role":"collectionGroup"},"doc://Afluent/documentation/Afluent":{"url":"\/documentation\/afluent","title":"Afluent","type":"topic","kind":"symbol","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent","role":"collection"},"doc://Afluent/documentation/Afluent/AsyncSequences/ReplaceNil":{"title":"AsyncSequences.ReplaceNil","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/ReplaceNil","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ReplaceNil"}],"url":"\/documentation\/afluent\/asyncsequences\/replacenil","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReplaceNil"}],"abstract":[],"kind":"symbol","role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequences"}],"abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"title":"AsyncSequences","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"role":"symbol","url":"\/documentation\/afluent\/asyncsequences","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences"},"doc://Afluent/documentation/Afluent/AsyncSequences/GroupBy/replaceNil(with:)":{"type":"topic","role":"symbol","title":"replaceNil(with:)","abstract":[{"text":"Replaces any ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" values from the upstream ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"text":" with the provided non-nil value.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"replaceNil","kind":"identifier"},{"text":"<","kind":"text"},{"text":"E","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"text":"ReplaceNil","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO10ReplaceNilV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":">","kind":"text"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}]},"url":"\/documentation\/afluent\/asyncsequences\/groupby\/replacenil(with:)","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/GroupBy\/replaceNil(with:)"}}}