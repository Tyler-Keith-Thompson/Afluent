{"metadata":{"modules":[{"relatedModules":["_Concurrency"],"name":"Afluent"}],"roleHeading":"Instance Method","externalID":"s:Sci7Afluents8SendableRzrlE4sink17receiveCompletion0D6OutputAA14AnyCancellableCyAA14AsyncSequencesO0E0Oy_s5Error_pGYaYbcSg_y7ElementQzYaYbKcSgtF::SYNTHESIZED::s:7Afluent14AsyncSequencesO7GroupByV","role":"symbol","title":"sink(receiveCompletion:receiveOutput:)","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"sink","kind":"identifier"},{"text":"(","kind":"text"},{"text":"receiveCompletion","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Completion","preciseIdentifier":"s:7Afluent14AsyncSequencesO10CompletionO","kind":"typeIdentifier"},{"text":"<any ","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":">) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")?, ","kind":"text"},{"text":"receiveOutput","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:Sci7ElementQa","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")?) -> ","kind":"text"},{"text":"AnyCancellable","preciseIdentifier":"s:7Afluent14AnyCancellableC","kind":"typeIdentifier"}],"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/Subscription\/AnyCancellable.swift#L163","fileName":"AnyCancellable.swift"},"extendedModule":"_Concurrency","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}]}},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/GroupBy","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/GroupBy\/AsyncSequence-Implementations"]]},"abstract":[{"text":"Starts processing the elements of this async sequence, handling output and completion events,","type":"text"},{"text":" ","type":"text"},{"text":"and returns an ","type":"text"},{"code":"AnyCancellable","type":"codeVoice"},{"text":" token that can be used to cancel the subscription.","type":"text"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"sink","kind":"identifier"},{"text":"(","kind":"text"},{"text":"receiveCompletion","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"AsyncSequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Completion","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Completion","preciseIdentifier":"s:7Afluent14AsyncSequencesO10CompletionO","kind":"typeIdentifier"},{"text":"<any ","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":">) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")? = nil, ","kind":"text"},{"text":"receiveOutput","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:Sci7ElementQa","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")? = nil) -> ","kind":"text"},{"text":"AnyCancellable","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyCancellable","preciseIdentifier":"s:7Afluent14AnyCancellableC","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"An optional async closure invoked when the sequence completes, either normally with ","type":"text"},{"type":"codeVoice","code":".finished"},{"text":" ","type":"text"},{"text":"or with an error ","type":"text"},{"type":"codeVoice","code":".failure"},{"text":". Called exactly once.","type":"text"}]}],"name":"receiveCompletion"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An optional async throwing closure invoked for each element produced by the sequence."},{"type":"text","text":" "},{"type":"text","text":"If this closure throws an error, the sequence is terminated and completion closure is called with "},{"type":"codeVoice","code":".failure"},{"type":"text","text":"."}]}],"name":"receiveOutput"}]},{"kind":"content","content":[{"text":"Return Value","type":"heading","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"code":"AnyCancellable","type":"codeVoice"},{"type":"text","text":" token that can be stored and used to cancel the ongoing subscription."}]}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"This method allows you to asynchronously receive each element emitted by the sequence and respond"},{"type":"text","text":" "},{"type":"text","text":"to completion or failure. The stream runs until all elements are consumed, an error occurs,"},{"type":"text","text":" "},{"type":"text","text":"or cancellation is triggered via the returned token."}],"type":"paragraph"},{"inlineContent":[{"text":"Usage example:","type":"text"}],"type":"paragraph"},{"code":["let publisher: AsyncStream<Int> = AsyncStream { continuation in","    Task {","        for i in 1...5 {","            continuation.yield(i)","            try await Task.sleep(nanoseconds: 500_000_000)","        }","        continuation.finish()","    }","}","","let cancellable = publisher.sink(","    receiveCompletion: { completion in","        switch completion {","        case .finished:","            print(\"Stream completed successfully\")","        case .failure(let error):","            print(\"Stream failed with error: \\(error)\")","        }","    },","    receiveOutput: { value in","        print(\"Received value: \\(value)\")","    }",")","","\/\/ To cancel early:","\/\/ cancellable.cancel()"],"type":"codeListing","syntax":"swift"}]}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/GroupBy\/sink(receiveCompletion:receiveOutput:)","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/afluent\/asyncsequences\/groupby\/sink(receivecompletion:receiveoutput:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Afluent/documentation/Afluent":{"abstract":[],"url":"\/documentation\/afluent","role":"collection","type":"topic","kind":"symbol","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent"},"doc://Afluent/documentation/Afluent/AsyncSequences/GroupBy/sink(receiveCompletion:receiveOutput:)":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/GroupBy\/sink(receiveCompletion:receiveOutput:)","abstract":[{"type":"text","text":"Starts processing the elements of this async sequence, handling output and completion events,"},{"type":"text","text":" "},{"type":"text","text":"and returns an "},{"type":"codeVoice","code":"AnyCancellable"},{"type":"text","text":" token that can be used to cancel the subscription."}],"type":"topic","role":"symbol","title":"sink(receiveCompletion:receiveOutput:)","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"sink"},{"kind":"text","text":"("},{"kind":"externalParam","text":"receiveCompletion"},{"kind":"text","text":": (("},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier","text":"AsyncSequences"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO10CompletionO","kind":"typeIdentifier","text":"Completion"},{"kind":"text","text":"<any "},{"preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"kind":"text","text":">) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":")?, "},{"kind":"externalParam","text":"receiveOutput"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sci7ElementQa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":")?) -> "},{"preciseIdentifier":"s:7Afluent14AnyCancellableC","kind":"typeIdentifier","text":"AnyCancellable"}],"url":"\/documentation\/afluent\/asyncsequences\/groupby\/sink(receivecompletion:receiveoutput:)"},"doc://Afluent/documentation/Afluent/AsyncSequences/GroupBy":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/GroupBy","navigatorTitle":[{"text":"GroupBy","kind":"identifier"}],"abstract":[{"type":"text","text":"Used as the implementation detail for the "},{"code":"AsyncSequence\/groupBy(keySelector:)","type":"codeVoice"},{"type":"text","text":" operator."}],"type":"topic","url":"\/documentation\/afluent\/asyncsequences\/groupby","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"GroupBy","kind":"identifier"}],"role":"symbol","title":"AsyncSequences.GroupBy"},"doc://Afluent/documentation/Afluent/AsyncSequences/Completion":{"title":"AsyncSequences.Completion","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Completion"}],"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Completion","url":"\/documentation\/afluent\/asyncsequences\/completion","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Completion"}],"abstract":[{"text":"A type that represents the completion of a sequence, either due to a normal completion or an error.","type":"text"}]},"doc://Afluent/documentation/Afluent/AnyCancellable":{"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyCancellable"}],"navigatorTitle":[{"kind":"identifier","text":"AnyCancellable"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyCancellable","url":"\/documentation\/afluent\/anycancellable","abstract":[{"text":"Stores an erased unit of work and provides a mechanism to cancel it.","type":"text"}],"kind":"symbol","title":"AnyCancellable","role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/GroupBy/AsyncSequence-Implementations":{"abstract":[],"kind":"article","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/GroupBy\/AsyncSequence-Implementations","title":"AsyncSequence Implementations","url":"\/documentation\/afluent\/asyncsequences\/groupby\/asyncsequence-implementations","role":"collectionGroup"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","url":"\/documentation\/afluent\/asyncsequences","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequences"}],"title":"AsyncSequences","type":"topic","abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}]}}}