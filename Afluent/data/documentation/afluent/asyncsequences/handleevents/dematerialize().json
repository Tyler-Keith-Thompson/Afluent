{"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"dematerialize"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">() -> "},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Dematerialize","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO13DematerializeV","text":"Dematerialize"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"T","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa","text":"Element"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Event","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Event","preciseIdentifier":"s:7Afluent14AsyncSequencesO5EventO"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Return Value","level":2,"anchor":"return-value","type":"heading"},{"inlineContent":[{"type":"text","text":"An "},{"type":"codeVoice","code":"AsyncSequences.Dematerialize"},{"text":" instance that represents the original ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"text":" with its elements and errors.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"inlineContent":[{"text":"This method is the inverse of ","type":"text"},{"code":"materialize","type":"codeVoice"},{"type":"text","text":". It takes an "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" of "},{"code":"Event","type":"codeVoice"},{"text":" values and transforms it back into an ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"text":" of the original elements, propagating errors as thrown exceptions.","type":"text"}],"type":"paragraph"},{"name":"Note","style":"note","content":[{"inlineContent":[{"type":"text","text":"The sequence must be of type "},{"type":"codeVoice","code":"AsyncSequences.Event<T>"},{"text":". The ","type":"text"},{"type":"codeVoice","code":"dematerialize"},{"type":"text","text":" method will extract the original elements and errors from these events."}],"type":"paragraph"}],"type":"aside"},{"style":"note","type":"aside","name":"Throws","content":[{"type":"paragraph","inlineContent":[{"text":"Re-throws any errors that were encapsulated in the ","type":"text"},{"code":"Event.failure","type":"codeVoice"},{"text":" cases.","type":"text"}]}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asyncsequences\/handleevents\/dematerialize()"]}],"kind":"symbol","identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents\/dematerialize()","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents\/AsyncSequence-Implementations"]]},"metadata":{"title":"dematerialize()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dematerialize","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">() -> ","kind":"text"},{"text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO13DematerializeV","text":"Dematerialize","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"extendedModule":"_Concurrency","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}]},"role":"symbol","externalID":"s:Sci7Afluents8SendableRzrlE13dematerializeAA14AsyncSequencesO13DematerializeVy_xqd__GysABRd__AE5EventOy_qd__G7ElementRtzlF::SYNTHESIZED::s:7Afluent14AsyncSequencesO12HandleEventsV","remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/DematerializeSequence.swift#L48","fileName":"DematerializeSequence.swift"},"roleHeading":"Instance Method","modules":[{"name":"Afluent","relatedModules":["_Concurrency"]}],"symbolKind":"method"},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"abstract":[{"type":"text","text":"Transforms a sequence of "},{"type":"codeVoice","code":"Event"},{"type":"text","text":" values back into their original form in an "},{"type":"codeVoice","code":"AsyncSequence"},{"text":".","type":"text"}],"references":{"doc://Afluent/documentation/Afluent/AsyncSequences":{"abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"AsyncSequences","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences","navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}],"type":"topic","title":"AsyncSequences","role":"symbol","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences"},"doc://Afluent/documentation/Afluent":{"abstract":[],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent","title":"Afluent","url":"\/documentation\/afluent","type":"topic","role":"collection"},"doc://Afluent/documentation/Afluent/AsyncSequences/HandleEvents/AsyncSequence-Implementations":{"url":"\/documentation\/afluent\/asyncsequences\/handleevents\/asyncsequence-implementations","type":"topic","kind":"article","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents\/AsyncSequence-Implementations","role":"collectionGroup","abstract":[],"title":"AsyncSequence Implementations"},"doc://Afluent/documentation/Afluent/AsyncSequences/Dematerialize":{"navigatorTitle":[{"kind":"identifier","text":"Dematerialize"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Dematerialize","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Dematerialize","abstract":[],"kind":"symbol","role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/dematerialize","type":"topic","title":"AsyncSequences.Dematerialize"},"doc://Afluent/documentation/Afluent/AsyncSequences/HandleEvents":{"type":"topic","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HandleEvents","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/handleevents","navigatorTitle":[{"text":"HandleEvents","kind":"identifier"}],"role":"symbol","title":"AsyncSequences.HandleEvents"},"doc://Afluent/documentation/Afluent/AsyncSequences/HandleEvents/dematerialize()":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents\/dematerialize()","title":"dematerialize()","kind":"symbol","abstract":[{"text":"Transforms a sequence of ","type":"text"},{"code":"Event","type":"codeVoice"},{"type":"text","text":" values back into their original form in an "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":"."}],"role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dematerialize","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">() -> "},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Dematerialize","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO13DematerializeV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}]},"url":"\/documentation\/afluent\/asyncsequences\/handleevents\/dematerialize()"},"doc://Afluent/documentation/Afluent/AsyncSequences/Event":{"role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Event"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Represents the different kinds of events that can be emitted by "},{"type":"codeVoice","code":"Materialize"},{"text":".","type":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Event","navigatorTitle":[{"text":"Event","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences\/event","title":"AsyncSequences.Event"}}}