{"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents\/dematerialize()","interfaceLanguage":"swift"},"metadata":{"symbolKind":"method","modules":[{"relatedModules":["_Concurrency"],"name":"Afluent"}],"title":"dematerialize()","externalID":"s:Sci7Afluents8SendableRzrlE13dematerializeAA14AsyncSequencesO13DematerializeVy_xqd__GysABRd__AE5EventOy_qd__G7ElementRtzlF::SYNTHESIZED::s:7Afluent14AsyncSequencesO12HandleEventsV","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"remoteSource":{"fileName":"DematerializeSequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/DematerializeSequence.swift#L48"},"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"dematerialize","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">() -> ","kind":"text"},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO13DematerializeV","text":"Dematerialize","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"roleHeading":"Instance Method","extendedModule":"_Concurrency","role":"symbol"},"sections":[],"abstract":[{"text":"Transforms a sequence of ","type":"text"},{"type":"codeVoice","code":"Event"},{"type":"text","text":" values back into their original form in an "},{"type":"codeVoice","code":"AsyncSequence"},{"text":".","type":"text"}],"variants":[{"paths":["\/documentation\/afluent\/asyncsequences\/handleevents\/dematerialize()"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents\/AsyncSequence-Implementations"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dematerialize","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">() -> ","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"text":".","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Dematerialize","text":"Dematerialize","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO13DematerializeV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa"},{"text":" == ","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Event","preciseIdentifier":"s:7Afluent14AsyncSequencesO5EventO","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Event"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"An ","type":"text"},{"code":"AsyncSequences.Dematerialize","type":"codeVoice"},{"text":" instance that represents the original ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"text":" with its elements and errors.","type":"text"}]}]},{"content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method is the inverse of "},{"type":"codeVoice","code":"materialize"},{"text":". It takes an ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"text":" of ","type":"text"},{"type":"codeVoice","code":"Event"},{"type":"text","text":" values and transforms it back into an "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" of the original elements, propagating errors as thrown exceptions."}]},{"style":"note","content":[{"inlineContent":[{"type":"text","text":"The sequence must be of type "},{"type":"codeVoice","code":"AsyncSequences.Event<T>"},{"text":". The ","type":"text"},{"type":"codeVoice","code":"dematerialize"},{"text":" method will extract the original elements and errors from these events.","type":"text"}],"type":"paragraph"}],"name":"Note","type":"aside"},{"content":[{"type":"paragraph","inlineContent":[{"text":"Re-throws any errors that were encapsulated in the ","type":"text"},{"type":"codeVoice","code":"Event.failure"},{"text":" cases.","type":"text"}]}],"type":"aside","style":"note","name":"Throws"}],"kind":"content"}],"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/Event":{"title":"AsyncSequences.Event","kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/event","navigatorTitle":[{"text":"Event","kind":"identifier"}],"abstract":[{"type":"text","text":"Represents the different kinds of events that can be emitted by "},{"type":"codeVoice","code":"Materialize"},{"text":".","type":"text"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Event"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Event"},"doc://Afluent/documentation/Afluent/AsyncSequences/HandleEvents/AsyncSequence-Implementations":{"abstract":[],"kind":"article","title":"AsyncSequence Implementations","role":"collectionGroup","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents\/AsyncSequence-Implementations","url":"\/documentation\/afluent\/asyncsequences\/handleevents\/asyncsequence-implementations"},"doc://Afluent/documentation/Afluent/AsyncSequences/HandleEvents":{"title":"AsyncSequences.HandleEvents","kind":"symbol","type":"topic","url":"\/documentation\/afluent\/asyncsequences\/handleevents","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"HandleEvents","kind":"identifier"}],"role":"symbol","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"HandleEvents"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/HandleEvents/dematerialize()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"dematerialize","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"text":".","kind":"text"},{"text":"Dematerialize","preciseIdentifier":"s:7Afluent14AsyncSequencesO13DematerializeV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"url":"\/documentation\/afluent\/asyncsequences\/handleevents\/dematerialize()","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents\/dematerialize()","kind":"symbol","title":"dematerialize()","abstract":[{"type":"text","text":"Transforms a sequence of "},{"code":"Event","type":"codeVoice"},{"type":"text","text":" values back into their original form in an "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":"."}],"type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"role":"symbol","kind":"symbol","url":"\/documentation\/afluent\/asyncsequences","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequences"}],"navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}],"title":"AsyncSequences","abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences"},"doc://Afluent/documentation/Afluent":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent","abstract":[],"kind":"symbol","title":"Afluent","url":"\/documentation\/afluent","role":"collection","type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/Dematerialize":{"navigatorTitle":[{"text":"Dematerialize","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Dematerialize","abstract":[],"type":"topic","url":"\/documentation\/afluent\/asyncsequences\/dematerialize","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Dematerialize"}],"kind":"symbol","title":"AsyncSequences.Dematerialize"}}}