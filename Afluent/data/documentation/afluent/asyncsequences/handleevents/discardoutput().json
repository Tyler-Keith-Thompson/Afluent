{"metadata":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"symbolKind":"method","title":"discardOutput()","remoteSource":{"fileName":"DiscardOutputSequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/DiscardOutputSequence.swift#L21"},"extendedModule":"_Concurrency","externalID":"s:Sci7Afluents8SendableRzrlE13discardOutput12_Concurrency16AsyncMapSequenceVyxytGyF::SYNTHESIZED::s:7Afluent14AsyncSequencesO12HandleEventsV","modules":[{"name":"Afluent","relatedModules":["_Concurrency"]}],"role":"symbol","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"discardOutput"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"discardOutput"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV","text":"AsyncMapSequence"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use this to ignore the payload of each element, but still receive an event for every value."}]},{"anchor":"Example","type":"heading","level":2,"text":"Example"},{"syntax":"swift","code":["for await _ in Just(1).discardOutput() {","    \/\/ Loop runs once for each element, but value is always Void","}"],"type":"codeListing"}]}],"kind":"symbol","sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"text":"Transforms each output value from the upstream sequence into ","type":"text"},{"type":"codeVoice","code":"Void"},{"text":".","type":"text"}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents\/AsyncSequence-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents\/discardOutput()"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asyncsequences\/handleevents\/discardoutput()"]}],"references":{"doc://Afluent/documentation/Afluent":{"type":"topic","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","abstract":[],"url":"\/documentation\/afluent","role":"collection","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"type":"topic","title":"AsyncSequences","url":"\/documentation\/afluent\/asyncsequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequences"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/HandleEvents":{"url":"\/documentation\/afluent\/asyncsequences\/handleevents","type":"topic","title":"AsyncSequences.HandleEvents","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents","role":"symbol","abstract":[{"text":"Used as the implementation detail for the ","type":"text"},{"code":"AsyncSequence\/handleEvents(receiveMakeIterator:receiveNext:receiveOutput:receiveError:receiveComplete:receiveCancel:)","type":"codeVoice"},{"text":" operator.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HandleEvents","kind":"identifier"}],"navigatorTitle":[{"text":"HandleEvents","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/HandleEvents/discardOutput()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"discardOutput"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV","kind":"typeIdentifier","text":"AsyncMapSequence"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents\/discardOutput()","kind":"symbol","role":"symbol","abstract":[{"text":"Transforms each output value from the upstream sequence into ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":".","type":"text"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"title":"discardOutput()","url":"\/documentation\/afluent\/asyncsequences\/handleevents\/discardoutput()"},"doc://Afluent/documentation/Afluent/AsyncSequences/HandleEvents/AsyncSequence-Implementations":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents\/AsyncSequence-Implementations","title":"AsyncSequence Implementations","kind":"article","abstract":[],"url":"\/documentation\/afluent\/asyncsequences\/handleevents\/asyncsequence-implementations","role":"collectionGroup","type":"topic"}}}