{"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents"]]},"abstract":[{"type":"text","text":"Groups the elements of the sequence into substreams based on a key."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"groupBy","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Key","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"keySelector","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:Sci7ElementQa","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/GroupBy","text":"GroupBy","preciseIdentifier":"s:7Afluent14AsyncSequencesO7GroupByV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Hashable","preciseIdentifier":"s:SH","kind":"typeIdentifier"}]}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"Use this to partition values by a computed key, yielding an async sequence for each group."}],"type":"paragraph"},{"style":"warning","name":"Warning","content":[{"inlineContent":[{"type":"text","text":"This operator stores each group in a dictionary. If the number of unique keys is very large or unbounded, memory usage may increase significantly."}],"type":"paragraph"}],"type":"aside"},{"anchor":"Example","text":"Example","type":"heading","level":2},{"syntax":"swift","type":"codeListing","code":["for await (key, group) in Just(1).groupBy { $0 % 2 } {","    print(\"Key: \\(key)\")","    for try await value in group {","        print(\"Value: \\(value)\")","    }","}"]}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asyncsequences\/handleevents\/groupby(keyselector:)"]}],"sections":[],"metadata":{"remoteSource":{"fileName":"GroupBySequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/GroupBySequence.swift#L83"},"modules":[{"name":"Afluent","relatedModules":["_Concurrency"]}],"title":"groupBy(keySelector:)","externalID":"s:Sci7Afluents8SendableRzsAB7ElementRpzrlE7groupBy11keySelectorAA14AsyncSequencesO05GroupE0Vy_xqd__Gqd__ADYaYbc_tSHRd__lF::SYNTHESIZED::s:7Afluent14AsyncSequencesO12HandleEventsV","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}]},"role":"symbol","symbolKind":"method","extendedModule":"_Concurrency","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"groupBy"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Key"},{"kind":"text","text":">("},{"kind":"externalParam","text":"keySelector"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sci7ElementQa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Key"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier","text":"AsyncSequences"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO7GroupByV","kind":"typeIdentifier","text":"GroupBy"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Key"},{"kind":"text","text":">"}]},"kind":"symbol","identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents\/groupBy(keySelector:)","interfaceLanguage":"swift"},"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/HandleEvents/groupBy(keySelector:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"groupBy","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Key","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"keySelector","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"text":"GroupBy","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO7GroupByV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":">","kind":"text"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"abstract":[{"text":"Groups the elements of the sequence into substreams based on a key.","type":"text"}],"url":"\/documentation\/afluent\/asyncsequences\/handleevents\/groupby(keyselector:)","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents\/groupBy(keySelector:)","title":"groupBy(keySelector:)","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/HandleEvents":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HandleEvents"}],"kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/handleevents","title":"AsyncSequences.HandleEvents","abstract":[{"type":"text","text":"Used as the implementation detail for the "},{"type":"codeVoice","code":"AsyncSequence\/handleEvents(receiveMakeIterator:receiveNext:receiveOutput:receiveError:receiveComplete:receiveCancel:)"},{"type":"text","text":" operator."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HandleEvents"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/GroupBy":{"title":"AsyncSequences.GroupBy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/GroupBy","navigatorTitle":[{"text":"GroupBy","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences\/groupby","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"GroupBy","kind":"identifier"}],"abstract":[{"type":"text","text":"Used as the implementation detail for the "},{"type":"codeVoice","code":"AsyncSequence\/groupBy(keySelector:)"},{"type":"text","text":" operator."}],"type":"topic","kind":"symbol","role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","url":"\/documentation\/afluent\/asyncsequences","abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"kind":"symbol","title":"AsyncSequences","type":"topic","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncSequences","kind":"identifier"}],"navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}]},"doc://Afluent/documentation/Afluent":{"title":"Afluent","url":"\/documentation\/afluent","role":"collection","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol","abstract":[]}}}