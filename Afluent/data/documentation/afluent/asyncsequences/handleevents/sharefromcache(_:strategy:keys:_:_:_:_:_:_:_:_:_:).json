{"metadata":{"externalID":"s:Sci7Afluents8SendableRzsAB7ElementRpzrlE14shareFromCache_8strategy4keys_________AA22AsyncBroadcastSequenceVyAA0I9SequencesO12HandleEventsVy_xGGAA0ikF0C_AQ8StrategyOqd__qd_0_qd_1_qd_2_qd_3_qd_4_qd_5_qd_6_qd_7_qd_8_tSHRd__SHRd_0_SHRd_1_SHRd_2_SHRd_3_SHRd_4_SHRd_5_SHRd_6_SHRd_7_SHRd_8_r8_lF::SYNTHESIZED::s:7Afluent14AsyncSequencesO12HandleEventsV","roleHeading":"Instance Method","extendedModule":"_Concurrency","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"shareFromCache"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"H0"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H1"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H2"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H3"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H4"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H5"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H6"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H7"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H8"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H9"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent18AsyncSequenceCacheC","text":"AsyncSequenceCache"},{"kind":"text","text":", "},{"kind":"externalParam","text":"strategy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent18AsyncSequenceCacheC","text":"AsyncSequenceCache"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent18AsyncSequenceCacheC8StrategyO","text":"Strategy"},{"kind":"text","text":", "},{"kind":"externalParam","text":"keys"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"H0"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H1"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H2"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H3"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H4"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H5"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H6"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H7"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H8"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H9"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsyncBroadcastSequenceV","text":"AsyncBroadcastSequence"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV","text":"HandleEvents"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">>"}],"symbolKind":"method","role":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}]},"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/ShareFromCacheSequence.swift#L512","fileName":"ShareFromCacheSequence.swift"},"modules":[{"name":"Afluent","relatedModules":["_Concurrency"]}],"title":"shareFromCache(_:strategy:keys:_:_:_:_:_:_:_:_:_:)"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"shareFromCache"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"H0"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H1"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H2"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H3"},{"text":", ","kind":"text"},{"text":"H4","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"H5","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"H6","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"H7","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"H8","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H9"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"cache"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Afluent18AsyncSequenceCacheC","kind":"typeIdentifier","text":"AsyncSequenceCache","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache"},{"kind":"text","text":", "},{"kind":"externalParam","text":"strategy"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Afluent18AsyncSequenceCacheC","kind":"typeIdentifier","text":"AsyncSequenceCache","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Afluent18AsyncSequenceCacheC8StrategyO","kind":"typeIdentifier","text":"Strategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache\/Strategy"},{"kind":"text","text":", "},{"kind":"externalParam","text":"keys"},{"kind":"text","text":" "},{"kind":"internalParam","text":"k0"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"H0"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"k1"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"H1"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"k2"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"H2"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"k3"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"H3"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"k4"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"H4"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"k5"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"H5"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"k6"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"H6"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"k7"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"H7"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"k8"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"H8"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"🐶"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"H9"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsyncBroadcastSequenceV","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncBroadcastSequence","text":"AsyncBroadcastSequence"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","text":"AsyncSequences"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents","text":"HandleEvents"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"H0"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SH","text":"Hashable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H1"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SH","text":"Hashable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H2"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SH","text":"Hashable"},{"kind":"text","text":", "},{"text":"H3","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Hashable","kind":"typeIdentifier","preciseIdentifier":"s:SH"},{"text":", ","kind":"text"},{"text":"H4","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SH","text":"Hashable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H5"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SH","text":"Hashable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H6"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SH","text":"Hashable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H7"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SH","text":"Hashable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H8"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SH","text":"Hashable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H9"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SH","text":"Hashable"}]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The cache from which to share data."}]}],"name":"cache"},{"content":[{"inlineContent":[{"type":"text","text":"The caching strategy to use."}],"type":"paragraph"}],"name":"strategy"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The first hashable key."}]}],"name":"k0"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The second hashable key.","type":"text"}]}],"name":"k1"},{"content":[{"inlineContent":[{"type":"text","text":"The third hashable key."}],"type":"paragraph"}],"name":"k2"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The fourth hashable key."}]}],"name":"k3"},{"content":[{"inlineContent":[{"type":"text","text":"The fifth hashable key."}],"type":"paragraph"}],"name":"k4"},{"content":[{"inlineContent":[{"type":"text","text":"The sixth hashable key."}],"type":"paragraph"}],"name":"k5"},{"content":[{"inlineContent":[{"text":"The seventh hashable key.","type":"text"}],"type":"paragraph"}],"name":"k6"},{"content":[{"inlineContent":[{"type":"text","text":"The eighth hashable key."}],"type":"paragraph"}],"name":"k7"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The ninth hashable key."}]}],"name":"k8"},{"content":[{"inlineContent":[{"text":"The tenth hashable key.","type":"text"}],"type":"paragraph"}],"name":"🐶"}],"kind":"parameters"},{"content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"An asynchronous broadcast sequence that shares the underlying sequence’s values according to the cache and strategy.","type":"text"}]}],"kind":"content"},{"content":[{"type":"heading","text":"Example","level":2,"anchor":"Example"},{"type":"codeListing","code":["let cache = AsyncSequenceCache()","let sequence = fetchData(a: 1, b: 2, c: 3, d: 4, e: 5, f: 6, g: 7, h: 8, i: 9, j: 10)","let sharedSequence = sequence.shareFromCache(cache, strategy: .cacheUntilCompletionOrCancellation, keys: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10)","","Task {","    for await item in sharedSequence {","        print(\"Item: \\(item)\")","    }","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"These ten keys combined provide a unique cache key.","type":"text"}]},{"type":"aside","name":"Important","content":[{"type":"paragraph","inlineContent":[{"text":"This operator should generally be placed at the end of an operator chain. Any operators applied after ","type":"text"},{"type":"codeVoice","code":"shareFromCache"},{"text":" will not be shared and may result in duplicated work or side effects.","type":"text"}]}],"style":"important"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/afluent\/asyncsequences\/handleevents\/sharefromcache(_:strategy:keys:_:_:_:_:_:_:_:_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents\/shareFromCache(_:strategy:keys:_:_:_:_:_:_:_:_:_:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents\/AsyncSequence-Implementations"]]},"abstract":[{"type":"text","text":"This operator enables sharing and caching of results from an async sequence"},{"type":"text","text":" "},{"type":"text","text":"based on a specified caching strategy and ten hashable cache keys."},{"type":"text","text":" "},{"type":"text","text":"The combined hashable keys uniquely identify the shared sequence in the cache."}],"references":{"doc://Afluent/documentation/Afluent":{"type":"topic","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","abstract":[],"url":"\/documentation\/afluent","role":"collection","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/HandleEvents/AsyncSequence-Implementations":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents\/AsyncSequence-Implementations","title":"AsyncSequence Implementations","kind":"article","abstract":[],"url":"\/documentation\/afluent\/asyncsequences\/handleevents\/asyncsequence-implementations","role":"collectionGroup","type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/HandleEvents/shareFromCache(_:strategy:keys:_:_:_:_:_:_:_:_:_:)":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"shareFromCache"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"H0"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H1"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H2"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H3"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H4"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H5"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H6"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H7"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H8"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H9"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent18AsyncSequenceCacheC","text":"AsyncSequenceCache"},{"kind":"text","text":", "},{"kind":"externalParam","text":"strategy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent18AsyncSequenceCacheC","text":"AsyncSequenceCache"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent18AsyncSequenceCacheC8StrategyO","text":"Strategy"},{"kind":"text","text":", "},{"kind":"externalParam","text":"keys"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"H0"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H1"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H2"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H3"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H4"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H5"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H6"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H7"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H8"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H9"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsyncBroadcastSequenceV","text":"AsyncBroadcastSequence"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV","text":"HandleEvents"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">>"}],"role":"symbol","abstract":[{"type":"text","text":"This operator enables sharing and caching of results from an async sequence"},{"type":"text","text":" "},{"type":"text","text":"based on a specified caching strategy and ten hashable cache keys."},{"type":"text","text":" "},{"type":"text","text":"The combined hashable keys uniquely identify the shared sequence in the cache."}],"title":"shareFromCache(_:strategy:keys:_:_:_:_:_:_:_:_:_:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}]},"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents\/shareFromCache(_:strategy:keys:_:_:_:_:_:_:_:_:_:)","url":"\/documentation\/afluent\/asyncsequences\/handleevents\/sharefromcache(_:strategy:keys:_:_:_:_:_:_:_:_:_:)"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"type":"topic","title":"AsyncSequences","url":"\/documentation\/afluent\/asyncsequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequences"}]},"doc://Afluent/documentation/Afluent/AsyncSequenceCache":{"navigatorTitle":[{"kind":"identifier","text":"AsyncSequenceCache"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache","title":"AsyncSequenceCache","abstract":[{"text":"A thread-safe cache for sharing async sequences by integer key.","type":"text"},{"text":" ","type":"text"},{"text":"This cache is commonly used with the ","type":"text"},{"code":"shareFromCache","type":"codeVoice"},{"text":" operator to reuse sequences.","type":"text"}],"role":"symbol","url":"\/documentation\/afluent\/asyncsequencecache","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequenceCache"}],"type":"topic","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncBroadcastSequence":{"kind":"symbol","abstract":[{"type":"text","text":"An async sequence that multicasts elements from an upstream sequence to multiple concurrent consumers."}],"navigatorTitle":[{"text":"AsyncBroadcastSequence","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncbroadcastsequence","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncBroadcastSequence","kind":"identifier"}],"title":"AsyncBroadcastSequence","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncBroadcastSequence","type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequenceCache/Strategy":{"abstract":[{"type":"codeVoice","code":"Strategy"},{"type":"text","text":" represents the available caching strategies for the "},{"type":"codeVoice","code":"AsyncSequenceCache"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"These strategies determine how long the cache retains the async sequences."}],"title":"AsyncSequenceCache.Strategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache\/Strategy","url":"\/documentation\/afluent\/asyncsequencecache\/strategy","type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Strategy"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Strategy"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/HandleEvents":{"url":"\/documentation\/afluent\/asyncsequences\/handleevents","type":"topic","title":"AsyncSequences.HandleEvents","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents","role":"symbol","abstract":[{"text":"Used as the implementation detail for the ","type":"text"},{"code":"AsyncSequence\/handleEvents(receiveMakeIterator:receiveNext:receiveOutput:receiveError:receiveComplete:receiveCancel:)","type":"codeVoice"},{"text":" operator.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HandleEvents","kind":"identifier"}],"navigatorTitle":[{"text":"HandleEvents","kind":"identifier"}]}}}