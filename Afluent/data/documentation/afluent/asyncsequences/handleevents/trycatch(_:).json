{"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents\/AsyncSequence-Implementations"]]},"sections":[],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents\/tryCatch(_:)","interfaceLanguage":"swift"},"metadata":{"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}]},"modules":[{"name":"Afluent","relatedModules":["_Concurrency"]}],"title":"tryCatch(_:)","remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/CatchSequence.swift#L95","fileName":"CatchSequence.swift"},"symbolKind":"method","externalID":"s:Sci7Afluents8SendableRzrlE8tryCatchyAA14AsyncSequencesO0D0Vy_xqd__Gqd__s5Error_pYaYbKcsABRd__SciRd__7ElementQyd__AJRtzlF::SYNTHESIZED::s:7Afluent14AsyncSequencesO12HandleEventsV","extendedModule":"_Concurrency","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"tryCatch"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"D"},{"text":">((any ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Catch","preciseIdentifier":"s:7Afluent14AsyncSequencesO5CatchV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":">"}],"roleHeading":"Instance Method","role":"symbol"},"abstract":[{"text":"Tries to catch any errors emitted by the upstream ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" and handles them using the provided throwing closure."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"tryCatch","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"D"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"handler"},{"kind":"text","text":": "},{"text":"@escaping","kind":"keyword"},{"kind":"text","text":" (any "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"D"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","text":"AsyncSequences"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO5CatchV","kind":"typeIdentifier","text":"Catch","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Catch"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier","text":"Sendable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"D"},{"text":" : ","kind":"text"},{"text":"AsyncSequence","kind":"typeIdentifier","preciseIdentifier":"s:Sci"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","preciseIdentifier":"s:Sci7ElementQa","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa"}]}]},{"parameters":[{"name":"handler","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that takes an "},{"code":"Error","type":"codeVoice"},{"text":" and returns an ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":", potentially throwing an error."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"inlineContent":[{"type":"text","text":"An "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" that will try to catch and handle any errors emitted by the upstream sequence."}],"type":"paragraph"}]}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asyncsequences\/handleevents\/trycatch(_:)"]}],"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/Catch":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Catch","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Catch"}],"title":"AsyncSequences.Catch","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Catch"}],"type":"topic","url":"\/documentation\/afluent\/asyncsequences\/catch","abstract":[],"kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/HandleEvents/tryCatch(_:)":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"title":"tryCatch(_:)","role":"symbol","abstract":[{"type":"text","text":"Tries to catch any errors emitted by the upstream "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" and handles them using the provided throwing closure."}],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents\/tryCatch(_:)","type":"topic","url":"\/documentation\/afluent\/asyncsequences\/handleevents\/trycatch(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"tryCatch"},{"text":"<","kind":"text"},{"text":"D","kind":"genericParameter"},{"kind":"text","text":">((any "},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Catch","preciseIdentifier":"s:7Afluent14AsyncSequencesO5CatchV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"D"},{"text":">","kind":"text"}]},"doc://Afluent/documentation/Afluent":{"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent","role":"collection","type":"topic","abstract":[],"title":"Afluent","url":"\/documentation\/afluent"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"role":"symbol","title":"AsyncSequences","url":"\/documentation\/afluent\/asyncsequences","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequences"}],"navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}],"abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences"},"doc://Afluent/documentation/Afluent/AsyncSequences/HandleEvents":{"url":"\/documentation\/afluent\/asyncsequences\/handleevents","type":"topic","abstract":[],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents","navigatorTitle":[{"text":"HandleEvents","kind":"identifier"}],"role":"symbol","title":"AsyncSequences.HandleEvents","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HandleEvents","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/HandleEvents/AsyncSequence-Implementations":{"title":"AsyncSequence Implementations","type":"topic","role":"collectionGroup","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents\/AsyncSequence-Implementations","kind":"article","abstract":[],"url":"\/documentation\/afluent\/asyncsequences\/handleevents\/asyncsequence-implementations"}}}