{"relationshipsSections":[{"kind":"relationships","title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/Afluent\/s8SendableP","doc:\/\/Afluent\/Sci"]}],"kind":"symbol","metadata":{"modules":[{"name":"Afluent"}],"extendedModule":"Afluent","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Just"}],"externalID":"s:7Afluent14AsyncSequencesO4JustV","title":"AsyncSequences.Just","roleHeading":"Structure","symbolKind":"struct","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Just"}],"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/JustSequence.swift#L16","fileName":"JustSequence.swift"}},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just"},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences"]]},"sections":[],"abstract":[{"type":"text","text":"An "},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" that emits a single specified element and then completes."}],"topicSections":[{"title":"Structures","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/AsyncIterator"],"anchor":"Structures"},{"title":"Initializers","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/init(_:)"],"anchor":"Initializers"},{"title":"Instance Methods","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/makeAsyncIterator()"],"anchor":"Instance-Methods"},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/AsyncSequence-Implementations","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/AsyncSequence-Implementations"],"anchor":"Default-Implementations"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Just","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Element","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"}]}]},{"kind":"parameters","parameters":[{"name":"value","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The single element that this sequence will emit."}]}]}]},{"kind":"content","content":[{"anchor":"overview","type":"heading","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Just"},{"text":" is a simple ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"text":" that emits only one element and then finishes. Itâ€™s useful for creating sequences with a single, known value, often for testing or combining with other asynchronous sequences.","type":"text"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asyncsequences\/just"]}],"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/Just/init(_:)":{"url":"\/documentation\/afluent\/asyncsequences\/just\/init(_:)","title":"init(_:)","type":"topic","role":"symbol","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Creates a "},{"code":"Just","type":"codeVoice"},{"type":"text","text":" sequence with the specified element."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/init(_:)"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequences"}],"abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"title":"AsyncSequences","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"role":"symbol","url":"\/documentation\/afluent\/asyncsequences","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences"},"doc://Afluent/documentation/Afluent/AsyncSequences/Just/makeAsyncIterator()":{"role":"symbol","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/makeAsyncIterator()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeAsyncIterator"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO4JustV","text":"Just"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO4JustV0B8IteratorV","text":"AsyncIterator"}],"abstract":[],"kind":"symbol","title":"makeAsyncIterator()","url":"\/documentation\/afluent\/asyncsequences\/just\/makeasynciterator()"},"doc://Afluent/documentation/Afluent":{"url":"\/documentation\/afluent","title":"Afluent","type":"topic","kind":"symbol","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent","role":"collection"},"doc://Afluent/documentation/Afluent/AsyncSequences/Just/AsyncSequence-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/AsyncSequence-Implementations","title":"AsyncSequence Implementations","type":"topic","url":"\/documentation\/afluent\/asyncsequences\/just\/asyncsequence-implementations","abstract":[],"kind":"article"},"doc://Afluent/documentation/Afluent/AsyncSequences/Just/AsyncIterator":{"type":"topic","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncIterator","kind":"identifier"}],"navigatorTitle":[{"text":"AsyncIterator","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences\/just\/asynciterator","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/AsyncIterator","role":"symbol","title":"AsyncSequences.Just.AsyncIterator"},"doc://Afluent/s8SendableP":{"identifier":"doc:\/\/Afluent\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://Afluent/Sci":{"identifier":"doc:\/\/Afluent\/Sci","title":"_Concurrency.AsyncSequence","type":"unresolvable"},"doc://Afluent/documentation/Afluent/AsyncSequences/Just":{"title":"AsyncSequences.Just","kind":"symbol","role":"symbol","abstract":[{"text":"An ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"text":" that emits a single specified element and then completes.","type":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just","navigatorTitle":[{"kind":"identifier","text":"Just"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Just"}],"url":"\/documentation\/afluent\/asyncsequences\/just"}}}