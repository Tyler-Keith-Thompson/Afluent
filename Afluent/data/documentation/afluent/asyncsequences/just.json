{"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"relationshipsSections":[{"kind":"relationships","title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/Afluent\/s8SendableP","doc:\/\/Afluent\/Sci"]}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences"]]},"metadata":{"role":"symbol","modules":[{"name":"Afluent"}],"title":"AsyncSequences.Just","externalID":"s:7Afluent14AsyncSequencesO4JustV","symbolKind":"struct","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Just","kind":"identifier"}],"roleHeading":"Structure","extendedModule":"Afluent","remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/JustSequence.swift#L16","fileName":"JustSequence.swift"},"navigatorTitle":[{"kind":"identifier","text":"Just"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Just","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Element"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Sendable","preciseIdentifier":"s:s8SendableP"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The single element that this sequence will emit."}],"type":"paragraph"}],"name":"value"}]},{"kind":"content","content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Just"},{"text":" is a simple ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" that emits only one element and then finishes. Itâ€™s useful for creating sequences with a single, known value, often for testing or combining with other asynchronous sequences."}]}]}],"abstract":[{"type":"text","text":"An "},{"type":"codeVoice","code":"AsyncSequence"},{"text":" that emits a single specified element and then completes.","type":"text"}],"topicSections":[{"generated":true,"title":"Structures","anchor":"Structures","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/AsyncIterator"]},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/init(_:)"],"anchor":"Initializers","title":"Initializers","generated":true},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/makeAsyncIterator()"],"anchor":"Instance-Methods","title":"Instance Methods","generated":true},{"generated":true,"anchor":"Default-Implementations","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/AsyncSequence-Implementations","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/AsyncSequence-Implementations"],"title":"Default Implementations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asyncsequences\/just"]}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just","interfaceLanguage":"swift"},"kind":"symbol","references":{"doc://Afluent/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/Afluent\/s8SendableP","title":"Swift.Sendable"},"doc://Afluent/Sci":{"type":"unresolvable","identifier":"doc:\/\/Afluent\/Sci","title":"_Concurrency.AsyncSequence"},"doc://Afluent/documentation/Afluent":{"title":"Afluent","role":"collection","type":"topic","url":"\/documentation\/afluent","abstract":[],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"title":"AsyncSequences","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"AsyncSequences","kind":"identifier"}],"role":"symbol","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","url":"\/documentation\/afluent\/asyncsequences","kind":"symbol","navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/Just/AsyncSequence-Implementations":{"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/AsyncSequence-Implementations","url":"\/documentation\/afluent\/asyncsequences\/just\/asyncsequence-implementations","role":"collectionGroup","kind":"article","type":"topic","title":"AsyncSequence Implementations"},"doc://Afluent/documentation/Afluent/AsyncSequences/Just/init(_:)":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/init(_:)","abstract":[{"text":"Creates a ","type":"text"},{"type":"codeVoice","code":"Just"},{"type":"text","text":" sequence with the specified element."}],"type":"topic","kind":"symbol","role":"symbol","title":"init(_:)","url":"\/documentation\/afluent\/asyncsequences\/just\/init(_:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":")"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/Just/AsyncIterator":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/AsyncIterator","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncIterator","kind":"identifier"}],"role":"symbol","type":"topic","title":"AsyncSequences.Just.AsyncIterator","abstract":[],"url":"\/documentation\/afluent\/asyncsequences\/just\/asynciterator","navigatorTitle":[{"text":"AsyncIterator","kind":"identifier"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/Just":{"url":"\/documentation\/afluent\/asyncsequences\/just","type":"topic","role":"symbol","navigatorTitle":[{"text":"Just","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Just"}],"title":"AsyncSequences.Just","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just","abstract":[{"type":"text","text":"An "},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" that emits a single specified element and then completes."}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/Just/makeAsyncIterator()":{"role":"symbol","title":"makeAsyncIterator()","type":"topic","url":"\/documentation\/afluent\/asyncsequences\/just\/makeasynciterator()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"makeAsyncIterator"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO4JustV","text":"Just"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"text":">.","kind":"text"},{"text":"AsyncIterator","preciseIdentifier":"s:7Afluent14AsyncSequencesO4JustV0B8IteratorV","kind":"typeIdentifier"}],"abstract":[],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/makeAsyncIterator()"}}}