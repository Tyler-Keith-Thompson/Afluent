{"metadata":{"symbolKind":"struct","navigatorTitle":[{"text":"Just","kind":"identifier"}],"modules":[{"name":"Afluent"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Just"}],"roleHeading":"Structure","remoteSource":{"fileName":"JustSequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/JustSequence.swift#L16"},"extendedModule":"Afluent","title":"AsyncSequences.Just","role":"symbol","externalID":"s:7Afluent14AsyncSequencesO4JustV"},"sections":[],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences"]]},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asyncsequences\/just"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Just","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Element","kind":"genericParameter"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"Element","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"Sendable","preciseIdentifier":"s:s8SendableP"}]}],"kind":"declarations"},{"parameters":[{"name":"value","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The single element that this sequence will emit."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"text":"Overview","type":"heading","level":2,"anchor":"overview"},{"inlineContent":[{"type":"codeVoice","code":"Just"},{"text":" is a simple ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"text":" that emits only one element and then finishes. Itâ€™s useful for creating sequences with a single, known value, often for testing or combining with other asynchronous sequences.","type":"text"}],"type":"paragraph"}]}],"topicSections":[{"anchor":"Structures","title":"Structures","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/AsyncIterator"]},{"generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/init(_:)"],"title":"Initializers","anchor":"Initializers"},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/makeAsyncIterator()"],"anchor":"Instance-Methods","title":"Instance Methods","generated":true},{"title":"Default Implementations","anchor":"Default-Implementations","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/AsyncSequence-Implementations","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/AsyncSequence-Implementations"]}],"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/Afluent\/s8SendableP","doc:\/\/Afluent\/Sci"],"title":"Conforms To","type":"conformsTo"}],"abstract":[{"type":"text","text":"An "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" that emits a single specified element and then completes."}],"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://Afluent/documentation/Afluent/AsyncSequences":{"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncSequences"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","title":"AsyncSequences","type":"topic","url":"\/documentation\/afluent\/asyncsequences","abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/Just/AsyncIterator":{"title":"AsyncSequences.Just.AsyncIterator","role":"symbol","kind":"symbol","type":"topic","navigatorTitle":[{"text":"AsyncIterator","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncIterator"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/AsyncIterator","abstract":[],"url":"\/documentation\/afluent\/asyncsequences\/just\/asynciterator"},"doc://Afluent/documentation/Afluent/AsyncSequences/Just":{"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just","url":"\/documentation\/afluent\/asyncsequences\/just","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Just"}],"title":"AsyncSequences.Just","kind":"symbol","navigatorTitle":[{"text":"Just","kind":"identifier"}],"abstract":[{"type":"text","text":"An "},{"code":"AsyncSequence","type":"codeVoice"},{"text":" that emits a single specified element and then completes.","type":"text"}],"type":"topic"},"doc://Afluent/Sci":{"identifier":"doc:\/\/Afluent\/Sci","type":"unresolvable","title":"_Concurrency.AsyncSequence"},"doc://Afluent/s8SendableP":{"identifier":"doc:\/\/Afluent\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://Afluent/documentation/Afluent":{"abstract":[],"title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","type":"topic","kind":"symbol","role":"collection","url":"\/documentation\/afluent"},"doc://Afluent/documentation/Afluent/AsyncSequences/Just/init(_:)":{"type":"topic","url":"\/documentation\/afluent\/asyncsequences\/just\/init(_:)","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/init(_:)","kind":"symbol","abstract":[{"type":"text","text":"Creates a "},{"type":"codeVoice","code":"Just"},{"text":" sequence with the specified element.","type":"text"}],"title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"Element","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/Just/makeAsyncIterator()":{"type":"topic","title":"makeAsyncIterator()","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/makeAsyncIterator()","url":"\/documentation\/afluent\/asyncsequences\/just\/makeasynciterator()","role":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"makeAsyncIterator","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Just","preciseIdentifier":"s:7Afluent14AsyncSequencesO4JustV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"AsyncIterator","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO4JustV0B8IteratorV"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/Just/AsyncSequence-Implementations":{"type":"topic","abstract":[],"role":"collectionGroup","url":"\/documentation\/afluent\/asyncsequences\/just\/asyncsequence-implementations","kind":"article","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/AsyncSequence-Implementations","title":"AsyncSequence Implementations"}}}