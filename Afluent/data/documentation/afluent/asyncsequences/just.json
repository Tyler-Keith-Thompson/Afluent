{"abstract":[{"type":"text","text":"An "},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" that emits a single specified element and then completes."}],"variants":[{"paths":["\/documentation\/afluent\/asyncsequences\/just"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"extendedModule":"Afluent","navigatorTitle":[{"text":"Just","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Just"}],"role":"symbol","remoteSource":{"fileName":"JustSequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/JustSequence.swift#L16"},"roleHeading":"Structure","symbolKind":"struct","modules":[{"name":"Afluent"}],"title":"AsyncSequences.Just","externalID":"s:7Afluent14AsyncSequencesO4JustV"},"sections":[],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just"},"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/AsyncIterator"],"anchor":"Structures","title":"Structures","generated":true},{"title":"Initializers","anchor":"Initializers","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/init(_:)"],"generated":true},{"title":"Instance Methods","anchor":"Instance-Methods","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/makeAsyncIterator()"]},{"anchor":"Default-Implementations","title":"Default Implementations","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/AsyncSequence-Implementations","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/AsyncSequence-Implementations"]}],"relationshipsSections":[{"identifiers":["doc:\/\/Afluent\/s8SendableP","doc:\/\/Afluent\/Sci"],"kind":"relationships","type":"conformsTo","title":"Conforms To"}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Just"},{"text":"<","kind":"text"},{"text":"Element","kind":"genericParameter"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"value","content":[{"inlineContent":[{"type":"text","text":"The single element that this sequence will emit."}],"type":"paragraph"}]}]},{"content":[{"anchor":"overview","text":"Overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"code":"Just","type":"codeVoice"},{"text":" is a simple ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" that emits only one element and then finishes. Itâ€™s useful for creating sequences with a single, known value, often for testing or combining with other asynchronous sequences."}]}],"kind":"content"}],"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/Just/makeAsyncIterator()":{"role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"makeAsyncIterator"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Just","preciseIdentifier":"s:7Afluent14AsyncSequencesO4JustV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"AsyncIterator","preciseIdentifier":"s:7Afluent14AsyncSequencesO4JustV0B8IteratorV"}],"title":"makeAsyncIterator()","url":"\/documentation\/afluent\/asyncsequences\/just\/makeasynciterator()","abstract":[],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/makeAsyncIterator()"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"url":"\/documentation\/afluent\/asyncsequences","navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","kind":"symbol","title":"AsyncSequences","role":"symbol","type":"topic","abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncSequences","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/Just/AsyncSequence-Implementations":{"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/AsyncSequence-Implementations","type":"topic","kind":"article","url":"\/documentation\/afluent\/asyncsequences\/just\/asyncsequence-implementations","role":"collectionGroup","title":"AsyncSequence Implementations"},"doc://Afluent/documentation/Afluent":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent","url":"\/documentation\/afluent","kind":"symbol","type":"topic","title":"Afluent","role":"collection","abstract":[]},"doc://Afluent/documentation/Afluent/AsyncSequences/Just/AsyncIterator":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncIterator","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences\/just\/asynciterator","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"AsyncIterator","kind":"identifier"}],"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/AsyncIterator","title":"AsyncSequences.Just.AsyncIterator"},"doc://Afluent/s8SendableP":{"identifier":"doc:\/\/Afluent\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://Afluent/documentation/Afluent/AsyncSequences/Just/init(_:)":{"kind":"symbol","abstract":[{"type":"text","text":"Creates a "},{"code":"Just","type":"codeVoice"},{"type":"text","text":" sequence with the specified element."}],"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"text":")","kind":"text"}],"url":"\/documentation\/afluent\/asyncsequences\/just\/init(_:)","title":"init(_:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/init(_:)","type":"topic","role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/Just":{"abstract":[{"type":"text","text":"An "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" that emits a single specified element and then completes."}],"navigatorTitle":[{"text":"Just","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just","type":"topic","kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/just","role":"symbol","title":"AsyncSequences.Just","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Just","kind":"identifier"}]},"doc://Afluent/Sci":{"identifier":"doc:\/\/Afluent\/Sci","title":"_Concurrency.AsyncSequence","type":"unresolvable"}}}