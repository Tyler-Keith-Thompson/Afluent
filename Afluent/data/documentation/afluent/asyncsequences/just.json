{"relationshipsSections":[{"identifiers":["doc:\/\/Afluent\/s8SendableP","doc:\/\/Afluent\/Sci"],"type":"conformsTo","title":"Conforms To","kind":"relationships"}],"metadata":{"role":"symbol","modules":[{"name":"Afluent"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Just"}],"externalID":"s:7Afluent14AsyncSequencesO4JustV","roleHeading":"Structure","extendedModule":"Afluent","remoteSource":{"fileName":"JustSequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/JustSequence.swift#L16"},"symbolKind":"struct","title":"AsyncSequences.Just","navigatorTitle":[{"text":"Just","kind":"identifier"}]},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences"]]},"variants":[{"paths":["\/documentation\/afluent\/asyncsequences\/just"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"An "},{"type":"codeVoice","code":"AsyncSequence"},{"text":" that emits a single specified element and then completes.","type":"text"}],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"topicSections":[{"title":"Structures","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/AsyncIterator"],"generated":true,"anchor":"Structures"},{"generated":true,"title":"Initializers","anchor":"Initializers","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/init(_:)"]},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/makeAsyncIterator()"],"title":"Instance Methods","generated":true,"anchor":"Instance-Methods"},{"anchor":"Default-Implementations","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/AsyncSequence-Implementations","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/AsyncSequence-Implementations"],"title":"Default Implementations","generated":true}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just"},"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Just","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Element"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"value","content":[{"type":"paragraph","inlineContent":[{"text":"The single element that this sequence will emit.","type":"text"}]}]}],"kind":"parameters"},{"content":[{"level":2,"anchor":"overview","text":"Overview","type":"heading"},{"type":"paragraph","inlineContent":[{"code":"Just","type":"codeVoice"},{"text":" is a simple ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" that emits only one element and then finishes. Itâ€™s useful for creating sequences with a single, known value, often for testing or combining with other asynchronous sequences."}]}],"kind":"content"}],"references":{"doc://Afluent/documentation/Afluent":{"kind":"symbol","role":"collection","identifier":"doc:\/\/Afluent\/documentation\/Afluent","type":"topic","title":"Afluent","abstract":[],"url":"\/documentation\/afluent"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"role":"symbol","url":"\/documentation\/afluent\/asyncsequences","type":"topic","abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncSequences","kind":"identifier"}],"title":"AsyncSequences"},"doc://Afluent/documentation/Afluent/AsyncSequences/Just/makeAsyncIterator()":{"type":"topic","title":"makeAsyncIterator()","url":"\/documentation\/afluent\/asyncsequences\/just\/makeasynciterator()","abstract":[],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeAsyncIterator","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"text":"Just","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO4JustV"},{"text":"<","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":">."},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO4JustV0B8IteratorV","text":"AsyncIterator","kind":"typeIdentifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/makeAsyncIterator()","role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/Just":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Just"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just","url":"\/documentation\/afluent\/asyncsequences\/just","type":"topic","abstract":[{"text":"An ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" that emits a single specified element and then completes."}],"navigatorTitle":[{"text":"Just","kind":"identifier"}],"role":"symbol","title":"AsyncSequences.Just"},"doc://Afluent/documentation/Afluent/AsyncSequences/Just/init(_:)":{"abstract":[{"type":"text","text":"Creates a "},{"code":"Just","type":"codeVoice"},{"type":"text","text":" sequence with the specified element."}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":")"}],"title":"init(_:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/init(_:)","type":"topic","url":"\/documentation\/afluent\/asyncsequences\/just\/init(_:)"},"doc://Afluent/documentation/Afluent/AsyncSequences/Just/AsyncIterator":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncIterator","kind":"identifier"}],"title":"AsyncSequences.Just.AsyncIterator","url":"\/documentation\/afluent\/asyncsequences\/just\/asynciterator","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncIterator"}],"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/AsyncIterator","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/Just/AsyncSequence-Implementations":{"title":"AsyncSequence Implementations","abstract":[],"type":"topic","url":"\/documentation\/afluent\/asyncsequences\/just\/asyncsequence-implementations","kind":"article","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/AsyncSequence-Implementations","role":"collectionGroup"},"doc://Afluent/Sci":{"type":"unresolvable","title":"_Concurrency.AsyncSequence","identifier":"doc:\/\/Afluent\/Sci"},"doc://Afluent/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/Afluent\/s8SendableP"}}}