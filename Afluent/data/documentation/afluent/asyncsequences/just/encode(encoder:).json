{"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"text":"<","kind":"text"},{"text":"E","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"encoder","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Encode","text":"Encode","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO6EncodeV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TopLevelEncoder","text":"TopLevelEncoder","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent15TopLevelEncoderP"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa"},{"text":" : ","kind":"text"},{"text":"Encodable","kind":"typeIdentifier","preciseIdentifier":"s:SE"}]}],"kind":"declarations"},{"content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use this to encode values into a data format (such as JSON) before further processing or output."}]},{"type":"heading","text":"Example","anchor":"Example","level":2},{"type":"codeListing","code":["struct Person: Encodable { let name: String }","for try await data in Just(Person(name: \"Alice\")).encode(encoder: JSONEncoder()) {","    print(data) \/\/ Encoded JSON data","}"],"syntax":"swift"}],"kind":"content"}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/encode(encoder:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asyncsequences\/just\/encode(encoder:)"]}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/AsyncSequence-Implementations"]]},"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"extendedModule":"_Concurrency","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"encode"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"E"},{"kind":"text","text":">("},{"kind":"externalParam","text":"encoder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO6EncodeV","text":"Encode"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":">"}],"title":"encode(encoder:)","roleHeading":"Instance Method","symbolKind":"method","role":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}]},"remoteSource":{"fileName":"EncodeSequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/EncodeSequence.swift#L71"},"modules":[{"relatedModules":["_Concurrency"],"name":"Afluent"}],"externalID":"s:Sci7Afluents8SendableRzrlE6encode7encoderAA14AsyncSequencesO6EncodeVy_xqd__Gqd___tAA15TopLevelEncoderRd__SE7ElementRpzlF::SYNTHESIZED::s:7Afluent14AsyncSequencesO4JustV"},"abstract":[{"type":"text","text":"Encodes the output from upstream using the specified encoder."}],"sections":[],"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/Just/encode(encoder:)":{"title":"encode(encoder:)","kind":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"url":"\/documentation\/afluent\/asyncsequences\/just\/encode(encoder:)","abstract":[{"type":"text","text":"Encodes the output from upstream using the specified encoder."}],"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/encode(encoder:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"text":"<","kind":"text"},{"text":"E","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"encoder","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"text":"Encode","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO6EncodeV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic"},"doc://Afluent/documentation/Afluent/TopLevelEncoder":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TopLevelEncoder"}],"title":"TopLevelEncoder","type":"topic","role":"symbol","abstract":[],"url":"\/documentation\/afluent\/toplevelencoder","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TopLevelEncoder","navigatorTitle":[{"kind":"identifier","text":"TopLevelEncoder"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/Just/AsyncSequence-Implementations":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/AsyncSequence-Implementations","role":"collectionGroup","abstract":[],"title":"AsyncSequence Implementations","kind":"article","type":"topic","url":"\/documentation\/afluent\/asyncsequences\/just\/asyncsequence-implementations"},"doc://Afluent/documentation/Afluent/AsyncSequences/Encode":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Encode","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Encode","kind":"identifier"}],"abstract":[{"text":"Used as the implementation detail for the ","type":"text"},{"type":"codeVoice","code":"AsyncSequence\/encode(encoder:)"},{"type":"text","text":" operator."}],"role":"symbol","navigatorTitle":[{"text":"Encode","kind":"identifier"}],"type":"topic","title":"AsyncSequences.Encode","url":"\/documentation\/afluent\/asyncsequences\/encode","kind":"symbol"},"doc://Afluent/documentation/Afluent":{"type":"topic","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","abstract":[],"url":"\/documentation\/afluent","role":"collection","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"type":"topic","title":"AsyncSequences","url":"\/documentation\/afluent\/asyncsequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequences"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/Just":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just","role":"symbol","abstract":[{"text":"An async sequence that emits a single specified element and then completes.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Just","kind":"identifier"}],"title":"AsyncSequences.Just","kind":"symbol","type":"topic","url":"\/documentation\/afluent\/asyncsequences\/just","navigatorTitle":[{"text":"Just","kind":"identifier"}]}}}