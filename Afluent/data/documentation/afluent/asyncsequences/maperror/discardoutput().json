{"abstract":[{"text":"Transforms each output value from the upstream sequence into ","type":"text"},{"type":"codeVoice","code":"Void"},{"text":".","type":"text"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asyncsequences\/maperror\/discardoutput()"]}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/MapError\/discardOutput()","interfaceLanguage":"swift"},"metadata":{"title":"discardOutput()","extendedModule":"_Concurrency","externalID":"s:Sci7Afluents8SendableRzrlE13discardOutput12_Concurrency16AsyncMapSequenceVyxytGyF::SYNTHESIZED::s:7Afluent14AsyncSequencesO8MapErrorV","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"discardOutput","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">","kind":"text"}],"roleHeading":"Instance Method","remoteSource":{"fileName":"DiscardOutputSequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/DiscardOutputSequence.swift#L21"},"modules":[{"name":"Afluent","relatedModules":["_Concurrency"]}],"role":"symbol","symbolKind":"method"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"discardOutput","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV","text":"AsyncMapSequence","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">","kind":"text"}]}],"kind":"declarations"},{"content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"Use this to ignore the payload of each element, but still receive an event for every value."}],"type":"paragraph"},{"text":"Example","anchor":"Example","level":2,"type":"heading"},{"syntax":"swift","code":["for await _ in Just(1).discardOutput() {","    \/\/ Loop runs once for each element, but value is always Void","}"],"type":"codeListing"}],"kind":"content"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/MapError","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/MapError\/AsyncSequence-Implementations"]]},"kind":"symbol","references":{"doc://Afluent/documentation/Afluent/AsyncSequences/MapError/AsyncSequence-Implementations":{"title":"AsyncSequence Implementations","type":"topic","role":"collectionGroup","url":"\/documentation\/afluent\/asyncsequences\/maperror\/asyncsequence-implementations","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/MapError\/AsyncSequence-Implementations","kind":"article"},"doc://Afluent/documentation/Afluent":{"type":"topic","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","abstract":[],"url":"\/documentation\/afluent","role":"collection","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/MapError":{"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MapError"}],"title":"AsyncSequences.MapError","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"MapError"}],"url":"\/documentation\/afluent\/asyncsequences\/maperror","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/MapError","role":"symbol","abstract":[{"type":"text","text":"Used as the implementation detail for the "},{"code":"AsyncSequence\/mapError(_:)","type":"codeVoice"},{"type":"text","text":" operator."}]},"doc://Afluent/documentation/Afluent/AsyncSequences/MapError/discardOutput()":{"kind":"symbol","type":"topic","abstract":[{"text":"Transforms each output value from the upstream sequence into ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"discardOutput"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">"}],"title":"discardOutput()","role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/afluent\/asyncsequences\/maperror\/discardoutput()","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/MapError\/discardOutput()"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"type":"topic","title":"AsyncSequences","url":"\/documentation\/afluent\/asyncsequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequences"}]}}}