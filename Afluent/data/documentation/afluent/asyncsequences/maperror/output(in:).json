{"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"output","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"in","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"range","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences"},{"text":".","kind":"text"},{"text":"OutputIn","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO8OutputInV","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/OutputIn"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"RangeExpression","kind":"typeIdentifier","preciseIdentifier":"s:SX"},{"text":", ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"},{"text":", ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Bound","kind":"typeIdentifier","preciseIdentifier":"s:SX5BoundQa"},{"text":" == ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"range","content":[{"inlineContent":[{"text":"A range that indicates which elements to include.","type":"text"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"inlineContent":[{"text":"An async sequence that contains, in order, the elements of the base sequence specified by the range.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"text":"Discussion:","type":"heading","level":3,"anchor":"Discussion"},{"inlineContent":[{"type":"text","text":"Completes normally after range is exhausted."}],"type":"paragraph"},{"text":"Example:","type":"heading","level":3,"anchor":"Example"},{"type":"codeListing","syntax":"swift","code":[" let originalSequence = [0, 3, 5, 7, 9].async"," for try await element in originalSequence.output(in: 1..<4) {","     print(\"\\(element)\")"," }"," \/\/ Prints 3, 5, 7"]}]}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/MapError","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/MapError\/AsyncSequence-Implementations"]]},"kind":"symbol","metadata":{"role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}]},"modules":[{"relatedModules":["_Concurrency"],"name":"Afluent"}],"externalID":"s:Sci7Afluents8SendableRzrlE6output2inAA14AsyncSequencesO8OutputInVy_xGqd___tSXRd__sABRd__Si5BoundRtd__lF::SYNTHESIZED::s:7Afluent14AsyncSequencesO8MapErrorV","title":"output(in:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"output"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"kind":"externalParam","text":"in"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"OutputIn","preciseIdentifier":"s:7Afluent14AsyncSequencesO8OutputInV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"roleHeading":"Instance Method","remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/OutputSequence.swift#L96","fileName":"OutputSequence.swift"},"extendedModule":"_Concurrency","symbolKind":"method"},"variants":[{"paths":["\/documentation\/afluent\/asyncsequences\/maperror\/output(in:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/MapError\/output(in:)","interfaceLanguage":"swift"},"abstract":[{"text":"Returns an async sequence that contains, in order, the elements of the base sequence specified by the range.","type":"text"}],"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/MapError":{"type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MapError","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/MapError","url":"\/documentation\/afluent\/asyncsequences\/maperror","navigatorTitle":[{"text":"MapError","kind":"identifier"}],"abstract":[{"type":"text","text":"Used as the implementation detail for the "},{"type":"codeVoice","code":"AsyncSequence\/mapError(_:)"},{"type":"text","text":" operator."}],"title":"AsyncSequences.MapError"},"doc://Afluent/documentation/Afluent/AsyncSequences/MapError/output(in:)":{"abstract":[{"type":"text","text":"Returns an async sequence that contains, in order, the elements of the base sequence specified by the range."}],"kind":"symbol","role":"symbol","title":"output(in:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/MapError\/output(in:)","url":"\/documentation\/afluent\/asyncsequences\/maperror\/output(in:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"output","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"in","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"text":"OutputIn","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO8OutputInV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic"},"doc://Afluent/documentation/Afluent":{"abstract":[],"url":"\/documentation\/afluent","role":"collection","type":"topic","kind":"symbol","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent"},"doc://Afluent/documentation/Afluent/AsyncSequences/OutputIn":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/OutputIn","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OutputIn","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences\/outputin","title":"AsyncSequences.OutputIn","role":"symbol","abstract":[],"navigatorTitle":[{"text":"OutputIn","kind":"identifier"}],"type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","url":"\/documentation\/afluent\/asyncsequences","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequences"}],"title":"AsyncSequences","type":"topic","abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}]},"doc://Afluent/documentation/Afluent/AsyncSequences/MapError/AsyncSequence-Implementations":{"title":"AsyncSequence Implementations","type":"topic","abstract":[],"url":"\/documentation\/afluent\/asyncsequences\/maperror\/asyncsequence-implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/MapError\/AsyncSequence-Implementations","role":"collectionGroup","kind":"article"}}}