{"metadata":{"extendedModule":"_Concurrency","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}]},"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/ReplaceNilSequence.swift#L58","fileName":"ReplaceNilSequence.swift"},"modules":[{"relatedModules":["_Concurrency"],"name":"Afluent"}],"title":"replaceNil(with:)","externalID":"s:Sci7Afluents8SendableRzrlE10replaceNil4withAA14AsyncSequencesO07ReplaceD0Vy_xqd__Gqd___tsABRd__qd__Sg7ElementRtzlF::SYNTHESIZED::s:7Afluent14AsyncSequencesO8MapErrorV","symbolKind":"method","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replaceNil"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"E"},{"kind":"text","text":">("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO10ReplaceNilV","text":"ReplaceNil"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":">"}],"roleHeading":"Instance Method"},"variants":[{"paths":["\/documentation\/afluent\/asyncsequences\/maperror\/replacenil(with:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/MapError\/replaceNil(with:)","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Replaces any ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" values from the sequence with the provided non-nil value.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/MapError"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"replaceNil","kind":"identifier"},{"text":"<","kind":"text"},{"text":"E","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/ReplaceNil","text":"ReplaceNil","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO10ReplaceNilV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa"},{"text":" == ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use this to emit a fallback value whenever the upstream emits "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."}]},{"type":"heading","level":2,"anchor":"Example","text":"Example"},{"syntax":"swift","type":"codeListing","code":["let stream = AsyncStream<Int?> { continuation in","    continuation.yield(1)","    continuation.yield(nil)","    continuation.yield(3)","    continuation.finish()","}","for await value in stream.replaceNil(with: 42) {","    print(value) \/\/ Prints: 1, 42, 3","}"]}]}],"sections":[],"kind":"symbol","references":{"doc://Afluent/documentation/Afluent":{"title":"Afluent","url":"\/documentation\/afluent","role":"collection","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol","abstract":[]},"doc://Afluent/documentation/Afluent/AsyncSequences/MapError/replaceNil(with:)":{"abstract":[{"text":"Replaces any ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" values from the sequence with the provided non-nil value.","type":"text"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}]},"url":"\/documentation\/afluent\/asyncsequences\/maperror\/replacenil(with:)","title":"replaceNil(with:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/MapError\/replaceNil(with:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replaceNil"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"E"},{"kind":"text","text":">("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO10ReplaceNilV","text":"ReplaceNil"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":">"}],"type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/MapError":{"title":"AsyncSequences.MapError","role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/maperror","abstract":[{"text":"Used as the implementation detail for the ","type":"text"},{"code":"AsyncSequence\/mapError(_:)","type":"codeVoice"},{"text":" operator.","type":"text"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MapError","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/MapError","type":"topic","navigatorTitle":[{"text":"MapError","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsyncSequences":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","url":"\/documentation\/afluent\/asyncsequences","abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"kind":"symbol","title":"AsyncSequences","type":"topic","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncSequences","kind":"identifier"}],"navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/ReplaceNil":{"type":"topic","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/ReplaceNil","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ReplaceNil","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"ReplaceNil","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences\/replacenil","abstract":[{"type":"text","text":"Used as the implementation detail for the "},{"type":"codeVoice","code":"AsyncSequence\/replaceNil(with:)"},{"type":"text","text":" operator."}],"title":"AsyncSequences.ReplaceNil"}}}