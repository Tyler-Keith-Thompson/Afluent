{"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"role":"symbol","modules":[{"name":"Afluent","relatedModules":["_Concurrency"]}],"externalID":"s:Sci7Afluents8SendableRzrlE15assertNoFailureAA14AsyncSequencesO06AssertdE0Vy_xGyF::SYNTHESIZED::s:7Afluent14AsyncSequencesO11MaterializeV","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"assertNoFailure"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO15AssertNoFailureV","text":"AssertNoFailure"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"remoteSource":{"fileName":"AssertNoFailureSequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/AssertNoFailureSequence.swift#L55"},"extendedModule":"_Concurrency","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"symbolKind":"method","title":"assertNoFailure()","roleHeading":"Instance Method"},"abstract":[{"type":"text","text":"Raises a fatal error if the upstream async sequence throws (other than cancellation), otherwise republishes all received values."}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"assertNoFailure","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AsyncSequences","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"text":"AssertNoFailure","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure","preciseIdentifier":"s:7Afluent14AsyncSequencesO15AssertNoFailureV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"Use this to assert that a sequence is infallible, propagating values and terminating with a fatal error if any error occurs.","type":"text"}],"type":"paragraph"},{"text":"Example","level":2,"type":"heading","anchor":"Example"},{"type":"codeListing","syntax":null,"code":["let numbers = AsyncStream<Int> { continuation in","    continuation.yield(1)","    continuation.yield(2)","    continuation.finish()","}","for try await value in numbers.assertNoFailure() {","    print(value)","}"]}]}],"kind":"symbol","variants":[{"paths":["\/documentation\/afluent\/asyncsequences\/materialize\/assertnofailure()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Materialize\/assertNoFailure()"},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Materialize","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Materialize\/AsyncSequence-Implementations"]]},"references":{"doc://Afluent/documentation/Afluent":{"abstract":[],"url":"\/documentation\/afluent","role":"collection","type":"topic","kind":"symbol","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent"},"doc://Afluent/documentation/Afluent/AsyncSequences/Materialize":{"url":"\/documentation\/afluent\/asyncsequences\/materialize","navigatorTitle":[{"kind":"identifier","text":"Materialize"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Materialize","type":"topic","kind":"symbol","title":"AsyncSequences.Materialize","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Materialize"}],"abstract":[{"text":"Used as the implementation detail for the ","type":"text"},{"code":"AsyncSequence\/materialize()","type":"codeVoice"},{"text":" operator.","type":"text"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure":{"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AssertNoFailure","kind":"identifier"}],"title":"AsyncSequences.AssertNoFailure","role":"symbol","navigatorTitle":[{"text":"AssertNoFailure","kind":"identifier"}],"abstract":[{"text":"An async sequence that raises a fatal error if its upstream sequence throws.","type":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure","type":"topic","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","url":"\/documentation\/afluent\/asyncsequences","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequences"}],"title":"AsyncSequences","type":"topic","abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}]},"doc://Afluent/documentation/Afluent/AsyncSequences/Materialize/assertNoFailure()":{"type":"topic","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Materialize\/assertNoFailure()","url":"\/documentation\/afluent\/asyncsequences\/materialize\/assertnofailure()","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"assertNoFailure","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"text":"AssertNoFailure","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO15AssertNoFailureV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","abstract":[{"text":"Raises a fatal error if the upstream async sequence throws (other than cancellation), otherwise republishes all received values.","type":"text"}],"title":"assertNoFailure()"},"doc://Afluent/documentation/Afluent/AsyncSequences/Materialize/AsyncSequence-Implementations":{"type":"topic","title":"AsyncSequence Implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Materialize\/AsyncSequence-Implementations","kind":"article","role":"collectionGroup","abstract":[],"url":"\/documentation\/afluent\/asyncsequences\/materialize\/asyncsequence-implementations"}}}