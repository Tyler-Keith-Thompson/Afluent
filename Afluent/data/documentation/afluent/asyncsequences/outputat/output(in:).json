{"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"paths":["\/documentation\/afluent\/asyncsequences\/outputat\/output(in:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"output"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"in"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"range"},{"text":": ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","kind":"typeIdentifier","text":"AsyncSequences"},{"text":".","kind":"text"},{"text":"OutputIn","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/OutputIn","preciseIdentifier":"s:7Afluent14AsyncSequencesO8OutputInV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:SX","kind":"typeIdentifier","text":"RangeExpression"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier","text":"Sendable"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SX5BoundQa","text":"Bound"},{"kind":"text","text":" == "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}]}]},{"kind":"parameters","parameters":[{"name":"range","content":[{"inlineContent":[{"type":"text","text":"A range that indicates which elements to include."}],"type":"paragraph"}]}]},{"content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An async sequence that contains, in order, the elements of the base sequence specified by the range."}]}],"kind":"content"},{"content":[{"type":"heading","text":"Discussion:","anchor":"Discussion","level":3},{"inlineContent":[{"type":"text","text":"Completes normally after range is exhausted."}],"type":"paragraph"},{"type":"heading","level":3,"text":"Example:","anchor":"Example"},{"type":"codeListing","code":[" let originalSequence = [0, 3, 5, 7, 9].async"," for try await element in originalSequence.output(in: 1..<4) {","     print(\"\\(element)\")"," }"," \/\/ Prints 3, 5, 7"],"syntax":"swift"}],"kind":"content"}],"metadata":{"externalID":"s:Sci7Afluents8SendableRzrlE6output2inAA14AsyncSequencesO8OutputInVy_xGqd___tSXRd__sABRd__Si5BoundRtd__lF::SYNTHESIZED::s:7Afluent14AsyncSequencesO8OutputAtV","symbolKind":"method","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}]},"remoteSource":{"fileName":"OutputSequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/OutputSequence.swift#L96"},"role":"symbol","extendedModule":"_Concurrency","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"output"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"in"},{"text":": ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO8OutputInV","text":"OutputIn","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"output(in:)","roleHeading":"Instance Method","modules":[{"name":"Afluent","relatedModules":["_Concurrency"]}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/OutputAt\/output(in:)"},"sections":[],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/OutputAt","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/OutputAt\/AsyncSequence-Implementations"]]},"abstract":[{"type":"text","text":"Returns an async sequence that contains, in order, the elements of the base sequence specified by the range."}],"kind":"symbol","references":{"doc://Afluent/documentation/Afluent/AsyncSequences":{"navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}],"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"url":"\/documentation\/afluent\/asyncsequences","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncSequences"}],"title":"AsyncSequences"},"doc://Afluent/documentation/Afluent/AsyncSequences/OutputIn":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/OutputIn","type":"topic","navigatorTitle":[{"text":"OutputIn","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"OutputIn"}],"title":"AsyncSequences.OutputIn","abstract":[],"url":"\/documentation\/afluent\/asyncsequences\/outputin"},"doc://Afluent/documentation/Afluent":{"kind":"symbol","role":"collection","abstract":[],"url":"\/documentation\/afluent","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent","title":"Afluent"},"doc://Afluent/documentation/Afluent/AsyncSequences/OutputAt/output(in:)":{"title":"output(in:)","url":"\/documentation\/afluent\/asyncsequences\/outputat\/output(in:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/OutputAt\/output(in:)","kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}]},"abstract":[{"type":"text","text":"Returns an async sequence that contains, in order, the elements of the base sequence specified by the range."}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"output"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"kind":"externalParam","text":"in"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"kind":"text","text":"."},{"text":"OutputIn","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO8OutputInV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/OutputAt":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/OutputAt","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OutputAt","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences\/outputat","type":"topic","role":"symbol","kind":"symbol","abstract":[],"title":"AsyncSequences.OutputAt","navigatorTitle":[{"text":"OutputAt","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/OutputAt/AsyncSequence-Implementations":{"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/OutputAt\/AsyncSequence-Implementations","abstract":[],"title":"AsyncSequence Implementations","kind":"article","role":"collectionGroup","url":"\/documentation\/afluent\/asyncsequences\/outputat\/asyncsequence-implementations"}}}