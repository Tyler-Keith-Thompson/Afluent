{"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/ReplaceNil","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/ReplaceNil\/AsyncIterator"]]},"topicSections":[{"anchor":"Instance-Methods","generated":true,"title":"Instance Methods","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/ReplaceNil\/AsyncIterator\/next(isolation:)"]}],"kind":"article","metadata":{"title":"AsyncIteratorProtocol Implementations","roleHeading":"API Collection","role":"collectionGroup","modules":[{"name":"Afluent"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/ReplaceNil\/AsyncIterator\/AsyncIteratorProtocol-Implementations"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asyncsequences\/replacenil\/asynciterator\/asynciteratorprotocol-implementations"]}],"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/ReplaceNil":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/ReplaceNil","abstract":[],"title":"AsyncSequences.ReplaceNil","kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/replacenil","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReplaceNil"}],"navigatorTitle":[{"kind":"identifier","text":"ReplaceNil"}]},"doc://Afluent/documentation/Afluent/AsyncSequences":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"type":"topic","navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}],"title":"AsyncSequences","role":"symbol","url":"\/documentation\/afluent\/asyncsequences","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"AsyncSequences","kind":"identifier"}]},"doc://Afluent/documentation/Afluent":{"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent","type":"topic","url":"\/documentation\/afluent","kind":"symbol","title":"Afluent","role":"collection"},"doc://Afluent/documentation/Afluent/AsyncSequences/ReplaceNil/AsyncIterator":{"abstract":[],"type":"topic","role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/replacenil\/asynciterator","kind":"symbol","title":"AsyncSequences.ReplaceNil.AsyncIterator","navigatorTitle":[{"kind":"identifier","text":"AsyncIterator"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/ReplaceNil\/AsyncIterator","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncIterator"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/ReplaceNil/AsyncIterator/next(isolation:)":{"kind":"symbol","title":"next(isolation:)","url":"\/documentation\/afluent\/asyncsequences\/replacenil\/asynciterator\/next(isolation:)","type":"topic","abstract":[],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"next","kind":"identifier"},{"kind":"text","text":"("},{"text":"isolation","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"isolated"},{"text":" (any ","kind":"text"},{"preciseIdentifier":"s:ScA","kind":"typeIdentifier","text":"Actor"},{"text":")?) ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Failure","preciseIdentifier":"s:ScI7FailureQa"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ScI7ElementQa"},{"text":"?","kind":"text"}],"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/ReplaceNil\/AsyncIterator\/next(isolation:)"}}}