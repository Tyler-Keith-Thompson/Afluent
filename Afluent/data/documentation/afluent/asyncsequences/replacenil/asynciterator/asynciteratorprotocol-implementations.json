{"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/ReplaceNil","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/ReplaceNil\/AsyncIterator"]]},"sections":[],"kind":"article","variants":[{"paths":["\/documentation\/afluent\/asyncsequences\/replacenil\/asynciterator\/asynciteratorprotocol-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/ReplaceNil\/AsyncIterator\/AsyncIteratorProtocol-Implementations","interfaceLanguage":"swift"},"topicSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/ReplaceNil\/AsyncIterator\/next(isolation:)"],"generated":true,"title":"Instance Methods","anchor":"Instance-Methods"}],"metadata":{"modules":[{"name":"Afluent"}],"role":"collectionGroup","title":"AsyncIteratorProtocol Implementations","roleHeading":"API Collection"},"references":{"doc://Afluent/documentation/Afluent":{"role":"collection","title":"Afluent","type":"topic","abstract":[],"kind":"symbol","url":"\/documentation\/afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent"},"doc://Afluent/documentation/Afluent/AsyncSequences/ReplaceNil":{"abstract":[],"title":"AsyncSequences.ReplaceNil","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/ReplaceNil","role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/replacenil","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ReplaceNil","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"ReplaceNil","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/ReplaceNil/AsyncIterator":{"title":"AsyncSequences.ReplaceNil.AsyncIterator","url":"\/documentation\/afluent\/asyncsequences\/replacenil\/asynciterator","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/ReplaceNil\/AsyncIterator","role":"symbol","type":"topic","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"AsyncIterator"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncIterator","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsyncSequences":{"url":"\/documentation\/afluent\/asyncsequences","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"AsyncSequences","kind":"identifier"}],"title":"AsyncSequences","role":"symbol","navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}],"abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","kind":"symbol","type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/ReplaceNil/AsyncIterator/next(isolation:)":{"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/ReplaceNil\/AsyncIterator\/next(isolation:)","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"next","kind":"identifier"},{"text":"(","kind":"text"},{"text":"isolation","kind":"externalParam"},{"kind":"text","text":": "},{"text":"isolated","kind":"keyword"},{"kind":"text","text":" (any "},{"preciseIdentifier":"s:ScA","text":"Actor","kind":"typeIdentifier"},{"text":")?) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ScI7FailureQa","text":"Failure","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ScI7ElementQa"},{"text":"?","kind":"text"}],"type":"topic","title":"next(isolation:)","url":"\/documentation\/afluent\/asyncsequences\/replacenil\/asynciterator\/next(isolation:)"}}}