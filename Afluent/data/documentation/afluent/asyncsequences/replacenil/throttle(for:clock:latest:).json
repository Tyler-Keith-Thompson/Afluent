{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asyncsequences\/replacenil\/throttle(for:clock:latest:)"]}],"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","metadata":{"remoteSource":{"fileName":"ThrottleSequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/ThrottleSequence.swift#L266"},"title":"throttle(for:clock:latest:)","roleHeading":"Instance Method","extendedModule":"_Concurrency","role":"symbol","externalID":"s:Sci7Afluents8SendableRzsAB7ElementRpzrlE8throttle3for5clock6latestAA14AsyncSequencesO8ThrottleVy_xqd__G8DurationQyd___qd__Sbt12_Concurrency5ClockRd__lF::SYNTHESIZED::s:7Afluent14AsyncSequencesO10ReplaceNilV","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"throttle"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">("},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Duration","preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa"},{"kind":"text","text":", "},{"kind":"externalParam","text":"clock"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":", "},{"kind":"externalParam","text":"latest"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Throttle","preciseIdentifier":"s:7Afluent14AsyncSequencesO8ThrottleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":">"}],"modules":[{"name":"Afluent","relatedModules":["_Concurrency"]}],"platforms":[{"name":"iOS","beta":false,"introducedAt":"16.0","deprecated":false,"unavailable":false},{"name":"macOS","beta":false,"introducedAt":"13.0","deprecated":false,"unavailable":false},{"name":"tvOS","beta":false,"introducedAt":"16.0","deprecated":false,"unavailable":false},{"name":"visionOS","beta":false,"introducedAt":"1.0","deprecated":false,"unavailable":false},{"name":"watchOS","beta":false,"introducedAt":"9.0","deprecated":false,"unavailable":false}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/ReplaceNil\/throttle(for:clock:latest:)"},"abstract":[{"type":"text","text":"Allows only one element to pass through during each specified interval, emitting either the first or the latest element seen in that period."}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/ReplaceNil","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/ReplaceNil\/AsyncSequence-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throttle","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"for","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"interval","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Duration","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa"},{"text":", ","kind":"text"},{"text":"clock","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"latest","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"text":"AsyncSequences","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"text":"Throttle","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Throttle","preciseIdentifier":"s:7Afluent14AsyncSequencesO8ThrottleV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Clock","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency5ClockP"}],"languages":["swift"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The length of time to wait between emissions.","type":"text"}]}],"name":"interval"},{"content":[{"inlineContent":[{"type":"text","text":"The clock used to measure time intervals and perform sleeps."}],"type":"paragraph"}],"name":"clock"},{"content":[{"type":"paragraph","inlineContent":[{"text":"A Boolean flag determining which element to emit during each interval:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"code":"false","type":"codeVoice"},{"type":"text","text":" emits the first element seen in the interval."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"true"},{"type":"text","text":" emits the latest element seen during the interval."}]}]}]}],"name":"latest"}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"return-value","text":"Return Value"},{"inlineContent":[{"type":"text","text":"An async sequence that emits throttled elements from the upstream sequence."}],"type":"paragraph"}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"inlineContent":[{"text":"This operator suppresses elements from the upstream async sequence during each interval, emitting only one element per interval:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"latest"},{"type":"text","text":" is "},{"type":"codeVoice","code":"false"},{"type":"text","text":", it emits the first element received immediately and then ignores subsequent elements until the interval completes."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"If ","type":"text"},{"code":"latest","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"true","type":"codeVoice"},{"text":", it emits the first element immediately, then during the interval it tracks element updates, emitting only the most recent one at the intervalâ€™s end.","type":"text"}]}]}],"type":"unorderedList"},{"inlineContent":[{"text":"Elements arriving during an interval beyond the emitted one are suppressed, allowing controlled pacing of element emission.","type":"text"}],"type":"paragraph"},{"anchor":"Example","text":"Example","type":"heading","level":2},{"inlineContent":[{"text":"The following example creates an ","type":"text"},{"code":"AsyncStream","type":"codeVoice"},{"text":" that emits the current date every second,","type":"text"},{"text":" ","type":"text"},{"text":"then applies a throttle with a 3-second interval, showing both ","type":"text"},{"code":"latest: false","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"latest: true","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["import Foundation","import _Concurrency","","let stream = AsyncStream<Date> { continuation in","    Task {","        while true {","            continuation.yield(Date())","            try await Task.sleep(nanoseconds: 1_000_000_000) \/\/ 1 second","        }","    }","}","","\/\/ Throttle with latest: false (emit the first element immediately, then suppress others during the interval)","Task {","    print(\"Throttle with latest: false\")","    for await date in stream.throttle(for: .seconds(3), clock: ContinuousClock(), latest: false) {","        print(\"Emitted (first): \\(date)\")","    }","}","","\/\/ Throttle with latest: true (emit the first element immediately, then emit the latest element at interval end)","Task {","    print(\"Throttle with latest: true\")","    for await date in stream.throttle(for: .seconds(3), clock: ContinuousClock(), latest: true) {","        print(\"Emitted (latest): \\(date)\")","    }","}","","\/*","Sample output for latest: false:","Throttle with latest: false","Emitted (first): 2025-07-04 12:00:00 +0000","Emitted (first): 2025-07-04 12:00:03 +0000","Emitted (first): 2025-07-04 12:00:06 +0000","","Sample output for latest: true:","Throttle with latest: true","Emitted (latest): 2025-07-04 12:00:00 +0000","Emitted (latest): 2025-07-04 12:00:02 +0000","Emitted (latest): 2025-07-04 12:00:05 +0000","*\/"],"type":"codeListing"}]}],"references":{"doc://Afluent/documentation/Afluent":{"type":"topic","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","abstract":[],"url":"\/documentation\/afluent","role":"collection","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"type":"topic","title":"AsyncSequences","url":"\/documentation\/afluent\/asyncsequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequences"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/Throttle":{"kind":"symbol","abstract":[],"title":"AsyncSequences.Throttle","navigatorTitle":[{"kind":"identifier","text":"Throttle"}],"url":"\/documentation\/afluent\/asyncsequences\/throttle","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Throttle","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Throttle"}],"role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/ReplaceNil/throttle(for:clock:latest:)":{"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Allows only one element to pass through during each specified interval, emitting either the first or the latest element seen in that period."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throttle","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"for","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa","text":"Duration","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"clock","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"latest","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO8ThrottleV","text":"Throttle","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/afluent\/asyncsequences\/replacenil\/throttle(for:clock:latest:)","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/ReplaceNil\/throttle(for:clock:latest:)","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"title":"throttle(for:clock:latest:)"},"doc://Afluent/documentation/Afluent/AsyncSequences/ReplaceNil/AsyncSequence-Implementations":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/ReplaceNil\/AsyncSequence-Implementations","role":"collectionGroup","title":"AsyncSequence Implementations","url":"\/documentation\/afluent\/asyncsequences\/replacenil\/asyncsequence-implementations","abstract":[],"kind":"article","type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/ReplaceNil":{"navigatorTitle":[{"kind":"identifier","text":"ReplaceNil"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReplaceNil"}],"role":"symbol","abstract":[{"type":"text","text":"Used as the implementation detail for the "},{"code":"AsyncSequence\/replaceNil(with:)","type":"codeVoice"},{"type":"text","text":" operator."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/ReplaceNil","kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/replacenil","title":"AsyncSequences.ReplaceNil","type":"topic"}}}