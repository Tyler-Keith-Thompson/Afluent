{"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Retry\/output(in:)","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"output","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"in","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"range","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"kind":"text","text":"."},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/OutputIn","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO8OutputInV","text":"OutputIn"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"RangeExpression","preciseIdentifier":"s:SX"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Sendable","preciseIdentifier":"s:s8SendableP"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Bound","preciseIdentifier":"s:SX5BoundQa"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"range","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A range that indicates which elements to include."}]}]}],"kind":"parameters"},{"content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"inlineContent":[{"text":"An async sequence that contains, in order, the elements of the base sequence specified by the range.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"anchor":"Discussion","text":"Discussion:","level":3,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Completes normally after range is exhausted."}]},{"anchor":"Example","text":"Example:","level":3,"type":"heading"},{"syntax":"swift","code":[" let originalSequence = [0, 3, 5, 7, 9].async"," for try await element in originalSequence.output(in: 1..<4) {","     print(\"\\(element)\")"," }"," \/\/ Prints 3, 5, 7"],"type":"codeListing"}],"kind":"content"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Retry","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Retry\/AsyncSequence-Implementations"]]},"metadata":{"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/OutputSequence.swift#L96","fileName":"OutputSequence.swift"},"roleHeading":"Instance Method","extendedModule":"_Concurrency","role":"symbol","conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"externalID":"s:Sci7Afluents8SendableRzrlE6output2inAA14AsyncSequencesO8OutputInVy_xGqd___tSXRd__sABRd__Si5BoundRtd__lF::SYNTHESIZED::s:7Afluent14AsyncSequencesO5RetryC","symbolKind":"method","title":"output(in:)","modules":[{"relatedModules":["_Concurrency"],"name":"Afluent"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"output","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"in","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"text":"OutputIn","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO8OutputInV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"abstract":[{"text":"Returns an async sequence that contains, in order, the elements of the base sequence specified by the range.","type":"text"}],"variants":[{"paths":["\/documentation\/afluent\/asyncsequences\/retry\/output(in:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/Retry":{"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Retry","kind":"identifier"}],"title":"AsyncSequences.Retry","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Retry","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Retry","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences\/retry","type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/OutputIn":{"title":"AsyncSequences.OutputIn","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OutputIn","kind":"identifier"}],"navigatorTitle":[{"text":"OutputIn","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/OutputIn","url":"\/documentation\/afluent\/asyncsequences\/outputin","abstract":[],"kind":"symbol","role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/Retry/AsyncSequence-Implementations":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Retry\/AsyncSequence-Implementations","type":"topic","title":"AsyncSequence Implementations","url":"\/documentation\/afluent\/asyncsequences\/retry\/asyncsequence-implementations","kind":"article","abstract":[],"role":"collectionGroup"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequences"}],"abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"title":"AsyncSequences","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"role":"symbol","url":"\/documentation\/afluent\/asyncsequences","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences"},"doc://Afluent/documentation/Afluent/AsyncSequences/Retry/output(in:)":{"title":"output(in:)","url":"\/documentation\/afluent\/asyncsequences\/retry\/output(in:)","type":"topic","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"output","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"in","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO8OutputInV","text":"OutputIn","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"Returns an async sequence that contains, in order, the elements of the base sequence specified by the range."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Retry\/output(in:)","kind":"symbol","role":"symbol"},"doc://Afluent/documentation/Afluent":{"url":"\/documentation\/afluent","title":"Afluent","type":"topic","kind":"symbol","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent","role":"collection"}}}