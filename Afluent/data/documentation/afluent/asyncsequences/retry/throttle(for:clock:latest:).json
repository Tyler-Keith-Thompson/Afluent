{"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Retry\/throttle(for:clock:latest:)","interfaceLanguage":"swift"},"metadata":{"modules":[{"name":"Afluent","relatedModules":["_Concurrency"]}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"throttle","kind":"identifier"},{"kind":"text","text":"<"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"for","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"C"},{"text":".","kind":"text"},{"text":"Duration","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"clock"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"latest","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO8ThrottleV","text":"Throttle","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":">"}],"extendedModule":"_Concurrency","roleHeading":"Instance Method","platforms":[{"deprecated":false,"introducedAt":"16.0","unavailable":false,"name":"iOS","beta":false},{"name":"macOS","unavailable":false,"beta":false,"deprecated":false,"introducedAt":"13.0"},{"unavailable":false,"beta":false,"name":"tvOS","introducedAt":"16.0","deprecated":false},{"introducedAt":"1.0","beta":false,"unavailable":false,"name":"visionOS","deprecated":false},{"introducedAt":"9.0","unavailable":false,"deprecated":false,"beta":false,"name":"watchOS"}],"symbolKind":"method","externalID":"s:Sci7Afluents8SendableRzsAB7ElementRpzrlE8throttle3for5clock6latestAA14AsyncSequencesO8ThrottleVy_xqd__G8DurationQyd___qd__Sbt12_Concurrency5ClockRd__lF::SYNTHESIZED::s:7Afluent14AsyncSequencesO5RetryC","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}]},"remoteSource":{"fileName":"ThrottleSequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/ThrottleSequence.swift#L114"},"title":"throttle(for:clock:latest:)"},"kind":"symbol","abstract":[{"text":"Emits either the first or latest element received during a specified amount of time.","type":"text"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/afluent\/asyncsequences\/retry\/throttle(for:clock:latest:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Retry","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Retry\/AsyncSequence-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throttle","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">("},{"kind":"externalParam","text":"for"},{"text":" ","kind":"text"},{"text":"interval","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"C"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Duration","preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa"},{"text":", ","kind":"text"},{"text":"clock","kind":"externalParam"},{"kind":"text","text":": "},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"latest"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"text":"AsyncSequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier"},{"kind":"text","text":"."},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Throttle","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO8ThrottleV","text":"Throttle"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"C","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:12_Concurrency5ClockP","text":"Clock","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}]},{"parameters":[{"name":"interval","content":[{"inlineContent":[{"text":"The interval of time in which to observe and emit either the first or latest element.","type":"text"}],"type":"paragraph"}]},{"name":"latest","content":[{"inlineContent":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"true"},{"type":"text","text":", emits the latest element in the time interval.  If "},{"code":"false","type":"codeVoice"},{"text":", emits the first element in the time interval.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"name":"Note","style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The first element in upstream will always be returned immediately.  Once a second element is received, then the clock will begin for the given time interval and return the first or latest element once completed."}]}]}],"kind":"content"}],"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/Throttle":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Throttle","type":"topic","abstract":[],"title":"AsyncSequences.Throttle","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Throttle","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences\/throttle","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Throttle","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsyncSequences":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"role":"symbol","url":"\/documentation\/afluent\/asyncsequences","type":"topic","abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncSequences","kind":"identifier"}],"title":"AsyncSequences"},"doc://Afluent/documentation/Afluent":{"kind":"symbol","role":"collection","identifier":"doc:\/\/Afluent\/documentation\/Afluent","type":"topic","title":"Afluent","abstract":[],"url":"\/documentation\/afluent"},"doc://Afluent/documentation/Afluent/AsyncSequences/Retry/AsyncSequence-Implementations":{"title":"AsyncSequence Implementations","url":"\/documentation\/afluent\/asyncsequences\/retry\/asyncsequence-implementations","role":"collectionGroup","kind":"article","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Retry\/AsyncSequence-Implementations","abstract":[],"type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/Retry":{"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Retry"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Retry","abstract":[],"url":"\/documentation\/afluent\/asyncsequences\/retry","title":"AsyncSequences.Retry","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Retry"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/Retry/throttle(for:clock:latest:)":{"type":"topic","abstract":[{"type":"text","text":"Emits either the first or latest element received during a specified amount of time."}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"throttle"},{"kind":"text","text":"<"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"for"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":"."},{"preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa","text":"Duration","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"clock","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"latest","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") -> "},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO8ThrottleV","text":"Throttle"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":">","kind":"text"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/retry\/throttle(for:clock:latest:)","title":"throttle(for:clock:latest:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Retry\/throttle(for:clock:latest:)"}}}