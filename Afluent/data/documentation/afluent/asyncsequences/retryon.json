{"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"final","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"RetryOn"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Upstream"},{"text":", ","kind":"text"},{"text":"Failure","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Strategy"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Upstream"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier","text":"Sendable"},{"text":", ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"AsyncSequence","kind":"typeIdentifier","preciseIdentifier":"s:Sci"},{"text":", ","kind":"text"},{"text":"Failure","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"Equatable","preciseIdentifier":"s:SQ"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Failure"},{"text":" : ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":", "},{"text":"Strategy","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"RetryStrategy","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent13RetryStrategyP","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy"},{"text":", ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:Sci7ElementQa","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP","text":"Sendable"}],"platforms":["macOS"],"languages":["swift"]}]}],"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/Afluent\/s8SendableP","doc:\/\/Afluent\/ScA","doc:\/\/Afluent\/ScI","doc:\/\/Afluent\/Sci"],"kind":"relationships","type":"conformsTo"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOn"},"metadata":{"remoteSource":{"fileName":"RetrySequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/RetrySequence.swift#L80"},"roleHeading":"Class","symbolKind":"class","externalID":"s:7Afluent14AsyncSequencesO7RetryOnC","extendedModule":"Afluent","navigatorTitle":[{"text":"RetryOn","kind":"identifier"}],"role":"symbol","modules":[{"name":"Afluent"}],"title":"AsyncSequences.RetryOn","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RetryOn"}]},"kind":"symbol","variants":[{"paths":["\/documentation\/afluent\/asyncsequences\/retryon"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"title":"Instance Methods","anchor":"Instance-Methods","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOn\/makeAsyncIterator()","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOn\/next()"]},{"generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOn\/Element"],"anchor":"Type-Aliases","title":"Type Aliases"},{"anchor":"Default-Implementations","title":"Default Implementations","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOn\/Actor-Implementations","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOn\/AsyncIteratorProtocol-Implementations","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOn\/AsyncSequence-Implementations","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOn\/AsyncSequence-Implementations"],"generated":true}],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences"]]},"references":{"doc://Afluent/ScI":{"title":"_Concurrency.AsyncIteratorProtocol","type":"unresolvable","identifier":"doc:\/\/Afluent\/ScI"},"doc://Afluent/documentation/Afluent/AsyncSequences/RetryOn/Actor-Implementations":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOn\/Actor-Implementations","url":"\/documentation\/afluent\/asyncsequences\/retryon\/actor-implementations","role":"collectionGroup","abstract":[],"title":"Actor Implementations","type":"topic","kind":"article"},"doc://Afluent/documentation/Afluent/AsyncSequences/RetryOn/Element":{"type":"topic","url":"\/documentation\/afluent\/asyncsequences\/retryon\/element","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOn\/Element","kind":"symbol","abstract":[],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Element"}],"fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"Element","kind":"identifier"}],"title":"AsyncSequences.RetryOn.Element"},"doc://Afluent/ScA":{"identifier":"doc:\/\/Afluent\/ScA","type":"unresolvable","title":"_Concurrency.Actor"},"doc://Afluent/documentation/Afluent/AsyncSequences/RetryOn/makeAsyncIterator()":{"type":"topic","url":"\/documentation\/afluent\/asyncsequences\/retryon\/makeasynciterator()","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOn\/makeAsyncIterator()","kind":"symbol","abstract":[],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"makeAsyncIterator","kind":"identifier"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"RetryOn","preciseIdentifier":"s:7Afluent14AsyncSequencesO7RetryOnC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Failure","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Strategy","kind":"typeIdentifier"},{"kind":"text","text":">"}],"title":"makeAsyncIterator()"},"doc://Afluent/documentation/Afluent/AsyncSequences/RetryOn/next()":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOn\/next()","url":"\/documentation\/afluent\/asyncsequences\/retryon\/next()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"next"},{"text":"() ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa","text":"Element"},{"text":"?","kind":"text"}],"abstract":[],"title":"next()","type":"topic","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/RetryOn/AsyncIteratorProtocol-Implementations":{"type":"topic","url":"\/documentation\/afluent\/asyncsequences\/retryon\/asynciteratorprotocol-implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOn\/AsyncIteratorProtocol-Implementations","kind":"article","abstract":[],"role":"collectionGroup","title":"AsyncIteratorProtocol Implementations"},"doc://Afluent/Sci":{"title":"_Concurrency.AsyncSequence","type":"unresolvable","identifier":"doc:\/\/Afluent\/Sci"},"doc://Afluent/documentation/Afluent/AsyncSequences/RetryOn":{"title":"AsyncSequences.RetryOn","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOn","type":"topic","role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/retryon","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RetryOn"}],"navigatorTitle":[{"text":"RetryOn","kind":"identifier"}],"abstract":[]},"doc://Afluent/documentation/Afluent/RetryStrategy":{"title":"RetryStrategy","kind":"symbol","url":"\/documentation\/afluent\/retrystrategy","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RetryStrategy"}],"abstract":[{"type":"text","text":"A strategy for handling errors and determining whether to retry an operation."}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"RetryStrategy","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy"},"doc://Afluent/documentation/Afluent/AsyncSequences/RetryOn/AsyncSequence-Implementations":{"title":"AsyncSequence Implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOn\/AsyncSequence-Implementations","type":"topic","role":"collectionGroup","url":"\/documentation\/afluent\/asyncsequences\/retryon\/asyncsequence-implementations","kind":"article","abstract":[]},"doc://Afluent/documentation/Afluent":{"title":"Afluent","role":"collection","kind":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent","url":"\/documentation\/afluent"},"doc://Afluent/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/Afluent\/s8SendableP"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"kind":"symbol","role":"symbol","abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequences"}],"url":"\/documentation\/afluent\/asyncsequences","title":"AsyncSequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","type":"topic","navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}]}}}