{"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOnAfterFlatMapping\/shareFromCache(_:strategy:keys:_:_:_:_:_:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOnAfterFlatMapping","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOnAfterFlatMapping\/AsyncSequence-Implementations"]]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shareFromCache","kind":"identifier"},{"text":"<","kind":"text"},{"text":"H0","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"H1","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"H2","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"H3","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"H4","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"H5","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"cache","kind":"internalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache","text":"AsyncSequenceCache","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent18AsyncSequenceCacheC"},{"text":", ","kind":"text"},{"text":"strategy","kind":"externalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache","text":"AsyncSequenceCache","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent18AsyncSequenceCacheC"},{"text":".","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache\/Strategy","text":"Strategy","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent18AsyncSequenceCacheC8StrategyO"},{"text":", ","kind":"text"},{"text":"keys","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"k0","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"H0","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"k1","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"H1","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"k2","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"H2","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"k3","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"H3","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"k4","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"H4","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"k5","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"H5","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent22AsyncBroadcastSequenceV","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncBroadcastSequence","text":"AsyncBroadcastSequence","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","text":"AsyncSequences","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents","text":"HandleEvents","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"H0","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SH","text":"Hashable","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"H1","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SH","text":"Hashable","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"H2","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SH","text":"Hashable","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"H3","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SH","text":"Hashable","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"H4","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SH","text":"Hashable","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"H5","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SH","text":"Hashable","kind":"typeIdentifier"}],"languages":["swift"]}]},{"parameters":[{"name":"cache","content":[{"type":"paragraph","inlineContent":[{"text":"The cache from which to share data.","type":"text"}]}]},{"name":"strategy","content":[{"type":"paragraph","inlineContent":[{"text":"The caching strategy to use.","type":"text"}]}]},{"name":"k0","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The first hashable key."}]}]},{"name":"k1","content":[{"type":"paragraph","inlineContent":[{"text":"The second hashable key.","type":"text"}]}]},{"name":"k2","content":[{"inlineContent":[{"type":"text","text":"The third hashable key."}],"type":"paragraph"}]},{"name":"k3","content":[{"inlineContent":[{"text":"The fourth hashable key.","type":"text"}],"type":"paragraph"}]},{"name":"k4","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The fifth hashable key."}]}]},{"name":"k5","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The sixth hashable key."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","anchor":"return-value","level":2,"text":"Return Value"},{"inlineContent":[{"text":"An asynchronous broadcast sequence that shares the underlying sequenceâ€™s values according to the cache and strategy.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"level":2,"text":"Example","anchor":"Example","type":"heading"},{"code":["let cache = AsyncSequenceCache()","let sequence = fetchMetrics(region: \"US\", year: 2025, month: 7, day: 4, category: \"sales\", subcategory: \"online\")","let sharedSequence = sequence.shareFromCache(cache, strategy: .cacheUntilCompletionOrCancellation, keys: \"US\", 2025, 7, 4, \"sales\", \"online\")","","Task {","    for await metric in sharedSequence {","        print(\"Metric: \\(metric)\")","    }","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"These six keys combined provide a unique cache key."}],"type":"paragraph"},{"style":"important","name":"Important","type":"aside","content":[{"inlineContent":[{"text":"This operator should generally be placed at the end of an operator chain. Any operators applied after ","type":"text"},{"code":"shareFromCache","type":"codeVoice"},{"text":" will not be shared and may result in duplicated work or side effects.","type":"text"}],"type":"paragraph"}]}]}],"abstract":[{"type":"text","text":"This operator enables sharing and caching of results from an async sequence"},{"type":"text","text":" "},{"type":"text","text":"based on a specified caching strategy and six hashable cache keys."},{"type":"text","text":" "},{"type":"text","text":"The combined hashable keys uniquely identify the shared sequence in the cache."}],"metadata":{"symbolKind":"method","externalID":"s:Sci7Afluents8SendableRzsAB7ElementRpzrlE14shareFromCache_8strategy4keys_____AA22AsyncBroadcastSequenceVyAA0I9SequencesO12HandleEventsVy_xGGAA0ikF0C_AQ8StrategyOqd__qd_0_qd_1_qd_2_qd_3_qd_4_tSHRd__SHRd_0_SHRd_1_SHRd_2_SHRd_3_SHRd_4_r4_lF::SYNTHESIZED::s:7Afluent14AsyncSequencesO23RetryOnAfterFlatMappingC","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}]},"modules":[{"relatedModules":["_Concurrency"],"name":"Afluent"}],"title":"shareFromCache(_:strategy:keys:_:_:_:_:_:)","remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/ShareFromCacheSequence.swift#L305","fileName":"ShareFromCacheSequence.swift"},"extendedModule":"_Concurrency","roleHeading":"Instance Method","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"shareFromCache"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"H0"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H1"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H2"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H3"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H4"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H5"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"AsyncSequenceCache","preciseIdentifier":"s:7Afluent18AsyncSequenceCacheC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"strategy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AsyncSequenceCache","preciseIdentifier":"s:7Afluent18AsyncSequenceCacheC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Strategy","preciseIdentifier":"s:7Afluent18AsyncSequenceCacheC8StrategyO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"keys"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"H0"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H1"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H2"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H3"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H4"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H5"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AsyncBroadcastSequence","preciseIdentifier":"s:7Afluent22AsyncBroadcastSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"HandleEvents","preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">>"}]},"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"paths":["\/documentation\/afluent\/asyncsequences\/retryonafterflatmapping\/sharefromcache(_:strategy:keys:_:_:_:_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/RetryOnAfterFlatMapping":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOnAfterFlatMapping","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RetryOnAfterFlatMapping"}],"abstract":[],"title":"AsyncSequences.RetryOnAfterFlatMapping","url":"\/documentation\/afluent\/asyncsequences\/retryonafterflatmapping","type":"topic","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RetryOnAfterFlatMapping"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/RetryOnAfterFlatMapping/AsyncSequence-Implementations":{"url":"\/documentation\/afluent\/asyncsequences\/retryonafterflatmapping\/asyncsequence-implementations","type":"topic","role":"collectionGroup","title":"AsyncSequence Implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOnAfterFlatMapping\/AsyncSequence-Implementations","abstract":[],"kind":"article"},"doc://Afluent/documentation/Afluent/AsyncSequences/HandleEvents":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HandleEvents"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HandleEvents"}],"title":"AsyncSequences.HandleEvents","url":"\/documentation\/afluent\/asyncsequences\/handleevents","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Used as the implementation detail for the "},{"type":"codeVoice","code":"AsyncSequence\/handleEvents(receiveMakeIterator:receiveNext:receiveOutput:receiveError:receiveComplete:receiveCancel:)"},{"type":"text","text":" operator."}]},"doc://Afluent/documentation/Afluent/AsyncBroadcastSequence":{"title":"AsyncBroadcastSequence","abstract":[{"text":"An async sequence that multicasts elements from an upstream sequence to multiple concurrent consumers.","type":"text"}],"role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncBroadcastSequence","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncBroadcastSequence","navigatorTitle":[{"text":"AsyncBroadcastSequence","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/afluent\/asyncbroadcastsequence"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","url":"\/documentation\/afluent\/asyncsequences","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequences"}],"title":"AsyncSequences","type":"topic","abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}]},"doc://Afluent/documentation/Afluent/AsyncSequenceCache":{"type":"topic","url":"\/documentation\/afluent\/asyncsequencecache","abstract":[{"type":"text","text":"A thread-safe cache for sharing async sequences by integer key."},{"type":"text","text":" "},{"type":"text","text":"This cache is commonly used with the "},{"type":"codeVoice","code":"shareFromCache"},{"type":"text","text":" operator to reuse sequences."}],"title":"AsyncSequenceCache","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncSequenceCache","kind":"identifier"}],"navigatorTitle":[{"text":"AsyncSequenceCache","kind":"identifier"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequenceCache/Strategy":{"abstract":[{"code":"Strategy","type":"codeVoice"},{"type":"text","text":" represents the available caching strategies for the "},{"code":"AsyncSequenceCache","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"These strategies determine how long the cache retains the async sequences."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache\/Strategy","navigatorTitle":[{"text":"Strategy","kind":"identifier"}],"type":"topic","title":"AsyncSequenceCache.Strategy","url":"\/documentation\/afluent\/asyncsequencecache\/strategy","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Strategy","kind":"identifier"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/RetryOnAfterFlatMapping/shareFromCache(_:strategy:keys:_:_:_:_:_:)":{"abstract":[{"text":"This operator enables sharing and caching of results from an async sequence","type":"text"},{"text":" ","type":"text"},{"text":"based on a specified caching strategy and six hashable cache keys.","type":"text"},{"text":" ","type":"text"},{"text":"The combined hashable keys uniquely identify the shared sequence in the cache.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOnAfterFlatMapping\/shareFromCache(_:strategy:keys:_:_:_:_:_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shareFromCache","kind":"identifier"},{"text":"<","kind":"text"},{"text":"H0","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"H1","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"H2","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"H3","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"H4","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"H5","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:7Afluent18AsyncSequenceCacheC","text":"AsyncSequenceCache","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"strategy","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Afluent18AsyncSequenceCacheC","text":"AsyncSequenceCache","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent18AsyncSequenceCacheC8StrategyO","text":"Strategy","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"keys","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"H0","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"H1","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"H2","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"H3","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"H4","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"H5","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent22AsyncBroadcastSequenceV","text":"AsyncBroadcastSequence","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV","text":"HandleEvents","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">>","kind":"text"}],"title":"shareFromCache(_:strategy:keys:_:_:_:_:_:)","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/afluent\/asyncsequences\/retryonafterflatmapping\/sharefromcache(_:strategy:keys:_:_:_:_:_:)","role":"symbol"},"doc://Afluent/documentation/Afluent":{"abstract":[],"url":"\/documentation\/afluent","role":"collection","type":"topic","kind":"symbol","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent"}}}