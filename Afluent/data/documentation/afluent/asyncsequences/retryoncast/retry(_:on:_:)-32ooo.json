{"abstract":[{"type":"text","text":"Retries the upstream "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" with a custom strategy when the error is castable to a specific type."}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOnCast"]]},"kind":"symbol","sections":[],"variants":[{"paths":["\/documentation\/afluent\/asyncsequences\/retryoncast\/retry(_:on:_:)-32ooo"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}]},"externalID":"s:Sci7Afluents8SendableRzrlE5retry_2on_AA14AsyncSequencesO27RetryOnCastAfterFlatMappingCy_xqd_0_qd__qd_1_Gqd_1__qd_0_mqd__qd_0_YaYbKctsABRd__SciRd__s5ErrorRd_0_AA0G8StrategyRd_1_sAB7ElementRpzALQyd__AMRSr1_lF::SYNTHESIZED::s:7Afluent14AsyncSequencesO11RetryOnCastC","extendedModule":"_Concurrency","roleHeading":"Instance Method","title":"retry(_:on:_:)","symbolKind":"method","remoteSource":{"fileName":"RetryAfterFlatMappingSequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/RetryAfterFlatMappingSequence.swift#L472"},"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"retry"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"D"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"E"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":", "},{"kind":"externalParam","text":"on"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":".Type, ("},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"RetryOnCastAfterFlatMapping","preciseIdentifier":"s:7Afluent14AsyncSequencesO27RetryOnCastAfterFlatMappingC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":">"}],"modules":[{"relatedModules":["_Concurrency"],"name":"Afluent"}],"role":"symbol"},"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOnCast\/retry(_:on:_:)-32ooo","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"retry","kind":"identifier"},{"text":"<","kind":"text"},{"text":"D","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"E","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"strategy","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"on","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"error","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"transform","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"RetryOnCastAfterFlatMapping","preciseIdentifier":"s:7Afluent14AsyncSequencesO27RetryOnCastAfterFlatMappingC","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOnCastAfterFlatMapping","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Sendable","preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"AsyncSequence","preciseIdentifier":"s:Sci","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"RetryStrategy","preciseIdentifier":"s:7Afluent13RetryStrategyP","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:Sci7ElementQa","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Sendable","preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:Sci7ElementQa","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:Sci7ElementQa","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"text":"The retry strategy to apply.","type":"text"}],"type":"paragraph"}],"name":"strategy"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The error type to match via casting."}]}],"name":"error"},{"content":[{"inlineContent":[{"type":"text","text":"The transformation executed before retrying when the cast succeeds, fully consuming the returned sequence."}],"type":"paragraph"}],"name":"transform"}],"kind":"parameters"},{"content":[{"type":"heading","text":"Return Value","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" retrying with the given strategy only when the error can be cast to the specified type."}]}],"kind":"content"},{"content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"inlineContent":[{"text":"The transformation runs ","type":"text"},{"inlineContent":[{"type":"text","text":"before"}],"type":"emphasis"},{"text":" each retry if the error cast succeeds, useful for side effects like refreshing tokens.","type":"text"},{"text":" ","type":"text"},{"text":"The returned sequence is fully consumed before retrying, ignoring its elements.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This enables retrying with custom strategy only when the error can be cast to the specified type,"},{"type":"text","text":" "},{"type":"text","text":"performing asynchronous side effects prior to retry."}],"type":"paragraph"},{"anchor":"Example-Custom-retry-on-casted-error-with-side-effect","text":"Example: Custom retry on casted error with side effect","type":"heading","level":2},{"syntax":"swift","type":"codeListing","code":["let retried = myAsyncSequence.retry(.byCount(3), on: MyError.self) { error in","    DeferredTask {","        try await refreshAuthToken()","    }","    .toAsyncSequence() \/\/ Fully consumed before retry","}"]}],"kind":"content"}],"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/RetryOnCast":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOnCast","title":"AsyncSequences.RetryOnCast","abstract":[],"url":"\/documentation\/afluent\/asyncsequences\/retryoncast","role":"symbol","fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"RetryOnCast"}],"navigatorTitle":[{"kind":"identifier","text":"RetryOnCast"}],"type":"topic","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","url":"\/documentation\/afluent\/asyncsequences","abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"kind":"symbol","title":"AsyncSequences","type":"topic","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncSequences","kind":"identifier"}],"navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/RetryStrategy":{"abstract":[{"text":"A strategy for handling errors and determining whether to retry an operation.","type":"text"}],"title":"RetryStrategy","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RetryStrategy"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RetryStrategy"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","url":"\/documentation\/afluent\/retrystrategy"},"doc://Afluent/documentation/Afluent/AsyncSequences/RetryOnCastAfterFlatMapping":{"role":"symbol","navigatorTitle":[{"text":"RetryOnCastAfterFlatMapping","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOnCastAfterFlatMapping","kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/retryoncastafterflatmapping","title":"AsyncSequences.RetryOnCastAfterFlatMapping","type":"topic","abstract":[],"fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RetryOnCastAfterFlatMapping","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/RetryOnCast/retry(_:on:_:)-32ooo":{"abstract":[{"type":"text","text":"Retries the upstream "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" with a custom strategy when the error is castable to a specific type."}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"type":"topic","url":"\/documentation\/afluent\/asyncsequences\/retryoncast\/retry(_:on:_:)-32ooo","title":"retry(_:on:_:)","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"retry","kind":"identifier"},{"text":"<","kind":"text"},{"text":"D","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"E","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"on","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":".Type, (","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO27RetryOnCastAfterFlatMappingC","text":"RetryOnCastAfterFlatMapping","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOnCast\/retry(_:on:_:)-32ooo"},"doc://Afluent/documentation/Afluent":{"title":"Afluent","url":"\/documentation\/afluent","role":"collection","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol","abstract":[]}}}