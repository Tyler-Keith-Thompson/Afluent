{"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOnCastAfterFlatMapping","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOnCastAfterFlatMapping\/AsyncSequence-Implementations"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shareFromCache","kind":"identifier"},{"text":"<","kind":"text"},{"text":"H0","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"H1","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"H2","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"H3","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"cache"},{"kind":"text","text":": "},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache","preciseIdentifier":"s:7Afluent18AsyncSequenceCacheC","kind":"typeIdentifier","text":"AsyncSequenceCache"},{"kind":"text","text":", "},{"kind":"externalParam","text":"strategy"},{"kind":"text","text":": "},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache","preciseIdentifier":"s:7Afluent18AsyncSequenceCacheC","kind":"typeIdentifier","text":"AsyncSequenceCache"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent18AsyncSequenceCacheC8StrategyO","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache\/Strategy","text":"Strategy"},{"kind":"text","text":", "},{"kind":"externalParam","text":"keys"},{"kind":"text","text":" "},{"kind":"internalParam","text":"k0"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"H0"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"k1"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"H1"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"k2"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"H2"},{"kind":"text","text":", "},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"k3","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"H3","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"AsyncBroadcastSequence","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncBroadcastSequence","preciseIdentifier":"s:7Afluent22AsyncBroadcastSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"AsyncSequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"HandleEvents","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents","preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"H0"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Hashable","preciseIdentifier":"s:SH"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H1"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Hashable","preciseIdentifier":"s:SH"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H2"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Hashable","preciseIdentifier":"s:SH"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H3"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Hashable","preciseIdentifier":"s:SH"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The cache from which to share data."}],"type":"paragraph"}],"name":"cache"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The caching strategy to use."}]}],"name":"strategy"},{"content":[{"inlineContent":[{"text":"The first hashable key.","type":"text"}],"type":"paragraph"}],"name":"k0"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The second hashable key."}]}],"name":"k1"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The third hashable key."}]}],"name":"k2"},{"content":[{"inlineContent":[{"text":"The fourth hashable key.","type":"text"}],"type":"paragraph"}],"name":"k3"}]},{"kind":"content","content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"inlineContent":[{"text":"An asynchronous broadcast sequence that shares the underlying sequenceâ€™s values according to the cache and strategy.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"text":"Example","anchor":"Example","type":"heading","level":2},{"code":["let cache = AsyncSequenceCache()","let sequence = fetchEvents(year: 2025, month: 7, day: 4, location: \"NYC\")","let sharedSequence = sequence.shareFromCache(cache, strategy: .cacheUntilCompletionOrCancellation, keys: 2025, 7, 4, \"NYC\")","","Task {","    for await event in sharedSequence {","        print(\"Event: \\(event)\")","    }","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"These keys combined uniquely identify the cached shared sequence.","type":"text"}],"type":"paragraph"},{"name":"Important","style":"important","type":"aside","content":[{"inlineContent":[{"text":"This operator should generally be placed at the end of an operator chain. Any operators applied after ","type":"text"},{"code":"shareFromCache","type":"codeVoice"},{"text":" will not be shared and may result in duplicated work or side effects.","type":"text"}],"type":"paragraph"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asyncsequences\/retryoncastafterflatmapping\/sharefromcache(_:strategy:keys:_:_:_:)"]}],"metadata":{"extendedModule":"_Concurrency","role":"symbol","roleHeading":"Instance Method","title":"shareFromCache(_:strategy:keys:_:_:_:)","modules":[{"relatedModules":["_Concurrency"],"name":"Afluent"}],"symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"shareFromCache"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"H0"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H1"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H2"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H3"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"AsyncSequenceCache","preciseIdentifier":"s:7Afluent18AsyncSequenceCacheC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"strategy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AsyncSequenceCache","preciseIdentifier":"s:7Afluent18AsyncSequenceCacheC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Strategy","preciseIdentifier":"s:7Afluent18AsyncSequenceCacheC8StrategyO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"keys"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"H0"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H1"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H2"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H3"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AsyncBroadcastSequence","preciseIdentifier":"s:7Afluent22AsyncBroadcastSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"HandleEvents","preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">>"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}]},"remoteSource":{"fileName":"ShareFromCacheSequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/ShareFromCacheSequence.swift#L218"},"externalID":"s:Sci7Afluents8SendableRzsAB7ElementRpzrlE14shareFromCache_8strategy4keys___AA22AsyncBroadcastSequenceVyAA0I9SequencesO12HandleEventsVy_xGGAA0ikF0C_AQ8StrategyOqd__qd_0_qd_1_qd_2_tSHRd__SHRd_0_SHRd_1_SHRd_2_r2_lF::SYNTHESIZED::s:7Afluent14AsyncSequencesO27RetryOnCastAfterFlatMappingC"},"kind":"symbol","abstract":[{"type":"text","text":"This operator enables sharing and caching of results from an async sequence"},{"type":"text","text":" "},{"type":"text","text":"based on a specified caching strategy and four hashable cache keys."},{"type":"text","text":" "},{"type":"text","text":"The combined hashable keys uniquely identify the shared sequence in the cache."}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOnCastAfterFlatMapping\/shareFromCache(_:strategy:keys:_:_:_:)","interfaceLanguage":"swift"},"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/RetryOnCastAfterFlatMapping/shareFromCache(_:strategy:keys:_:_:_:)":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOnCastAfterFlatMapping\/shareFromCache(_:strategy:keys:_:_:_:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}]},"abstract":[{"type":"text","text":"This operator enables sharing and caching of results from an async sequence"},{"type":"text","text":" "},{"type":"text","text":"based on a specified caching strategy and four hashable cache keys."},{"type":"text","text":" "},{"type":"text","text":"The combined hashable keys uniquely identify the shared sequence in the cache."}],"type":"topic","title":"shareFromCache(_:strategy:keys:_:_:_:)","url":"\/documentation\/afluent\/asyncsequences\/retryoncastafterflatmapping\/sharefromcache(_:strategy:keys:_:_:_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shareFromCache","kind":"identifier"},{"text":"<","kind":"text"},{"text":"H0","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"H1","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"H2","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"H3","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"AsyncSequenceCache","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent18AsyncSequenceCacheC"},{"text":", ","kind":"text"},{"text":"strategy","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AsyncSequenceCache","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent18AsyncSequenceCacheC"},{"text":".","kind":"text"},{"text":"Strategy","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent18AsyncSequenceCacheC8StrategyO"},{"text":", ","kind":"text"},{"text":"keys","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"H0","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"H1","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"H2","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"H3","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"AsyncBroadcastSequence","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsyncBroadcastSequenceV"},{"text":"<","kind":"text"},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"text":"HandleEvents","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">>","kind":"text"}]},"doc://Afluent/documentation/Afluent/AsyncSequences":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","url":"\/documentation\/afluent\/asyncsequences","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequences"}],"title":"AsyncSequences","type":"topic","abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}]},"doc://Afluent/documentation/Afluent/AsyncSequences/HandleEvents":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HandleEvents"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HandleEvents"}],"title":"AsyncSequences.HandleEvents","url":"\/documentation\/afluent\/asyncsequences\/handleevents","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Used as the implementation detail for the "},{"type":"codeVoice","code":"AsyncSequence\/handleEvents(receiveMakeIterator:receiveNext:receiveOutput:receiveError:receiveComplete:receiveCancel:)"},{"type":"text","text":" operator."}]},"doc://Afluent/documentation/Afluent/AsyncBroadcastSequence":{"title":"AsyncBroadcastSequence","abstract":[{"text":"An async sequence that multicasts elements from an upstream sequence to multiple concurrent consumers.","type":"text"}],"role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncBroadcastSequence","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncBroadcastSequence","navigatorTitle":[{"text":"AsyncBroadcastSequence","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/afluent\/asyncbroadcastsequence"},"doc://Afluent/documentation/Afluent/AsyncSequenceCache/Strategy":{"abstract":[{"code":"Strategy","type":"codeVoice"},{"type":"text","text":" represents the available caching strategies for the "},{"code":"AsyncSequenceCache","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"These strategies determine how long the cache retains the async sequences."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache\/Strategy","navigatorTitle":[{"text":"Strategy","kind":"identifier"}],"type":"topic","title":"AsyncSequenceCache.Strategy","url":"\/documentation\/afluent\/asyncsequencecache\/strategy","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Strategy","kind":"identifier"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent":{"abstract":[],"url":"\/documentation\/afluent","role":"collection","type":"topic","kind":"symbol","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent"},"doc://Afluent/documentation/Afluent/AsyncSequences/RetryOnCastAfterFlatMapping":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RetryOnCastAfterFlatMapping","kind":"identifier"}],"navigatorTitle":[{"text":"RetryOnCastAfterFlatMapping","kind":"identifier"}],"type":"topic","url":"\/documentation\/afluent\/asyncsequences\/retryoncastafterflatmapping","abstract":[],"kind":"symbol","role":"symbol","title":"AsyncSequences.RetryOnCastAfterFlatMapping","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOnCastAfterFlatMapping"},"doc://Afluent/documentation/Afluent/AsyncSequenceCache":{"type":"topic","url":"\/documentation\/afluent\/asyncsequencecache","abstract":[{"type":"text","text":"A thread-safe cache for sharing async sequences by integer key."},{"type":"text","text":" "},{"type":"text","text":"This cache is commonly used with the "},{"type":"codeVoice","code":"shareFromCache"},{"type":"text","text":" operator to reuse sequences."}],"title":"AsyncSequenceCache","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncSequenceCache","kind":"identifier"}],"navigatorTitle":[{"text":"AsyncSequenceCache","kind":"identifier"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/RetryOnCastAfterFlatMapping/AsyncSequence-Implementations":{"type":"topic","role":"collectionGroup","kind":"article","title":"AsyncSequence Implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOnCastAfterFlatMapping\/AsyncSequence-Implementations","abstract":[],"url":"\/documentation\/afluent\/asyncsequences\/retryoncastafterflatmapping\/asyncsequence-implementations"}}}