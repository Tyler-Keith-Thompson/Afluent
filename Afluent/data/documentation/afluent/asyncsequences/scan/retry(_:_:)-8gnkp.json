{"metadata":{"role":"symbol","title":"retry(_:_:)","modules":[{"relatedModules":["_Concurrency"],"name":"Afluent"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"retry"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"D"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":", (any "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO21RetryAfterFlatMappingC","text":"RetryAfterFlatMapping"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent20RetryByCountStrategyC","text":"RetryByCountStrategy"},{"kind":"text","text":">"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}]},"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/RetryAfterFlatMappingSequence.swift#L347","fileName":"RetryAfterFlatMappingSequence.swift"},"externalID":"s:Sci7Afluents8SendableRzrlE5retryyAA14AsyncSequencesO21RetryAfterFlatMappingCy_xqd__AA0F15ByCountStrategyCGSu_qd__s5Error_pYaYbKctsABRd__SciRd__sAB7ElementRpzALQyd__AMRSlF::SYNTHESIZED::s:7Afluent14AsyncSequencesO4ScanV","symbolKind":"method","extendedModule":"_Concurrency","roleHeading":"Instance Method"},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Scan","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Scan\/AsyncSequence-Implementations"]]},"sections":[],"kind":"symbol","abstract":[{"type":"text","text":"Retries the upstream "},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" up to a specified number of times."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"retry","kind":"identifier"},{"text":"<","kind":"text"},{"text":"D","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"retries","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":" = 1, ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"transform","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (any ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryAfterFlatMapping","preciseIdentifier":"s:7Afluent14AsyncSequencesO21RetryAfterFlatMappingC","text":"RetryAfterFlatMapping","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByCountStrategy","preciseIdentifier":"s:7Afluent20RetryByCountStrategyC","text":"RetryByCountStrategy","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:Sci","text":"AsyncSequence","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sci7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sci7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sci7ElementQa","text":"Element","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The maximum number of retry attempts (default is 1).","type":"text"}]}],"name":"retries"},{"content":[{"inlineContent":[{"text":"An async closure executed before each retry, returning an ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"text":" whose elements are ignored but fully consumed.","type":"text"}],"type":"paragraph"}],"name":"transform"}]},{"kind":"content","content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" that retries on failure up to the specified number of times, performing the transformation before each retry."}]}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The transformation closure runs "},{"inlineContent":[{"text":"before","type":"text"}],"type":"emphasis"},{"type":"text","text":" each retry and can be used to perform side effects like refreshing credentials."},{"type":"text","text":" "},{"type":"text","text":"The returned sequence is always fully consumed before retrying, and its element type does not need to match the upstream."}]},{"type":"paragraph","inlineContent":[{"text":"This is useful for operations such as token refresh or cache reset prior to retrying the upstream sequence.","type":"text"}]},{"anchor":"Example-Refreshing-tokens-before-retrying-a-network-call","type":"heading","text":"Example: Refreshing tokens before retrying a network call","level":2},{"syntax":"swift","type":"codeListing","code":["let retriedSequence = myAsyncSequence.retry(3) { error in","    DeferredTask {","        if let authError = error as? MyAuthError {","            try await refreshTokens()","        }","    }","    .toAsyncSequence() \/\/ Fully consumed before retry","}"]}]}],"variants":[{"paths":["\/documentation\/afluent\/asyncsequences\/scan\/retry(_:_:)-8gnkp"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Scan\/retry(_:_:)-8gnkp","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://Afluent/documentation/Afluent/RetryByCountStrategy":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByCountStrategy","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RetryByCountStrategy","kind":"identifier"}],"title":"RetryByCountStrategy","type":"topic","url":"\/documentation\/afluent\/retrybycountstrategy","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"RetryStrategy"},{"type":"text","text":" that limits the number of retry attempts."}],"navigatorTitle":[{"text":"RetryByCountStrategy","kind":"identifier"}],"role":"symbol","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/RetryAfterFlatMapping":{"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryAfterFlatMapping","role":"symbol","title":"AsyncSequences.RetryAfterFlatMapping","abstract":[],"navigatorTitle":[{"text":"RetryAfterFlatMapping","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RetryAfterFlatMapping","kind":"identifier"}],"type":"topic","url":"\/documentation\/afluent\/asyncsequences\/retryafterflatmapping"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"type":"topic","title":"AsyncSequences","url":"\/documentation\/afluent\/asyncsequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequences"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/Scan/AsyncSequence-Implementations":{"title":"AsyncSequence Implementations","type":"topic","abstract":[],"role":"collectionGroup","kind":"article","url":"\/documentation\/afluent\/asyncsequences\/scan\/asyncsequence-implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Scan\/AsyncSequence-Implementations"},"doc://Afluent/documentation/Afluent/AsyncSequences/Scan/retry(_:_:)-8gnkp":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}]},"title":"retry(_:_:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Scan\/retry(_:_:)-8gnkp","abstract":[{"text":"Retries the upstream ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"text":" up to a specified number of times.","type":"text"}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"retry","kind":"identifier"},{"text":"<","kind":"text"},{"text":"D","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":", (any ","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"RetryAfterFlatMapping","preciseIdentifier":"s:7Afluent14AsyncSequencesO21RetryAfterFlatMappingC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"RetryByCountStrategy","preciseIdentifier":"s:7Afluent20RetryByCountStrategyC","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/scan\/retry(_:_:)-8gnkp"},"doc://Afluent/documentation/Afluent":{"type":"topic","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","abstract":[],"url":"\/documentation\/afluent","role":"collection","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/Scan":{"title":"AsyncSequences.Scan","abstract":[],"type":"topic","role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Scan","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences\/scan","navigatorTitle":[{"text":"Scan","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Scan"}}}