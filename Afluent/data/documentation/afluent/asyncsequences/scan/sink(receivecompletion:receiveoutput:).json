{"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"abstract":[{"text":"Starts processing the elements of this async sequence, handling output and completion events,","type":"text"},{"text":" ","type":"text"},{"text":"and returns an ","type":"text"},{"code":"AnyCancellable","type":"codeVoice"},{"text":" token that can be used to cancel the subscription.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asyncsequences\/scan\/sink(receivecompletion:receiveoutput:)"]}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Scan"]]},"metadata":{"title":"sink(receiveCompletion:receiveOutput:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}]},"modules":[{"name":"Afluent","relatedModules":["_Concurrency"]}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"sink"},{"kind":"text","text":"("},{"kind":"externalParam","text":"receiveCompletion"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Completion","preciseIdentifier":"s:7Afluent14AsyncSequencesO10CompletionO"},{"kind":"text","text":"<any "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":">) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?, "},{"kind":"externalParam","text":"receiveOutput"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:Sci7ElementQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?) -> "},{"kind":"typeIdentifier","text":"AnyCancellable","preciseIdentifier":"s:7Afluent14AnyCancellableC"}],"extendedModule":"_Concurrency","symbolKind":"method","role":"symbol","roleHeading":"Instance Method","externalID":"s:Sci7Afluents8SendableRzrlE4sink17receiveCompletion0D6OutputAA14AnyCancellableCyAA14AsyncSequencesO0E0Oy_s5Error_pGYaYbcSg_y7ElementQzYaYbKcSgtF::SYNTHESIZED::s:7Afluent14AsyncSequencesO4ScanV","remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/Subscription\/AnyCancellable.swift#L163","fileName":"AnyCancellable.swift"}},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"sink"},{"kind":"text","text":"("},{"kind":"externalParam","text":"receiveCompletion"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO10CompletionO","text":"Completion","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Completion"},{"kind":"text","text":"<any "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":">) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")? = nil, "},{"kind":"externalParam","text":"receiveOutput"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")? = nil) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AnyCancellableC","text":"AnyCancellable","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyCancellable"}]}]},{"kind":"parameters","parameters":[{"name":"receiveCompletion","content":[{"inlineContent":[{"text":"An optional async closure invoked when the sequence completes, either normally with ","type":"text"},{"code":".finished","type":"codeVoice"},{"text":" ","type":"text"},{"text":"or with an error ","type":"text"},{"code":".failure","type":"codeVoice"},{"text":". Called exactly once.","type":"text"}],"type":"paragraph"}]},{"name":"receiveOutput","content":[{"inlineContent":[{"text":"An optional async throwing closure invoked for each element produced by the sequence.","type":"text"},{"text":" ","type":"text"},{"text":"If this closure throws an error, the sequence is terminated and completion closure is called with ","type":"text"},{"code":".failure","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"inlineContent":[{"text":"An ","type":"text"},{"code":"AnyCancellable","type":"codeVoice"},{"text":" token that can be stored and used to cancel the ongoing subscription.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method allows you to asynchronously receive each element emitted by the sequence and respond"},{"type":"text","text":" "},{"type":"text","text":"to completion or failure. The stream runs until all elements are consumed, an error occurs,"},{"type":"text","text":" "},{"type":"text","text":"or cancellation is triggered via the returned token."}]},{"type":"paragraph","inlineContent":[{"text":"Usage example:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["let publisher: AsyncStream<Int> = AsyncStream { continuation in","    Task {","        for i in 1...5 {","            continuation.yield(i)","            try await Task.sleep(nanoseconds: 500_000_000)","        }","        continuation.finish()","    }","}","","let cancellable = publisher.sink(","    receiveCompletion: { completion in","        switch completion {","        case .finished:","            print(\"Stream completed successfully\")","        case .failure(let error):","            print(\"Stream failed with error: \\(error)\")","        }","    },","    receiveOutput: { value in","        print(\"Received value: \\(value)\")","    }",")","","\/\/ To cancel early:","\/\/ cancellable.cancel()"]}]}],"kind":"symbol","identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Scan\/sink(receiveCompletion:receiveOutput:)","interfaceLanguage":"swift"},"references":{"doc://Afluent/documentation/Afluent/AsyncSequences":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","url":"\/documentation\/afluent\/asyncsequences","abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"kind":"symbol","title":"AsyncSequences","type":"topic","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncSequences","kind":"identifier"}],"navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AnyCancellable":{"navigatorTitle":[{"kind":"identifier","text":"AnyCancellable"}],"kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/afluent\/anycancellable","title":"AnyCancellable","abstract":[{"type":"text","text":"Stores an erased unit of work and provides a mechanism to cancel it."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyCancellable"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyCancellable"},"doc://Afluent/documentation/Afluent/AsyncSequences/Scan/sink(receiveCompletion:receiveOutput:)":{"abstract":[{"text":"Starts processing the elements of this async sequence, handling output and completion events,","type":"text"},{"text":" ","type":"text"},{"text":"and returns an ","type":"text"},{"code":"AnyCancellable","type":"codeVoice"},{"text":" token that can be used to cancel the subscription.","type":"text"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}]},"title":"sink(receiveCompletion:receiveOutput:)","type":"topic","url":"\/documentation\/afluent\/asyncsequences\/scan\/sink(receivecompletion:receiveoutput:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"sink"},{"kind":"text","text":"("},{"kind":"externalParam","text":"receiveCompletion"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Completion","preciseIdentifier":"s:7Afluent14AsyncSequencesO10CompletionO"},{"kind":"text","text":"<any "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":">) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?, "},{"kind":"externalParam","text":"receiveOutput"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:Sci7ElementQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?) -> "},{"kind":"typeIdentifier","text":"AnyCancellable","preciseIdentifier":"s:7Afluent14AnyCancellableC"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Scan\/sink(receiveCompletion:receiveOutput:)"},"doc://Afluent/documentation/Afluent/AsyncSequences/Scan":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Scan","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences\/scan","type":"topic","navigatorTitle":[{"text":"Scan","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Scan","title":"AsyncSequences.Scan","abstract":[],"role":"symbol"},"doc://Afluent/documentation/Afluent":{"title":"Afluent","url":"\/documentation\/afluent","role":"collection","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol","abstract":[]},"doc://Afluent/documentation/Afluent/AsyncSequences/Completion":{"kind":"symbol","title":"AsyncSequences.Completion","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Completion","kind":"identifier"}],"navigatorTitle":[{"text":"Completion","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Completion","url":"\/documentation\/afluent\/asyncsequences\/completion","type":"topic","abstract":[{"text":"A type that represents the completion of a sequence, either due to a normal completion or an error.","type":"text"}],"role":"symbol"}}}