{"metadata":{"role":"symbol","externalID":"s:Sci7Afluents8SendableRzsAB7ElementRpzrlE8throttle3for5clock6latestAA14AsyncSequencesO8ThrottleVy_xqd__G8DurationQyd___qd__Sbt12_Concurrency5ClockRd__lF::SYNTHESIZED::s:7Afluent14AsyncSequencesO4ScanV","title":"throttle(for:clock:latest:)","roleHeading":"Instance Method","modules":[{"name":"Afluent","relatedModules":["_Concurrency"]}],"remoteSource":{"fileName":"ThrottleSequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/ThrottleSequence.swift#L266"},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throttle","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"for","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa","text":"Duration","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"clock","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"latest","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO8ThrottleV","text":"Throttle","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":">","kind":"text"}],"extendedModule":"_Concurrency","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"platforms":[{"name":"iOS","beta":false,"unavailable":false,"introducedAt":"16.0","deprecated":false},{"name":"macOS","beta":false,"unavailable":false,"introducedAt":"13.0","deprecated":false},{"name":"tvOS","beta":false,"unavailable":false,"introducedAt":"16.0","deprecated":false},{"name":"visionOS","beta":false,"unavailable":false,"introducedAt":"1.0","deprecated":false},{"name":"watchOS","beta":false,"unavailable":false,"introducedAt":"9.0","deprecated":false}],"symbolKind":"method"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"throttle"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">("},{"kind":"externalParam","text":"for"},{"kind":"text","text":" "},{"kind":"internalParam","text":"interval"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":"."},{"preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa","kind":"typeIdentifier","text":"Duration"},{"kind":"text","text":", "},{"kind":"externalParam","text":"clock"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":", "},{"kind":"externalParam","text":"latest"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":") -> "},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier","text":"AsyncSequences"},{"kind":"text","text":"."},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Throttle","preciseIdentifier":"s:7Afluent14AsyncSequencesO8ThrottleV","kind":"typeIdentifier","text":"Throttle"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:12_Concurrency5ClockP","kind":"typeIdentifier","text":"Clock"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"The length of time to wait between emissions.","type":"text"}],"type":"paragraph"}],"name":"interval"},{"content":[{"inlineContent":[{"type":"text","text":"The clock used to measure time intervals and perform sleeps."}],"type":"paragraph"}],"name":"clock"},{"content":[{"inlineContent":[{"text":"A Boolean flag determining which element to emit during each interval:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"false","type":"codeVoice"},{"text":" emits the first element seen in the interval.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"true"},{"type":"text","text":" emits the latest element seen during the interval."}]}]}],"type":"unorderedList"}],"name":"latest"}]},{"kind":"content","content":[{"type":"heading","text":"Return Value","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"An async sequence that emits throttled elements from the upstream sequence."}]}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This operator suppresses elements from the upstream async sequence during each interval, emitting only one element per interval:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"latest"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"false"},{"text":", it emits the first element received immediately and then ignores subsequent elements until the interval completes.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"latest"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"true"},{"text":", it emits the first element immediately, then during the interval it tracks element updates, emitting only the most recent one at the intervalâ€™s end.","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"text":"Elements arriving during an interval beyond the emitted one are suppressed, allowing controlled pacing of element emission.","type":"text"}]},{"type":"heading","text":"Example","level":2,"anchor":"Example"},{"type":"paragraph","inlineContent":[{"text":"The following example creates an ","type":"text"},{"code":"AsyncStream","type":"codeVoice"},{"text":" that emits the current date every second,","type":"text"},{"text":" ","type":"text"},{"text":"then applies a throttle with a 3-second interval, showing both ","type":"text"},{"code":"latest: false","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"latest: true","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["import Foundation","import _Concurrency","","let stream = AsyncStream<Date> { continuation in","    Task {","        while true {","            continuation.yield(Date())","            try await Task.sleep(nanoseconds: 1_000_000_000) \/\/ 1 second","        }","    }","}","","\/\/ Throttle with latest: false (emit the first element immediately, then suppress others during the interval)","Task {","    print(\"Throttle with latest: false\")","    for await date in stream.throttle(for: .seconds(3), clock: ContinuousClock(), latest: false) {","        print(\"Emitted (first): \\(date)\")","    }","}","","\/\/ Throttle with latest: true (emit the first element immediately, then emit the latest element at interval end)","Task {","    print(\"Throttle with latest: true\")","    for await date in stream.throttle(for: .seconds(3), clock: ContinuousClock(), latest: true) {","        print(\"Emitted (latest): \\(date)\")","    }","}","","\/*","Sample output for latest: false:","Throttle with latest: false","Emitted (first): 2025-07-04 12:00:00 +0000","Emitted (first): 2025-07-04 12:00:03 +0000","Emitted (first): 2025-07-04 12:00:06 +0000","","Sample output for latest: true:","Throttle with latest: true","Emitted (latest): 2025-07-04 12:00:00 +0000","Emitted (latest): 2025-07-04 12:00:02 +0000","Emitted (latest): 2025-07-04 12:00:05 +0000","*\/"]}]}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Scan"]]},"kind":"symbol","abstract":[{"text":"Allows only one element to pass through during each specified interval, emitting either the first or the latest element seen in that period.","type":"text"}],"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asyncsequences\/scan\/throttle(for:clock:latest:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Scan\/throttle(for:clock:latest:)"},"references":{"doc://Afluent/documentation/Afluent":{"title":"Afluent","url":"\/documentation\/afluent","role":"collection","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol","abstract":[]},"doc://Afluent/documentation/Afluent/AsyncSequences/Scan":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Scan","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences\/scan","type":"topic","navigatorTitle":[{"text":"Scan","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Scan","title":"AsyncSequences.Scan","abstract":[],"role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/Throttle":{"type":"topic","url":"\/documentation\/afluent\/asyncsequences\/throttle","title":"AsyncSequences.Throttle","kind":"symbol","role":"symbol","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Throttle","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Throttle","navigatorTitle":[{"text":"Throttle","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsyncSequences":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","url":"\/documentation\/afluent\/asyncsequences","abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"kind":"symbol","title":"AsyncSequences","type":"topic","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncSequences","kind":"identifier"}],"navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/Scan/throttle(for:clock:latest:)":{"title":"throttle(for:clock:latest:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"throttle"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">("},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Duration","preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa"},{"kind":"text","text":", "},{"kind":"externalParam","text":"clock"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":", "},{"kind":"externalParam","text":"latest"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Throttle","preciseIdentifier":"s:7Afluent14AsyncSequencesO8ThrottleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":">"}],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Scan\/throttle(for:clock:latest:)","abstract":[{"text":"Allows only one element to pass through during each specified interval, emitting either the first or the latest element seen in that period.","type":"text"}],"url":"\/documentation\/afluent\/asyncsequences\/scan\/throttle(for:clock:latest:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}]},"type":"topic"}}}