{"abstract":[{"type":"text","text":"This operator enables sharing and caching of results from an async sequence"},{"type":"text","text":" "},{"type":"text","text":"based on a specified caching strategy and eight hashable cache keys."},{"type":"text","text":" "},{"type":"text","text":"The combined hashable keys uniquely identify the shared sequence in the cache."}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/TimerSequence"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"shareFromCache"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"H0"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H1"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H2"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H3"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H4"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H5"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H6"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H7"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"cache"},{"kind":"text","text":": "},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache","kind":"typeIdentifier","text":"AsyncSequenceCache","preciseIdentifier":"s:7Afluent18AsyncSequenceCacheC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"strategy"},{"kind":"text","text":": "},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache","kind":"typeIdentifier","text":"AsyncSequenceCache","preciseIdentifier":"s:7Afluent18AsyncSequenceCacheC"},{"kind":"text","text":"."},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache\/Strategy","kind":"typeIdentifier","text":"Strategy","preciseIdentifier":"s:7Afluent18AsyncSequenceCacheC8StrategyO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"keys"},{"kind":"text","text":" "},{"kind":"internalParam","text":"k0"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"H0"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"k1"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"H1"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"k2"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"H2"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"k3"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"H3"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"k4"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"H4"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"k5"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"H5"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"k6"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"H6"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"k7"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"H7"},{"kind":"text","text":") -> "},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncBroadcastSequence","kind":"typeIdentifier","text":"AsyncBroadcastSequence","preciseIdentifier":"s:7Afluent22AsyncBroadcastSequenceV"},{"kind":"text","text":"<"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","kind":"typeIdentifier","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents","kind":"typeIdentifier","text":"HandleEvents","preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"H0"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Hashable","preciseIdentifier":"s:SH"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H1"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Hashable","preciseIdentifier":"s:SH"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H2"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Hashable","preciseIdentifier":"s:SH"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H3"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Hashable","preciseIdentifier":"s:SH"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H4"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Hashable","preciseIdentifier":"s:SH"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H5"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Hashable","preciseIdentifier":"s:SH"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H6"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Hashable","preciseIdentifier":"s:SH"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H7"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Hashable","preciseIdentifier":"s:SH"}]}]},{"kind":"parameters","parameters":[{"name":"cache","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The cache from which to share data."}]}]},{"name":"strategy","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The caching strategy to use."}]}]},{"name":"k1","content":[{"inlineContent":[{"text":"The second hashable key.","type":"text"}],"type":"paragraph"}]},{"name":"k2","content":[{"inlineContent":[{"type":"text","text":"The third hashable key."}],"type":"paragraph"}]},{"name":"k3","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The fourth hashable key."}]}]},{"name":"k4","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The fifth hashable key."}]}]},{"name":"k5","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The sixth hashable key."}]}]},{"name":"k6","content":[{"type":"paragraph","inlineContent":[{"text":"The seventh hashable key.","type":"text"}]}]},{"name":"k7","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The eighth hashable key."}]}]}]},{"kind":"content","content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An asynchronous broadcast sequence that shares the underlying sequenceâ€™s values according to the cache and strategy."}]}]},{"kind":"content","content":[{"text":"Example","type":"heading","level":2,"anchor":"Example"},{"syntax":"swift","type":"codeListing","code":["let cache = AsyncSequenceCache()","let sequence = fetchDataSet(a: 1, b: 2, c: 3, d: 4, e: 5, f: 6, g: 7, h: 8)","let sharedSequence = sequence.shareFromCache(cache, strategy: .cacheUntilCompletionOrCancellation, keys: 1, 2, 3, 4, 5, 6, 7, 8)","","Task {","    for await item in sharedSequence {","        print(\"Item: \\(item)\")","    }","}"]},{"type":"paragraph","inlineContent":[{"text":"These eight keys combined provide a unique cache key.","type":"text"}]},{"content":[{"inlineContent":[{"type":"text","text":"This operator should generally be placed at the end of an operator chain. Any operators applied after "},{"type":"codeVoice","code":"shareFromCache"},{"type":"text","text":" will not be shared and may result in duplicated work or side effects."}],"type":"paragraph"}],"style":"important","type":"aside","name":"Important"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asyncsequences\/timersequence\/sharefromcache(_:strategy:keys:_:_:_:_:_:_:_:)"]}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/TimerSequence\/shareFromCache(_:strategy:keys:_:_:_:_:_:_:_:)","interfaceLanguage":"swift"},"metadata":{"externalID":"s:Sci7Afluents8SendableRzsAB7ElementRpzrlE14shareFromCache_8strategy4keys_______AA22AsyncBroadcastSequenceVyAA0I9SequencesO12HandleEventsVy_xGGAA0ikF0C_AQ8StrategyOqd__qd_0_qd_1_qd_2_qd_3_qd_4_qd_5_qd_6_tSHRd__SHRd_0_SHRd_1_SHRd_2_SHRd_3_SHRd_4_SHRd_5_SHRd_6_r6_lF::SYNTHESIZED::s:7Afluent14AsyncSequencesO13TimerSequenceV","symbolKind":"method","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"roleHeading":"Instance Method","remoteSource":{"fileName":"ShareFromCacheSequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/ShareFromCacheSequence.swift#L404"},"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"shareFromCache"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"H0"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H1"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H2"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H3"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H4"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H5"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H6"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H7"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"AsyncSequenceCache","preciseIdentifier":"s:7Afluent18AsyncSequenceCacheC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"strategy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AsyncSequenceCache","preciseIdentifier":"s:7Afluent18AsyncSequenceCacheC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Strategy","preciseIdentifier":"s:7Afluent18AsyncSequenceCacheC8StrategyO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"keys"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"H0"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H1"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H2"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H3"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H4"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H5"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H6"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H7"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AsyncBroadcastSequence","preciseIdentifier":"s:7Afluent22AsyncBroadcastSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"HandleEvents","preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">>"}],"modules":[{"relatedModules":["_Concurrency"],"name":"Afluent"}],"extendedModule":"_Concurrency","title":"shareFromCache(_:strategy:keys:_:_:_:_:_:_:_:)"},"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/TimerSequence/shareFromCache(_:strategy:keys:_:_:_:_:_:_:_:)":{"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/TimerSequence\/shareFromCache(_:strategy:keys:_:_:_:_:_:_:_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"shareFromCache"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"H0"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H1"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H2"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H3"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H4"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H5"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H6"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H7"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"AsyncSequenceCache","preciseIdentifier":"s:7Afluent18AsyncSequenceCacheC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"strategy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AsyncSequenceCache","preciseIdentifier":"s:7Afluent18AsyncSequenceCacheC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Strategy","preciseIdentifier":"s:7Afluent18AsyncSequenceCacheC8StrategyO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"keys"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"H0"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H1"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H2"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H3"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H4"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H5"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H6"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H7"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AsyncBroadcastSequence","preciseIdentifier":"s:7Afluent22AsyncBroadcastSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"HandleEvents","preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">>"}],"type":"topic","url":"\/documentation\/afluent\/asyncsequences\/timersequence\/sharefromcache(_:strategy:keys:_:_:_:_:_:_:_:)","title":"shareFromCache(_:strategy:keys:_:_:_:_:_:_:_:)","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"abstract":[{"type":"text","text":"This operator enables sharing and caching of results from an async sequence"},{"type":"text","text":" "},{"type":"text","text":"based on a specified caching strategy and eight hashable cache keys."},{"type":"text","text":" "},{"type":"text","text":"The combined hashable keys uniquely identify the shared sequence in the cache."}]},"doc://Afluent/documentation/Afluent":{"title":"Afluent","url":"\/documentation\/afluent","role":"collection","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol","abstract":[]},"doc://Afluent/documentation/Afluent/AsyncSequenceCache":{"abstract":[{"text":"A thread-safe cache for sharing async sequences by integer key.","type":"text"},{"text":" ","type":"text"},{"text":"This cache is commonly used with the ","type":"text"},{"code":"shareFromCache","type":"codeVoice"},{"text":" operator to reuse sequences.","type":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache","navigatorTitle":[{"kind":"identifier","text":"AsyncSequenceCache"}],"title":"AsyncSequenceCache","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequenceCache"}],"url":"\/documentation\/afluent\/asyncsequencecache","kind":"symbol","type":"topic","role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequenceCache/Strategy":{"type":"topic","url":"\/documentation\/afluent\/asyncsequencecache\/strategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache\/Strategy","abstract":[{"type":"codeVoice","code":"Strategy"},{"type":"text","text":" represents the available caching strategies for the "},{"type":"codeVoice","code":"AsyncSequenceCache"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"These strategies determine how long the cache retains the async sequences."}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Strategy","kind":"identifier"}],"kind":"symbol","role":"symbol","title":"AsyncSequenceCache.Strategy","navigatorTitle":[{"text":"Strategy","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/TimerSequence":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/TimerSequence","navigatorTitle":[{"kind":"identifier","text":"TimerSequence"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TimerSequence"}],"title":"AsyncSequences.TimerSequence","abstract":[{"type":"text","text":"A timer-based asynchronous sequence that emits the current instant of a specified clock"},{"type":"text","text":" "},{"type":"text","text":"at a regular interval."}],"url":"\/documentation\/afluent\/asyncsequences\/timersequence"},"doc://Afluent/documentation/Afluent/AsyncSequences/HandleEvents":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HandleEvents"}],"kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/handleevents","title":"AsyncSequences.HandleEvents","abstract":[{"type":"text","text":"Used as the implementation detail for the "},{"type":"codeVoice","code":"AsyncSequence\/handleEvents(receiveMakeIterator:receiveNext:receiveOutput:receiveError:receiveComplete:receiveCancel:)"},{"type":"text","text":" operator."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HandleEvents"}]},"doc://Afluent/documentation/Afluent/AsyncSequences":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","url":"\/documentation\/afluent\/asyncsequences","abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"kind":"symbol","title":"AsyncSequences","type":"topic","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncSequences","kind":"identifier"}],"navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsyncBroadcastSequence":{"title":"AsyncBroadcastSequence","kind":"symbol","url":"\/documentation\/afluent\/asyncbroadcastsequence","abstract":[{"type":"text","text":"An async sequence that multicasts elements from an upstream sequence to multiple concurrent consumers."}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncBroadcastSequence","kind":"identifier"}],"navigatorTitle":[{"text":"AsyncBroadcastSequence","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncBroadcastSequence"}}}