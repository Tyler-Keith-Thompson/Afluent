{"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"tryCatch"},{"text":"<","kind":"text"},{"text":"D","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"E","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"error","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"E"},{"text":", ","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"handler"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"E"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":") -> "},{"text":"AsyncSequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Catch","preciseIdentifier":"s:7Afluent14AsyncSequencesO5CatchV","text":"Catch"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Sendable","preciseIdentifier":"s:s8SendableP"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:Sci","text":"AsyncSequence","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SQ","text":"Equatable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"E"},{"text":" : ","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sci7ElementQa","kind":"typeIdentifier","text":"Element"}],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"name":"error","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The specific error type to catch."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"A closure that takes an ","type":"text"},{"type":"codeVoice","code":"Error"},{"type":"text","text":" and returns an "},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":", potentially throwing an error."}]}],"name":"handler"}],"kind":"parameters"},{"content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"inlineContent":[{"text":"An ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"text":" that will try to catch and handle the specific error.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/TimerSequence\/tryCatch(_:_:)"},"kind":"symbol","variants":[{"paths":["\/documentation\/afluent\/asyncsequences\/timersequence\/trycatch(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Tries to catch a specific type of error emitted by the upstream ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" and handles them using the provided throwing closure."}],"metadata":{"modules":[{"name":"Afluent","relatedModules":["_Concurrency"]}],"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/CatchSequence.swift#L109","fileName":"CatchSequence.swift"},"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"tryCatch"},{"text":"<","kind":"text"},{"text":"D","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"E"},{"kind":"text","text":">("},{"text":"E","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"D","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Catch","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO5CatchV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"D","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","roleHeading":"Instance Method","extendedModule":"_Concurrency","title":"tryCatch(_:_:)","conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"externalID":"s:Sci7Afluents8SendableRzrlE8tryCatchyAA14AsyncSequencesO0D0Vy_xqd__Gqd_0__qd__qd_0_YaYbKctsABRd__SciRd__SQRd_0_s5ErrorRd_0_7ElementQyd__AJRtzr0_lF::SYNTHESIZED::s:7Afluent14AsyncSequencesO13TimerSequenceV","symbolKind":"method"},"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/TimerSequence","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/TimerSequence\/AsyncSequence-Implementations"]]},"sections":[],"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/TimerSequence/tryCatch(_:_:)":{"url":"\/documentation\/afluent\/asyncsequences\/timersequence\/trycatch(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"tryCatch"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"D"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"E"},{"kind":"text","text":">("},{"text":"E","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"kind":"typeIdentifier","text":"E"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier","text":"AsyncSequences"},{"kind":"text","text":"."},{"text":"Catch","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO5CatchV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":">","kind":"text"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}]},"title":"tryCatch(_:_:)","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/TimerSequence\/tryCatch(_:_:)","kind":"symbol","abstract":[{"type":"text","text":"Tries to catch a specific type of error emitted by the upstream "},{"type":"codeVoice","code":"AsyncSequence"},{"text":" and handles them using the provided throwing closure.","type":"text"}],"type":"topic"},"doc://Afluent/documentation/Afluent":{"title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol","abstract":[],"type":"topic","role":"collection","url":"\/documentation\/afluent"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"title":"AsyncSequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","type":"topic","abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncSequences","kind":"identifier"}],"navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences"},"doc://Afluent/documentation/Afluent/AsyncSequences/TimerSequence/AsyncSequence-Implementations":{"abstract":[],"role":"collectionGroup","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/TimerSequence\/AsyncSequence-Implementations","title":"AsyncSequence Implementations","type":"topic","kind":"article","url":"\/documentation\/afluent\/asyncsequences\/timersequence\/asyncsequence-implementations"},"doc://Afluent/documentation/Afluent/AsyncSequences/TimerSequence":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/TimerSequence","url":"\/documentation\/afluent\/asyncsequences\/timersequence","abstract":[{"type":"text","text":"A sequence that repeatedly emits an instant on a given interval."}],"type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"TimerSequence"}],"title":"AsyncSequences.TimerSequence","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"TimerSequence","kind":"identifier"}],"role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/Catch":{"url":"\/documentation\/afluent\/asyncsequences\/catch","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Catch","kind":"identifier"}],"title":"AsyncSequences.Catch","role":"symbol","abstract":[],"kind":"symbol","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Catch","navigatorTitle":[{"kind":"identifier","text":"Catch"}]}}}