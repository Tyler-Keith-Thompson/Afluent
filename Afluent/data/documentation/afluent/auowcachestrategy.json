{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy"},"relationshipsSections":[{"title":"Conforming Types","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CacheUntilCompletionOrCancellation","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CancelAndRetry"],"type":"conformingTypes","kind":"relationships"}],"topicSections":[{"title":"Instance Methods","anchor":"Instance-Methods","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy\/handle(unitOfWork:keyedBy:storedIn:)"]},{"title":"Type Properties","anchor":"Type-Properties","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy\/cacheUntilCompletionOrCancellation","doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy\/cancelAndRestart"]}],"sections":[],"abstract":[{"type":"text","text":"Represents a cache strategy for use with "},{"type":"reference","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","isActive":true},{"type":"text","text":"."}],"metadata":{"externalID":"s:7Afluent17AUOWCacheStrategyP","modules":[{"name":"Afluent"}],"title":"AUOWCacheStrategy","symbolKind":"protocol","roleHeading":"Protocol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AUOWCacheStrategy","kind":"identifier"}],"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/AUOWCacheStrategies\/AUOWCacheStrategy.swift#L33","fileName":"AUOWCacheStrategy.swift"},"navigatorTitle":[{"text":"AUOWCacheStrategy","kind":"identifier"}]},"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AUOWCacheStrategy"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"type":"heading","level":2,"anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Conforming types determine how units of work are stored, reused, or cancelled within the cache."}]},{"type":"aside","style":"tip","name":"Tip","content":[{"type":"paragraph","inlineContent":[{"text":"Use or extend built-in strategies like ","type":"text"},{"code":"AUOWCache.CancelAndRetry","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"AUOWCache.CacheUntilCompletionOrCancellation","type":"codeVoice"},{"text":" for common needs, or create a custom strategy for specialized scenarios.","type":"text"}]}]},{"type":"heading","level":2,"anchor":"Example","text":"Example"},{"type":"codeListing","syntax":"swift","code":["struct NeverCacheStrategy: AUOWCacheStrategy {","    func handle<A: AsynchronousUnitOfWork>(unitOfWork: A, keyedBy key: Int, storedIn cache: AUOWCache) -> AnyAsynchronousUnitOfWork<A.Success> {","        unitOfWork.eraseToAnyUnitOfWork()","    }","}","","let cache = AUOWCache()","let myStrategy = NeverCacheStrategy()","let task = DeferredTask { \"value\" }","    .shareFromCache(cache, strategy: myStrategy)","","\/\/ Alternatively, use built-in strategies like:","\/\/ .shareFromCache(cache, strategy: .cancelAndRestart)"]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/afluent\/auowcachestrategy"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Afluent/documentation/Afluent":{"abstract":[],"url":"\/documentation\/afluent","role":"collection","type":"topic","kind":"symbol","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent"},"doc://Afluent/documentation/Afluent/AUOWCacheStrategy":{"abstract":[{"type":"text","text":"Represents a cache strategy for use with "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache"},{"type":"text","text":"."}],"url":"\/documentation\/afluent\/auowcachestrategy","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AUOWCacheStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"AUOWCacheStrategy","kind":"identifier"}],"type":"topic","role":"symbol","title":"AUOWCacheStrategy"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/CancelAndRetry":{"abstract":[{"text":"A caching strategy that cancels any existing in-flight unit of work for a key, then starts the new one.","type":"text"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"CancelAndRetry"}],"url":"\/documentation\/afluent\/asynchronousunitofworkcache\/cancelandretry","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CancelAndRetry","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CancelAndRetry"}],"role":"symbol","title":"AsynchronousUnitOfWorkCache.CancelAndRetry"},"doc://Afluent/documentation/Afluent/AUOWCache":{"abstract":[],"role":"symbol","title":"AUOWCache","kind":"symbol","navigatorTitle":[{"text":"AUOWCache","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","url":"\/documentation\/afluent\/auowcache","type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AUOWCache","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/CacheUntilCompletionOrCancellation":{"title":"AsynchronousUnitOfWorkCache.CacheUntilCompletionOrCancellation","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CacheUntilCompletionOrCancellation","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CacheUntilCompletionOrCancellation","navigatorTitle":[{"text":"CacheUntilCompletionOrCancellation","kind":"identifier"}],"role":"symbol","type":"topic","kind":"symbol","abstract":[{"text":"A caching strategy that retains a unit of work in the cache until it completes, fails, or is cancelled.","type":"text"}],"url":"\/documentation\/afluent\/asynchronousunitofworkcache\/cacheuntilcompletionorcancellation"},"doc://Afluent/documentation/Afluent/AUOWCacheStrategy/cacheUntilCompletionOrCancellation":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy\/cacheUntilCompletionOrCancellation","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cacheUntilCompletionOrCancellation","kind":"identifier"},{"text":": ","kind":"text"},{"text":"AsynchronousUnitOfWorkCache","preciseIdentifier":"s:7Afluent27AsynchronousUnitOfWorkCacheC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"CacheUntilCompletionOrCancellation","preciseIdentifier":"s:7Afluent27AsynchronousUnitOfWorkCacheC0F29UntilCompletionOrCancellationV","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/afluent\/auowcachestrategy\/cacheuntilcompletionorcancellation","conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"AsynchronousUnitOfWorkCache.CacheUntilCompletionOrCancellation","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"title":"cacheUntilCompletionOrCancellation","abstract":[{"type":"text","text":"Returns the "},{"code":".cacheUntilCompletionOrCancellation","type":"codeVoice"},{"type":"text","text":" strategy."}],"role":"symbol"},"doc://Afluent/documentation/Afluent/AUOWCacheStrategy/handle(unitOfWork:keyedBy:storedIn:)":{"required":true,"abstract":[{"type":"text","text":"Performs strategy-specific logic to store or retrieve an asynchronous unit of work in the cache."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handle","kind":"identifier"},{"text":"<","kind":"text"},{"text":"A","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"unitOfWork","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"keyedBy","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"storedIn"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent9AUOWCachea","text":"AUOWCache"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent25AnyAsynchronousUnitOfWorkV","text":"AnyAsynchronousUnitOfWork"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa","text":"Success"},{"kind":"text","text":">"}],"url":"\/documentation\/afluent\/auowcachestrategy\/handle(unitofwork:keyedby:storedin:)","title":"handle(unitOfWork:keyedBy:storedIn:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy\/handle(unitOfWork:keyedBy:storedIn:)","type":"topic"},"doc://Afluent/documentation/Afluent/AUOWCacheStrategy/cancelAndRestart":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"cancelAndRestart"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AsynchronousUnitOfWorkCache","preciseIdentifier":"s:7Afluent27AsynchronousUnitOfWorkCacheC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"CancelAndRetry","preciseIdentifier":"s:7Afluent27AsynchronousUnitOfWorkCacheC14CancelAndRetryV"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"AsynchronousUnitOfWorkCache.CancelAndRetry"},{"text":".","type":"text"}]},"type":"topic","title":"cancelAndRestart","kind":"symbol","abstract":[{"text":"Returns the ","type":"text"},{"type":"codeVoice","code":".cancelAndRestart"},{"type":"text","text":" strategy."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy\/cancelAndRestart","role":"symbol","url":"\/documentation\/afluent\/auowcachestrategy\/cancelandrestart"}}}