{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/auowcachestrategy"]}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AUOWCacheStrategy","kind":"identifier"}],"languages":["swift"]}]}],"metadata":{"role":"symbol","symbolKind":"protocol","modules":[{"name":"Afluent"}],"roleHeading":"Protocol","title":"AUOWCacheStrategy","externalID":"s:7Afluent17AUOWCacheStrategyP","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AUOWCacheStrategy"}],"navigatorTitle":[{"text":"AUOWCacheStrategy","kind":"identifier"}],"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/AUOWCacheStrategies\/AUOWCacheStrategy.swift#L11","fileName":"AUOWCacheStrategy.swift"}},"sections":[],"kind":"symbol","abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy"},{"text":" represents the available caching strategies for the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache"},{"text":".","type":"text"}],"relationshipsSections":[{"title":"Conforming Types","kind":"relationships","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CacheUntilCompletionOrCancellation","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CancelAndRetry"],"type":"conformingTypes"}],"topicSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy\/handle(unitOfWork:keyedBy:storedIn:)"],"anchor":"Instance-Methods","generated":true,"title":"Instance Methods"},{"anchor":"Type-Properties","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy\/cacheUntilCompletionOrCancellation","doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy\/cancelAndRestart"],"title":"Type Properties"}],"references":{"doc://Afluent/documentation/Afluent":{"title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol","abstract":[],"type":"topic","role":"collection","url":"\/documentation\/afluent"},"doc://Afluent/documentation/Afluent/AUOWCacheStrategy":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AUOWCacheStrategy"}],"abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy"},{"type":"text","text":" represents the available caching strategies for the "},{"type":"reference","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","isActive":true},{"type":"text","text":"."}],"title":"AUOWCacheStrategy","url":"\/documentation\/afluent\/auowcachestrategy","type":"topic","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AUOWCacheStrategy","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AUOWCache":{"url":"\/documentation\/afluent\/auowcache","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","abstract":[],"type":"topic","kind":"symbol","navigatorTitle":[{"text":"AUOWCache","kind":"identifier"}],"title":"AUOWCache","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AUOWCache","kind":"identifier"}],"role":"symbol"},"doc://Afluent/documentation/Afluent/AUOWCacheStrategy/handle(unitOfWork:keyedBy:storedIn:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"handle","kind":"identifier"},{"text":"<","kind":"text"},{"text":"A","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"unitOfWork"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"A"},{"text":", ","kind":"text"},{"text":"keyedBy","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"text":"storedIn","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AUOWCache","preciseIdentifier":"s:7Afluent9AUOWCachea"},{"text":") -> ","kind":"text"},{"text":"AnyAsynchronousUnitOfWork","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent25AnyAsynchronousUnitOfWorkV"},{"text":"<","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa","text":"Success","kind":"typeIdentifier"},{"kind":"text","text":">"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy\/handle(unitOfWork:keyedBy:storedIn:)","abstract":[{"text":"A caching strategy implementation that handles some work, keyed by some hashed key, which may be stored in or retrieved from the passed cache.","type":"text"}],"url":"\/documentation\/afluent\/auowcachestrategy\/handle(unitofwork:keyedby:storedin:)","title":"handle(unitOfWork:keyedBy:storedIn:)","required":true,"role":"symbol","kind":"symbol","type":"topic"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/CacheUntilCompletionOrCancellation":{"kind":"symbol","type":"topic","navigatorTitle":[{"text":"CacheUntilCompletionOrCancellation","kind":"identifier"}],"role":"symbol","url":"\/documentation\/afluent\/asynchronousunitofworkcache\/cacheuntilcompletionorcancellation","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CacheUntilCompletionOrCancellation","title":"AsynchronousUnitOfWorkCache.CacheUntilCompletionOrCancellation","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"CacheUntilCompletionOrCancellation","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/CancelAndRetry":{"type":"topic","title":"AsynchronousUnitOfWorkCache.CancelAndRetry","url":"\/documentation\/afluent\/asynchronousunitofworkcache\/cancelandretry","navigatorTitle":[{"text":"CancelAndRetry","kind":"identifier"}],"kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CancelAndRetry"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CancelAndRetry","abstract":[]},"doc://Afluent/documentation/Afluent/AUOWCacheStrategy/cancelAndRestart":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy\/cancelAndRestart","url":"\/documentation\/afluent\/auowcachestrategy\/cancelandrestart","role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" is "},{"code":"AsynchronousUnitOfWorkCache.CancelAndRetry","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"kind":"symbol","abstract":[{"text":"This strategy indicates that any existing work should be cancelled before restarting the upstream work again.","type":"text"}],"title":"cancelAndRestart","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"cancelAndRestart","kind":"identifier"},{"kind":"text","text":": "},{"text":"AsynchronousUnitOfWorkCache","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent27AsynchronousUnitOfWorkCacheC"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent27AsynchronousUnitOfWorkCacheC14CancelAndRetryV","text":"CancelAndRetry","kind":"typeIdentifier"}],"type":"topic"},"doc://Afluent/documentation/Afluent/AUOWCacheStrategy/cacheUntilCompletionOrCancellation":{"role":"symbol","title":"cacheUntilCompletionOrCancellation","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" is "},{"type":"codeVoice","code":"AsynchronousUnitOfWorkCache.CacheUntilCompletionOrCancellation"},{"text":".","type":"text"}]},"url":"\/documentation\/afluent\/auowcachestrategy\/cacheuntilcompletionorcancellation","abstract":[{"text":"With the ","type":"text"},{"type":"codeVoice","code":".cacheUntilCompletionOrCancellation"},{"type":"text","text":" strategy, the cache"},{"type":"text","text":" "},{"text":"retains the result until the unit of work completes or is cancelled.","type":"text"}],"type":"topic","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"cacheUntilCompletionOrCancellation"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Afluent27AsynchronousUnitOfWorkCacheC","text":"AsynchronousUnitOfWorkCache","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Afluent27AsynchronousUnitOfWorkCacheC0F29UntilCompletionOrCancellationV","text":"CacheUntilCompletionOrCancellation","kind":"typeIdentifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy\/cacheUntilCompletionOrCancellation","kind":"symbol"}}}