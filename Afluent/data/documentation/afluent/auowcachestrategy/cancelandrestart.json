{"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"type":"text","text":"This strategy indicates that any existing work should be cancelled before restarting the upstream work again."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy\/cancelAndRestart"},"kind":"symbol","variants":[{"paths":["\/documentation\/afluent\/auowcachestrategy\/cancelandrestart"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"cancelAndRestart","kind":"identifier"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","text":"AsynchronousUnitOfWorkCache","preciseIdentifier":"s:7Afluent27AsynchronousUnitOfWorkCacheC","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"CancelAndRetry","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CancelAndRetry","preciseIdentifier":"s:7Afluent27AsynchronousUnitOfWorkCacheC14CancelAndRetryV"},{"text":" { ","kind":"text"},{"kind":"keyword","text":"get"},{"text":" }","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy"]]},"sections":[],"metadata":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" is "},{"type":"codeVoice","code":"AsynchronousUnitOfWorkCache.CancelAndRetry"},{"type":"text","text":"."}]},"role":"symbol","roleHeading":"Type Property","externalID":"s:7Afluent17AUOWCacheStrategyPA2A27AsynchronousUnitOfWorkCacheC14CancelAndRetryVRszrlE06cancelJ7RestartAGvpZ","modules":[{"name":"Afluent"}],"extendedModule":"Afluent","symbolKind":"property","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cancelAndRestart"},{"kind":"text","text":": "},{"text":"AsynchronousUnitOfWorkCache","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent27AsynchronousUnitOfWorkCacheC"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent27AsynchronousUnitOfWorkCacheC14CancelAndRetryV","text":"CancelAndRetry","kind":"typeIdentifier"}],"title":"cancelAndRestart","remoteSource":{"fileName":"AUOWCache+CancelAndRetry.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/AUOWCacheStrategies\/AUOWCache+CancelAndRetry.swift#L38"}},"references":{"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/CancelAndRetry":{"url":"\/documentation\/afluent\/asynchronousunitofworkcache\/cancelandretry","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"CancelAndRetry","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CancelAndRetry","abstract":[],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"CancelAndRetry","kind":"identifier"}],"title":"AsynchronousUnitOfWorkCache.CancelAndRetry"},"doc://Afluent/documentation/Afluent/AUOWCacheStrategy":{"navigatorTitle":[{"kind":"identifier","text":"AUOWCacheStrategy"}],"kind":"symbol","abstract":[{"type":"reference","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy","isActive":true},{"type":"text","text":" represents the available caching strategies for the "},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","type":"reference","isActive":true},{"type":"text","text":"."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy","title":"AUOWCacheStrategy","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"AUOWCacheStrategy","kind":"identifier"}],"url":"\/documentation\/afluent\/auowcachestrategy"},"doc://Afluent/documentation/Afluent/AUOWCacheStrategy/cancelAndRestart":{"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"cancelAndRestart","kind":"identifier"},{"text":": ","kind":"text"},{"text":"AsynchronousUnitOfWorkCache","preciseIdentifier":"s:7Afluent27AsynchronousUnitOfWorkCacheC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent27AsynchronousUnitOfWorkCacheC14CancelAndRetryV","text":"CancelAndRetry"}],"url":"\/documentation\/afluent\/auowcachestrategy\/cancelandrestart","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"This strategy indicates that any existing work should be cancelled before restarting the upstream work again."}],"title":"cancelAndRestart","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy\/cancelAndRestart","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" is "},{"type":"codeVoice","code":"AsynchronousUnitOfWorkCache.CancelAndRetry"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"doc://Afluent/documentation/Afluent":{"kind":"symbol","role":"collection","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","abstract":[],"type":"topic","url":"\/documentation\/afluent"},"doc://Afluent/documentation/Afluent/AUOWCache":{"url":"\/documentation\/afluent\/auowcache","title":"AUOWCache","navigatorTitle":[{"text":"AUOWCache","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","kind":"symbol","role":"symbol","type":"topic","abstract":[],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AUOWCache","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache":{"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","abstract":[{"type":"text","text":"A cache for asynchronous unit of work types."},{"type":"text","text":" "},{"text":"A stored unit of work should be both ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":" and a reference type (e.g. a unit of work shared via the "},{"type":"reference","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/share()","isActive":true},{"type":"text","text":" operator)."}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWorkCache","kind":"identifier"}],"role":"symbol","url":"\/documentation\/afluent\/asynchronousunitofworkcache","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWorkCache"}],"title":"AsynchronousUnitOfWorkCache"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork/share()":{"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/share()","abstract":[{"text":"Shares the upstream ","type":"text"},{"type":"codeVoice","code":"AsynchronousUnitOfWork"},{"type":"text","text":" among multiple downstream subscribers."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"share"},{"text":"() -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","text":"AsynchronousUnitOfWork","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa","text":"Success","kind":"typeIdentifier"},{"text":"> & ","kind":"text"},{"text":"Actor","preciseIdentifier":"s:ScA","kind":"typeIdentifier"}],"role":"symbol","url":"\/documentation\/afluent\/asynchronousunitofwork\/share()","kind":"symbol","title":"share()"}}}