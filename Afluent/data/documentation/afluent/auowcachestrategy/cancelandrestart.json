{"sections":[],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy\/cancelAndRestart","interfaceLanguage":"swift"},"abstract":[{"text":"Returns the ","type":"text"},{"code":".cancelAndRestart","type":"codeVoice"},{"text":" strategy.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/auowcachestrategy\/cancelandrestart"]}],"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"cancelAndRestart"},{"kind":"text","text":": "},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","preciseIdentifier":"s:7Afluent27AsynchronousUnitOfWorkCacheC","kind":"typeIdentifier","text":"AsynchronousUnitOfWorkCache"},{"kind":"text","text":"."},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CancelAndRetry","preciseIdentifier":"s:7Afluent27AsynchronousUnitOfWorkCacheC14CancelAndRetryV","kind":"typeIdentifier","text":"CancelAndRetry"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"text":"Use this to cancel any in-flight unit of work for a given key before starting the new one. See ","type":"text"},{"type":"codeVoice","code":"AUOWCache.CancelAndRetry"},{"text":" for a usage example.","type":"text"}],"type":"paragraph"}]}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"title":"cancelAndRestart","symbolKind":"property","remoteSource":{"fileName":"AUOWCache+CancelAndRetry.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/AUOWCacheStrategies\/AUOWCache+CancelAndRetry.swift#L84"},"modules":[{"name":"Afluent"}],"extendedModule":"Afluent","roleHeading":"Type Property","externalID":"s:7Afluent17AUOWCacheStrategyPA2A27AsynchronousUnitOfWorkCacheC14CancelAndRetryVRszrlE06cancelJ7RestartAGvpZ","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cancelAndRestart","kind":"identifier"},{"text":": ","kind":"text"},{"text":"AsynchronousUnitOfWorkCache","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent27AsynchronousUnitOfWorkCacheC"},{"text":".","kind":"text"},{"text":"CancelAndRetry","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent27AsynchronousUnitOfWorkCacheC14CancelAndRetryV"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" is "},{"code":"AsynchronousUnitOfWorkCache.CancelAndRetry","type":"codeVoice"},{"type":"text","text":"."}]}},"references":{"doc://Afluent/documentation/Afluent/AUOWCacheStrategy":{"abstract":[{"type":"text","text":"Represents a cache strategy for use with "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache"},{"type":"text","text":"."}],"url":"\/documentation\/afluent\/auowcachestrategy","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AUOWCacheStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"AUOWCacheStrategy","kind":"identifier"}],"type":"topic","role":"symbol","title":"AUOWCacheStrategy"},"doc://Afluent/documentation/Afluent/AUOWCache":{"abstract":[],"role":"symbol","title":"AUOWCache","kind":"symbol","navigatorTitle":[{"text":"AUOWCache","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","url":"\/documentation\/afluent\/auowcache","type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AUOWCache","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AUOWCacheStrategy/cancelAndRestart":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"cancelAndRestart"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AsynchronousUnitOfWorkCache","preciseIdentifier":"s:7Afluent27AsynchronousUnitOfWorkCacheC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"CancelAndRetry","preciseIdentifier":"s:7Afluent27AsynchronousUnitOfWorkCacheC14CancelAndRetryV"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"AsynchronousUnitOfWorkCache.CancelAndRetry"},{"text":".","type":"text"}]},"type":"topic","title":"cancelAndRestart","kind":"symbol","abstract":[{"text":"Returns the ","type":"text"},{"type":"codeVoice","code":".cancelAndRestart"},{"type":"text","text":" strategy."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy\/cancelAndRestart","role":"symbol","url":"\/documentation\/afluent\/auowcachestrategy\/cancelandrestart"},"doc://Afluent/documentation/Afluent":{"abstract":[],"url":"\/documentation\/afluent","role":"collection","type":"topic","kind":"symbol","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache":{"kind":"symbol","type":"topic","navigatorTitle":[{"text":"AsynchronousUnitOfWorkCache","kind":"identifier"}],"url":"\/documentation\/afluent\/asynchronousunitofworkcache","abstract":[{"type":"text","text":"A thread-safe cache for storing and sharing asynchronous units of work."}],"title":"AsynchronousUnitOfWorkCache","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWorkCache","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/CancelAndRetry":{"abstract":[{"text":"A caching strategy that cancels any existing in-flight unit of work for a key, then starts the new one.","type":"text"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"CancelAndRetry"}],"url":"\/documentation\/afluent\/asynchronousunitofworkcache\/cancelandretry","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/CancelAndRetry","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CancelAndRetry"}],"role":"symbol","title":"AsynchronousUnitOfWorkCache.CancelAndRetry"}}}