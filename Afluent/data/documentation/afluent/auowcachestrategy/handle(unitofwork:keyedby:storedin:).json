{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/auowcachestrategy\/handle(unitofwork:keyedby:storedin:)"]}],"metadata":{"required":true,"roleHeading":"Instance Method","symbolKind":"method","role":"symbol","externalID":"s:7Afluent17AUOWCacheStrategyP6handle10unitOfWork7keyedBy8storedInAA019AnyAsynchronousUnitfG0Vy7SuccessQyd__Gqd___SiAA0mnfG5CacheCtAA0mnfG0Rd__lF","modules":[{"name":"Afluent"}],"title":"handle(unitOfWork:keyedBy:storedIn:)","remoteSource":{"fileName":"AUOWCacheStrategy.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/AUOWCacheStrategies\/AUOWCacheStrategy.swift#L13"},"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handle"},{"kind":"text","text":"<"},{"text":"A","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"unitOfWork","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"keyedBy","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"storedIn"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AUOWCache","preciseIdentifier":"s:7Afluent9AUOWCachea"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent25AnyAsynchronousUnitOfWorkV","text":"AnyAsynchronousUnitOfWork","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa","text":"Success","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy\/handle(unitOfWork:keyedBy:storedIn:)","interfaceLanguage":"swift"},"kind":"symbol","abstract":[{"type":"text","text":"A caching strategy implementation that handles some work, keyed by some hashed key, which may be stored in or retrieved from the passed cache."}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handle","kind":"identifier"},{"kind":"text","text":"<"},{"text":"A","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"unitOfWork"},{"kind":"text","text":": "},{"text":"A","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"keyedBy","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"storedIn","kind":"externalParam"},{"kind":"text","text":" "},{"text":"cache","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"AUOWCache","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent9AUOWCachea","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache"},{"text":") -> ","kind":"text"},{"text":"AnyAsynchronousUnitOfWork","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent25AnyAsynchronousUnitOfWorkV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"A"},{"text":".","kind":"text"},{"text":"Success","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/Success","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"AsynchronousUnitOfWork","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP"}]}]}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy"]]},"references":{"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork":{"abstract":[{"type":"text","text":"A unit of work that performs type erasure by wrapping another unit of work."}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AnyAsynchronousUnitOfWork","kind":"identifier"}],"kind":"symbol","type":"topic","title":"AnyAsynchronousUnitOfWork","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","url":"\/documentation\/afluent\/anyasynchronousunitofwork","navigatorTitle":[{"kind":"identifier","text":"AnyAsynchronousUnitOfWork"}]},"doc://Afluent/documentation/Afluent/AUOWCacheStrategy/handle(unitOfWork:keyedBy:storedIn:)":{"url":"\/documentation\/afluent\/auowcachestrategy\/handle(unitofwork:keyedby:storedin:)","kind":"symbol","title":"handle(unitOfWork:keyedBy:storedIn:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handle"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"A"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"unitOfWork"},{"kind":"text","text":": "},{"text":"A","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"keyedBy"},{"kind":"text","text":": "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"storedIn","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AUOWCache","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent9AUOWCachea"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent25AnyAsynchronousUnitOfWorkV","text":"AnyAsynchronousUnitOfWork","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"A","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa","text":"Success","kind":"typeIdentifier"},{"kind":"text","text":">"}],"role":"symbol","abstract":[{"type":"text","text":"A caching strategy implementation that handles some work, keyed by some hashed key, which may be stored in or retrieved from the passed cache."}],"type":"topic","required":true,"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy\/handle(unitOfWork:keyedBy:storedIn:)"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"url":"\/documentation\/afluent\/asynchronousunitofwork","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","type":"topic","abstract":[{"type":"text","text":"Represents an asynchronous unit of work."}],"title":"AsynchronousUnitOfWork","navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWork"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/AUOWCache":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","title":"AUOWCache","type":"topic","kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AUOWCache"}],"navigatorTitle":[{"text":"AUOWCache","kind":"identifier"}],"abstract":[],"url":"\/documentation\/afluent\/auowcache","role":"symbol"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork/Success":{"kind":"symbol","required":true,"type":"topic","abstract":[{"type":"text","text":"The type of data the unit of work will produce if it succeeds."}],"url":"\/documentation\/afluent\/asynchronousunitofwork\/success","role":"symbol","title":"Success","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/Success","fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Success"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"}]},"doc://Afluent/documentation/Afluent/AUOWCacheStrategy":{"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy","kind":"symbol","abstract":[{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy","type":"reference","isActive":true},{"text":" represents the available caching strategies for the ","type":"text"},{"type":"reference","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","isActive":true},{"text":".","type":"text"}],"role":"symbol","title":"AUOWCacheStrategy","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AUOWCacheStrategy"}],"navigatorTitle":[{"text":"AUOWCacheStrategy","kind":"identifier"}],"url":"\/documentation\/afluent\/auowcachestrategy"},"doc://Afluent/documentation/Afluent":{"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent","type":"topic","url":"\/documentation\/afluent","kind":"symbol","title":"Afluent","role":"collection"}}}