{"topicSections":[{"generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/Clock"],"anchor":"Associated-Types","title":"Associated Types"},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/backoff(clock:durationUnit:)"],"anchor":"Instance-Methods","title":"Instance Methods","generated":true},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/binaryExponential(maxCount:maxDelay:)","doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/exponential(base:maxCount:maxDelay:)"],"title":"Type Methods","anchor":"Type-Methods","generated":true}],"relationshipsSections":[{"type":"inheritsFrom","title":"Inherits From","identifiers":["doc:\/\/Afluent\/s8SendableP"],"kind":"relationships"},{"title":"Conforming Types","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy"],"kind":"relationships","type":"conformingTypes"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/backoffstrategy"]}],"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"BackoffStrategy","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/Clock","text":"Clock","preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa"},{"text":"> : ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Types conforming to "},{"type":"codeVoice","code":"BackoffStrategy"},{"type":"text","text":" must implement logic for calculating delays between retry attempts."},{"type":"text","text":" "},{"text":"The delay is determined using a clock and a duration unit.","type":"text"}]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy"},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"metadata":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BackoffStrategy","kind":"identifier"}],"symbolKind":"protocol","platforms":[{"introducedAt":"16.0","beta":false,"deprecated":false,"unavailable":false,"name":"iOS"},{"beta":false,"deprecated":false,"unavailable":false,"name":"macOS","introducedAt":"13.0"},{"deprecated":false,"introducedAt":"16.0","unavailable":false,"name":"tvOS","beta":false},{"name":"watchOS","unavailable":false,"introducedAt":"9.0","deprecated":false,"beta":false}],"title":"BackoffStrategy","navigatorTitle":[{"text":"BackoffStrategy","kind":"identifier"}],"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/RetryStrategies\/RetryByBackoffStrategy.swift#L70","fileName":"RetryByBackoffStrategy.swift"},"modules":[{"name":"Afluent"}],"externalID":"s:7Afluent15BackoffStrategyP","role":"symbol","roleHeading":"Protocol"},"abstract":[{"type":"text","text":"A protocol for implementing custom backoff strategies in retry mechanisms."}],"sections":[],"references":{"doc://Afluent/documentation/Afluent/BackoffStrategy":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"BackoffStrategy","kind":"identifier"}],"url":"\/documentation\/afluent\/backoffstrategy","navigatorTitle":[{"kind":"identifier","text":"BackoffStrategy"}],"title":"BackoffStrategy","abstract":[{"type":"text","text":"A protocol for implementing custom backoff strategies in retry mechanisms."}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","type":"topic"},"doc://Afluent/documentation/Afluent/BackoffStrategy/Clock":{"title":"Clock","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/Clock","kind":"symbol","required":true,"fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"text":"Clock","kind":"identifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:12_Concurrency5ClockP","kind":"typeIdentifier","text":"Clock"}],"abstract":[],"url":"\/documentation\/afluent\/backoffstrategy\/clock","type":"topic","role":"symbol"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy":{"url":"\/documentation\/afluent\/exponentialbackoffstrategy","abstract":[{"text":"An exponential backoff strategy for retrying operations.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","title":"ExponentialBackoffStrategy","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ExponentialBackoffStrategy"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"ExponentialBackoffStrategy"}]},"doc://Afluent/documentation/Afluent/BackoffStrategy/exponential(base:maxCount:maxDelay:)":{"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" is "},{"code":"ExponentialBackoffStrategy<ContinuousClock>","type":"codeVoice"},{"type":"text","text":"."}]},"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"exponential","kind":"identifier"},{"text":"(","kind":"text"},{"text":"base","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"maxCount"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"maxDelay","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ContinuousClock","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency15ContinuousClockV"},{"text":".","kind":"text"},{"preciseIdentifier":"s:12_Concurrency15ContinuousClockV8Durationa","text":"Duration","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"ExponentialBackoffStrategy","preciseIdentifier":"s:7Afluent26ExponentialBackoffStrategyC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Clock","preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa"},{"text":">","kind":"text"}],"role":"symbol","type":"topic","abstract":[{"type":"text","text":"Creates an exponential backoff strategy with a configurable base and maximum retry count."}],"kind":"symbol","title":"exponential(base:maxCount:maxDelay:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/exponential(base:maxCount:maxDelay:)","url":"\/documentation\/afluent\/backoffstrategy\/exponential(base:maxcount:maxdelay:)"},"doc://Afluent/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/Afluent\/s8SendableP","title":"Swift.Sendable"},"doc://Afluent/documentation/Afluent/BackoffStrategy/backoff(clock:durationUnit:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"backoff"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"clock","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Clock","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa"},{"text":", ","kind":"text"},{"text":"durationUnit","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Clock","preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa"},{"text":".","kind":"text"},{"preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa","text":"Duration","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/afluent\/backoffstrategy\/backoff(clock:durationunit:)","required":true,"title":"backoff(clock:durationUnit:)","abstract":[{"type":"text","text":"Calculates the delay between retries using a clock and a duration unit."}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/backoff(clock:durationUnit:)","type":"topic"},"doc://Afluent/documentation/Afluent":{"abstract":[],"title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","type":"topic","kind":"symbol","role":"collection","url":"\/documentation\/afluent"},"doc://Afluent/documentation/Afluent/BackoffStrategy/binaryExponential(maxCount:maxDelay:)":{"url":"\/documentation\/afluent\/backoffstrategy\/binaryexponential(maxcount:maxdelay:)","type":"topic","role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" is "},{"code":"ExponentialBackoffStrategy<ContinuousClock>","type":"codeVoice"},{"type":"text","text":"."}]},"kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"binaryExponential","kind":"identifier"},{"kind":"text","text":"("},{"text":"maxCount","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"maxDelay","kind":"externalParam"},{"kind":"text","text":": "},{"text":"ContinuousClock","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency15ContinuousClockV"},{"kind":"text","text":"."},{"text":"Duration","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency15ContinuousClockV8Durationa"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent26ExponentialBackoffStrategyC","text":"ExponentialBackoffStrategy","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Clock","preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa"},{"text":">","kind":"text"}],"abstract":[{"text":"Creates a binary exponential backoff strategy with a maximum retry count.","type":"text"}],"title":"binaryExponential(maxCount:maxDelay:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/binaryExponential(maxCount:maxDelay:)"}}}