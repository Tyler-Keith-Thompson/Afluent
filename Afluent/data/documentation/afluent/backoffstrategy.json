{"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"BackoffStrategy","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Clock","preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/Clock"},{"kind":"text","text":"> : "},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"type":"heading","anchor":"overview","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"text":"Types conforming to ","type":"text"},{"type":"codeVoice","code":"BackoffStrategy"},{"text":" must implement logic for calculating delays between retry attempts.","type":"text"},{"text":" ","type":"text"},{"text":"The delay is determined using a clock and a duration unit.","type":"text"}]}]}],"metadata":{"platforms":[{"name":"iOS","introducedAt":"16.0","unavailable":false,"deprecated":false,"beta":false},{"deprecated":false,"unavailable":false,"introducedAt":"13.0","name":"macOS","beta":false},{"introducedAt":"16.0","name":"tvOS","unavailable":false,"beta":false,"deprecated":false},{"name":"watchOS","unavailable":false,"introducedAt":"9.0","beta":false,"deprecated":false}],"role":"symbol","title":"BackoffStrategy","symbolKind":"protocol","remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/RetryStrategies\/RetryByBackoffStrategy.swift#L70","fileName":"RetryByBackoffStrategy.swift"},"navigatorTitle":[{"kind":"identifier","text":"BackoffStrategy"}],"externalID":"s:7Afluent15BackoffStrategyP","modules":[{"name":"Afluent"}],"roleHeading":"Protocol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BackoffStrategy"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy"},"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"paths":["\/documentation\/afluent\/backoffstrategy"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"relationshipsSections":[{"identifiers":["doc:\/\/Afluent\/s8SendableP"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"},{"type":"conformingTypes","kind":"relationships","title":"Conforming Types","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy"]}],"abstract":[{"type":"text","text":"A protocol for implementing custom backoff strategies in retry mechanisms."}],"topicSections":[{"generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/Clock"],"anchor":"Associated-Types","title":"Associated Types"},{"generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/backoff(clock:durationUnit:)"],"title":"Instance Methods","anchor":"Instance-Methods"},{"title":"Type Methods","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/binaryExponential(maxCount:maxDelay:)","doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/exponential(base:maxCount:maxDelay:)"],"anchor":"Type-Methods"}],"kind":"symbol","references":{"doc://Afluent/documentation/Afluent/BackoffStrategy":{"navigatorTitle":[{"kind":"identifier","text":"BackoffStrategy"}],"title":"BackoffStrategy","kind":"symbol","url":"\/documentation\/afluent\/backoffstrategy","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","abstract":[{"text":"A protocol for implementing custom backoff strategies in retry mechanisms.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"BackoffStrategy"}]},"doc://Afluent/documentation/Afluent/BackoffStrategy/exponential(base:maxCount:maxDelay:)":{"title":"exponential(base:maxCount:maxDelay:)","kind":"symbol","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/exponential(base:maxCount:maxDelay:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" is "},{"code":"ExponentialBackoffStrategy<ContinuousClock>","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"abstract":[{"text":"Creates an exponential backoff strategy with a configurable base and maximum retry count.","type":"text"}],"url":"\/documentation\/afluent\/backoffstrategy\/exponential(base:maxcount:maxdelay:)","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"exponential"},{"text":"(","kind":"text"},{"text":"base","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"text":", ","kind":"text"},{"text":"maxCount","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"maxDelay","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ContinuousClock","preciseIdentifier":"s:12_Concurrency15ContinuousClockV"},{"kind":"text","text":"."},{"text":"Duration","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency15ContinuousClockV8Durationa"},{"text":") -> ","kind":"text"},{"text":"ExponentialBackoffStrategy","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent26ExponentialBackoffStrategyC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Clock","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa"},{"text":">","kind":"text"}]},"doc://Afluent/documentation/Afluent/BackoffStrategy/Clock":{"fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Clock"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency5ClockP","text":"Clock"}],"required":true,"kind":"symbol","type":"topic","title":"Clock","role":"symbol","url":"\/documentation\/afluent\/backoffstrategy\/clock","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/Clock"},"doc://Afluent/documentation/Afluent/BackoffStrategy/backoff(clock:durationUnit:)":{"role":"symbol","required":true,"url":"\/documentation\/afluent\/backoffstrategy\/backoff(clock:durationunit:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/backoff(clock:durationUnit:)","title":"backoff(clock:durationUnit:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"backoff"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"clock","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa","text":"Clock"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"durationUnit"},{"kind":"text","text":": ("},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa","kind":"typeIdentifier","text":"Clock"},{"kind":"text","text":"."},{"text":"Duration","preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Calculates the delay between retries using a clock and a duration unit."}],"type":"topic"},"doc://Afluent/documentation/Afluent/BackoffStrategy/binaryExponential(maxCount:maxDelay:)":{"url":"\/documentation\/afluent\/backoffstrategy\/binaryexponential(maxcount:maxdelay:)","kind":"symbol","title":"binaryExponential(maxCount:maxDelay:)","abstract":[{"text":"Creates a binary exponential backoff strategy with a maximum retry count.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"binaryExponential","kind":"identifier"},{"kind":"text","text":"("},{"text":"maxCount","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"maxDelay"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:12_Concurrency15ContinuousClockV","text":"ContinuousClock","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency15ContinuousClockV8Durationa","text":"Duration"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent26ExponentialBackoffStrategyC","text":"ExponentialBackoffStrategy"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Clock","preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa"},{"kind":"text","text":">"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/binaryExponential(maxCount:maxDelay:)","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"ExponentialBackoffStrategy<ContinuousClock>"},{"text":".","type":"text"}]},"type":"topic"},"doc://Afluent/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/Afluent\/s8SendableP","title":"Swift.Sendable"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy":{"type":"topic","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"ExponentialBackoffStrategy","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ExponentialBackoffStrategy"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","url":"\/documentation\/afluent\/exponentialbackoffstrategy","role":"symbol","title":"ExponentialBackoffStrategy","abstract":[{"text":"An exponential backoff strategy for retrying operations.","type":"text"}]},"doc://Afluent/documentation/Afluent":{"title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol","abstract":[],"type":"topic","role":"collection","url":"\/documentation\/afluent"}}}