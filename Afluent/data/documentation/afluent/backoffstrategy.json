{"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A protocol for implementing custom backoff strategies in retry mechanisms."}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BackoffStrategy"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa","kind":"typeIdentifier","text":"Clock","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/Clock"},{"kind":"text","text":"> : "},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Overview","type":"heading","level":2,"anchor":"overview"},{"inlineContent":[{"text":"Types conforming to ","type":"text"},{"code":"BackoffStrategy","type":"codeVoice"},{"type":"text","text":" must implement logic for calculating delays between retry attempts."},{"type":"text","text":" "},{"type":"text","text":"The delay is determined using a clock and a duration unit."}],"type":"paragraph"}]}],"metadata":{"externalID":"s:7Afluent15BackoffStrategyP","platforms":[{"introducedAt":"16.0","unavailable":false,"beta":false,"name":"iOS","deprecated":false},{"name":"macOS","unavailable":false,"introducedAt":"13.0","beta":false,"deprecated":false},{"deprecated":false,"unavailable":false,"beta":false,"name":"tvOS","introducedAt":"16.0"},{"name":"watchOS","deprecated":false,"introducedAt":"9.0","beta":false,"unavailable":false}],"modules":[{"name":"Afluent"}],"symbolKind":"protocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BackoffStrategy","kind":"identifier"}],"remoteSource":{"fileName":"RetryByBackoffStrategy.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/RetryStrategies\/RetryByBackoffStrategy.swift#L70"},"role":"symbol","roleHeading":"Protocol","title":"BackoffStrategy","navigatorTitle":[{"text":"BackoffStrategy","kind":"identifier"}]},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","relationshipsSections":[{"kind":"relationships","title":"Inherits From","identifiers":["doc:\/\/Afluent\/s8SendableP"],"type":"inheritsFrom"},{"kind":"relationships","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy"],"title":"Conforming Types","type":"conformingTypes"}],"topicSections":[{"generated":true,"title":"Associated Types","anchor":"Associated-Types","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/Clock"]},{"generated":true,"title":"Instance Methods","anchor":"Instance-Methods","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/backoff(clock:durationUnit:)"]},{"generated":true,"title":"Type Methods","anchor":"Type-Methods","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/binaryExponential(maxCount:maxDelay:)","doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/exponential(base:maxCount:maxDelay:)"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/backoffstrategy"]}],"sections":[],"references":{"doc://Afluent/documentation/Afluent/BackoffStrategy/backoff(clock:durationUnit:)":{"title":"backoff(clock:durationUnit:)","role":"symbol","type":"topic","required":true,"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/backoff(clock:durationUnit:)","kind":"symbol","url":"\/documentation\/afluent\/backoffstrategy\/backoff(clock:durationunit:)","abstract":[{"type":"text","text":"Calculates the delay between retries using a clock and a duration unit."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"backoff","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"clock"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Clock","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa"},{"kind":"text","text":", "},{"text":"durationUnit","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Clock","preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Duration","preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}]},"doc://Afluent/s8SendableP":{"identifier":"doc:\/\/Afluent\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://Afluent/documentation/Afluent/BackoffStrategy/binaryExponential(maxCount:maxDelay:)":{"title":"binaryExponential(maxCount:maxDelay:)","role":"symbol","type":"topic","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" is "},{"code":"ExponentialBackoffStrategy<ContinuousClock>","type":"codeVoice"},{"type":"text","text":"."}]},"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/binaryExponential(maxCount:maxDelay:)","kind":"symbol","url":"\/documentation\/afluent\/backoffstrategy\/binaryexponential(maxcount:maxdelay:)","abstract":[{"text":"Creates a binary exponential backoff strategy with a maximum retry count.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"binaryExponential","kind":"identifier"},{"kind":"text","text":"("},{"text":"maxCount","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maxDelay"},{"text":": ","kind":"text"},{"text":"ContinuousClock","preciseIdentifier":"s:12_Concurrency15ContinuousClockV","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:12_Concurrency15ContinuousClockV8Durationa","kind":"typeIdentifier","text":"Duration"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent26ExponentialBackoffStrategyC","text":"ExponentialBackoffStrategy","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Clock","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa"},{"text":">","kind":"text"}]},"doc://Afluent/documentation/Afluent/BackoffStrategy/exponential(base:maxCount:maxDelay:)":{"url":"\/documentation\/afluent\/backoffstrategy\/exponential(base:maxcount:maxdelay:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/exponential(base:maxCount:maxDelay:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"exponential","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"base"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"maxCount"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":", "},{"text":"maxDelay","kind":"externalParam"},{"kind":"text","text":": "},{"text":"ContinuousClock","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency15ContinuousClockV"},{"text":".","kind":"text"},{"preciseIdentifier":"s:12_Concurrency15ContinuousClockV8Durationa","text":"Duration","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Afluent26ExponentialBackoffStrategyC","text":"ExponentialBackoffStrategy","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Clock","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa"},{"kind":"text","text":">"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" is "},{"code":"ExponentialBackoffStrategy<ContinuousClock>","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"abstract":[{"text":"Creates an exponential backoff strategy with a configurable base and maximum retry count.","type":"text"}],"kind":"symbol","type":"topic","role":"symbol","title":"exponential(base:maxCount:maxDelay:)"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy":{"title":"ExponentialBackoffStrategy","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ExponentialBackoffStrategy"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","kind":"symbol","url":"\/documentation\/afluent\/exponentialbackoffstrategy","abstract":[{"type":"text","text":"An exponential backoff strategy for retrying operations."}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ExponentialBackoffStrategy"}]},"doc://Afluent/documentation/Afluent/BackoffStrategy":{"abstract":[{"type":"text","text":"A protocol for implementing custom backoff strategies in retry mechanisms."}],"type":"topic","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","navigatorTitle":[{"text":"BackoffStrategy","kind":"identifier"}],"title":"BackoffStrategy","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"BackoffStrategy","kind":"identifier"}],"url":"\/documentation\/afluent\/backoffstrategy"},"doc://Afluent/documentation/Afluent":{"title":"Afluent","role":"collection","kind":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent","url":"\/documentation\/afluent"},"doc://Afluent/documentation/Afluent/BackoffStrategy/Clock":{"abstract":[],"type":"topic","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/Clock","required":true,"title":"Clock","kind":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Clock"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:12_Concurrency5ClockP","text":"Clock","kind":"typeIdentifier"}],"url":"\/documentation\/afluent\/backoffstrategy\/clock"}}}