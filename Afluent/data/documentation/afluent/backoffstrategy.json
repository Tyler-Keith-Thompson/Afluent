{"metadata":{"title":"BackoffStrategy","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BackoffStrategy","kind":"identifier"}],"externalID":"s:7Afluent15BackoffStrategyP","platforms":[{"beta":false,"unavailable":false,"introducedAt":"16.0","deprecated":false,"name":"iOS"},{"deprecated":false,"unavailable":false,"introducedAt":"13.0","name":"macOS","beta":false},{"name":"tvOS","introducedAt":"16.0","deprecated":false,"unavailable":false,"beta":false},{"name":"watchOS","introducedAt":"9.0","unavailable":false,"deprecated":false,"beta":false}],"role":"symbol","modules":[{"name":"Afluent"}],"symbolKind":"protocol","remoteSource":{"fileName":"RetryByBackoffStrategy.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/RetryStrategies\/RetryByBackoffStrategy.swift#L70"},"navigatorTitle":[{"text":"BackoffStrategy","kind":"identifier"}],"roleHeading":"Protocol"},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"sections":[],"relationshipsSections":[{"identifiers":["doc:\/\/Afluent\/s8SendableP"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"},{"title":"Conforming Types","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy"],"kind":"relationships","type":"conformingTypes"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BackoffStrategy"},{"kind":"text","text":"<"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/Clock","preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa","text":"Clock","kind":"typeIdentifier"},{"text":"> : ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"anchor":"overview","text":"Overview","type":"heading"},{"inlineContent":[{"text":"Types conforming to ","type":"text"},{"code":"BackoffStrategy","type":"codeVoice"},{"text":" must implement logic for calculating delays between retry attempts.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The delay is determined using a clock and a duration unit."}],"type":"paragraph"}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy"},"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/Clock"],"generated":true,"anchor":"Associated-Types","title":"Associated Types"},{"generated":true,"title":"Instance Methods","anchor":"Instance-Methods","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/backoff(clock:durationUnit:)"]},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/binaryExponential(maxCount:maxDelay:)","doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/exponential(base:maxCount:maxDelay:)"],"anchor":"Type-Methods","generated":true,"title":"Type Methods"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/backoffstrategy"]}],"abstract":[{"type":"text","text":"A protocol for implementing custom backoff strategies in retry mechanisms."}],"references":{"doc://Afluent/documentation/Afluent/BackoffStrategy/binaryExponential(maxCount:maxDelay:)":{"title":"binaryExponential(maxCount:maxDelay:)","abstract":[{"type":"text","text":"Creates a binary exponential backoff strategy with a maximum retry count."}],"kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"binaryExponential","kind":"identifier"},{"text":"(","kind":"text"},{"text":"maxCount","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"maxDelay","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:12_Concurrency15ContinuousClockV","kind":"typeIdentifier","text":"ContinuousClock"},{"text":".","kind":"text"},{"text":"Duration","preciseIdentifier":"s:12_Concurrency15ContinuousClockV8Durationa","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"ExponentialBackoffStrategy","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent26ExponentialBackoffStrategyC"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa","text":"Clock"},{"text":">","kind":"text"}],"type":"topic","url":"\/documentation\/afluent\/backoffstrategy\/binaryexponential(maxcount:maxdelay:)","role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" is "},{"type":"codeVoice","code":"ExponentialBackoffStrategy<ContinuousClock>"},{"type":"text","text":"."}]},"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/binaryExponential(maxCount:maxDelay:)"},"doc://Afluent/documentation/Afluent/BackoffStrategy/exponential(base:maxCount:maxDelay:)":{"url":"\/documentation\/afluent\/backoffstrategy\/exponential(base:maxcount:maxdelay:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/exponential(base:maxCount:maxDelay:)","kind":"symbol","abstract":[{"text":"Creates an exponential backoff strategy with a configurable base and maximum retry count.","type":"text"}],"type":"topic","title":"exponential(base:maxCount:maxDelay:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"exponential","kind":"identifier"},{"text":"(","kind":"text"},{"text":"base","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"text":", ","kind":"text"},{"text":"maxCount","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"maxDelay","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency15ContinuousClockV","text":"ContinuousClock"},{"text":".","kind":"text"},{"text":"Duration","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency15ContinuousClockV8Durationa"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent26ExponentialBackoffStrategyC","text":"ExponentialBackoffStrategy","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa","text":"Clock","kind":"typeIdentifier"},{"kind":"text","text":">"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" is "},{"code":"ExponentialBackoffStrategy<ContinuousClock>","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"role":"symbol"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy":{"url":"\/documentation\/afluent\/exponentialbackoffstrategy","role":"symbol","abstract":[{"type":"text","text":"An exponential backoff strategy for retrying operations."}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"ExponentialBackoffStrategy","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"ExponentialBackoffStrategy","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","title":"ExponentialBackoffStrategy","kind":"symbol"},"doc://Afluent/documentation/Afluent/BackoffStrategy/Clock":{"title":"Clock","role":"symbol","url":"\/documentation\/afluent\/backoffstrategy\/clock","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Clock"},{"text":" : ","kind":"text"},{"text":"Clock","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency5ClockP"}],"abstract":[],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/Clock","required":true,"kind":"symbol"},"doc://Afluent/documentation/Afluent":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent","url":"\/documentation\/afluent","kind":"symbol","type":"topic","title":"Afluent","role":"collection","abstract":[]},"doc://Afluent/documentation/Afluent/BackoffStrategy":{"kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BackoffStrategy"}],"url":"\/documentation\/afluent\/backoffstrategy","navigatorTitle":[{"kind":"identifier","text":"BackoffStrategy"}],"type":"topic","abstract":[{"text":"A protocol for implementing custom backoff strategies in retry mechanisms.","type":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","title":"BackoffStrategy"},"doc://Afluent/s8SendableP":{"identifier":"doc:\/\/Afluent\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://Afluent/documentation/Afluent/BackoffStrategy/backoff(clock:durationUnit:)":{"required":true,"abstract":[{"text":"Calculates the delay between retries using a clock and a duration unit.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"backoff","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"clock"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa","kind":"typeIdentifier","text":"Clock"},{"text":", ","kind":"text"},{"text":"durationUnit","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa","text":"Clock","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Duration","preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/backoff(clock:durationUnit:)","url":"\/documentation\/afluent\/backoffstrategy\/backoff(clock:durationunit:)","title":"backoff(clock:durationUnit:)","type":"topic","role":"symbol"}}}