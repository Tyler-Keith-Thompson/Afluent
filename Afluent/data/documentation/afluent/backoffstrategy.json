{"topicSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/Clock"],"anchor":"Associated-Types","generated":true,"title":"Associated Types"},{"title":"Instance Methods","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/backoff(clock:durationUnit:)"],"anchor":"Instance-Methods"},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/binaryExponential(maxCount:maxDelay:)","doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/exponential(base:maxCount:maxDelay:)"],"generated":true,"anchor":"Type-Methods","title":"Type Methods"}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"variants":[{"paths":["\/documentation\/afluent\/backoffstrategy"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","interfaceLanguage":"swift"},"sections":[],"metadata":{"externalID":"s:7Afluent15BackoffStrategyP","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"BackoffStrategy"}],"platforms":[{"name":"iOS","introducedAt":"16.0","deprecated":false,"unavailable":false,"beta":false},{"deprecated":false,"beta":false,"introducedAt":"13.0","unavailable":false,"name":"macOS"},{"unavailable":false,"beta":false,"introducedAt":"16.0","deprecated":false,"name":"tvOS"},{"name":"watchOS","deprecated":false,"unavailable":false,"beta":false,"introducedAt":"9.0"}],"modules":[{"name":"Afluent"}],"navigatorTitle":[{"text":"BackoffStrategy","kind":"identifier"}],"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/RetryStrategies\/RetryByBackoffStrategy.swift#L70","fileName":"RetryByBackoffStrategy.swift"},"title":"BackoffStrategy","symbolKind":"protocol","roleHeading":"Protocol","role":"symbol"},"kind":"symbol","abstract":[{"text":"A protocol for implementing custom backoff strategies in retry mechanisms.","type":"text"}],"relationshipsSections":[{"kind":"relationships","title":"Inherits From","identifiers":["doc:\/\/Afluent\/s8SendableP"],"type":"inheritsFrom"},{"kind":"relationships","type":"conformingTypes","title":"Conforming Types","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy"]}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BackoffStrategy"},{"kind":"text","text":"<"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/Clock","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa","text":"Clock"},{"kind":"text","text":"> : "},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Overview","level":2,"anchor":"overview","type":"heading"},{"inlineContent":[{"type":"text","text":"Types conforming to "},{"code":"BackoffStrategy","type":"codeVoice"},{"type":"text","text":" must implement logic for calculating delays between retry attempts."},{"text":" ","type":"text"},{"type":"text","text":"The delay is determined using a clock and a duration unit."}],"type":"paragraph"}]}],"references":{"doc://Afluent/documentation/Afluent":{"url":"\/documentation\/afluent","type":"topic","role":"collection","title":"Afluent","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent","abstract":[]},"doc://Afluent/documentation/Afluent/BackoffStrategy":{"kind":"symbol","navigatorTitle":[{"text":"BackoffStrategy","kind":"identifier"}],"title":"BackoffStrategy","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"BackoffStrategy","kind":"identifier"}],"type":"topic","abstract":[{"text":"A protocol for implementing custom backoff strategies in retry mechanisms.","type":"text"}],"url":"\/documentation\/afluent\/backoffstrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","role":"symbol"},"doc://Afluent/documentation/Afluent/BackoffStrategy/backoff(clock:durationUnit:)":{"type":"topic","title":"backoff(clock:durationUnit:)","kind":"symbol","url":"\/documentation\/afluent\/backoffstrategy\/backoff(clock:durationunit:)","abstract":[{"text":"Calculates the delay between retries using a clock and a duration unit.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"backoff","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"clock","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Clock","preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa"},{"kind":"text","text":", "},{"kind":"externalParam","text":"durationUnit"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa","kind":"typeIdentifier","text":"Clock"},{"kind":"text","text":"."},{"preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa","kind":"typeIdentifier","text":"Duration"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/backoff(clock:durationUnit:)","required":true,"role":"symbol"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy":{"role":"symbol","title":"ExponentialBackoffStrategy","kind":"symbol","url":"\/documentation\/afluent\/exponentialbackoffstrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","type":"topic","abstract":[{"text":"An exponential backoff strategy for retrying operations.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ExponentialBackoffStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"ExponentialBackoffStrategy","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/BackoffStrategy/exponential(base:maxCount:maxDelay:)":{"type":"topic","abstract":[{"type":"text","text":"Creates an exponential backoff strategy with a configurable base and maximum retry count."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"exponential","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"base"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maxCount"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"maxDelay"},{"kind":"text","text":": "},{"text":"ContinuousClock","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency15ContinuousClockV"},{"kind":"text","text":"."},{"preciseIdentifier":"s:12_Concurrency15ContinuousClockV8Durationa","kind":"typeIdentifier","text":"Duration"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Afluent26ExponentialBackoffStrategyC","kind":"typeIdentifier","text":"ExponentialBackoffStrategy"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa","kind":"typeIdentifier","text":"Clock"},{"text":">","kind":"text"}],"conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"ExponentialBackoffStrategy<ContinuousClock>","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/exponential(base:maxCount:maxDelay:)","title":"exponential(base:maxCount:maxDelay:)","role":"symbol","url":"\/documentation\/afluent\/backoffstrategy\/exponential(base:maxcount:maxdelay:)"},"doc://Afluent/documentation/Afluent/BackoffStrategy/binaryExponential(maxCount:maxDelay:)":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/binaryExponential(maxCount:maxDelay:)","title":"binaryExponential(maxCount:maxDelay:)","url":"\/documentation\/afluent\/backoffstrategy\/binaryexponential(maxcount:maxdelay:)","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" is "},{"code":"ExponentialBackoffStrategy<ContinuousClock>","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"type":"topic","kind":"symbol","abstract":[{"text":"Creates a binary exponential backoff strategy with a maximum retry count.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"binaryExponential","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"maxCount"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"maxDelay"},{"kind":"text","text":": "},{"text":"ContinuousClock","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency15ContinuousClockV"},{"text":".","kind":"text"},{"preciseIdentifier":"s:12_Concurrency15ContinuousClockV8Durationa","text":"Duration","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"ExponentialBackoffStrategy","preciseIdentifier":"s:7Afluent26ExponentialBackoffStrategyC"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Clock","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa"},{"text":">","kind":"text"}]},"doc://Afluent/documentation/Afluent/BackoffStrategy/Clock":{"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/Clock","fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"text":"Clock","kind":"identifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:12_Concurrency5ClockP","text":"Clock","kind":"typeIdentifier"}],"abstract":[],"title":"Clock","type":"topic","role":"symbol","url":"\/documentation\/afluent\/backoffstrategy\/clock","required":true},"doc://Afluent/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/Afluent\/s8SendableP","type":"unresolvable"}}}