{"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"topicSections":[{"title":"Associated Types","anchor":"Associated-Types","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/Clock"]},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/backoff(clock:durationUnit:)"],"anchor":"Instance-Methods","generated":true,"title":"Instance Methods"},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/binaryExponential(maxCount:maxDelay:)","doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/exponential(base:maxCount:maxDelay:)"],"title":"Type Methods","anchor":"Type-Methods","generated":true}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/backoffstrategy"]}],"kind":"symbol","abstract":[{"type":"text","text":"A protocol for implementing custom backoff strategies in retry mechanisms."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"BackoffStrategy","kind":"identifier"},{"kind":"text","text":"<"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/Clock","text":"Clock","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa"},{"text":"> : ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"}]}]},{"kind":"content","content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"inlineContent":[{"text":"Types conforming to ","type":"text"},{"type":"codeVoice","code":"BackoffStrategy"},{"type":"text","text":" must implement logic for calculating delays between retry attempts."},{"type":"text","text":" "},{"text":"The delay is determined using a clock and a duration unit.","type":"text"}],"type":"paragraph"}]}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"navigatorTitle":[{"text":"BackoffStrategy","kind":"identifier"}],"remoteSource":{"fileName":"RetryByBackoffStrategy.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/RetryStrategies\/RetryByBackoffStrategy.swift#L70"},"symbolKind":"protocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"BackoffStrategy"}],"externalID":"s:7Afluent15BackoffStrategyP","platforms":[{"introducedAt":"16.0","deprecated":false,"name":"iOS","unavailable":false,"beta":false},{"unavailable":false,"introducedAt":"13.0","name":"macOS","beta":false,"deprecated":false},{"name":"tvOS","introducedAt":"16.0","deprecated":false,"unavailable":false,"beta":false},{"name":"watchOS","deprecated":false,"unavailable":false,"beta":false,"introducedAt":"9.0"}],"modules":[{"name":"Afluent"}],"title":"BackoffStrategy","roleHeading":"Protocol","role":"symbol"},"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","interfaceLanguage":"swift"},"relationshipsSections":[{"type":"inheritsFrom","kind":"relationships","title":"Inherits From","identifiers":["doc:\/\/Afluent\/s8SendableP"]},{"type":"conformingTypes","title":"Conforming Types","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy"],"kind":"relationships"}],"references":{"doc://Afluent/documentation/Afluent/BackoffStrategy":{"kind":"symbol","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","url":"\/documentation\/afluent\/backoffstrategy","abstract":[{"text":"A protocol for implementing custom backoff strategies in retry mechanisms.","type":"text"}],"title":"BackoffStrategy","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"BackoffStrategy","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"BackoffStrategy"}]},"doc://Afluent/documentation/Afluent":{"kind":"symbol","role":"collection","abstract":[],"url":"\/documentation\/afluent","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent","title":"Afluent"},"doc://Afluent/documentation/Afluent/BackoffStrategy/binaryExponential(maxCount:maxDelay:)":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"binaryExponential","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"maxCount"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"maxDelay"},{"kind":"text","text":": "},{"preciseIdentifier":"s:12_Concurrency15ContinuousClockV","text":"ContinuousClock","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Duration","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency15ContinuousClockV8Durationa"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent26ExponentialBackoffStrategyC","text":"ExponentialBackoffStrategy","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa","text":"Clock","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","abstract":[{"type":"text","text":"Creates a binary exponential backoff strategy with a maximum retry count."}],"conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" is "},{"code":"ExponentialBackoffStrategy<ContinuousClock>","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"binaryExponential(maxCount:maxDelay:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/binaryExponential(maxCount:maxDelay:)","url":"\/documentation\/afluent\/backoffstrategy\/binaryexponential(maxcount:maxdelay:)","type":"topic"},"doc://Afluent/documentation/Afluent/BackoffStrategy/Clock":{"type":"topic","url":"\/documentation\/afluent\/backoffstrategy\/clock","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Clock","kind":"identifier"},{"kind":"text","text":" : "},{"text":"Clock","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency5ClockP"}],"title":"Clock","required":true,"kind":"symbol","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/Clock","role":"symbol"},"doc://Afluent/documentation/Afluent/BackoffStrategy/backoff(clock:durationUnit:)":{"abstract":[{"text":"Calculates the delay between retries using a clock and a duration unit.","type":"text"}],"required":true,"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"backoff","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"clock","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Clock","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa"},{"text":", ","kind":"text"},{"text":"durationUnit","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa","kind":"typeIdentifier","text":"Clock"},{"kind":"text","text":"."},{"text":"Duration","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/backoff(clock:durationUnit:)","url":"\/documentation\/afluent\/backoffstrategy\/backoff(clock:durationunit:)","title":"backoff(clock:durationUnit:)","type":"topic"},"doc://Afluent/documentation/Afluent/BackoffStrategy/exponential(base:maxCount:maxDelay:)":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"exponential","kind":"identifier"},{"kind":"text","text":"("},{"text":"base","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"maxCount"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"maxDelay"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:12_Concurrency15ContinuousClockV","text":"ContinuousClock","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Duration","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency15ContinuousClockV8Durationa"},{"kind":"text","text":") -> "},{"text":"ExponentialBackoffStrategy","preciseIdentifier":"s:7Afluent26ExponentialBackoffStrategyC","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Clock","preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa"},{"kind":"text","text":">"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" is "},{"code":"ExponentialBackoffStrategy<ContinuousClock>","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/exponential(base:maxCount:maxDelay:)","title":"exponential(base:maxCount:maxDelay:)","kind":"symbol","type":"topic","abstract":[{"text":"Creates an exponential backoff strategy with a configurable base and maximum retry count.","type":"text"}],"role":"symbol","url":"\/documentation\/afluent\/backoffstrategy\/exponential(base:maxcount:maxdelay:)"},"doc://Afluent/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/Afluent\/s8SendableP"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy":{"role":"symbol","navigatorTitle":[{"text":"ExponentialBackoffStrategy","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"ExponentialBackoffStrategy","kind":"identifier"}],"abstract":[{"type":"text","text":"An exponential backoff strategy for retrying operations."}],"url":"\/documentation\/afluent\/exponentialbackoffstrategy","type":"topic","title":"ExponentialBackoffStrategy"}}}