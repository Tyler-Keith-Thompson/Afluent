{"variants":[{"paths":["\/documentation\/afluent\/backoffstrategy\/binaryexponential(maxcount:maxdelay:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"binaryExponential","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"maxCount"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"text":", ","kind":"text"},{"text":"maxDelay","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency15ContinuousClockV","text":"ContinuousClock"},{"text":".","kind":"text"},{"text":"Duration","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency15ContinuousClockV8Durationa"},{"text":" = .seconds(Int.max)) -> ","kind":"text"},{"text":"ExponentialBackoffStrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","preciseIdentifier":"s:7Afluent26ExponentialBackoffStrategyC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Clock","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/Clock","preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa"},{"text":">","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The maximum number of retries allowed.","type":"text"}]}],"name":"maxCount"},{"name":"maxDelay","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The maximum duration to wait."}]}]}]},{"kind":"content","content":[{"type":"heading","text":"Return Value","anchor":"return-value","level":2},{"inlineContent":[{"text":"An ","type":"text"},{"code":"ExponentialBackoffStrategy","type":"codeVoice"},{"type":"text","text":" configured with a base of 2 and the provided maximum retry count."}],"type":"paragraph"}]},{"content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The base duration for this strategy is set to 2, meaning the delay will double with each retry."}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy"]]},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/binaryExponential(maxCount:maxDelay:)"},"metadata":{"platforms":[{"deprecated":false,"unavailable":false,"introducedAt":"16.0","name":"iOS","beta":false},{"name":"macOS","deprecated":false,"introducedAt":"13.0","unavailable":false,"beta":false},{"unavailable":false,"deprecated":false,"introducedAt":"16.0","beta":false,"name":"tvOS"},{"beta":false,"unavailable":false,"name":"watchOS","deprecated":false,"introducedAt":"9.0"}],"title":"binaryExponential(maxCount:maxDelay:)","roleHeading":"Type Method","role":"symbol","remoteSource":{"fileName":"RetryByBackoffStrategy.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/RetryStrategies\/RetryByBackoffStrategy.swift#L110"},"externalID":"s:7Afluent15BackoffStrategyPA2A011ExponentialbC0Cy12_Concurrency15ContinuousClockVGRszrlE06binaryD08maxCount0I5DelayAISu_s8DurationVtFZ","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"binaryExponential","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"maxCount"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"text":"maxDelay","kind":"externalParam"},{"kind":"text","text":": "},{"text":"ContinuousClock","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency15ContinuousClockV"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency15ContinuousClockV8Durationa","text":"Duration"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent26ExponentialBackoffStrategyC","text":"ExponentialBackoffStrategy"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa","kind":"typeIdentifier","text":"Clock"},{"kind":"text","text":">"}],"symbolKind":"method","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" is "},{"type":"codeVoice","code":"ExponentialBackoffStrategy<ContinuousClock>"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"modules":[{"name":"Afluent"}],"extendedModule":"Afluent"},"kind":"symbol","abstract":[{"text":"Creates a binary exponential backoff strategy with a maximum retry count.","type":"text"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://Afluent/documentation/Afluent/BackoffStrategy/binaryExponential(maxCount:maxDelay:)":{"title":"binaryExponential(maxCount:maxDelay:)","abstract":[{"type":"text","text":"Creates a binary exponential backoff strategy with a maximum retry count."}],"kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"binaryExponential","kind":"identifier"},{"text":"(","kind":"text"},{"text":"maxCount","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"maxDelay","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:12_Concurrency15ContinuousClockV","kind":"typeIdentifier","text":"ContinuousClock"},{"text":".","kind":"text"},{"text":"Duration","preciseIdentifier":"s:12_Concurrency15ContinuousClockV8Durationa","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"ExponentialBackoffStrategy","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent26ExponentialBackoffStrategyC"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa","text":"Clock"},{"text":">","kind":"text"}],"type":"topic","url":"\/documentation\/afluent\/backoffstrategy\/binaryexponential(maxcount:maxdelay:)","role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" is "},{"type":"codeVoice","code":"ExponentialBackoffStrategy<ContinuousClock>"},{"type":"text","text":"."}]},"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/binaryExponential(maxCount:maxDelay:)"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy":{"url":"\/documentation\/afluent\/exponentialbackoffstrategy","role":"symbol","abstract":[{"type":"text","text":"An exponential backoff strategy for retrying operations."}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"ExponentialBackoffStrategy","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"ExponentialBackoffStrategy","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","title":"ExponentialBackoffStrategy","kind":"symbol"},"doc://Afluent/documentation/Afluent":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent","url":"\/documentation\/afluent","kind":"symbol","type":"topic","title":"Afluent","role":"collection","abstract":[]},"doc://Afluent/documentation/Afluent/BackoffStrategy/Clock":{"title":"Clock","role":"symbol","url":"\/documentation\/afluent\/backoffstrategy\/clock","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Clock"},{"text":" : ","kind":"text"},{"text":"Clock","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency5ClockP"}],"abstract":[],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/Clock","required":true,"kind":"symbol"},"doc://Afluent/documentation/Afluent/BackoffStrategy":{"kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BackoffStrategy"}],"url":"\/documentation\/afluent\/backoffstrategy","navigatorTitle":[{"kind":"identifier","text":"BackoffStrategy"}],"type":"topic","abstract":[{"text":"A protocol for implementing custom backoff strategies in retry mechanisms.","type":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","title":"BackoffStrategy"}}}