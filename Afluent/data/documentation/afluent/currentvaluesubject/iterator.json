{"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/CurrentValueSubject"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"relationshipsSections":[{"kind":"relationships","type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/Afluent\/s8SendableP","doc:\/\/Afluent\/ScI"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/currentvaluesubject\/iterator"]}],"kind":"symbol","topicSections":[{"title":"Instance Methods","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/CurrentValueSubject\/Iterator\/next()"],"anchor":"Instance-Methods"},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/CurrentValueSubject\/Iterator\/AsyncIteratorProtocol-Implementations"],"anchor":"Default-Implementations"}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Iterator"}],"languages":["swift"]}]}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/CurrentValueSubject\/Iterator","interfaceLanguage":"swift"},"metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Iterator"}],"remoteSource":{"fileName":"CurrentValueSubject.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/CurrentValueSubject.swift#L75"},"modules":[{"name":"Afluent"}],"externalID":"s:7Afluent19CurrentValueSubjectC8IteratorV","title":"CurrentValueSubject.Iterator","role":"symbol","symbolKind":"struct","navigatorTitle":[{"kind":"identifier","text":"Iterator"}],"roleHeading":"Structure"},"references":{"doc://Afluent/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/Afluent\/s8SendableP","type":"unresolvable"},"doc://Afluent/ScI":{"type":"unresolvable","identifier":"doc:\/\/Afluent\/ScI","title":"_Concurrency.AsyncIteratorProtocol"},"doc://Afluent/documentation/Afluent/CurrentValueSubject/Iterator/next()":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"next"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"?"}],"role":"symbol","title":"next()","abstract":[],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/CurrentValueSubject\/Iterator\/next()","url":"\/documentation\/afluent\/currentvaluesubject\/iterator\/next()"},"doc://Afluent/documentation/Afluent/CurrentValueSubject/Iterator":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Iterator","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"Iterator","kind":"identifier"}],"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/CurrentValueSubject\/Iterator","url":"\/documentation\/afluent\/currentvaluesubject\/iterator","title":"CurrentValueSubject.Iterator","kind":"symbol"},"doc://Afluent/documentation/Afluent/CurrentValueSubject":{"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CurrentValueSubject","kind":"identifier"}],"navigatorTitle":[{"text":"CurrentValueSubject","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/CurrentValueSubject","url":"\/documentation\/afluent\/currentvaluesubject","type":"topic","kind":"symbol","title":"CurrentValueSubject","abstract":[{"text":"A subject that broadcasts its current value and all subsequent values to multiple consumers.","type":"text"},{"text":" ","type":"text"},{"text":"It can also handle completion events, including normal termination and failure with an error.","type":"text"},{"text":" ","type":"text"},{"text":"This is an ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"text":" that allows multiple tasks to asynchronously consume values and mimics Combineâ€™s CurrentValueSubject.","type":"text"}]},"doc://Afluent/documentation/Afluent":{"type":"topic","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","abstract":[],"url":"\/documentation\/afluent","role":"collection","kind":"symbol"},"doc://Afluent/documentation/Afluent/CurrentValueSubject/Iterator/AsyncIteratorProtocol-Implementations":{"kind":"article","abstract":[],"type":"topic","role":"collectionGroup","title":"AsyncIteratorProtocol Implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/CurrentValueSubject\/Iterator\/AsyncIteratorProtocol-Implementations","url":"\/documentation\/afluent\/currentvaluesubject\/iterator\/asynciteratorprotocol-implementations"}}}