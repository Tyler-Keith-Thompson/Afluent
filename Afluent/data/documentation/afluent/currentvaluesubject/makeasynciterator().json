{"kind":"symbol","metadata":{"symbolKind":"method","modules":[{"name":"Afluent"}],"title":"makeAsyncIterator()","externalID":"s:7Afluent19CurrentValueSubjectC17makeAsyncIteratorAC0G0Vyx_GyF","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeAsyncIterator"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"CurrentValueSubject","preciseIdentifier":"s:7Afluent19CurrentValueSubjectC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"Iterator","preciseIdentifier":"s:7Afluent19CurrentValueSubjectC8IteratorV"}],"role":"symbol","remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/CurrentValueSubject.swift#L84","fileName":"CurrentValueSubject.swift"}},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/currentvaluesubject\/makeasynciterator()"]}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/CurrentValueSubject\/makeAsyncIterator()","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeAsyncIterator","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent19CurrentValueSubjectC","text":"CurrentValueSubject","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/CurrentValueSubject"},{"text":"<","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"preciseIdentifier":"s:7Afluent19CurrentValueSubjectC8IteratorV","text":"Iterator","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/CurrentValueSubject\/Iterator"}],"languages":["swift"],"platforms":["macOS"]}]}],"abstract":[{"text":"Inherited from ","type":"text"},{"code":"AsyncSequence.makeAsyncIterator()","type":"codeVoice"},{"text":".","type":"text"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/CurrentValueSubject"]]},"sections":[],"references":{"doc://Afluent/documentation/Afluent":{"url":"\/documentation\/afluent","title":"Afluent","type":"topic","kind":"symbol","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent","role":"collection"},"doc://Afluent/documentation/Afluent/CurrentValueSubject/Iterator":{"title":"CurrentValueSubject.Iterator","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Iterator"}],"abstract":[],"kind":"symbol","url":"\/documentation\/afluent\/currentvaluesubject\/iterator","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/CurrentValueSubject\/Iterator","navigatorTitle":[{"kind":"identifier","text":"Iterator"}]},"doc://Afluent/documentation/Afluent/CurrentValueSubject/makeAsyncIterator()":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/CurrentValueSubject\/makeAsyncIterator()","abstract":[],"title":"makeAsyncIterator()","kind":"symbol","url":"\/documentation\/afluent\/currentvaluesubject\/makeasynciterator()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeAsyncIterator","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent19CurrentValueSubjectC","text":"CurrentValueSubject","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"preciseIdentifier":"s:7Afluent19CurrentValueSubjectC8IteratorV","text":"Iterator","kind":"typeIdentifier"}],"type":"topic","role":"symbol"},"doc://Afluent/documentation/Afluent/CurrentValueSubject":{"title":"CurrentValueSubject","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/CurrentValueSubject","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CurrentValueSubject"}],"role":"symbol","abstract":[{"type":"text","text":"A subject that broadcasts its current value and all subsequent values to multiple consumers."},{"type":"text","text":" "},{"type":"text","text":"It can also handle completion events, including normal termination and failure with an error."},{"type":"text","text":" "},{"type":"text","text":"This is an "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" that allows multiple tasks to asynchronously consume values and mimics Combineâ€™s CurrentValueSubject."}],"kind":"symbol","url":"\/documentation\/afluent\/currentvaluesubject","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"CurrentValueSubject"}]}}}