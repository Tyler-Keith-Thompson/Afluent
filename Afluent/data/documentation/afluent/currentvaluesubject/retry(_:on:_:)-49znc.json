{"abstract":[{"type":"text","text":"Retries the upstream "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" with a custom strategy when the error is castable to a specific type."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/currentvaluesubject\/retry(_:on:_:)-49znc"]}],"metadata":{"title":"retry(_:on:_:)","externalID":"s:Sci7Afluents8SendableRzrlE5retry_2on_AA14AsyncSequencesO27RetryOnCastAfterFlatMappingCy_xqd_0_qd__qd_1_Gqd_1__qd_0_mqd__qd_0_YaYbKctsABRd__SciRd__s5ErrorRd_0_AA0G8StrategyRd_1_sAB7ElementRpzALQyd__AMRSr1_lF::SYNTHESIZED::s:7Afluent19CurrentValueSubjectC","roleHeading":"Instance Method","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"role":"symbol","symbolKind":"method","remoteSource":{"fileName":"RetryAfterFlatMappingSequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/RetryAfterFlatMappingSequence.swift#L472"},"extendedModule":"_Concurrency","modules":[{"name":"Afluent","relatedModules":["_Concurrency"]}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"retry","kind":"identifier"},{"text":"<","kind":"text"},{"text":"D","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"E","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"on","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":".Type, (","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"text":"RetryOnCastAfterFlatMapping","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO27RetryOnCastAfterFlatMappingC"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/CurrentValueSubject","doc:\/\/Afluent\/documentation\/Afluent\/CurrentValueSubject\/AsyncSequence-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/CurrentValueSubject\/retry(_:on:_:)-49znc"},"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"retry","kind":"identifier"},{"text":"<","kind":"text"},{"text":"D","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"E","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"strategy","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"on","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"error","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"transform","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOnCastAfterFlatMapping","preciseIdentifier":"s:7Afluent14AsyncSequencesO27RetryOnCastAfterFlatMappingC","text":"RetryOnCastAfterFlatMapping","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:Sci","text":"AsyncSequence","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","preciseIdentifier":"s:7Afluent13RetryStrategyP","text":"RetryStrategy","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sci7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sci7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sci7ElementQa","text":"Element","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The retry strategy to apply."}]}],"name":"strategy"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The error type to match via casting."}]}],"name":"error"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The transformation executed before retrying when the cast succeeds, fully consuming the returned sequence.","type":"text"}]}],"name":"transform"}],"kind":"parameters"},{"content":[{"anchor":"return-value","text":"Return Value","level":2,"type":"heading"},{"inlineContent":[{"text":"An ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"text":" retrying with the given strategy only when the error can be cast to the specified type.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The transformation runs "},{"inlineContent":[{"type":"text","text":"before"}],"type":"emphasis"},{"type":"text","text":" each retry if the error cast succeeds, useful for side effects like refreshing tokens."},{"type":"text","text":" "},{"type":"text","text":"The returned sequence is fully consumed before retrying, ignoring its elements."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This enables retrying with custom strategy only when the error can be cast to the specified type,"},{"type":"text","text":" "},{"type":"text","text":"performing asynchronous side effects prior to retry."}]},{"type":"heading","level":2,"text":"Example: Custom retry on casted error with side effect","anchor":"Example-Custom-retry-on-casted-error-with-side-effect"},{"type":"codeListing","syntax":null,"code":["let retried = myAsyncSequence.retry(.byCount(3), on: MyError.self) { error in","    DeferredTask {","        try await refreshAuthToken()","    }","    .toAsyncSequence() \/\/ Fully consumed before retry","}"]}],"kind":"content"}],"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/RetryOnCastAfterFlatMapping":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RetryOnCastAfterFlatMapping","kind":"identifier"}],"navigatorTitle":[{"text":"RetryOnCastAfterFlatMapping","kind":"identifier"}],"type":"topic","url":"\/documentation\/afluent\/asyncsequences\/retryoncastafterflatmapping","abstract":[],"kind":"symbol","role":"symbol","title":"AsyncSequences.RetryOnCastAfterFlatMapping","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOnCastAfterFlatMapping"},"doc://Afluent/documentation/Afluent/CurrentValueSubject":{"kind":"symbol","title":"CurrentValueSubject","url":"\/documentation\/afluent\/currentvaluesubject","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/CurrentValueSubject","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CurrentValueSubject","kind":"identifier"}],"type":"topic","abstract":[{"text":"A subject that broadcasts its current value and all subsequent values to multiple consumers.","type":"text"},{"text":" ","type":"text"},{"text":"It can also handle completion events, including normal termination and failure with an error.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This is an "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" that allows multiple tasks to asynchronously consume values and mimics Combine’s CurrentValueSubject."}],"navigatorTitle":[{"text":"CurrentValueSubject","kind":"identifier"}],"role":"symbol"},"doc://Afluent/documentation/Afluent/RetryStrategy":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RetryStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"RetryStrategy","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A strategy for handling errors and determining whether to retry an operation."}],"url":"\/documentation\/afluent\/retrystrategy","kind":"symbol","role":"symbol","title":"RetryStrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy"},"doc://Afluent/documentation/Afluent":{"abstract":[],"url":"\/documentation\/afluent","role":"collection","type":"topic","kind":"symbol","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent"},"doc://Afluent/documentation/Afluent/CurrentValueSubject/retry(_:on:_:)-49znc":{"title":"retry(_:on:_:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/CurrentValueSubject\/retry(_:on:_:)-49znc","url":"\/documentation\/afluent\/currentvaluesubject\/retry(_:on:_:)-49znc","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"retry"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"D"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"E"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":", "},{"kind":"externalParam","text":"on"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":".Type, ("},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"RetryOnCastAfterFlatMapping","preciseIdentifier":"s:7Afluent14AsyncSequencesO27RetryOnCastAfterFlatMappingC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Retries the upstream "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" with a custom strategy when the error is castable to a specific type."}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/CurrentValueSubject/AsyncSequence-Implementations":{"abstract":[],"type":"topic","url":"\/documentation\/afluent\/currentvaluesubject\/asyncsequence-implementations","kind":"article","title":"AsyncSequence Implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/CurrentValueSubject\/AsyncSequence-Implementations","role":"collectionGroup"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","url":"\/documentation\/afluent\/asyncsequences","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequences"}],"title":"AsyncSequences","type":"topic","abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}]}}}