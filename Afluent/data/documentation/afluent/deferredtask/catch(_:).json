{"sections":[],"abstract":[{"type":"text","text":"Catches any errors emitted by the upstream "},{"type":"codeVoice","code":"AsynchronousUnitOfWork"},{"type":"text","text":" and handles them using the provided closure."}],"variants":[{"paths":["\/documentation\/afluent\/deferredtask\/catch(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask\/AsynchronousUnitOfWork-Implementations"]]},"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask\/catch(_:)","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`catch`","kind":"identifier"},{"text":"<","kind":"text"},{"text":"D","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"handler","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"kind":"text","text":" (any "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","kind":"typeIdentifier","text":"AsynchronousUnitOfWork","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/Success","text":"Success","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","text":"AsynchronousUnitOfWork","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/Success","text":"Success","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa"},{"text":" == ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/Success","text":"Success","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa"},{"text":"\n","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that takes an "},{"code":"Error","type":"codeVoice"},{"type":"text","text":" and returns an "},{"code":"AsynchronousUnitOfWork","type":"codeVoice"},{"type":"text","text":"."}]}],"name":"handler"}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"An ","type":"text"},{"code":"AsynchronousUnitOfWork","type":"codeVoice"},{"text":" that will catch and handle any errors emitted by the upstream unit of work.","type":"text"}]}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"modules":[{"name":"Afluent"}],"extendedModule":"Afluent","title":"catch(_:)","remoteSource":{"fileName":"Catch.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/Workers\/Catch.swift#L49"},"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`catch`"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"D"},{"kind":"text","text":">((any "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","text":"AsynchronousUnitOfWork"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa","text":"Success"},{"kind":"text","text":">\n"}],"externalID":"s:7Afluent22AsynchronousUnitOfWorkPAAE5catchyQrqd__s5Error_pYaYbcAaBRd__7SuccessQyd__AFRtzlF::SYNTHESIZED::s:7Afluent12DeferredTaskC","role":"symbol","roleHeading":"Instance Method","symbolKind":"method"},"kind":"symbol","references":{"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork/Success":{"fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Success"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP","text":"Sendable"}],"role":"symbol","abstract":[{"type":"text","text":"The type of data the unit of work will produce if it succeeds."}],"title":"Success","required":true,"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/Success","type":"topic","url":"\/documentation\/afluent\/asynchronousunitofwork\/success"},"doc://Afluent/documentation/Afluent":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent","abstract":[],"title":"Afluent","type":"topic","kind":"symbol","role":"collection","url":"\/documentation\/afluent"},"doc://Afluent/documentation/Afluent/DeferredTask":{"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","navigatorTitle":[{"kind":"identifier","text":"DeferredTask"}],"kind":"symbol","url":"\/documentation\/afluent\/deferredtask","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DeferredTask"}],"abstract":[{"text":"A structure representing a deferred asynchronous unit of work.","type":"text"}],"type":"topic","title":"DeferredTask"},"doc://Afluent/documentation/Afluent/DeferredTask/catch(_:)":{"url":"\/documentation\/afluent\/deferredtask\/catch(_:)","title":"catch(_:)","abstract":[{"type":"text","text":"Catches any errors emitted by the upstream "},{"code":"AsynchronousUnitOfWork","type":"codeVoice"},{"type":"text","text":" and handles them using the provided closure."}],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`catch`"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"D"},{"kind":"text","text":">((any "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"AsynchronousUnitOfWork","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Success","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa"},{"kind":"text","text":">\n"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask\/catch(_:)"},"doc://Afluent/documentation/Afluent/DeferredTask/AsynchronousUnitOfWork-Implementations":{"type":"topic","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask\/AsynchronousUnitOfWork-Implementations","title":"AsynchronousUnitOfWork Implementations","url":"\/documentation\/afluent\/deferredtask\/asynchronousunitofwork-implementations","kind":"article"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"title":"AsynchronousUnitOfWork","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","url":"\/documentation\/afluent\/asynchronousunitofwork","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsynchronousUnitOfWork"}],"navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWork"}],"abstract":[{"type":"text","text":"Represents an asynchronous unit of work."}],"kind":"symbol","role":"symbol"}}}