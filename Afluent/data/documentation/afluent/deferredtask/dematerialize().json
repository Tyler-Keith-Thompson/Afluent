{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"dematerialize","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">() -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"AsynchronousUnitOfWork","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/Success","text":"Success","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa"},{"kind":"text","text":" == "},{"text":"Result","kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"text":", any ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":">\n"}]}]},{"kind":"content","content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"inlineContent":[{"type":"text","text":"An "},{"type":"codeVoice","code":"AsynchronousUnitOfWork"},{"type":"text","text":" that emits the success value or throws the error contained within the "},{"type":"codeVoice","code":"Result"},{"text":".","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This operator is the inverse of "},{"code":"materialize","type":"codeVoice"},{"text":". It expects the ","type":"text"},{"type":"codeVoice","code":"AsynchronousUnitOfWork"},{"text":" to emit a ","type":"text"},{"code":"Result","type":"codeVoice"},{"text":" value and will either","type":"text"},{"type":"text","text":" "},{"type":"text","text":"propagate the success value or throw the error contained within the "},{"type":"codeVoice","code":"Result"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Example:"}]},{"type":"codeListing","code":["let task = DeferredTask<Result<String, Error>> { ... }","let dematerializedTask = task.dematerialize()","do {","    let value: String = try await dematerializedTask.execute()","    \/\/ Handle success value","} catch {","    \/\/ Handle error","}"],"syntax":"swift"},{"content":[{"inlineContent":[{"type":"text","text":"The error contained within the "},{"code":"Result","type":"codeVoice"},{"type":"text","text":" if itâ€™s a failure."}],"type":"paragraph"}],"type":"aside","style":"note","name":"Throws"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/deferredtask\/dematerialize()"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask\/dematerialize()"},"abstract":[{"type":"text","text":"Transforms a "},{"type":"codeVoice","code":"Result"},{"text":" value emitted by the current ","type":"text"},{"type":"codeVoice","code":"AsynchronousUnitOfWork"},{"text":" into its underlying success or failure.","type":"text"}],"kind":"symbol","metadata":{"remoteSource":{"fileName":"Dematerialize.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/Workers\/Dematerialize.swift#L30"},"modules":[{"name":"Afluent"}],"externalID":"s:7Afluent22AsynchronousUnitOfWorkPAAE13dematerializeQrys8SendableRd__s6ResultOyqd__s5Error_pG7SuccessRtzlF::SYNTHESIZED::s:7Afluent12DeferredTaskC","roleHeading":"Instance Method","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dematerialize","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">() -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","text":"AsynchronousUnitOfWork","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">\n"}],"title":"dematerialize()","extendedModule":"Afluent","symbolKind":"method"},"sections":[],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask\/AsynchronousUnitOfWork-Implementations"]]},"references":{"doc://Afluent/documentation/Afluent/DeferredTask/dematerialize()":{"kind":"symbol","url":"\/documentation\/afluent\/deferredtask\/dematerialize()","type":"topic","role":"symbol","title":"dematerialize()","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask\/dematerialize()","abstract":[{"type":"text","text":"Transforms a "},{"code":"Result","type":"codeVoice"},{"text":" value emitted by the current ","type":"text"},{"type":"codeVoice","code":"AsynchronousUnitOfWork"},{"text":" into its underlying success or failure.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"dematerialize"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">() -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","kind":"typeIdentifier","text":"AsynchronousUnitOfWork"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">\n"}]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork/Success":{"abstract":[{"text":"The type of data the unit of work will produce if it succeeds.","type":"text"}],"required":true,"fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"text":"Success","kind":"identifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/Success","title":"Success","url":"\/documentation\/afluent\/asynchronousunitofwork\/success","role":"symbol","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","title":"AsynchronousUnitOfWork","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWork"}],"type":"topic","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"abstract":[{"text":"Represents an asynchronous unit of work.","type":"text"}],"url":"\/documentation\/afluent\/asynchronousunitofwork"},"doc://Afluent/documentation/Afluent/DeferredTask":{"title":"DeferredTask","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"DeferredTask","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","navigatorTitle":[{"text":"DeferredTask","kind":"identifier"}],"abstract":[{"type":"text","text":"A structure representing a deferred asynchronous unit of work."}],"url":"\/documentation\/afluent\/deferredtask","kind":"symbol","role":"symbol"},"doc://Afluent/documentation/Afluent/DeferredTask/AsynchronousUnitOfWork-Implementations":{"title":"AsynchronousUnitOfWork Implementations","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask\/AsynchronousUnitOfWork-Implementations","abstract":[],"url":"\/documentation\/afluent\/deferredtask\/asynchronousunitofwork-implementations","kind":"article","role":"collectionGroup"},"doc://Afluent/documentation/Afluent":{"url":"\/documentation\/afluent","abstract":[],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent","role":"collection","title":"Afluent","kind":"symbol"}}}