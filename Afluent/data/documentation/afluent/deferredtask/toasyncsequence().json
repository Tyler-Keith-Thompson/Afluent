{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"toAsyncSequence","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AsynchronousUnitOfWorkSequence","preciseIdentifier":"s:7Afluent30AsynchronousUnitOfWorkSequenceV","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"An ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"text":" that emits the operationâ€™s result and then completes.","type":"text"}]}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"inlineContent":[{"type":"text","text":"Use this operator to integrate single-value asynchronous operations into sequence-based workflows, or to use sequence algorithms and idioms with a single result."}],"type":"paragraph"},{"level":2,"type":"heading","anchor":"Example","text":"Example"},{"syntax":null,"code":["for try await value in DeferredTask { 42 }.toAsyncSequence() {","    print(value) \/\/ prints 42","}"],"type":"codeListing"},{"name":"Note","style":"note","content":[{"inlineContent":[{"text":"The sequence emits one value if the operation succeeds or fails if the operation throws.","type":"text"}],"type":"paragraph"}],"type":"aside"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask\/toAsyncSequence()"},"metadata":{"role":"symbol","symbolKind":"method","remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/Workers\/ToAsyncSequence.swift#L75","fileName":"ToAsyncSequence.swift"},"roleHeading":"Instance Method","title":"toAsyncSequence()","modules":[{"name":"Afluent"}],"extendedModule":"Afluent","externalID":"s:7Afluent22AsynchronousUnitOfWorkPAAE15toAsyncSequenceAA0bcdeH0VyxGyF::SYNTHESIZED::s:7Afluent12DeferredTaskC","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"toAsyncSequence","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AsynchronousUnitOfWorkSequence","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent30AsynchronousUnitOfWorkSequenceV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"abstract":[{"text":"Converts this asynchronous unit of work into an ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"text":" that emits a single value and then completes.","type":"text"}],"variants":[{"paths":["\/documentation\/afluent\/deferredtask\/toasyncsequence()"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask\/AsynchronousUnitOfWork-Implementations"]]},"references":{"doc://Afluent/documentation/Afluent/DeferredTask/toAsyncSequence()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"toAsyncSequence","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AsynchronousUnitOfWorkSequence","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent30AsynchronousUnitOfWorkSequenceV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask\/toAsyncSequence()","abstract":[{"type":"text","text":"Converts this asynchronous unit of work into an "},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" that emits a single value and then completes."}],"kind":"symbol","url":"\/documentation\/afluent\/deferredtask\/toasyncsequence()","title":"toAsyncSequence()","role":"symbol"},"doc://Afluent/documentation/Afluent/DeferredTask":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","type":"topic","url":"\/documentation\/afluent\/deferredtask","role":"symbol","title":"DeferredTask","navigatorTitle":[{"text":"DeferredTask","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DeferredTask","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A deferred unit of asynchronous work that produces a result of type "},{"type":"codeVoice","code":"Success"},{"type":"text","text":"."}]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}],"abstract":[{"type":"text","text":"A sequence that represents a single execution of an asynchronous unit of work."}],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}],"type":"topic","title":"AsynchronousUnitOfWorkSequence","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence","url":"\/documentation\/afluent\/asynchronousunitofworksequence"},"doc://Afluent/documentation/Afluent/DeferredTask/AsynchronousUnitOfWork-Implementations":{"url":"\/documentation\/afluent\/deferredtask\/asynchronousunitofwork-implementations","kind":"article","type":"topic","abstract":[],"role":"collectionGroup","title":"AsynchronousUnitOfWork Implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask\/AsynchronousUnitOfWork-Implementations"},"doc://Afluent/documentation/Afluent":{"abstract":[],"url":"\/documentation\/afluent","role":"collection","type":"topic","kind":"symbol","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent"}}}