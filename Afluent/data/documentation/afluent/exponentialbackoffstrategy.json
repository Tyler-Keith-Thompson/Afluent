{"topicSections":[{"generated":true,"title":"Initializers","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/init(base:maxCount:maxDelay:)-3j13l","doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/init(base:maxCount:maxDelay:)-4kgu6"],"anchor":"Initializers"},{"generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/backoff(clock:durationUnit:)"],"title":"Instance Methods","anchor":"Instance-Methods"},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/Actor-Implementations","doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/BackoffStrategy-Implementations"],"generated":true,"title":"Default Implementations","anchor":"Default-Implementations"}],"relationshipsSections":[{"type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","doc:\/\/Afluent\/s8SendableP","doc:\/\/Afluent\/ScA"],"title":"Conforms To"}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ExponentialBackoffStrategy","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Clock","kind":"genericParameter"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Clock"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:12_Concurrency5ClockP","text":"Clock","kind":"typeIdentifier"}]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This actor calculates exponential delays between retries based on a specified base value. With each retry,"},{"type":"text","text":" "},{"type":"text","text":"the delay increases exponentially until the maximum retry count is reached."}]}]}],"variants":[{"paths":["\/documentation\/afluent\/exponentialbackoffstrategy"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"An exponential backoff strategy for retrying operations."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"s:7Afluent26ExponentialBackoffStrategyC","modules":[{"name":"Afluent"}],"title":"ExponentialBackoffStrategy","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ExponentialBackoffStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"ExponentialBackoffStrategy"}],"platforms":[{"deprecated":false,"unavailable":false,"name":"iOS","introducedAt":"16.0","beta":false},{"introducedAt":"13.0","unavailable":false,"beta":false,"name":"macOS","deprecated":false},{"unavailable":false,"introducedAt":"16.0","deprecated":false,"beta":false,"name":"tvOS"},{"introducedAt":"9.0","unavailable":false,"deprecated":false,"name":"watchOS","beta":false}],"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/RetryStrategies\/RetryByBackoffStrategy.swift#L122","fileName":"RetryByBackoffStrategy.swift"}},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","interfaceLanguage":"swift"},"sections":[],"references":{"doc://Afluent/s8SendableP":{"identifier":"doc:\/\/Afluent\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy/init(base:maxCount:maxDelay:)-4kgu6":{"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/init(base:maxCount:maxDelay:)-4kgu6","abstract":[{"text":"Creates a new exponential backoff strategy with the given base and maximum retry count.","type":"text"}],"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"base"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maxCount"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"maxDelay"},{"kind":"text","text":": "},{"text":"Clock","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Duration","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa"},{"text":")","kind":"text"}],"url":"\/documentation\/afluent\/exponentialbackoffstrategy\/init(base:maxcount:maxdelay:)-4kgu6","role":"symbol","type":"topic","title":"init(base:maxCount:maxDelay:)"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy/init(base:maxCount:maxDelay:)-3j13l":{"abstract":[{"text":"Creates a new exponential backoff strategy with the given base and maximum retry count.","type":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/init(base:maxCount:maxDelay:)-3j13l","title":"init(base:maxCount:maxDelay:)","type":"topic","url":"\/documentation\/afluent\/exponentialbackoffstrategy\/init(base:maxcount:maxdelay:)-3j13l","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"base","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"text":", ","kind":"text"},{"text":"maxCount","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":", "},{"text":"maxDelay","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Clock","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Duration","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa"},{"text":")","kind":"text"}],"role":"symbol","kind":"symbol"},"doc://Afluent/ScA":{"identifier":"doc:\/\/Afluent\/ScA","title":"_Concurrency.Actor","type":"unresolvable"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy/backoff(clock:durationUnit:)":{"role":"symbol","type":"topic","kind":"symbol","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/backoff(clock:durationUnit:)","title":"backoff(clock:durationUnit:)","url":"\/documentation\/afluent\/exponentialbackoffstrategy\/backoff(clock:durationunit:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"backoff"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"clock","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Clock","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"durationUnit"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"text":"Clock","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Duration","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]},"doc://Afluent/documentation/Afluent":{"title":"Afluent","role":"collection","kind":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent","url":"\/documentation\/afluent"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy/BackoffStrategy-Implementations":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/BackoffStrategy-Implementations","title":"BackoffStrategy Implementations","url":"\/documentation\/afluent\/exponentialbackoffstrategy\/backoffstrategy-implementations","kind":"article","type":"topic","role":"collectionGroup","abstract":[]},"doc://Afluent/documentation/Afluent/BackoffStrategy":{"abstract":[{"type":"text","text":"A protocol for implementing custom backoff strategies in retry mechanisms."}],"type":"topic","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","navigatorTitle":[{"text":"BackoffStrategy","kind":"identifier"}],"title":"BackoffStrategy","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"BackoffStrategy","kind":"identifier"}],"url":"\/documentation\/afluent\/backoffstrategy"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy/Actor-Implementations":{"title":"Actor Implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/Actor-Implementations","kind":"article","url":"\/documentation\/afluent\/exponentialbackoffstrategy\/actor-implementations","abstract":[],"type":"topic","role":"collectionGroup"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy":{"title":"ExponentialBackoffStrategy","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ExponentialBackoffStrategy"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","kind":"symbol","url":"\/documentation\/afluent\/exponentialbackoffstrategy","abstract":[{"type":"text","text":"An exponential backoff strategy for retrying operations."}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ExponentialBackoffStrategy"}]}}}