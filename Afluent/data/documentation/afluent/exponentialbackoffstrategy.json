{"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"kind":"symbol","sections":[],"metadata":{"platforms":[{"name":"iOS","introducedAt":"16.0","deprecated":false,"beta":false,"unavailable":false},{"name":"macOS","introducedAt":"13.0","deprecated":false,"beta":false,"unavailable":false},{"name":"tvOS","introducedAt":"16.0","deprecated":false,"beta":false,"unavailable":false},{"name":"watchOS","introducedAt":"9.0","deprecated":false,"beta":false,"unavailable":false}],"roleHeading":"Class","externalID":"s:7Afluent26ExponentialBackoffStrategyC","navigatorTitle":[{"text":"ExponentialBackoffStrategy","kind":"identifier"}],"symbolKind":"class","modules":[{"name":"Afluent"}],"title":"ExponentialBackoffStrategy","remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/RetryStrategies\/RetryByBackoffStrategy.swift#L135","fileName":"RetryByBackoffStrategy.swift"},"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ExponentialBackoffStrategy","kind":"identifier"}],"role":"symbol"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"ExponentialBackoffStrategy"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Clock"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Clock"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Clock","preciseIdentifier":"s:12_Concurrency5ClockP"}]}]},{"content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"This actor calculates exponential delays between retries based on a specified base value. With each retry,","type":"text"},{"text":" ","type":"text"},{"text":"the delay increases exponentially until the maximum retry count is reached.","type":"text"}]}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/exponentialbackoffstrategy"]}],"abstract":[{"text":"An exponential backoff strategy for retrying operations.","type":"text"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"topicSections":[{"anchor":"Initializers","title":"Initializers","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/init(base:maxCount:maxDelay:)-3j13l","doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/init(base:maxCount:maxDelay:)-4kgu6"],"generated":true},{"anchor":"Instance-Methods","title":"Instance Methods","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/backoff(clock:durationUnit:)"],"generated":true},{"anchor":"Default-Implementations","title":"Default Implementations","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/Actor-Implementations","doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/BackoffStrategy-Implementations"],"generated":true}],"relationshipsSections":[{"kind":"relationships","title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","doc:\/\/Afluent\/s8SendableP","doc:\/\/Afluent\/ScA"]}],"references":{"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy":{"url":"\/documentation\/afluent\/exponentialbackoffstrategy","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ExponentialBackoffStrategy"}],"role":"symbol","abstract":[{"text":"An exponential backoff strategy for retrying operations.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ExponentialBackoffStrategy"}],"title":"ExponentialBackoffStrategy","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy/init(base:maxCount:maxDelay:)-3j13l":{"abstract":[{"text":"Creates a new exponential backoff strategy with the given base and maximum retry count.","type":"text"}],"kind":"symbol","url":"\/documentation\/afluent\/exponentialbackoffstrategy\/init(base:maxcount:maxdelay:)-3j13l","title":"init(base:maxCount:maxDelay:)","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/init(base:maxCount:maxDelay:)-3j13l","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"base"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maxCount"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maxDelay"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Clock"},{"kind":"text","text":"."},{"preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa","kind":"typeIdentifier","text":"Duration"},{"kind":"text","text":")"}],"type":"topic"},"doc://Afluent/ScA":{"type":"unresolvable","identifier":"doc:\/\/Afluent\/ScA","title":"_Concurrency.Actor"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy/Actor-Implementations":{"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/Actor-Implementations","kind":"article","abstract":[],"title":"Actor Implementations","role":"collectionGroup","url":"\/documentation\/afluent\/exponentialbackoffstrategy\/actor-implementations"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy/init(base:maxCount:maxDelay:)-4kgu6":{"abstract":[{"type":"text","text":"Creates a new exponential backoff strategy with the given base and maximum retry count."}],"type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/init(base:maxCount:maxDelay:)-4kgu6","title":"init(base:maxCount:maxDelay:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"base"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maxCount"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maxDelay"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Clock"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa","text":"Duration"},{"kind":"text","text":")"}],"url":"\/documentation\/afluent\/exponentialbackoffstrategy\/init(base:maxcount:maxdelay:)-4kgu6"},"doc://Afluent/documentation/Afluent":{"abstract":[],"url":"\/documentation\/afluent","role":"collection","type":"topic","kind":"symbol","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy/backoff(clock:durationUnit:)":{"url":"\/documentation\/afluent\/exponentialbackoffstrategy\/backoff(clock:durationunit:)","abstract":[],"title":"backoff(clock:durationUnit:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/backoff(clock:durationUnit:)","type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"backoff","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"clock","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Clock","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"durationUnit","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Clock","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Duration","preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}]},"doc://Afluent/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/Afluent\/s8SendableP","title":"Swift.Sendable"},"doc://Afluent/documentation/Afluent/BackoffStrategy":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","type":"topic","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BackoffStrategy","kind":"identifier"}],"url":"\/documentation\/afluent\/backoffstrategy","title":"BackoffStrategy","navigatorTitle":[{"text":"BackoffStrategy","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"A protocol for implementing custom backoff strategies for retry mechanisms.","type":"text"}]},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy/BackoffStrategy-Implementations":{"role":"collectionGroup","type":"topic","url":"\/documentation\/afluent\/exponentialbackoffstrategy\/backoffstrategy-implementations","title":"BackoffStrategy Implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/BackoffStrategy-Implementations","kind":"article","abstract":[]}}}