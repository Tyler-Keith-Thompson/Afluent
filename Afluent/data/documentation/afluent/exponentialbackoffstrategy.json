{"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"actor"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ExponentialBackoffStrategy"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Clock"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Clock","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:12_Concurrency5ClockP","text":"Clock","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","anchor":"overview","text":"Overview","level":2},{"inlineContent":[{"type":"text","text":"This actor calculates exponential delays between retries based on a specified base value. With each retry,"},{"type":"text","text":" "},{"text":"the delay increases exponentially until the maximum retry count is reached.","type":"text"}],"type":"paragraph"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/exponentialbackoffstrategy"]}],"kind":"symbol","abstract":[{"type":"text","text":"An exponential backoff strategy for retrying operations."}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"topicSections":[{"generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/init(base:maxCount:maxDelay:)-3j13l","doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/init(base:maxCount:maxDelay:)-4kgu6"],"anchor":"Initializers","title":"Initializers"},{"generated":true,"anchor":"Instance-Methods","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/backoff(clock:durationUnit:)"],"title":"Instance Methods"},{"title":"Default Implementations","anchor":"Default-Implementations","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/Actor-Implementations","doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/BackoffStrategy-Implementations"]}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"relationshipsSections":[{"kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","doc:\/\/Afluent\/s8SendableP","doc:\/\/Afluent\/ScA"],"title":"Conforms To"}],"metadata":{"externalID":"s:7Afluent26ExponentialBackoffStrategyC","platforms":[{"deprecated":false,"name":"iOS","unavailable":false,"introducedAt":"16.0","beta":false},{"introducedAt":"13.0","deprecated":false,"beta":false,"unavailable":false,"name":"macOS"},{"introducedAt":"16.0","deprecated":false,"name":"tvOS","unavailable":false,"beta":false},{"name":"watchOS","unavailable":false,"beta":false,"introducedAt":"9.0","deprecated":false}],"role":"symbol","modules":[{"name":"Afluent"}],"roleHeading":"Class","symbolKind":"class","title":"ExponentialBackoffStrategy","navigatorTitle":[{"text":"ExponentialBackoffStrategy","kind":"identifier"}],"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/RetryStrategies\/RetryByBackoffStrategy.swift#L122","fileName":"RetryByBackoffStrategy.swift"},"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"ExponentialBackoffStrategy","kind":"identifier"}]},"sections":[],"references":{"doc://Afluent/documentation/Afluent/BackoffStrategy":{"url":"\/documentation\/afluent\/backoffstrategy","role":"symbol","navigatorTitle":[{"text":"BackoffStrategy","kind":"identifier"}],"title":"BackoffStrategy","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"BackoffStrategy","kind":"identifier"}],"abstract":[{"type":"text","text":"A protocol for implementing custom backoff strategies in retry mechanisms."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","type":"topic"},"doc://Afluent/documentation/Afluent":{"kind":"symbol","role":"collection","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent","abstract":[],"title":"Afluent","url":"\/documentation\/afluent"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy/init(base:maxCount:maxDelay:)-4kgu6":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/init(base:maxCount:maxDelay:)-4kgu6","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"base","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"maxCount"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":", ","kind":"text"},{"text":"maxDelay","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Clock"},{"kind":"text","text":"."},{"preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa","text":"Duration","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","abstract":[{"type":"text","text":"Creates a new exponential backoff strategy with the given base and maximum retry count."}],"kind":"symbol","title":"init(base:maxCount:maxDelay:)","url":"\/documentation\/afluent\/exponentialbackoffstrategy\/init(base:maxcount:maxdelay:)-4kgu6"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy/Actor-Implementations":{"kind":"article","title":"Actor Implementations","abstract":[],"url":"\/documentation\/afluent\/exponentialbackoffstrategy\/actor-implementations","type":"topic","role":"collectionGroup","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/Actor-Implementations"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy":{"kind":"symbol","title":"ExponentialBackoffStrategy","abstract":[{"type":"text","text":"An exponential backoff strategy for retrying operations."}],"url":"\/documentation\/afluent\/exponentialbackoffstrategy","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ExponentialBackoffStrategy"}],"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","navigatorTitle":[{"kind":"identifier","text":"ExponentialBackoffStrategy"}]},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy/init(base:maxCount:maxDelay:)-3j13l":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/init(base:maxCount:maxDelay:)-3j13l","title":"init(base:maxCount:maxDelay:)","url":"\/documentation\/afluent\/exponentialbackoffstrategy\/init(base:maxcount:maxdelay:)-3j13l","role":"symbol","abstract":[{"type":"text","text":"Creates a new exponential backoff strategy with the given base and maximum retry count."}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"base"},{"kind":"text","text":": "},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":", ","kind":"text"},{"text":"maxCount","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"maxDelay","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Clock"},{"text":".","kind":"text"},{"preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa","text":"Duration","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","type":"topic"},"doc://Afluent/ScA":{"type":"unresolvable","title":"_Concurrency.Actor","identifier":"doc:\/\/Afluent\/ScA"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy/BackoffStrategy-Implementations":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/BackoffStrategy-Implementations","title":"BackoffStrategy Implementations","url":"\/documentation\/afluent\/exponentialbackoffstrategy\/backoffstrategy-implementations","role":"collectionGroup","abstract":[],"kind":"article","type":"topic"},"doc://Afluent/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/Afluent\/s8SendableP"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy/backoff(clock:durationUnit:)":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/backoff(clock:durationUnit:)","title":"backoff(clock:durationUnit:)","url":"\/documentation\/afluent\/exponentialbackoffstrategy\/backoff(clock:durationunit:)","role":"symbol","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"backoff","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"clock"},{"text":": ","kind":"text"},{"text":"Clock","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"durationUnit","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"text":"Clock","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa","kind":"typeIdentifier","text":"Duration"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"kind":"symbol","type":"topic"}}}