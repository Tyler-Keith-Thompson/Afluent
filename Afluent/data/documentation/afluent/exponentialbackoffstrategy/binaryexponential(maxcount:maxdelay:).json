{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"binaryExponential","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"maxCount"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"maxDelay","kind":"externalParam"},{"kind":"text","text":": "},{"text":"ContinuousClock","preciseIdentifier":"s:12_Concurrency15ContinuousClockV","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Duration","preciseIdentifier":"s:12_Concurrency15ContinuousClockV8Durationa"},{"kind":"text","text":" = .seconds(Int.max)) -> "},{"kind":"typeIdentifier","text":"ExponentialBackoffStrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","preciseIdentifier":"s:7Afluent26ExponentialBackoffStrategyC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Clock","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/Clock","preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa"},{"text":">","kind":"text"}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The maximum number of retries allowed.","type":"text"}]}],"name":"maxCount"},{"name":"maxDelay","content":[{"type":"paragraph","inlineContent":[{"text":"The maximum duration to wait.","type":"text"}]}]}]},{"kind":"content","content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"code":"ExponentialBackoffStrategy","type":"codeVoice"},{"type":"text","text":" configured with a base of 2 and the provided maximum retry count."}]}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The base duration for this strategy is set to 2, meaning the delay will double with each retry.","type":"text"}]}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"role":"symbol","platforms":[{"introducedAt":"16.0","name":"iOS","deprecated":false,"unavailable":false,"beta":false},{"introducedAt":"13.0","deprecated":false,"name":"macOS","unavailable":false,"beta":false},{"unavailable":false,"name":"tvOS","deprecated":false,"beta":false,"introducedAt":"16.0"},{"unavailable":false,"beta":false,"name":"watchOS","deprecated":false,"introducedAt":"9.0"}],"roleHeading":"Type Method","title":"binaryExponential(maxCount:maxDelay:)","extendedModule":"Afluent","externalID":"s:7Afluent15BackoffStrategyPA2A011ExponentialbC0Cy12_Concurrency15ContinuousClockVGRszrlE06binaryD08maxCount0I5DelayAISu_s8DurationVtFZ::SYNTHESIZED::s:7Afluent26ExponentialBackoffStrategyC","symbolKind":"method","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" is "},{"code":"ExponentialBackoffStrategy<ContinuousClock>","type":"codeVoice"},{"type":"text","text":"."}]},"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"binaryExponential"},{"kind":"text","text":"("},{"kind":"externalParam","text":"maxCount"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"text":", ","kind":"text"},{"text":"maxDelay","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ContinuousClock","preciseIdentifier":"s:12_Concurrency15ContinuousClockV"},{"kind":"text","text":"."},{"preciseIdentifier":"s:12_Concurrency15ContinuousClockV8Durationa","text":"Duration","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"ExponentialBackoffStrategy","preciseIdentifier":"s:7Afluent26ExponentialBackoffStrategyC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Clock","preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa"},{"kind":"text","text":">"}],"remoteSource":{"fileName":"RetryByBackoffStrategy.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/RetryStrategies\/RetryByBackoffStrategy.swift#L110"},"modules":[{"name":"Afluent"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/exponentialbackoffstrategy\/binaryexponential(maxcount:maxdelay:)"]}],"sections":[],"kind":"symbol","identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/binaryExponential(maxCount:maxDelay:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Creates a binary exponential backoff strategy with a maximum retry count."}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/BackoffStrategy-Implementations"]]},"references":{"doc://Afluent/documentation/Afluent":{"kind":"symbol","role":"collection","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","abstract":[],"type":"topic","url":"\/documentation\/afluent"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy/BackoffStrategy-Implementations":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/BackoffStrategy-Implementations","url":"\/documentation\/afluent\/exponentialbackoffstrategy\/backoffstrategy-implementations","kind":"article","abstract":[],"role":"collectionGroup","title":"BackoffStrategy Implementations","type":"topic"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy/binaryExponential(maxCount:maxDelay:)":{"url":"\/documentation\/afluent\/exponentialbackoffstrategy\/binaryexponential(maxcount:maxdelay:)","title":"binaryExponential(maxCount:maxDelay:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"binaryExponential","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"maxCount"},{"kind":"text","text":": "},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":", ","kind":"text"},{"text":"maxDelay","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency15ContinuousClockV","text":"ContinuousClock"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Duration","preciseIdentifier":"s:12_Concurrency15ContinuousClockV8Durationa"},{"kind":"text","text":") -> "},{"text":"ExponentialBackoffStrategy","preciseIdentifier":"s:7Afluent26ExponentialBackoffStrategyC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Clock","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa"},{"text":">","kind":"text"}],"kind":"symbol","role":"symbol","abstract":[{"text":"Creates a binary exponential backoff strategy with a maximum retry count.","type":"text"}],"type":"topic","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" is "},{"type":"codeVoice","code":"ExponentialBackoffStrategy<ContinuousClock>"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/binaryExponential(maxCount:maxDelay:)"},"doc://Afluent/documentation/Afluent/BackoffStrategy/Clock":{"kind":"symbol","type":"topic","abstract":[],"role":"symbol","required":true,"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/Clock","url":"\/documentation\/afluent\/backoffstrategy\/clock","title":"Clock","fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Clock"},{"kind":"text","text":" : "},{"text":"Clock","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency5ClockP"}]},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy":{"title":"ExponentialBackoffStrategy","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ExponentialBackoffStrategy"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","abstract":[{"text":"An exponential backoff strategy for retrying operations.","type":"text"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ExponentialBackoffStrategy"}],"url":"\/documentation\/afluent\/exponentialbackoffstrategy"}}}