{"abstract":[{"text":"Creates an exponential backoff strategy with a configurable base and maximum retry count.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/BackoffStrategy-Implementations"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"exponential","kind":"identifier"},{"kind":"text","text":"("},{"text":"base","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maxCount"},{"kind":"text","text":": "},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"text":"maxDelay","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ContinuousClock","preciseIdentifier":"s:12_Concurrency15ContinuousClockV"},{"kind":"text","text":"."},{"text":"Duration","preciseIdentifier":"s:12_Concurrency15ContinuousClockV8Durationa","kind":"typeIdentifier"},{"kind":"text","text":" = .seconds(Int.max)) -> "},{"text":"ExponentialBackoffStrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent26ExponentialBackoffStrategyC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Clock","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/Clock","preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa"},{"text":">","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"base","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The base duration for the backoff, which will exponentially increase with each retry."}]}]},{"name":"maxCount","content":[{"inlineContent":[{"type":"text","text":"The maximum number of retries allowed."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The maximum duration to wait.","type":"text"}]}],"name":"maxDelay"}]},{"content":[{"text":"Return Value","level":2,"anchor":"return-value","type":"heading"},{"inlineContent":[{"type":"text","text":"An "},{"type":"codeVoice","code":"ExponentialBackoffStrategy"},{"type":"text","text":" configured with the provided base and maximum retry count."}],"type":"paragraph"}],"kind":"content"}],"sections":[],"metadata":{"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/RetryStrategies\/RetryByBackoffStrategy.swift#L96","fileName":"RetryByBackoffStrategy.swift"},"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" is "},{"code":"ExponentialBackoffStrategy<ContinuousClock>","type":"codeVoice"},{"type":"text","text":"."}]},"title":"exponential(base:maxCount:maxDelay:)","modules":[{"name":"Afluent"}],"symbolKind":"method","platforms":[{"deprecated":false,"introducedAt":"16.0","name":"iOS","unavailable":false,"beta":false},{"beta":false,"introducedAt":"13.0","name":"macOS","unavailable":false,"deprecated":false},{"name":"tvOS","unavailable":false,"beta":false,"deprecated":false,"introducedAt":"16.0"},{"unavailable":false,"deprecated":false,"name":"watchOS","introducedAt":"9.0","beta":false}],"externalID":"s:7Afluent15BackoffStrategyPA2A011ExponentialbC0Cy12_Concurrency15ContinuousClockVGRszrlE11exponential4base8maxCount0J5DelayAISu_Sus8DurationVtFZ::SYNTHESIZED::s:7Afluent26ExponentialBackoffStrategyC","extendedModule":"Afluent","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"exponential","kind":"identifier"},{"text":"(","kind":"text"},{"text":"base","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"text":", ","kind":"text"},{"text":"maxCount","kind":"externalParam"},{"kind":"text","text":": "},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"text":"maxDelay","kind":"externalParam"},{"kind":"text","text":": "},{"text":"ContinuousClock","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency15ContinuousClockV"},{"text":".","kind":"text"},{"text":"Duration","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency15ContinuousClockV8Durationa"},{"text":") -> ","kind":"text"},{"text":"ExponentialBackoffStrategy","preciseIdentifier":"s:7Afluent26ExponentialBackoffStrategyC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Clock","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa"},{"text":">","kind":"text"}],"roleHeading":"Type Method"},"kind":"symbol","identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/exponential(base:maxCount:maxDelay:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/exponentialbackoffstrategy\/exponential(base:maxcount:maxdelay:)"]}],"references":{"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy/BackoffStrategy-Implementations":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/BackoffStrategy-Implementations","url":"\/documentation\/afluent\/exponentialbackoffstrategy\/backoffstrategy-implementations","title":"BackoffStrategy Implementations","abstract":[],"kind":"article","type":"topic","role":"collectionGroup"},"doc://Afluent/documentation/Afluent/BackoffStrategy/Clock":{"kind":"symbol","abstract":[],"title":"Clock","type":"topic","url":"\/documentation\/afluent\/backoffstrategy\/clock","required":true,"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy\/Clock","fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"text":"Clock","kind":"identifier"},{"kind":"text","text":" : "},{"text":"Clock","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency5ClockP"}]},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy/exponential(base:maxCount:maxDelay:)":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/exponential(base:maxCount:maxDelay:)","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"exponential","kind":"identifier"},{"text":"(","kind":"text"},{"text":"base","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maxCount"},{"kind":"text","text":": "},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maxDelay"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ContinuousClock","preciseIdentifier":"s:12_Concurrency15ContinuousClockV"},{"text":".","kind":"text"},{"preciseIdentifier":"s:12_Concurrency15ContinuousClockV8Durationa","text":"Duration","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"ExponentialBackoffStrategy","preciseIdentifier":"s:7Afluent26ExponentialBackoffStrategyC"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Clock","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa"},{"kind":"text","text":">"}],"url":"\/documentation\/afluent\/exponentialbackoffstrategy\/exponential(base:maxcount:maxdelay:)","abstract":[{"type":"text","text":"Creates an exponential backoff strategy with a configurable base and maximum retry count."}],"role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" is "},{"type":"codeVoice","code":"ExponentialBackoffStrategy<ContinuousClock>"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"title":"exponential(base:maxCount:maxDelay:)","kind":"symbol"},"doc://Afluent/documentation/Afluent":{"kind":"symbol","abstract":[],"url":"\/documentation\/afluent","type":"topic","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","role":"collection"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","role":"symbol","navigatorTitle":[{"text":"ExponentialBackoffStrategy","kind":"identifier"}],"type":"topic","url":"\/documentation\/afluent\/exponentialbackoffstrategy","abstract":[{"type":"text","text":"An exponential backoff strategy for retrying operations."}],"title":"ExponentialBackoffStrategy","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"ExponentialBackoffStrategy","kind":"identifier"}]}}}