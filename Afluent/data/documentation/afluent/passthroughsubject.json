{"metadata":{"symbolKind":"class","roleHeading":"Class","navigatorTitle":[{"kind":"identifier","text":"PassthroughSubject"}],"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/PassthroughSubject.swift#L27","fileName":"PassthroughSubject.swift"},"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"PassthroughSubject"}],"externalID":"s:7Afluent18PassthroughSubjectC","modules":[{"name":"Afluent"}],"role":"symbol","title":"PassthroughSubject"},"topicSections":[{"title":"Structures","anchor":"Structures","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/Iterator"],"generated":true},{"title":"Initializers","anchor":"Initializers","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/init()"],"generated":true},{"title":"Instance Methods","anchor":"Instance-Methods","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/makeAsyncIterator()","doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/send()","doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/send(_:)","doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/send(completion:)"],"generated":true},{"title":"Enumerations","anchor":"Enumerations","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/Completion"],"generated":true},{"title":"Default Implementations","anchor":"Default-Implementations","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/AsyncSequence-Implementations","doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/AsyncSequence-Implementations"],"generated":true}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/passthroughsubject"]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"PassthroughSubject"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Element"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Sendable","preciseIdentifier":"s:s8SendableP"}],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"text":"Example","type":"heading","anchor":"Example"},{"syntax":"swift","type":"codeListing","code":["let subject = PassthroughSubject<Int>()","","Task {","    for try await value in subject {","        print(\"Received value: \\(value)\")","    }","}","","subject.send(1)","subject.send(2)","subject.send(completion: .finished)"]}]}],"sections":[],"relationshipsSections":[{"kind":"relationships","type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/Afluent\/s8SendableP","doc:\/\/Afluent\/Sci"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject"},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"abstract":[{"type":"text","text":"A subject that broadcasts values to multiple consumers without storing a current value."},{"type":"text","text":" "},{"type":"text","text":"Unlike "},{"type":"codeVoice","code":"CurrentValueSubject"},{"type":"text","text":", "},{"type":"codeVoice","code":"PassthroughSubject"},{"type":"text","text":" does not retain the most recent value."},{"type":"text","text":" "},{"type":"text","text":"It only sends values as they are emitted, meaning consumers will only receive values that are sent after they start listening."},{"type":"text","text":" "},{"type":"text","text":"This is an "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" that allows multiple tasks to asynchronously consume values and mimics Combine’s PassthroughSubject."}],"references":{"doc://Afluent/documentation/Afluent/PassthroughSubject/makeAsyncIterator()":{"abstract":[],"url":"\/documentation\/afluent\/passthroughsubject\/makeasynciterator()","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/makeAsyncIterator()","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeAsyncIterator","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"PassthroughSubject","preciseIdentifier":"s:7Afluent18PassthroughSubjectC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Iterator","preciseIdentifier":"s:7Afluent18PassthroughSubjectC8IteratorV","kind":"typeIdentifier"}],"title":"makeAsyncIterator()"},"doc://Afluent/documentation/Afluent/PassthroughSubject/send(completion:)":{"abstract":[{"type":"text","text":"Completes the subject, preventing any further values from being sent."},{"type":"text","text":" "},{"type":"text","text":"Once completed, all current consumers will receive the completion, and no further values can be emitted."}],"type":"topic","title":"send(completion:)","url":"\/documentation\/afluent\/passthroughsubject\/send(completion:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/send(completion:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"send","kind":"identifier"},{"text":"(","kind":"text"},{"text":"completion","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Afluent18PassthroughSubjectC","text":"PassthroughSubject","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"preciseIdentifier":"s:7Afluent18PassthroughSubjectC10CompletionO","text":"Completion","kind":"typeIdentifier"},{"text":"<any ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":">)","kind":"text"}]},"doc://Afluent/documentation/Afluent/PassthroughSubject/init()":{"url":"\/documentation\/afluent\/passthroughsubject\/init()","abstract":[{"type":"text","text":"Creates a "},{"type":"codeVoice","code":"PassthroughSubject"},{"type":"text","text":"."}],"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"kind":"symbol","type":"topic","title":"init()","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/init()"},"doc://Afluent/documentation/Afluent/PassthroughSubject/send()":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/send()","title":"send()","type":"topic","url":"\/documentation\/afluent\/passthroughsubject\/send()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"send"},{"kind":"text","text":"()"}],"role":"symbol","kind":"symbol","abstract":[{"text":"Sends a value to consumers when the subject’s ","type":"text"},{"code":"Element","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"This is useful for signaling purposes rather than data transmission.","type":"text"}]},"doc://Afluent/documentation/Afluent/PassthroughSubject/send(_:)":{"abstract":[{"type":"text","text":"Sends a new value to all current and future consumers."}],"url":"\/documentation\/afluent\/passthroughsubject\/send(_:)","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"send","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/send(_:)","title":"send(_:)","type":"topic"},"doc://Afluent/Sci":{"type":"unresolvable","identifier":"doc:\/\/Afluent\/Sci","title":"_Concurrency.AsyncSequence"},"doc://Afluent/documentation/Afluent":{"title":"Afluent","url":"\/documentation\/afluent","role":"collection","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol","abstract":[]},"doc://Afluent/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/Afluent\/s8SendableP"},"doc://Afluent/documentation/Afluent/PassthroughSubject/Iterator":{"type":"topic","url":"\/documentation\/afluent\/passthroughsubject\/iterator","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/Iterator","navigatorTitle":[{"kind":"identifier","text":"Iterator"}],"title":"PassthroughSubject.Iterator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Iterator"}],"abstract":[],"role":"symbol"},"doc://Afluent/documentation/Afluent/PassthroughSubject":{"type":"topic","abstract":[{"text":"A subject that broadcasts values to multiple consumers without storing a current value.","type":"text"},{"text":" ","type":"text"},{"text":"Unlike ","type":"text"},{"code":"CurrentValueSubject","type":"codeVoice"},{"text":", ","type":"text"},{"code":"PassthroughSubject","type":"codeVoice"},{"text":" does not retain the most recent value.","type":"text"},{"text":" ","type":"text"},{"text":"It only sends values as they are emitted, meaning consumers will only receive values that are sent after they start listening.","type":"text"},{"text":" ","type":"text"},{"text":"This is an ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"text":" that allows multiple tasks to asynchronously consume values and mimics Combine’s PassthroughSubject.","type":"text"}],"kind":"symbol","title":"PassthroughSubject","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"PassthroughSubject"}],"role":"symbol","url":"\/documentation\/afluent\/passthroughsubject","navigatorTitle":[{"kind":"identifier","text":"PassthroughSubject"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject"},"doc://Afluent/documentation/Afluent/PassthroughSubject/Completion":{"type":"topic","url":"\/documentation\/afluent\/passthroughsubject\/completion","navigatorTitle":[{"text":"Completion","kind":"identifier"}],"abstract":[{"type":"text","text":"Represents the completion event of a subject, which can either succeed or fail with an error."}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"kind":"symbol","title":"PassthroughSubject.Completion","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/Completion","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Completion","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/PassthroughSubject/AsyncSequence-Implementations":{"abstract":[],"kind":"article","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/AsyncSequence-Implementations","url":"\/documentation\/afluent\/passthroughsubject\/asyncsequence-implementations","role":"collectionGroup","title":"AsyncSequence Implementations","type":"topic"}}}