{"topicSections":[{"title":"Structures","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/Iterator"],"generated":true,"anchor":"Structures"},{"title":"Initializers","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/init()"],"generated":true,"anchor":"Initializers"},{"title":"Instance Methods","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/makeAsyncIterator()","doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/send()","doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/send(_:)","doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/send(completion:)"],"generated":true,"anchor":"Instance-Methods"},{"title":"Enumerations","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/Completion"],"generated":true,"anchor":"Enumerations"},{"title":"Default Implementations","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/AsyncSequence-Implementations","doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/AsyncSequence-Implementations"],"generated":true,"anchor":"Default-Implementations"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/passthroughsubject"]}],"kind":"symbol","sections":[],"abstract":[{"text":"A subject that broadcasts values to multiple consumers without storing a current value.","type":"text"},{"text":" ","type":"text"},{"text":"Unlike ","type":"text"},{"type":"codeVoice","code":"CurrentValueSubject"},{"text":", ","type":"text"},{"type":"codeVoice","code":"PassthroughSubject"},{"text":" does not retain the most recent value.","type":"text"},{"text":" ","type":"text"},{"text":"It only sends values as they are emitted, meaning consumers will only receive values that are sent after they start listening.","type":"text"},{"text":" ","type":"text"},{"text":"This is an ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"text":" that allows multiple tasks to asynchronously consume values and mimics Combine’s PassthroughSubject.","type":"text"}],"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/Afluent\/s8SendableP","doc:\/\/Afluent\/Sci"],"type":"conformsTo","kind":"relationships"}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PassthroughSubject","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Element","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"}]}],"kind":"declarations"}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Class","role":"symbol","navigatorTitle":[{"text":"PassthroughSubject","kind":"identifier"}],"externalID":"s:7Afluent18PassthroughSubjectC","remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/PassthroughSubject.swift#L12","fileName":"PassthroughSubject.swift"},"title":"PassthroughSubject","modules":[{"name":"Afluent"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PassthroughSubject","kind":"identifier"}],"symbolKind":"class"},"references":{"doc://Afluent/Sci":{"identifier":"doc:\/\/Afluent\/Sci","title":"_Concurrency.AsyncSequence","type":"unresolvable"},"doc://Afluent/documentation/Afluent/PassthroughSubject":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A subject that broadcasts values to multiple consumers without storing a current value."},{"type":"text","text":" "},{"type":"text","text":"Unlike "},{"code":"CurrentValueSubject","type":"codeVoice"},{"type":"text","text":", "},{"code":"PassthroughSubject","type":"codeVoice"},{"type":"text","text":" does not retain the most recent value."},{"type":"text","text":" "},{"type":"text","text":"It only sends values as they are emitted, meaning consumers will only receive values that are sent after they start listening."},{"type":"text","text":" "},{"type":"text","text":"This is an "},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" that allows multiple tasks to asynchronously consume values and mimics Combine’s PassthroughSubject."}],"role":"symbol","navigatorTitle":[{"text":"PassthroughSubject","kind":"identifier"}],"title":"PassthroughSubject","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PassthroughSubject","kind":"identifier"}],"url":"\/documentation\/afluent\/passthroughsubject"},"doc://Afluent/documentation/Afluent/PassthroughSubject/send(completion:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"send","kind":"identifier"},{"text":"(","kind":"text"},{"text":"completion","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"PassthroughSubject","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent18PassthroughSubjectC"},{"text":"<","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Completion","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent18PassthroughSubjectC10CompletionO"},{"text":"<any ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":">)","kind":"text"}],"kind":"symbol","abstract":[{"text":"Completes the subject, preventing any further values from being sent.","type":"text"},{"text":" ","type":"text"},{"text":"Once completed, all current consumers will receive the completion, and no further values can be emitted.","type":"text"}],"type":"topic","title":"send(completion:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/send(completion:)","url":"\/documentation\/afluent\/passthroughsubject\/send(completion:)"},"doc://Afluent/s8SendableP":{"identifier":"doc:\/\/Afluent\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://Afluent/documentation/Afluent/PassthroughSubject/Iterator":{"type":"topic","abstract":[],"role":"symbol","url":"\/documentation\/afluent\/passthroughsubject\/iterator","kind":"symbol","title":"PassthroughSubject.Iterator","navigatorTitle":[{"text":"Iterator","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/Iterator","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Iterator","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/PassthroughSubject/send(_:)":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/send(_:)","kind":"symbol","abstract":[{"type":"text","text":"Sends a new value to all current and future consumers."}],"type":"topic","title":"send(_:)","url":"\/documentation\/afluent\/passthroughsubject\/send(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"send"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":")"}],"role":"symbol"},"doc://Afluent/documentation/Afluent/PassthroughSubject/makeAsyncIterator()":{"kind":"symbol","url":"\/documentation\/afluent\/passthroughsubject\/makeasynciterator()","type":"topic","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/makeAsyncIterator()","title":"makeAsyncIterator()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeAsyncIterator"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7Afluent18PassthroughSubjectC","kind":"typeIdentifier","text":"PassthroughSubject"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">."},{"preciseIdentifier":"s:7Afluent18PassthroughSubjectC8IteratorV","kind":"typeIdentifier","text":"Iterator"}],"role":"symbol"},"doc://Afluent/documentation/Afluent/PassthroughSubject/send()":{"kind":"symbol","abstract":[{"text":"Sends a value to consumers when the subject’s ","type":"text"},{"code":"Element","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"This is useful for signaling purposes rather than data transmission.","type":"text"}],"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/send()","url":"\/documentation\/afluent\/passthroughsubject\/send()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"send"},{"kind":"text","text":"()"}],"type":"topic","title":"send()"},"doc://Afluent/documentation/Afluent":{"url":"\/documentation\/afluent","title":"Afluent","type":"topic","kind":"symbol","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent","role":"collection"},"doc://Afluent/documentation/Afluent/PassthroughSubject/Completion":{"type":"topic","kind":"symbol","url":"\/documentation\/afluent\/passthroughsubject\/completion","navigatorTitle":[{"kind":"identifier","text":"Completion"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Completion"}],"title":"PassthroughSubject.Completion","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/Completion","role":"symbol","abstract":[{"type":"text","text":"Represents the completion event of a subject, which can either succeed or fail with an error."}]},"doc://Afluent/documentation/Afluent/PassthroughSubject/AsyncSequence-Implementations":{"title":"AsyncSequence Implementations","url":"\/documentation\/afluent\/passthroughsubject\/asyncsequence-implementations","type":"topic","abstract":[],"role":"collectionGroup","kind":"article","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/AsyncSequence-Implementations"},"doc://Afluent/documentation/Afluent/PassthroughSubject/init()":{"kind":"symbol","abstract":[{"type":"text","text":"Creates a "},{"type":"codeVoice","code":"PassthroughSubject"},{"text":".","type":"text"}],"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/init()","url":"\/documentation\/afluent\/passthroughsubject\/init()","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"type":"topic","title":"init()"}}}