{"sections":[],"metadata":{"externalID":"s:7Afluent18PassthroughSubjectC","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"PassthroughSubject"}],"title":"PassthroughSubject","role":"symbol","roleHeading":"Class","modules":[{"name":"Afluent"}],"symbolKind":"class","remoteSource":{"fileName":"PassthroughSubject.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/PassthroughSubject.swift#L12"},"navigatorTitle":[{"kind":"identifier","text":"PassthroughSubject"}]},"topicSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/Iterator"],"title":"Structures","generated":true,"anchor":"Structures"},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/init()"],"title":"Initializers","generated":true,"anchor":"Initializers"},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/makeAsyncIterator()","doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/send()","doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/send(_:)","doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/send(completion:)"],"title":"Instance Methods","generated":true,"anchor":"Instance-Methods"},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/Completion"],"title":"Enumerations","generated":true,"anchor":"Enumerations"},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/AsyncSequence-Implementations","doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/AsyncSequence-Implementations"],"title":"Default Implementations","generated":true,"anchor":"Default-Implementations"}],"variants":[{"paths":["\/documentation\/afluent\/passthroughsubject"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"A subject that broadcasts values to multiple consumers without storing a current value."},{"type":"text","text":" "},{"type":"text","text":"Unlike "},{"type":"codeVoice","code":"CurrentValueSubject"},{"type":"text","text":", "},{"type":"codeVoice","code":"PassthroughSubject"},{"type":"text","text":" does not retain the most recent value."},{"type":"text","text":" "},{"type":"text","text":"It only sends values as they are emitted, meaning consumers will only receive values that are sent after they start listening."},{"type":"text","text":" "},{"type":"text","text":"This is an "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" that allows multiple tasks to asynchronously consume values and mimics Combine’s PassthroughSubject."}],"kind":"symbol","relationshipsSections":[{"identifiers":["doc:\/\/Afluent\/s8SendableP","doc:\/\/Afluent\/Sci"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PassthroughSubject","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Element","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP","text":"Sendable"}]}]}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"references":{"doc://Afluent/documentation/Afluent/PassthroughSubject/AsyncSequence-Implementations":{"type":"topic","title":"AsyncSequence Implementations","abstract":[],"kind":"article","role":"collectionGroup","url":"\/documentation\/afluent\/passthroughsubject\/asyncsequence-implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/AsyncSequence-Implementations"},"doc://Afluent/documentation/Afluent/PassthroughSubject/Iterator":{"url":"\/documentation\/afluent\/passthroughsubject\/iterator","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/Iterator","type":"topic","abstract":[],"kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Iterator","kind":"identifier"}],"navigatorTitle":[{"text":"Iterator","kind":"identifier"}],"title":"PassthroughSubject.Iterator"},"doc://Afluent/s8SendableP":{"identifier":"doc:\/\/Afluent\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://Afluent/documentation/Afluent/PassthroughSubject":{"abstract":[{"type":"text","text":"A subject that broadcasts values to multiple consumers without storing a current value."},{"type":"text","text":" "},{"type":"text","text":"Unlike "},{"code":"CurrentValueSubject","type":"codeVoice"},{"type":"text","text":", "},{"code":"PassthroughSubject","type":"codeVoice"},{"type":"text","text":" does not retain the most recent value."},{"type":"text","text":" "},{"type":"text","text":"It only sends values as they are emitted, meaning consumers will only receive values that are sent after they start listening."},{"type":"text","text":" "},{"type":"text","text":"This is an "},{"type":"codeVoice","code":"AsyncSequence"},{"text":" that allows multiple tasks to asynchronously consume values and mimics Combine’s PassthroughSubject.","type":"text"}],"url":"\/documentation\/afluent\/passthroughsubject","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"PassthroughSubject"}],"title":"PassthroughSubject","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"PassthroughSubject"}]},"doc://Afluent/documentation/Afluent/PassthroughSubject/Completion":{"role":"symbol","url":"\/documentation\/afluent\/passthroughsubject\/completion","type":"topic","abstract":[{"type":"text","text":"Represents the completion event of a subject, which can either succeed or fail with an error."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Completion"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/Completion","navigatorTitle":[{"kind":"identifier","text":"Completion"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"PassthroughSubject.Completion"},"doc://Afluent/documentation/Afluent/PassthroughSubject/send()":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/send()","kind":"symbol","abstract":[{"text":"Sends a value to consumers when the subject’s ","type":"text"},{"code":"Element","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"This is useful for signaling purposes rather than data transmission.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"send"},{"kind":"text","text":"()"}],"title":"send()","type":"topic","url":"\/documentation\/afluent\/passthroughsubject\/send()"},"doc://Afluent/documentation/Afluent/PassthroughSubject/send(completion:)":{"role":"symbol","type":"topic","title":"send(completion:)","abstract":[{"type":"text","text":"Completes the subject, preventing any further values from being sent."},{"type":"text","text":" "},{"type":"text","text":"Once completed, all current consumers will receive the completion, and no further values can be emitted."}],"url":"\/documentation\/afluent\/passthroughsubject\/send(completion:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"send","kind":"identifier"},{"text":"(","kind":"text"},{"text":"completion","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"PassthroughSubject","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent18PassthroughSubjectC"},{"text":"<","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Completion","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent18PassthroughSubjectC10CompletionO"},{"text":"<any ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":">)","kind":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/send(completion:)"},"doc://Afluent/documentation/Afluent/PassthroughSubject/makeAsyncIterator()":{"url":"\/documentation\/afluent\/passthroughsubject\/makeasynciterator()","title":"makeAsyncIterator()","type":"topic","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeAsyncIterator","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"PassthroughSubject","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent18PassthroughSubjectC"},{"text":"<","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Iterator","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent18PassthroughSubjectC8IteratorV"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/makeAsyncIterator()","kind":"symbol","role":"symbol"},"doc://Afluent/documentation/Afluent/PassthroughSubject/init()":{"role":"symbol","type":"topic","title":"init()","abstract":[{"text":"Creates a ","type":"text"},{"code":"PassthroughSubject","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/afluent\/passthroughsubject\/init()","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/init()"},"doc://Afluent/Sci":{"identifier":"doc:\/\/Afluent\/Sci","title":"_Concurrency.AsyncSequence","type":"unresolvable"},"doc://Afluent/documentation/Afluent":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent","abstract":[],"title":"Afluent","type":"topic","kind":"symbol","role":"collection","url":"\/documentation\/afluent"},"doc://Afluent/documentation/Afluent/PassthroughSubject/send(_:)":{"url":"\/documentation\/afluent\/passthroughsubject\/send(_:)","title":"send(_:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/send(_:)","abstract":[{"text":"Sends a new value to all current and future consumers.","type":"text"}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"send","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","type":"topic"}}}