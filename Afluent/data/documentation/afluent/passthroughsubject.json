{"metadata":{"role":"symbol","title":"PassthroughSubject","symbolKind":"class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"PassthroughSubject"}],"modules":[{"name":"Afluent"}],"navigatorTitle":[{"kind":"identifier","text":"PassthroughSubject"}],"remoteSource":{"fileName":"PassthroughSubject.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/PassthroughSubject.swift#L27"},"roleHeading":"Class","externalID":"s:7Afluent18PassthroughSubjectC"},"sections":[],"kind":"symbol","topicSections":[{"generated":true,"title":"Structures","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/Iterator"],"anchor":"Structures"},{"generated":true,"title":"Initializers","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/init()"],"anchor":"Initializers"},{"generated":true,"title":"Instance Methods","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/makeAsyncIterator()","doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/send()","doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/send(_:)","doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/send(completion:)"],"anchor":"Instance-Methods"},{"generated":true,"title":"Enumerations","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/Completion"],"anchor":"Enumerations"},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/AsyncSequence-Implementations","doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/AsyncSequence-Implementations"],"anchor":"Default-Implementations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/passthroughsubject"]}],"abstract":[{"text":"A subject that broadcasts values to multiple consumers without storing a current value.","type":"text"},{"text":" ","type":"text"},{"text":"Unlike ","type":"text"},{"code":"CurrentValueSubject","type":"codeVoice"},{"text":", ","type":"text"},{"code":"PassthroughSubject","type":"codeVoice"},{"text":" does not retain the most recent value.","type":"text"},{"text":" ","type":"text"},{"text":"It only sends values as they are emitted, meaning consumers will only receive values that are sent after they start listening.","type":"text"},{"text":" ","type":"text"},{"text":"This is an ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"text":" that allows multiple tasks to asynchronously consume values and mimics Combine’s PassthroughSubject.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject"},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"relationshipsSections":[{"type":"conformsTo","kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/Afluent\/s8SendableP","doc:\/\/Afluent\/Sci"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PassthroughSubject","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Element","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"}]}]},{"content":[{"anchor":"Example","type":"heading","level":2,"text":"Example"},{"type":"codeListing","syntax":null,"code":["let subject = PassthroughSubject<Int>()","","Task {","    for try await value in subject {","        print(\"Received value: \\(value)\")","    }","}","","subject.send(1)","subject.send(2)","subject.send(completion: .finished)"]}],"kind":"content"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://Afluent/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/Afluent\/s8SendableP","type":"unresolvable"},"doc://Afluent/documentation/Afluent/PassthroughSubject/makeAsyncIterator()":{"role":"symbol","url":"\/documentation\/afluent\/passthroughsubject\/makeasynciterator()","type":"topic","title":"makeAsyncIterator()","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/makeAsyncIterator()","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeAsyncIterator","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"PassthroughSubject","preciseIdentifier":"s:7Afluent18PassthroughSubjectC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"Iterator","preciseIdentifier":"s:7Afluent18PassthroughSubjectC8IteratorV"}]},"doc://Afluent/documentation/Afluent/PassthroughSubject/send()":{"type":"topic","title":"send()","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Sends a value to consumers when the subject’s "},{"code":"Element","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Void","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"This is useful for signaling purposes rather than data transmission."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"send"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/send()","url":"\/documentation\/afluent\/passthroughsubject\/send()"},"doc://Afluent/documentation/Afluent/PassthroughSubject/Iterator":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Iterator"}],"abstract":[],"navigatorTitle":[{"kind":"identifier","text":"Iterator"}],"type":"topic","title":"PassthroughSubject.Iterator","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/Iterator","kind":"symbol","url":"\/documentation\/afluent\/passthroughsubject\/iterator","role":"symbol"},"doc://Afluent/documentation/Afluent/PassthroughSubject/send(completion:)":{"kind":"symbol","abstract":[{"type":"text","text":"Completes the subject, preventing any further values from being sent."},{"type":"text","text":" "},{"type":"text","text":"Once completed, all current consumers will receive the completion, and no further values can be emitted."}],"role":"symbol","title":"send(completion:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"send","kind":"identifier"},{"text":"(","kind":"text"},{"text":"completion","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"PassthroughSubject","preciseIdentifier":"s:7Afluent18PassthroughSubjectC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Completion","preciseIdentifier":"s:7Afluent18PassthroughSubjectC10CompletionO","kind":"typeIdentifier"},{"text":"<any ","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/send(completion:)","url":"\/documentation\/afluent\/passthroughsubject\/send(completion:)"},"doc://Afluent/Sci":{"identifier":"doc:\/\/Afluent\/Sci","type":"unresolvable","title":"_Concurrency.AsyncSequence"},"doc://Afluent/documentation/Afluent":{"abstract":[],"url":"\/documentation\/afluent","role":"collection","type":"topic","kind":"symbol","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent"},"doc://Afluent/documentation/Afluent/PassthroughSubject/Completion":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}]},"abstract":[{"text":"Represents the completion event of a subject, which can either succeed or fail with an error.","type":"text"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/Completion","url":"\/documentation\/afluent\/passthroughsubject\/completion","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Completion"}],"title":"PassthroughSubject.Completion","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Completion"}]},"doc://Afluent/documentation/Afluent/PassthroughSubject":{"navigatorTitle":[{"text":"PassthroughSubject","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject","role":"symbol","title":"PassthroughSubject","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PassthroughSubject","kind":"identifier"}],"type":"topic","url":"\/documentation\/afluent\/passthroughsubject","kind":"symbol","abstract":[{"text":"A subject that broadcasts values to multiple consumers without storing a current value.","type":"text"},{"text":" ","type":"text"},{"text":"Unlike ","type":"text"},{"code":"CurrentValueSubject","type":"codeVoice"},{"text":", ","type":"text"},{"code":"PassthroughSubject","type":"codeVoice"},{"text":" does not retain the most recent value.","type":"text"},{"text":" ","type":"text"},{"text":"It only sends values as they are emitted, meaning consumers will only receive values that are sent after they start listening.","type":"text"},{"text":" ","type":"text"},{"text":"This is an ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" that allows multiple tasks to asynchronously consume values and mimics Combine’s PassthroughSubject."}]},"doc://Afluent/documentation/Afluent/PassthroughSubject/send(_:)":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/send(_:)","title":"send(_:)","url":"\/documentation\/afluent\/passthroughsubject\/send(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"send"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Sends a new value to all current and future consumers."}],"kind":"symbol","role":"symbol","type":"topic"},"doc://Afluent/documentation/Afluent/PassthroughSubject/init()":{"fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol","kind":"symbol","type":"topic","abstract":[{"text":"Creates a ","type":"text"},{"code":"PassthroughSubject","type":"codeVoice"},{"text":".","type":"text"}],"title":"init()","url":"\/documentation\/afluent\/passthroughsubject\/init()","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/init()"},"doc://Afluent/documentation/Afluent/PassthroughSubject/AsyncSequence-Implementations":{"type":"topic","abstract":[],"url":"\/documentation\/afluent\/passthroughsubject\/asyncsequence-implementations","kind":"article","role":"collectionGroup","title":"AsyncSequence Implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/AsyncSequence-Implementations"}}}