{"kind":"symbol","variants":[{"paths":["\/documentation\/afluent\/passthroughsubject\/decode(type:decoder:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decode"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"D"},{"kind":"text","text":">("},{"kind":"externalParam","text":"type"},{"kind":"text","text":" "},{"kind":"internalParam","text":"_"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"decoder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Decode","preciseIdentifier":"s:7Afluent14AsyncSequencesO6DecodeV","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Decode"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Decodable","preciseIdentifier":"s:Se"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Sendable","preciseIdentifier":"s:s8SendableP"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"TopLevelDecoder","preciseIdentifier":"s:7Afluent15TopLevelDecoderP","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TopLevelDecoder"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:Sci7ElementQa"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input","preciseIdentifier":"s:7Afluent15TopLevelDecoderP5InputQa","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TopLevelDecoder\/Input"}]}]},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"Use this to decode values from upstream elements (such as encoded JSON) to a concrete type."}],"type":"paragraph"},{"text":"Example","anchor":"Example","type":"heading","level":2},{"code":["struct Person: Decodable { let name: String }","let json = try JSONEncoder().encode(Person(name: \"Alice\"))","for try await person in Just(json).decode(type: Person.self, decoder: JSONDecoder()) {","    print(person.name) \/\/ Prints: Alice","}"],"syntax":"swift","type":"codeListing"}],"kind":"content"}],"metadata":{"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/DecodeSequence.swift#L73","fileName":"DecodeSequence.swift"},"conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"modules":[{"name":"Afluent","relatedModules":["_Concurrency"]}],"extendedModule":"_Concurrency","title":"decode(type:decoder:)","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decode","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"D","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"type","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"decoder","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"text":"Decode","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO6DecodeV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","symbolKind":"method","externalID":"s:Sci7Afluents8SendableRzrlE6decode4type7decoderAA14AsyncSequencesO6DecodeVy_xqd_0_qd__Gqd__m_qd_0_tSeRd__sABRd__AA15TopLevelDecoderRd_0_5InputQyd_0_7ElementRtzr0_lF::SYNTHESIZED::s:7Afluent18PassthroughSubjectC"},"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject","doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/AsyncSequence-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/decode(type:decoder:)"},"abstract":[{"text":"Decodes the output from the upstream using a specified decoder.","type":"text"}],"sections":[],"references":{"doc://Afluent/documentation/Afluent":{"type":"topic","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","abstract":[],"url":"\/documentation\/afluent","role":"collection","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"type":"topic","title":"AsyncSequences","url":"\/documentation\/afluent\/asyncsequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequences"}]},"doc://Afluent/documentation/Afluent/PassthroughSubject/AsyncSequence-Implementations":{"url":"\/documentation\/afluent\/passthroughsubject\/asyncsequence-implementations","type":"topic","title":"AsyncSequence Implementations","role":"collectionGroup","abstract":[],"kind":"article","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/AsyncSequence-Implementations"},"doc://Afluent/documentation/Afluent/PassthroughSubject/decode(type:decoder:)":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"abstract":[{"type":"text","text":"Decodes the output from the upstream using a specified decoder."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/decode(type:decoder:)","type":"topic","title":"decode(type:decoder:)","url":"\/documentation\/afluent\/passthroughsubject\/decode(type:decoder:)","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decode","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"D","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"type","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"decoder","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO6DecodeV","text":"Decode","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://Afluent/documentation/Afluent/PassthroughSubject":{"type":"topic","url":"\/documentation\/afluent\/passthroughsubject","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject","abstract":[{"type":"text","text":"A subject that broadcasts values to multiple consumers without storing a current value."},{"type":"text","text":" "},{"type":"text","text":"Unlike "},{"type":"codeVoice","code":"CurrentValueSubject"},{"type":"text","text":", "},{"type":"codeVoice","code":"PassthroughSubject"},{"type":"text","text":" does not retain the most recent value."},{"type":"text","text":" "},{"type":"text","text":"It only sends values as they are emitted, meaning consumers will only receive values that are sent after they start listening."},{"type":"text","text":" "},{"type":"text","text":"This is an "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" that allows multiple tasks to asynchronously consume values and mimics Combineâ€™s PassthroughSubject."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"PassthroughSubject"}],"title":"PassthroughSubject","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"PassthroughSubject"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/Decode":{"role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/decode","kind":"symbol","title":"AsyncSequences.Decode","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Decode","abstract":[{"type":"text","text":"Used as the implementation detail for the "},{"code":"AsyncSequence\/decode(type:decoder:)","type":"codeVoice"},{"type":"text","text":" operator."}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Decode"}],"navigatorTitle":[{"kind":"identifier","text":"Decode"}]},"doc://Afluent/documentation/Afluent/TopLevelDecoder":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TopLevelDecoder","title":"TopLevelDecoder","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TopLevelDecoder"}],"kind":"symbol","abstract":[],"url":"\/documentation\/afluent\/topleveldecoder","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"TopLevelDecoder"}],"type":"topic"},"doc://Afluent/documentation/Afluent/TopLevelDecoder/Input":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TopLevelDecoder\/Input","title":"Input","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Input"}],"kind":"symbol","abstract":[],"required":true,"url":"\/documentation\/afluent\/topleveldecoder\/input","role":"symbol","type":"topic"}}}