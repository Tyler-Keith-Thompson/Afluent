{"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"delay","kind":"identifier"},{"text":"(","kind":"text"},{"text":"for","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"interval","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Duration","kind":"typeIdentifier","preciseIdentifier":"s:s8DurationV"},{"text":", ","kind":"text"},{"text":"tolerance","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Duration","kind":"typeIdentifier","preciseIdentifier":"s:s8DurationV"},{"text":") -> ","kind":"text"},{"text":"AsyncSequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"text":"Delay","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Delay","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO5DelayV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"SuspendingClock","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency15SuspendingClockV"},{"text":">","kind":"text"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"interval","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The duration to delay."}]}]},{"name":"tolerance","content":[{"type":"paragraph","inlineContent":[{"text":"The allowed tolerance for the delay.","type":"text"}]}]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use this to delay events from a sequence before they are delivered to the downstream consumer."}]},{"type":"paragraph","inlineContent":[{"text":"The default clock is ","type":"text"},{"code":"SuspendingClock","type":"codeVoice"},{"text":".","type":"text"}]},{"text":"Example","anchor":"Example","type":"heading","level":2},{"type":"codeListing","code":["for try await value in Just(1).delay(for: .seconds(1), tolerance: .milliseconds(100)) {","    print(value)","}"],"syntax":"swift"}]}],"abstract":[{"type":"text","text":"Delays delivery of all output by the specified amount of time, using a default clock."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/passthroughsubject\/delay(for:tolerance:)"]}],"metadata":{"roleHeading":"Instance Method","title":"delay(for:tolerance:)","conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"modules":[{"relatedModules":["_Concurrency"],"name":"Afluent"}],"platforms":[{"introducedAt":"16.0","deprecated":false,"name":"iOS","unavailable":false,"beta":false},{"introducedAt":"13.0","deprecated":false,"name":"macOS","unavailable":false,"beta":false},{"introducedAt":"16.0","deprecated":false,"name":"tvOS","unavailable":false,"beta":false},{"introducedAt":"1.0","deprecated":false,"name":"visionOS","unavailable":false,"beta":false},{"introducedAt":"9.0","deprecated":false,"name":"watchOS","unavailable":false,"beta":false}],"extendedModule":"_Concurrency","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"delay"},{"kind":"text","text":"("},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Duration","preciseIdentifier":"s:s8DurationV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"tolerance"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Duration","preciseIdentifier":"s:s8DurationV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Delay","preciseIdentifier":"s:7Afluent14AsyncSequencesO5DelayV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"SuspendingClock","preciseIdentifier":"s:12_Concurrency15SuspendingClockV"},{"kind":"text","text":">"}],"symbolKind":"method","role":"symbol","externalID":"s:Sci7Afluents8SendableRzsAB7ElementRpzrlE5delay3for9toleranceAA14AsyncSequencesO5DelayVy_x12_Concurrency15SuspendingClockVGs8DurationV_AQtF::SYNTHESIZED::s:7Afluent18PassthroughSubjectC","remoteSource":{"fileName":"DelaySequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/DelaySequence.swift#L85"}},"kind":"symbol","sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/delay(for:tolerance:)"},"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/Delay":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Delay","title":"AsyncSequences.Delay","role":"symbol","navigatorTitle":[{"text":"Delay","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences\/delay","abstract":[{"text":"Used as the implementation detail for the ","type":"text"},{"type":"codeVoice","code":"AsyncSequence\/delay(for:tolerance:)"},{"text":" operator.","type":"text"}],"type":"topic","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Delay","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/PassthroughSubject":{"type":"topic","abstract":[{"text":"A subject that broadcasts values to multiple consumers without storing a current value.","type":"text"},{"text":" ","type":"text"},{"text":"Unlike ","type":"text"},{"code":"CurrentValueSubject","type":"codeVoice"},{"text":", ","type":"text"},{"code":"PassthroughSubject","type":"codeVoice"},{"text":" does not retain the most recent value.","type":"text"},{"text":" ","type":"text"},{"text":"It only sends values as they are emitted, meaning consumers will only receive values that are sent after they start listening.","type":"text"},{"text":" ","type":"text"},{"text":"This is an ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"text":" that allows multiple tasks to asynchronously consume values and mimics Combineâ€™s PassthroughSubject.","type":"text"}],"kind":"symbol","title":"PassthroughSubject","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"PassthroughSubject"}],"role":"symbol","url":"\/documentation\/afluent\/passthroughsubject","navigatorTitle":[{"kind":"identifier","text":"PassthroughSubject"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject"},"doc://Afluent/documentation/Afluent":{"title":"Afluent","url":"\/documentation\/afluent","role":"collection","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol","abstract":[]},"doc://Afluent/documentation/Afluent/PassthroughSubject/delay(for:tolerance:)":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/delay(for:tolerance:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"delay"},{"kind":"text","text":"("},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Duration","preciseIdentifier":"s:s8DurationV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"tolerance"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Duration","preciseIdentifier":"s:s8DurationV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Delay","preciseIdentifier":"s:7Afluent14AsyncSequencesO5DelayV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"SuspendingClock","preciseIdentifier":"s:12_Concurrency15SuspendingClockV"},{"kind":"text","text":">"}],"url":"\/documentation\/afluent\/passthroughsubject\/delay(for:tolerance:)","abstract":[{"type":"text","text":"Delays delivery of all output by the specified amount of time, using a default clock."}],"kind":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"type":"topic","title":"delay(for:tolerance:)"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","url":"\/documentation\/afluent\/asyncsequences","abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"kind":"symbol","title":"AsyncSequences","type":"topic","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncSequences","kind":"identifier"}],"navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}]}}}