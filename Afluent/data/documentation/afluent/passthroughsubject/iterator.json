{"schemaVersion":{"major":0,"patch":0,"minor":3},"relationshipsSections":[{"identifiers":["doc:\/\/Afluent\/s8SendableP","doc:\/\/Afluent\/ScI"],"kind":"relationships","type":"conformsTo","title":"Conforms To"}],"metadata":{"title":"PassthroughSubject.Iterator","role":"symbol","symbolKind":"struct","roleHeading":"Structure","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Iterator","kind":"identifier"}],"modules":[{"name":"Afluent"}],"externalID":"s:7Afluent18PassthroughSubjectC8IteratorV","navigatorTitle":[{"kind":"identifier","text":"Iterator"}],"remoteSource":{"fileName":"PassthroughSubject.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/PassthroughSubject.swift#L34"}},"topicSections":[{"anchor":"Instance-Methods","title":"Instance Methods","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/Iterator\/next()"],"generated":true},{"anchor":"Default-Implementations","title":"Default Implementations","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/Iterator\/AsyncIteratorProtocol-Implementations"],"generated":true}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Iterator"}],"platforms":["macOS"]}],"kind":"declarations"}],"variants":[{"paths":["\/documentation\/afluent\/passthroughsubject\/iterator"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/Iterator"},"references":{"doc://Afluent/documentation/Afluent/PassthroughSubject/Iterator":{"url":"\/documentation\/afluent\/passthroughsubject\/iterator","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/Iterator","type":"topic","abstract":[],"kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Iterator","kind":"identifier"}],"navigatorTitle":[{"text":"Iterator","kind":"identifier"}],"title":"PassthroughSubject.Iterator"},"doc://Afluent/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/Afluent\/s8SendableP"},"doc://Afluent/documentation/Afluent/PassthroughSubject/Iterator/next()":{"abstract":[],"type":"topic","url":"\/documentation\/afluent\/passthroughsubject\/iterator\/next()","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"next","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/Iterator\/next()","title":"next()"},"doc://Afluent/documentation/Afluent/PassthroughSubject/Iterator/AsyncIteratorProtocol-Implementations":{"url":"\/documentation\/afluent\/passthroughsubject\/iterator\/asynciteratorprotocol-implementations","abstract":[],"title":"AsyncIteratorProtocol Implementations","role":"collectionGroup","type":"topic","kind":"article","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/Iterator\/AsyncIteratorProtocol-Implementations"},"doc://Afluent/documentation/Afluent/PassthroughSubject":{"abstract":[{"type":"text","text":"A subject that broadcasts values to multiple consumers without storing a current value."},{"type":"text","text":" "},{"type":"text","text":"Unlike "},{"code":"CurrentValueSubject","type":"codeVoice"},{"type":"text","text":", "},{"code":"PassthroughSubject","type":"codeVoice"},{"type":"text","text":" does not retain the most recent value."},{"type":"text","text":" "},{"type":"text","text":"It only sends values as they are emitted, meaning consumers will only receive values that are sent after they start listening."},{"type":"text","text":" "},{"type":"text","text":"This is an "},{"type":"codeVoice","code":"AsyncSequence"},{"text":" that allows multiple tasks to asynchronously consume values and mimics Combineâ€™s PassthroughSubject.","type":"text"}],"url":"\/documentation\/afluent\/passthroughsubject","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"PassthroughSubject"}],"title":"PassthroughSubject","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"PassthroughSubject"}]},"doc://Afluent/ScI":{"identifier":"doc:\/\/Afluent\/ScI","type":"unresolvable","title":"_Concurrency.AsyncIteratorProtocol"},"doc://Afluent/documentation/Afluent":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent","abstract":[],"title":"Afluent","type":"topic","kind":"symbol","role":"collection","url":"\/documentation\/afluent"}}}