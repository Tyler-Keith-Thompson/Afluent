{"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/Iterator","interfaceLanguage":"swift"},"topicSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/Iterator\/next()"],"generated":true,"anchor":"Instance-Methods","title":"Instance Methods"},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/Iterator\/AsyncIteratorProtocol-Implementations"],"generated":true,"anchor":"Default-Implementations","title":"Default Implementations"}],"metadata":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Iterator","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Iterator"}],"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/PassthroughSubject.swift#L49","fileName":"PassthroughSubject.swift"},"externalID":"s:7Afluent18PassthroughSubjectC8IteratorV","roleHeading":"Structure","modules":[{"name":"Afluent"}],"role":"symbol","title":"PassthroughSubject.Iterator","symbolKind":"struct"},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject"]]},"kind":"symbol","sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/passthroughsubject\/iterator"]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Iterator","kind":"identifier"}],"platforms":["macOS"]}],"kind":"declarations"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"relationshipsSections":[{"identifiers":["doc:\/\/Afluent\/s8SendableP","doc:\/\/Afluent\/ScI"],"kind":"relationships","type":"conformsTo","title":"Conforms To"}],"references":{"doc://Afluent/ScI":{"type":"unresolvable","identifier":"doc:\/\/Afluent\/ScI","title":"_Concurrency.AsyncIteratorProtocol"},"doc://Afluent/documentation/Afluent/PassthroughSubject/Iterator/next()":{"url":"\/documentation\/afluent\/passthroughsubject\/iterator\/next()","title":"next()","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/Iterator\/next()","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"next","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol","abstract":[],"type":"topic"},"doc://Afluent/documentation/Afluent/PassthroughSubject/Iterator":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Iterator"}],"abstract":[],"navigatorTitle":[{"kind":"identifier","text":"Iterator"}],"type":"topic","title":"PassthroughSubject.Iterator","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/Iterator","kind":"symbol","url":"\/documentation\/afluent\/passthroughsubject\/iterator","role":"symbol"},"doc://Afluent/s8SendableP":{"identifier":"doc:\/\/Afluent\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://Afluent/documentation/Afluent":{"abstract":[],"url":"\/documentation\/afluent","role":"collection","type":"topic","kind":"symbol","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent"},"doc://Afluent/documentation/Afluent/PassthroughSubject":{"navigatorTitle":[{"text":"PassthroughSubject","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject","role":"symbol","title":"PassthroughSubject","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PassthroughSubject","kind":"identifier"}],"type":"topic","url":"\/documentation\/afluent\/passthroughsubject","kind":"symbol","abstract":[{"text":"A subject that broadcasts values to multiple consumers without storing a current value.","type":"text"},{"text":" ","type":"text"},{"text":"Unlike ","type":"text"},{"code":"CurrentValueSubject","type":"codeVoice"},{"text":", ","type":"text"},{"code":"PassthroughSubject","type":"codeVoice"},{"text":" does not retain the most recent value.","type":"text"},{"text":" ","type":"text"},{"text":"It only sends values as they are emitted, meaning consumers will only receive values that are sent after they start listening.","type":"text"},{"text":" ","type":"text"},{"text":"This is an ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" that allows multiple tasks to asynchronously consume values and mimics Combineâ€™s PassthroughSubject."}]},"doc://Afluent/documentation/Afluent/PassthroughSubject/Iterator/AsyncIteratorProtocol-Implementations":{"abstract":[],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/Iterator\/AsyncIteratorProtocol-Implementations","title":"AsyncIteratorProtocol Implementations","kind":"article","url":"\/documentation\/afluent\/passthroughsubject\/iterator\/asynciteratorprotocol-implementations","role":"collectionGroup"}}}