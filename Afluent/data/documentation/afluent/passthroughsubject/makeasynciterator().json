{"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeAsyncIterator"},{"kind":"text","text":"() -> "},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent18PassthroughSubjectC","text":"PassthroughSubject"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">."},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/Iterator","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent18PassthroughSubjectC8IteratorV","text":"Iterator"}]}],"kind":"declarations"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"roleHeading":"Instance Method","title":"makeAsyncIterator()","externalID":"s:7Afluent18PassthroughSubjectC17makeAsyncIteratorAC0F0Vyx_GyF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeAsyncIterator","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent18PassthroughSubjectC","text":"PassthroughSubject","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"preciseIdentifier":"s:7Afluent18PassthroughSubjectC8IteratorV","text":"Iterator","kind":"typeIdentifier"}],"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/PassthroughSubject.swift#L44","fileName":"PassthroughSubject.swift"},"symbolKind":"method","modules":[{"name":"Afluent"}],"role":"symbol"},"variants":[{"paths":["\/documentation\/afluent\/passthroughsubject\/makeasynciterator()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/makeAsyncIterator()","interfaceLanguage":"swift"},"sections":[],"abstract":[{"text":"Inherited from ","type":"text"},{"code":"AsyncSequence.makeAsyncIterator()","type":"codeVoice"},{"text":".","type":"text"}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject"]]},"references":{"doc://Afluent/documentation/Afluent/PassthroughSubject/Iterator":{"url":"\/documentation\/afluent\/passthroughsubject\/iterator","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/Iterator","type":"topic","abstract":[],"kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Iterator","kind":"identifier"}],"navigatorTitle":[{"text":"Iterator","kind":"identifier"}],"title":"PassthroughSubject.Iterator"},"doc://Afluent/documentation/Afluent/PassthroughSubject/makeAsyncIterator()":{"url":"\/documentation\/afluent\/passthroughsubject\/makeasynciterator()","title":"makeAsyncIterator()","type":"topic","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeAsyncIterator","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"PassthroughSubject","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent18PassthroughSubjectC"},{"text":"<","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Iterator","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent18PassthroughSubjectC8IteratorV"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/makeAsyncIterator()","kind":"symbol","role":"symbol"},"doc://Afluent/documentation/Afluent/PassthroughSubject":{"abstract":[{"type":"text","text":"A subject that broadcasts values to multiple consumers without storing a current value."},{"type":"text","text":" "},{"type":"text","text":"Unlike "},{"code":"CurrentValueSubject","type":"codeVoice"},{"type":"text","text":", "},{"code":"PassthroughSubject","type":"codeVoice"},{"type":"text","text":" does not retain the most recent value."},{"type":"text","text":" "},{"type":"text","text":"It only sends values as they are emitted, meaning consumers will only receive values that are sent after they start listening."},{"type":"text","text":" "},{"type":"text","text":"This is an "},{"type":"codeVoice","code":"AsyncSequence"},{"text":" that allows multiple tasks to asynchronously consume values and mimics Combineâ€™s PassthroughSubject.","type":"text"}],"url":"\/documentation\/afluent\/passthroughsubject","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"PassthroughSubject"}],"title":"PassthroughSubject","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"PassthroughSubject"}]},"doc://Afluent/documentation/Afluent":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent","abstract":[],"title":"Afluent","type":"topic","kind":"symbol","role":"collection","url":"\/documentation\/afluent"}}}