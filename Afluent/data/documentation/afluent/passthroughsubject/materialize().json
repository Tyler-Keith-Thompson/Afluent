{"metadata":{"externalID":"s:Sci7Afluents8SendableRzrlE11materializeAA14AsyncSequencesO11MaterializeVy_xGysAB7ElementRpzrlF::SYNTHESIZED::s:7Afluent18PassthroughSubjectC","roleHeading":"Instance Method","symbolKind":"method","role":"symbol","extendedModule":"_Concurrency","modules":[{"name":"Afluent","relatedModules":["_Concurrency"]}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"materialize","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"text":"Materialize","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO11MaterializeV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"remoteSource":{"fileName":"MaterializeSequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/MaterializeSequence.swift#L70"},"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"title":"materialize()"},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject","doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/AsyncSequence-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"materialize","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO11MaterializeV","text":"Materialize","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Materialize"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa","text":"Element"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP","text":"Sendable"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"Use this to handle elements, errors, and completion uniformly as events."}],"type":"paragraph"},{"text":"Example","level":2,"type":"heading","anchor":"Example"},{"syntax":"swift","code":["for await event in Just(1).materialize() {","    switch event {","    case .element(let value): print(\"Element: \\(value)\")","    case .failure(let error): print(\"Failure: \\(error)\")","    case .complete: print(\"Complete\")","    }","}"],"type":"codeListing"}]}],"abstract":[{"text":"Transforms all elements, errors, and completion of the sequence into ","type":"text"},{"code":"Event","type":"codeVoice"},{"text":" values.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/passthroughsubject\/materialize()"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/materialize()"},"kind":"symbol","sections":[],"references":{"doc://Afluent/documentation/Afluent/PassthroughSubject":{"type":"topic","url":"\/documentation\/afluent\/passthroughsubject","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject","abstract":[{"type":"text","text":"A subject that broadcasts values to multiple consumers without storing a current value."},{"type":"text","text":" "},{"type":"text","text":"Unlike "},{"type":"codeVoice","code":"CurrentValueSubject"},{"type":"text","text":", "},{"type":"codeVoice","code":"PassthroughSubject"},{"type":"text","text":" does not retain the most recent value."},{"type":"text","text":" "},{"type":"text","text":"It only sends values as they are emitted, meaning consumers will only receive values that are sent after they start listening."},{"type":"text","text":" "},{"type":"text","text":"This is an "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" that allows multiple tasks to asynchronously consume values and mimics Combineâ€™s PassthroughSubject."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"PassthroughSubject"}],"title":"PassthroughSubject","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"PassthroughSubject"}]},"doc://Afluent/documentation/Afluent":{"type":"topic","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","abstract":[],"url":"\/documentation\/afluent","role":"collection","kind":"symbol"},"doc://Afluent/documentation/Afluent/PassthroughSubject/AsyncSequence-Implementations":{"url":"\/documentation\/afluent\/passthroughsubject\/asyncsequence-implementations","type":"topic","title":"AsyncSequence Implementations","role":"collectionGroup","abstract":[],"kind":"article","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/AsyncSequence-Implementations"},"doc://Afluent/documentation/Afluent/PassthroughSubject/materialize()":{"abstract":[{"text":"Transforms all elements, errors, and completion of the sequence into ","type":"text"},{"type":"codeVoice","code":"Event"},{"text":" values.","type":"text"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}]},"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/materialize()","role":"symbol","title":"materialize()","url":"\/documentation\/afluent\/passthroughsubject\/materialize()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"materialize","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Materialize","preciseIdentifier":"s:7Afluent14AsyncSequencesO11MaterializeV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"type":"topic","title":"AsyncSequences","url":"\/documentation\/afluent\/asyncsequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequences"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/Materialize":{"kind":"symbol","navigatorTitle":[{"text":"Materialize","kind":"identifier"}],"title":"AsyncSequences.Materialize","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Materialize","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Materialize","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences\/materialize","abstract":[{"type":"text","text":"Used as the implementation detail for the "},{"code":"AsyncSequence\/materialize()","type":"codeVoice"},{"type":"text","text":" operator."}],"role":"symbol","type":"topic"}}}