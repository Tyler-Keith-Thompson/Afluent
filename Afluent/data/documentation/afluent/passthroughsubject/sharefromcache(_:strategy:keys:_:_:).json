{"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/shareFromCache(_:strategy:keys:_:_:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"text":"This operator enables sharing and caching of results from an async sequence","type":"text"},{"text":" ","type":"text"},{"text":"based on a specified caching strategy and three hashable cache keys.","type":"text"},{"text":" ","type":"text"},{"text":"The combined hashable keys uniquely identify the shared sequence in the cache.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shareFromCache","kind":"identifier"},{"text":"<","kind":"text"},{"text":"H0","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"H1","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"H2","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"cache","kind":"internalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache","text":"AsyncSequenceCache","preciseIdentifier":"s:7Afluent18AsyncSequenceCacheC","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"strategy","kind":"externalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache","text":"AsyncSequenceCache","preciseIdentifier":"s:7Afluent18AsyncSequenceCacheC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache\/Strategy","text":"Strategy","preciseIdentifier":"s:7Afluent18AsyncSequenceCacheC8StrategyO","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"keys","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"k0","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"H0","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"k1","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"H1","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"k2","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"H2","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncBroadcastSequence","text":"AsyncBroadcastSequence","preciseIdentifier":"s:7Afluent22AsyncBroadcastSequenceV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents","text":"HandleEvents","preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"H0","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Hashable","preciseIdentifier":"s:SH","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"H1","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Hashable","preciseIdentifier":"s:SH","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"H2","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Hashable","preciseIdentifier":"s:SH","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"cache","content":[{"inlineContent":[{"text":"The cache from which to share data.","type":"text"}],"type":"paragraph"}]},{"name":"strategy","content":[{"inlineContent":[{"type":"text","text":"The caching strategy to use."}],"type":"paragraph"}]},{"name":"k1","content":[{"inlineContent":[{"text":"The second hashable key.","type":"text"}],"type":"paragraph"}]},{"name":"k2","content":[{"inlineContent":[{"text":"The third hashable key.","type":"text"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"inlineContent":[{"text":"An asynchronous broadcast sequence that shares the underlying sequenceâ€™s values according to the cache and strategy.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"type":"heading","text":"Example","level":2,"anchor":"Example"},{"code":["let cache = AsyncSequenceCache()","let sequence = fetchData(category: \"books\", page: 2, filter: \"bestsellers\")","let sharedSequence = sequence.shareFromCache(cache, strategy: .cacheUntilCompletionOrCancellation, keys: \"books\", 2, \"bestsellers\")","","Task {","    for await data in sharedSequence {","        print(\"Fetched data: \\(data)\")","    }","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"The combination of keys "},{"type":"codeVoice","code":"\"books\""},{"type":"text","text":", "},{"type":"codeVoice","code":"2"},{"type":"text","text":", and "},{"type":"codeVoice","code":"\"bestsellers\""},{"type":"text","text":" uniquely identifies the cache entry."}],"type":"paragraph"},{"style":"important","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"This operator should generally be placed at the end of an operator chain. Any operators applied after ","type":"text"},{"code":"shareFromCache","type":"codeVoice"},{"text":" will not be shared and may result in duplicated work or side effects.","type":"text"}]}],"name":"Important"}]}],"variants":[{"paths":["\/documentation\/afluent\/passthroughsubject\/sharefromcache(_:strategy:keys:_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","metadata":{"roleHeading":"Instance Method","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shareFromCache","kind":"identifier"},{"text":"<","kind":"text"},{"text":"H0","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"H1","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"H2","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"AsyncSequenceCache","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent18AsyncSequenceCacheC"},{"text":", ","kind":"text"},{"text":"strategy","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AsyncSequenceCache","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent18AsyncSequenceCacheC"},{"text":".","kind":"text"},{"text":"Strategy","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent18AsyncSequenceCacheC8StrategyO"},{"text":", ","kind":"text"},{"text":"keys","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"H0","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"H1","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"H2","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"AsyncBroadcastSequence","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsyncBroadcastSequenceV"},{"text":"<","kind":"text"},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"text":"HandleEvents","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">>","kind":"text"}],"extendedModule":"_Concurrency","remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/ShareFromCacheSequence.swift#L179","fileName":"ShareFromCacheSequence.swift"},"title":"shareFromCache(_:strategy:keys:_:_:)","symbolKind":"method","externalID":"s:Sci7Afluents8SendableRzsAB7ElementRpzrlE14shareFromCache_8strategy4keys__AA22AsyncBroadcastSequenceVyAA0I9SequencesO12HandleEventsVy_xGGAA0ikF0C_AQ8StrategyOqd__qd_0_qd_1_tSHRd__SHRd_0_SHRd_1_r1_lF::SYNTHESIZED::s:7Afluent18PassthroughSubjectC","role":"symbol","modules":[{"relatedModules":["_Concurrency"],"name":"Afluent"}]},"sections":[],"references":{"doc://Afluent/documentation/Afluent/AsyncSequenceCache/Strategy":{"type":"topic","url":"\/documentation\/afluent\/asyncsequencecache\/strategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache\/Strategy","abstract":[{"type":"codeVoice","code":"Strategy"},{"type":"text","text":" represents the available caching strategies for the "},{"type":"codeVoice","code":"AsyncSequenceCache"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"These strategies determine how long the cache retains the async sequences."}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Strategy","kind":"identifier"}],"kind":"symbol","role":"symbol","title":"AsyncSequenceCache.Strategy","navigatorTitle":[{"text":"Strategy","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsyncSequenceCache":{"abstract":[{"text":"A thread-safe cache for sharing async sequences by integer key.","type":"text"},{"text":" ","type":"text"},{"text":"This cache is commonly used with the ","type":"text"},{"code":"shareFromCache","type":"codeVoice"},{"text":" operator to reuse sequences.","type":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequenceCache","navigatorTitle":[{"kind":"identifier","text":"AsyncSequenceCache"}],"title":"AsyncSequenceCache","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequenceCache"}],"url":"\/documentation\/afluent\/asyncsequencecache","kind":"symbol","type":"topic","role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncBroadcastSequence":{"title":"AsyncBroadcastSequence","kind":"symbol","url":"\/documentation\/afluent\/asyncbroadcastsequence","abstract":[{"type":"text","text":"An async sequence that multicasts elements from an upstream sequence to multiple concurrent consumers."}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncBroadcastSequence","kind":"identifier"}],"navigatorTitle":[{"text":"AsyncBroadcastSequence","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncBroadcastSequence"},"doc://Afluent/documentation/Afluent/AsyncSequences/HandleEvents":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HandleEvents"}],"kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/handleevents","title":"AsyncSequences.HandleEvents","abstract":[{"type":"text","text":"Used as the implementation detail for the "},{"type":"codeVoice","code":"AsyncSequence\/handleEvents(receiveMakeIterator:receiveNext:receiveOutput:receiveError:receiveComplete:receiveCancel:)"},{"type":"text","text":" operator."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HandleEvents"}]},"doc://Afluent/documentation/Afluent":{"title":"Afluent","url":"\/documentation\/afluent","role":"collection","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol","abstract":[]},"doc://Afluent/documentation/Afluent/PassthroughSubject":{"type":"topic","abstract":[{"text":"A subject that broadcasts values to multiple consumers without storing a current value.","type":"text"},{"text":" ","type":"text"},{"text":"Unlike ","type":"text"},{"code":"CurrentValueSubject","type":"codeVoice"},{"text":", ","type":"text"},{"code":"PassthroughSubject","type":"codeVoice"},{"text":" does not retain the most recent value.","type":"text"},{"text":" ","type":"text"},{"text":"It only sends values as they are emitted, meaning consumers will only receive values that are sent after they start listening.","type":"text"},{"text":" ","type":"text"},{"text":"This is an ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"text":" that allows multiple tasks to asynchronously consume values and mimics Combineâ€™s PassthroughSubject.","type":"text"}],"kind":"symbol","title":"PassthroughSubject","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"PassthroughSubject"}],"role":"symbol","url":"\/documentation\/afluent\/passthroughsubject","navigatorTitle":[{"kind":"identifier","text":"PassthroughSubject"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject"},"doc://Afluent/documentation/Afluent/PassthroughSubject/shareFromCache(_:strategy:keys:_:_:)":{"title":"shareFromCache(_:strategy:keys:_:_:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"shareFromCache"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"H0"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H1"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H2"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"AsyncSequenceCache","preciseIdentifier":"s:7Afluent18AsyncSequenceCacheC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"strategy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AsyncSequenceCache","preciseIdentifier":"s:7Afluent18AsyncSequenceCacheC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Strategy","preciseIdentifier":"s:7Afluent18AsyncSequenceCacheC8StrategyO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"keys"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"H0"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H1"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H2"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AsyncBroadcastSequence","preciseIdentifier":"s:7Afluent22AsyncBroadcastSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"HandleEvents","preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">>"}],"url":"\/documentation\/afluent\/passthroughsubject\/sharefromcache(_:strategy:keys:_:_:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/PassthroughSubject\/shareFromCache(_:strategy:keys:_:_:)","abstract":[{"text":"This operator enables sharing and caching of results from an async sequence","type":"text"},{"text":" ","type":"text"},{"text":"based on a specified caching strategy and three hashable cache keys.","type":"text"},{"text":" ","type":"text"},{"text":"The combined hashable keys uniquely identify the shared sequence in the cache.","type":"text"}],"role":"symbol","type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","url":"\/documentation\/afluent\/asyncsequences","abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"kind":"symbol","title":"AsyncSequences","type":"topic","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncSequences","kind":"identifier"}],"navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}]}}}