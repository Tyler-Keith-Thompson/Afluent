{"kind":"symbol","metadata":{"roleHeading":"Class","platforms":[{"name":"iOS","unavailable":false,"deprecated":false,"introducedAt":"16.0","beta":false},{"name":"macOS","unavailable":false,"deprecated":false,"introducedAt":"13.0","beta":false},{"name":"tvOS","unavailable":false,"deprecated":false,"introducedAt":"16.0","beta":false},{"name":"watchOS","unavailable":false,"deprecated":false,"introducedAt":"9.0","beta":false}],"remoteSource":{"fileName":"RetryByBackoffStrategy.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/RetryStrategies\/RetryByBackoffStrategy.swift#L39"},"symbolKind":"class","modules":[{"name":"Afluent"}],"role":"symbol","title":"RetryByBackoffStrategy","externalID":"s:7Afluent22RetryByBackoffStrategyC","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RetryByBackoffStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"RetryByBackoffStrategy"}]},"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","doc:\/\/Afluent\/s8SendableP","doc:\/\/Afluent\/ScA"],"title":"Conforms To","type":"conformsTo"}],"variants":[{"paths":["\/documentation\/afluent\/retrybybackoffstrategy"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"A retry strategy using a specified backoff strategy and clock.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy"},"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RetryByBackoffStrategy","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Strategy","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Strategy","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","text":"BackoffStrategy","preciseIdentifier":"s:7Afluent15BackoffStrategyP","kind":"typeIdentifier"}],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"The type of ","type":"text"},{"code":"Clock","type":"codeVoice"},{"text":" used for measuring time between retries.","type":"text"}],"type":"paragraph"}],"name":"C"}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This actor manages retry attempts with a configurable "},{"code":"BackoffStrategy","type":"codeVoice"},{"type":"text","text":" and clock. It uses the clock to calculate"},{"type":"text","text":" "},{"type":"text","text":"the time delays between retries, allowing more fine-grained control over the timing of retries based on the provided"},{"type":"text","text":" "},{"type":"text","text":"backoff strategy."}]},{"content":[{"inlineContent":[{"text":"This actor conforms to ","type":"text"},{"type":"codeVoice","code":"RetryStrategy"},{"text":" and is used to manage retries based on time delays.","type":"text"}],"type":"paragraph"}],"type":"aside","name":"Note","style":"note"}]}],"topicSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/init(_:clock:durationUnit:)"],"title":"Initializers","generated":true,"anchor":"Initializers"},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/handle(error:beforeRetry:)"],"title":"Instance Methods","generated":true,"anchor":"Instance-Methods"},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/Actor-Implementations","doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/RetryStrategy-Implementations"],"title":"Default Implementations","generated":true,"anchor":"Default-Implementations"}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"references":{"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/RetryStrategy-Implementations":{"url":"\/documentation\/afluent\/retrybybackoffstrategy\/retrystrategy-implementations","type":"topic","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/RetryStrategy-Implementations","kind":"article","title":"RetryStrategy Implementations","role":"collectionGroup"},"doc://Afluent/documentation/Afluent/BackoffStrategy":{"type":"topic","title":"BackoffStrategy","url":"\/documentation\/afluent\/backoffstrategy","abstract":[{"text":"A protocol for implementing custom backoff strategies in retry mechanisms.","type":"text"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BackoffStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"BackoffStrategy","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","kind":"symbol"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/Actor-Implementations":{"url":"\/documentation\/afluent\/retrybybackoffstrategy\/actor-implementations","title":"Actor Implementations","kind":"article","type":"topic","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/Actor-Implementations","role":"collectionGroup"},"doc://Afluent/ScA":{"identifier":"doc:\/\/Afluent\/ScA","type":"unresolvable","title":"_Concurrency.Actor"},"doc://Afluent/documentation/Afluent":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent","abstract":[],"title":"Afluent","type":"topic","kind":"symbol","role":"collection","url":"\/documentation\/afluent"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/init(_:clock:durationUnit:)":{"type":"topic","url":"\/documentation\/afluent\/retrybybackoffstrategy\/init(_:clock:durationunit:)","title":"init(_:clock:durationUnit:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Strategy"},{"kind":"text","text":", "},{"kind":"externalParam","text":"clock"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Strategy"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Clock","preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa"},{"kind":"text","text":", "},{"kind":"externalParam","text":"durationUnit"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ClockDurationUnit","preciseIdentifier":"s:7Afluent17ClockDurationUnita"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Strategy"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Clock","preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Creates a new retry strategy with the given backoff strategy and clock."}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/init(_:clock:durationUnit:)"},"doc://Afluent/s8SendableP":{"identifier":"doc:\/\/Afluent\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy":{"kind":"symbol","abstract":[{"type":"text","text":"A retry strategy using a specified backoff strategy and clock."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RetryByBackoffStrategy"}],"title":"RetryByBackoffStrategy","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","url":"\/documentation\/afluent\/retrybybackoffstrategy","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RetryByBackoffStrategy"}]},"doc://Afluent/documentation/Afluent/RetryStrategy":{"role":"symbol","kind":"symbol","url":"\/documentation\/afluent\/retrystrategy","navigatorTitle":[{"kind":"identifier","text":"RetryStrategy"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RetryStrategy"}],"title":"RetryStrategy","abstract":[{"type":"text","text":"A strategy for handling errors and determining whether to retry an operation."}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/handle(error:beforeRetry:)":{"role":"symbol","title":"handle(error:beforeRetry:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/handle(error:beforeRetry:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handle","kind":"identifier"},{"text":"(","kind":"text"},{"text":"error","kind":"externalParam"},{"text":": any ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":", ","kind":"text"},{"text":"beforeRetry","kind":"externalParam"},{"text":": (any ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/afluent\/retrybybackoffstrategy\/handle(error:beforeretry:)","abstract":[],"kind":"symbol","type":"topic"}}}