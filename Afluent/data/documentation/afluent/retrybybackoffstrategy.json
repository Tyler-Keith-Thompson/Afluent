{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy"},"sections":[],"topicSections":[{"anchor":"Initializers","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/init(_:clock:durationUnit:)"],"title":"Initializers","generated":true},{"anchor":"Instance-Methods","title":"Instance Methods","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/handle(error:beforeRetry:)"]},{"anchor":"Default-Implementations","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/Actor-Implementations","doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/RetryStrategy-Implementations"],"title":"Default Implementations","generated":true}],"relationshipsSections":[{"kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","doc:\/\/Afluent\/s8SendableP","doc:\/\/Afluent\/ScA"],"type":"conformsTo"}],"metadata":{"navigatorTitle":[{"text":"RetryByBackoffStrategy","kind":"identifier"}],"externalID":"s:7Afluent22RetryByBackoffStrategyC","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"RetryByBackoffStrategy","kind":"identifier"}],"role":"symbol","modules":[{"name":"Afluent"}],"platforms":[{"beta":false,"unavailable":false,"introducedAt":"16.0","name":"iOS","deprecated":false},{"beta":false,"unavailable":false,"introducedAt":"13.0","name":"macOS","deprecated":false},{"name":"tvOS","introducedAt":"16.0","deprecated":false,"unavailable":false,"beta":false},{"name":"watchOS","unavailable":false,"beta":false,"deprecated":false,"introducedAt":"9.0"}],"symbolKind":"class","remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/RetryStrategies\/RetryByBackoffStrategy.swift#L39","fileName":"RetryByBackoffStrategy.swift"},"roleHeading":"Class","title":"RetryByBackoffStrategy"},"kind":"symbol","abstract":[{"type":"text","text":"A retry strategy using a specified backoff strategy and clock."}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"RetryByBackoffStrategy"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Strategy"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Strategy","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"BackoffStrategy","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent15BackoffStrategyP","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy"}]}]},{"parameters":[{"name":"C","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The type of "},{"code":"Clock","type":"codeVoice"},{"type":"text","text":" used for measuring time between retries."}]}]}],"kind":"parameters"},{"content":[{"text":"Overview","level":2,"anchor":"overview","type":"heading"},{"inlineContent":[{"type":"text","text":"This actor manages retry attempts with a configurable "},{"code":"BackoffStrategy","type":"codeVoice"},{"type":"text","text":" and clock. It uses the clock to calculate"},{"text":" ","type":"text"},{"text":"the time delays between retries, allowing more fine-grained control over the timing of retries based on the provided","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"backoff strategy."}],"type":"paragraph"},{"content":[{"inlineContent":[{"text":"This actor conforms to ","type":"text"},{"type":"codeVoice","code":"RetryStrategy"},{"text":" and is used to manage retries based on time delays.","type":"text"}],"type":"paragraph"}],"name":"Note","type":"aside","style":"note"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/retrybybackoffstrategy"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/Actor-Implementations":{"title":"Actor Implementations","abstract":[],"url":"\/documentation\/afluent\/retrybybackoffstrategy\/actor-implementations","kind":"article","role":"collectionGroup","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/Actor-Implementations"},"doc://Afluent/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/Afluent\/s8SendableP","title":"Swift.Sendable"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/handle(error:beforeRetry:)":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/handle(error:beforeRetry:)","kind":"symbol","abstract":[],"title":"handle(error:beforeRetry:)","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"handle","kind":"identifier"},{"kind":"text","text":"("},{"text":"error","kind":"externalParam"},{"kind":"text","text":": any "},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":", "},{"text":"beforeRetry","kind":"externalParam"},{"text":": (any ","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"url":"\/documentation\/afluent\/retrybybackoffstrategy\/handle(error:beforeretry:)"},"doc://Afluent/ScA":{"type":"unresolvable","identifier":"doc:\/\/Afluent\/ScA","title":"_Concurrency.Actor"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy":{"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RetryByBackoffStrategy"}],"url":"\/documentation\/afluent\/retrybybackoffstrategy","abstract":[{"type":"text","text":"A retry strategy using a specified backoff strategy and clock."}],"kind":"symbol","role":"symbol","title":"RetryByBackoffStrategy","navigatorTitle":[{"text":"RetryByBackoffStrategy","kind":"identifier"}]},"doc://Afluent/documentation/Afluent":{"kind":"symbol","role":"collection","abstract":[],"url":"\/documentation\/afluent","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent","title":"Afluent"},"doc://Afluent/documentation/Afluent/RetryStrategy":{"title":"RetryStrategy","kind":"symbol","url":"\/documentation\/afluent\/retrystrategy","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RetryStrategy","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A strategy for handling errors and determining whether to retry an operation."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","navigatorTitle":[{"text":"RetryStrategy","kind":"identifier"}],"role":"symbol"},"doc://Afluent/documentation/Afluent/BackoffStrategy":{"kind":"symbol","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","url":"\/documentation\/afluent\/backoffstrategy","abstract":[{"text":"A protocol for implementing custom backoff strategies in retry mechanisms.","type":"text"}],"title":"BackoffStrategy","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"BackoffStrategy","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"BackoffStrategy"}]},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/init(_:clock:durationUnit:)":{"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/init(_:clock:durationUnit:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"Strategy","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"clock"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Strategy"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa","text":"Clock","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"durationUnit"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent17ClockDurationUnita","text":"ClockDurationUnit"},{"kind":"text","text":"<"},{"text":"Strategy","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Clock","preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa"},{"kind":"text","text":", "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":">)","kind":"text"}],"url":"\/documentation\/afluent\/retrybybackoffstrategy\/init(_:clock:durationunit:)","abstract":[{"text":"Creates a new retry strategy with the given backoff strategy and clock.","type":"text"}],"kind":"symbol","role":"symbol","title":"init(_:clock:durationUnit:)"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/RetryStrategy-Implementations":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/RetryStrategy-Implementations","kind":"article","role":"collectionGroup","title":"RetryStrategy Implementations","abstract":[],"type":"topic","url":"\/documentation\/afluent\/retrybybackoffstrategy\/retrystrategy-implementations"}}}