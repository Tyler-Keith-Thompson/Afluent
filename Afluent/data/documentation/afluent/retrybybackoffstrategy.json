{"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RetryByBackoffStrategy"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Strategy"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"Strategy","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","text":"BackoffStrategy","preciseIdentifier":"s:7Afluent15BackoffStrategyP"}]}],"kind":"declarations"},{"parameters":[{"name":"C","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The type of "},{"code":"Clock","type":"codeVoice"},{"type":"text","text":" used for measuring time between retries."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"overview","type":"heading","level":2,"text":"Overview"},{"inlineContent":[{"type":"text","text":"This actor manages retry attempts with a configurable "},{"code":"BackoffStrategy","type":"codeVoice"},{"text":" and clock. It uses the clock to calculate","type":"text"},{"type":"text","text":" "},{"text":"the time delays between retries, allowing more fine-grained control over the timing of retries based on the provided","type":"text"},{"type":"text","text":" "},{"text":"backoff strategy.","type":"text"}],"type":"paragraph"},{"content":[{"type":"paragraph","inlineContent":[{"text":"This actor conforms to ","type":"text"},{"code":"RetryStrategy","type":"codeVoice"},{"type":"text","text":" and is used to manage retries based on time delays."}]}],"name":"Note","type":"aside","style":"note"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","doc:\/\/Afluent\/s8SendableP","doc:\/\/Afluent\/ScA"],"title":"Conforms To","kind":"relationships","type":"conformsTo"}],"metadata":{"remoteSource":{"fileName":"RetryByBackoffStrategy.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/RetryStrategies\/RetryByBackoffStrategy.swift#L39"},"platforms":[{"name":"iOS","deprecated":false,"introducedAt":"16.0","beta":false,"unavailable":false},{"introducedAt":"13.0","unavailable":false,"deprecated":false,"beta":false,"name":"macOS"},{"name":"tvOS","deprecated":false,"beta":false,"introducedAt":"16.0","unavailable":false},{"unavailable":false,"introducedAt":"9.0","beta":false,"name":"watchOS","deprecated":false}],"modules":[{"name":"Afluent"}],"symbolKind":"class","title":"RetryByBackoffStrategy","role":"symbol","externalID":"s:7Afluent22RetryByBackoffStrategyC","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"RetryByBackoffStrategy","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"RetryByBackoffStrategy"}],"roleHeading":"Class"},"abstract":[{"text":"A retry strategy using a specified backoff strategy and clock.","type":"text"}],"variants":[{"paths":["\/documentation\/afluent\/retrybybackoffstrategy"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"title":"Initializers","generated":true,"anchor":"Initializers","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/init(_:clock:durationUnit:)"]},{"generated":true,"anchor":"Instance-Methods","title":"Instance Methods","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/handle(error:beforeRetry:)"]},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/Actor-Implementations","doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/RetryStrategy-Implementations"],"title":"Default Implementations","generated":true,"anchor":"Default-Implementations"}],"sections":[],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"references":{"doc://Afluent/documentation/Afluent/RetryStrategy":{"navigatorTitle":[{"kind":"identifier","text":"RetryStrategy"}],"type":"topic","abstract":[{"text":"A strategy for handling errors and determining whether to retry an operation.","type":"text"}],"title":"RetryStrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"RetryStrategy","kind":"identifier"}],"url":"\/documentation\/afluent\/retrystrategy","kind":"symbol"},"doc://Afluent/documentation/Afluent/BackoffStrategy":{"url":"\/documentation\/afluent\/backoffstrategy","abstract":[{"text":"A protocol for implementing custom backoff strategies in retry mechanisms.","type":"text"}],"type":"topic","title":"BackoffStrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BackoffStrategy"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"BackoffStrategy"}]},"doc://Afluent/documentation/Afluent":{"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent","role":"collection","type":"topic","abstract":[],"title":"Afluent","url":"\/documentation\/afluent"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy":{"type":"topic","navigatorTitle":[{"text":"RetryByBackoffStrategy","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/afluent\/retrybybackoffstrategy","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RetryByBackoffStrategy"}],"role":"symbol","abstract":[{"type":"text","text":"A retry strategy using a specified backoff strategy and clock."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","title":"RetryByBackoffStrategy"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/init(_:clock:durationUnit:)":{"role":"symbol","url":"\/documentation\/afluent\/retrybybackoffstrategy\/init(_:clock:durationunit:)","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Strategy"},{"text":", ","kind":"text"},{"text":"clock","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Strategy","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Clock","preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa"},{"text":", ","kind":"text"},{"text":"durationUnit","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ClockDurationUnit","preciseIdentifier":"s:7Afluent17ClockDurationUnita"},{"text":"<","kind":"text"},{"text":"Strategy","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Clock","preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/init(_:clock:durationUnit:)","type":"topic","abstract":[{"text":"Creates a new retry strategy with the given backoff strategy and clock.","type":"text"}],"title":"init(_:clock:durationUnit:)"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/Actor-Implementations":{"title":"Actor Implementations","kind":"article","url":"\/documentation\/afluent\/retrybybackoffstrategy\/actor-implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/Actor-Implementations","abstract":[],"role":"collectionGroup","type":"topic"},"doc://Afluent/ScA":{"title":"_Concurrency.Actor","identifier":"doc:\/\/Afluent\/ScA","type":"unresolvable"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/handle(error:beforeRetry:)":{"role":"symbol","url":"\/documentation\/afluent\/retrybybackoffstrategy\/handle(error:beforeretry:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"handle","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"error"},{"kind":"text","text":": any "},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"beforeRetry"},{"text":": (any ","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/handle(error:beforeRetry:)","type":"topic","abstract":[],"title":"handle(error:beforeRetry:)"},"doc://Afluent/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/Afluent\/s8SendableP","title":"Swift.Sendable"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/RetryStrategy-Implementations":{"url":"\/documentation\/afluent\/retrybybackoffstrategy\/retrystrategy-implementations","kind":"article","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/RetryStrategy-Implementations","role":"collectionGroup","title":"RetryStrategy Implementations","type":"topic"}}}