{"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"metadata":{"fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"RetryByBackoffStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"RetryByBackoffStrategy"}],"platforms":[{"name":"iOS","deprecated":false,"unavailable":false,"beta":false,"introducedAt":"16.0"},{"name":"macOS","deprecated":false,"unavailable":false,"beta":false,"introducedAt":"13.0"},{"name":"tvOS","deprecated":false,"unavailable":false,"beta":false,"introducedAt":"16.0"},{"name":"watchOS","deprecated":false,"unavailable":false,"beta":false,"introducedAt":"9.0"}],"symbolKind":"class","remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/RetryStrategies\/RetryByBackoffStrategy.swift#L45","fileName":"RetryByBackoffStrategy.swift"},"title":"RetryByBackoffStrategy","externalID":"s:7Afluent22RetryByBackoffStrategyC","role":"symbol","roleHeading":"Class","modules":[{"name":"Afluent"}]},"abstract":[{"text":"A retry strategy using a specified backoff strategy and clock.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy"},"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","doc:\/\/Afluent\/s8SendableP","doc:\/\/Afluent\/ScA"],"type":"conformsTo","kind":"relationships"}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RetryByBackoffStrategy","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Strategy","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Strategy","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:7Afluent15BackoffStrategyP","text":"BackoffStrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","kind":"typeIdentifier"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Overview","anchor":"overview","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"This actor manages retry attempts with a configurable "},{"type":"codeVoice","code":"BackoffStrategy"},{"type":"text","text":" and clock. It determines delays between retries using this strategy."}],"type":"paragraph"},{"text":"Example","anchor":"Example","level":2,"type":"heading"},{"syntax":"swift","code":["try await DeferredTask { \/* some fallible work *\/ }","    .retry(strategy: .backoff(.exponential(base: 2, maxCount: 3)))","    .execute()"],"type":"codeListing"}],"kind":"content"}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/init(_:clock:durationUnit:)"],"generated":true,"anchor":"Initializers"},{"title":"Instance Methods","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/handle(error:beforeRetry:)"],"generated":true,"anchor":"Instance-Methods"},{"title":"Default Implementations","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/Actor-Implementations","doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/RetryStrategy-Implementations"],"generated":true,"anchor":"Default-Implementations"}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/retrybybackoffstrategy"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","references":{"doc://Afluent/ScA":{"title":"_Concurrency.Actor","identifier":"doc:\/\/Afluent\/ScA","type":"unresolvable"},"doc://Afluent/documentation/Afluent/BackoffStrategy":{"kind":"symbol","url":"\/documentation\/afluent\/backoffstrategy","abstract":[{"type":"text","text":"A protocol for implementing custom backoff strategies for retry mechanisms."}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"BackoffStrategy"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","role":"symbol","title":"BackoffStrategy","navigatorTitle":[{"kind":"identifier","text":"BackoffStrategy"}]},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/handle(error:beforeRetry:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handle","kind":"identifier"},{"text":"(","kind":"text"},{"text":"error","kind":"externalParam"},{"text":": any ","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"beforeRetry","kind":"externalParam"},{"text":": (any ","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/handle(error:beforeRetry:)","abstract":[],"type":"topic","role":"symbol","title":"handle(error:beforeRetry:)","kind":"symbol","url":"\/documentation\/afluent\/retrybybackoffstrategy\/handle(error:beforeretry:)"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/RetryStrategy-Implementations":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/RetryStrategy-Implementations","abstract":[],"type":"topic","role":"collectionGroup","title":"RetryStrategy Implementations","kind":"article","url":"\/documentation\/afluent\/retrybybackoffstrategy\/retrystrategy-implementations"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","navigatorTitle":[{"kind":"identifier","text":"RetryByBackoffStrategy"}],"kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"RetryByBackoffStrategy"}],"url":"\/documentation\/afluent\/retrybybackoffstrategy","title":"RetryByBackoffStrategy","abstract":[{"type":"text","text":"A retry strategy using a specified backoff strategy and clock."}]},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/init(_:clock:durationUnit:)":{"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Strategy","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"clock","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Strategy","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Clock","preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"durationUnit","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ClockDurationUnit","preciseIdentifier":"s:7Afluent17ClockDurationUnita","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Strategy","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Clock","preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/init(_:clock:durationUnit:)","title":"init(_:clock:durationUnit:)","url":"\/documentation\/afluent\/retrybybackoffstrategy\/init(_:clock:durationunit:)","abstract":[{"type":"text","text":"Creates a new retry strategy with the given backoff strategy and clock."}],"type":"topic"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/Actor-Implementations":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/Actor-Implementations","abstract":[],"type":"topic","role":"collectionGroup","kind":"article","title":"Actor Implementations","url":"\/documentation\/afluent\/retrybybackoffstrategy\/actor-implementations"},"doc://Afluent/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/Afluent\/s8SendableP"},"doc://Afluent/documentation/Afluent":{"title":"Afluent","url":"\/documentation\/afluent","role":"collection","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol","abstract":[]},"doc://Afluent/documentation/Afluent/RetryStrategy":{"abstract":[{"text":"A strategy for handling errors and determining whether to retry an operation.","type":"text"}],"title":"RetryStrategy","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RetryStrategy"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RetryStrategy"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","url":"\/documentation\/afluent\/retrystrategy"}}}