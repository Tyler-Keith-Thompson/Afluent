{"abstract":[{"type":"text","text":"A retry strategy using a specified backoff strategy and clock."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/retrybybackoffstrategy"]}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"RetryByBackoffStrategy"},{"kind":"text","text":"<"},{"text":"Strategy","kind":"genericParameter"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Strategy"},{"kind":"text","text":" : "},{"text":"BackoffStrategy","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","preciseIdentifier":"s:7Afluent15BackoffStrategyP"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The type of ","type":"text"},{"code":"Clock","type":"codeVoice"},{"text":" used for measuring time between retries.","type":"text"}]}],"name":"C"}],"kind":"parameters"},{"kind":"content","content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This actor manages retry attempts with a configurable "},{"code":"BackoffStrategy","type":"codeVoice"},{"type":"text","text":" and clock. It uses the clock to calculate"},{"type":"text","text":" "},{"type":"text","text":"the time delays between retries, allowing more fine-grained control over the timing of retries based on the provided"},{"type":"text","text":" "},{"type":"text","text":"backoff strategy."}]},{"type":"aside","name":"Note","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This actor conforms to "},{"code":"RetryStrategy","type":"codeVoice"},{"type":"text","text":" and is used to manage retries based on time delays."}]}]}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"metadata":{"platforms":[{"deprecated":false,"beta":false,"unavailable":false,"introducedAt":"16.0","name":"iOS"},{"beta":false,"unavailable":false,"introducedAt":"13.0","deprecated":false,"name":"macOS"},{"introducedAt":"16.0","beta":false,"unavailable":false,"deprecated":false,"name":"tvOS"},{"unavailable":false,"beta":false,"deprecated":false,"introducedAt":"9.0","name":"watchOS"}],"role":"symbol","title":"RetryByBackoffStrategy","navigatorTitle":[{"text":"RetryByBackoffStrategy","kind":"identifier"}],"roleHeading":"Class","remoteSource":{"fileName":"RetryByBackoffStrategy.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/RetryStrategies\/RetryByBackoffStrategy.swift#L39"},"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RetryByBackoffStrategy"}],"modules":[{"name":"Afluent"}],"externalID":"s:7Afluent22RetryByBackoffStrategyC","symbolKind":"class"},"relationshipsSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","doc:\/\/Afluent\/s8SendableP","doc:\/\/Afluent\/ScA"],"title":"Conforms To","kind":"relationships","type":"conformsTo"}],"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/init(_:clock:durationUnit:)"],"generated":true,"anchor":"Initializers","title":"Initializers"},{"title":"Instance Methods","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/handle(error:beforeRetry:)"],"generated":true,"anchor":"Instance-Methods"},{"generated":true,"anchor":"Default-Implementations","title":"Default Implementations","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/Actor-Implementations","doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/RetryStrategy-Implementations"]}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","interfaceLanguage":"swift"},"sections":[],"references":{"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy":{"role":"symbol","type":"topic","url":"\/documentation\/afluent\/retrybybackoffstrategy","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RetryByBackoffStrategy"}],"title":"RetryByBackoffStrategy","kind":"symbol","navigatorTitle":[{"text":"RetryByBackoffStrategy","kind":"identifier"}],"abstract":[{"type":"text","text":"A retry strategy using a specified backoff strategy and clock."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy"},"doc://Afluent/documentation/Afluent/BackoffStrategy":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"BackoffStrategy","kind":"identifier"}],"url":"\/documentation\/afluent\/backoffstrategy","navigatorTitle":[{"kind":"identifier","text":"BackoffStrategy"}],"title":"BackoffStrategy","abstract":[{"type":"text","text":"A protocol for implementing custom backoff strategies in retry mechanisms."}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","type":"topic"},"doc://Afluent/ScA":{"identifier":"doc:\/\/Afluent\/ScA","title":"_Concurrency.Actor","type":"unresolvable"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/init(_:clock:durationUnit:)":{"title":"init(_:clock:durationUnit:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/init(_:clock:durationUnit:)","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"Strategy","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"clock","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Strategy","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa","text":"Clock"},{"kind":"text","text":", "},{"kind":"externalParam","text":"durationUnit"},{"kind":"text","text":": "},{"text":"ClockDurationUnit","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent17ClockDurationUnita"},{"text":"<","kind":"text"},{"text":"Strategy","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa","text":"Clock","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":">)","kind":"text"}],"abstract":[{"type":"text","text":"Creates a new retry strategy with the given backoff strategy and clock."}],"url":"\/documentation\/afluent\/retrybybackoffstrategy\/init(_:clock:durationunit:)","type":"topic","role":"symbol"},"doc://Afluent/s8SendableP":{"identifier":"doc:\/\/Afluent\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://Afluent/documentation/Afluent/RetryStrategy":{"url":"\/documentation\/afluent\/retrystrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","abstract":[{"text":"A strategy for handling errors and determining whether to retry an operation.","type":"text"}],"type":"topic","title":"RetryStrategy","role":"symbol","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RetryStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"RetryStrategy","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/RetryStrategy-Implementations":{"type":"topic","title":"RetryStrategy Implementations","kind":"article","role":"collectionGroup","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/RetryStrategy-Implementations","url":"\/documentation\/afluent\/retrybybackoffstrategy\/retrystrategy-implementations"},"doc://Afluent/documentation/Afluent":{"abstract":[],"title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","type":"topic","kind":"symbol","role":"collection","url":"\/documentation\/afluent"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/handle(error:beforeRetry:)":{"role":"symbol","kind":"symbol","title":"handle(error:beforeRetry:)","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/handle(error:beforeRetry:)","url":"\/documentation\/afluent\/retrybybackoffstrategy\/handle(error:beforeretry:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"handle"},{"kind":"text","text":"("},{"text":"error","kind":"externalParam"},{"kind":"text","text":": any "},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"beforeRetry","kind":"externalParam"},{"text":": (any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"abstract":[]},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/Actor-Implementations":{"role":"collectionGroup","type":"topic","kind":"article","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/Actor-Implementations","title":"Actor Implementations","abstract":[],"url":"\/documentation\/afluent\/retrybybackoffstrategy\/actor-implementations"}}}