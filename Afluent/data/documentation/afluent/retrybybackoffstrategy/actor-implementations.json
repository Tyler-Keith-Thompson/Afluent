{"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"modules":[{"name":"Afluent"}],"roleHeading":"API Collection","title":"Actor Implementations","role":"collectionGroup"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/Actor-Implementations"},"variants":[{"paths":["\/documentation\/afluent\/retrybybackoffstrategy\/actor-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy"]]},"sections":[],"kind":"article","topicSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/assertIsolated(_:file:line:)","doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/assumeIsolated(_:file:line:)","doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/preconditionIsolated(_:file:line:)"],"anchor":"Instance-Methods","generated":true,"title":"Instance Methods"}],"references":{"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy":{"navigatorTitle":[{"kind":"identifier","text":"RetryByBackoffStrategy"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","abstract":[{"type":"text","text":"A retry strategy using a specified backoff strategy and clock."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RetryByBackoffStrategy"}],"title":"RetryByBackoffStrategy","url":"\/documentation\/afluent\/retrybybackoffstrategy","kind":"symbol","role":"symbol","type":"topic"},"doc://Afluent/documentation/Afluent":{"kind":"symbol","role":"collection","identifier":"doc:\/\/Afluent\/documentation\/Afluent","type":"topic","title":"Afluent","abstract":[],"url":"\/documentation\/afluent"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/preconditionIsolated(_:file:line:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"preconditionIsolated","kind":"identifier"},{"kind":"text","text":"("},{"kind":"attribute","text":"@autoclosure "},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"text":")","kind":"text"}],"abstract":[],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/preconditionIsolated(_:file:line:)","url":"\/documentation\/afluent\/retrybybackoffstrategy\/preconditionisolated(_:file:line:)","kind":"symbol","role":"symbol","title":"preconditionIsolated(_:file:line:)"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/assumeIsolated(_:file:line:)":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/assumeIsolated(_:file:line:)","type":"topic","role":"symbol","abstract":[],"title":"assumeIsolated(_:file:line:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"assumeIsolated","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">((","kind":"text"},{"kind":"keyword","text":"isolated"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"url":"\/documentation\/afluent\/retrybybackoffstrategy\/assumeisolated(_:file:line:)"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/assertIsolated(_:file:line:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"assertIsolated","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"attribute","text":"@autoclosure "},{"text":"() -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":", "},{"text":"line","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":")"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/assertIsolated(_:file:line:)","url":"\/documentation\/afluent\/retrybybackoffstrategy\/assertisolated(_:file:line:)","abstract":[],"title":"assertIsolated(_:file:line:)","type":"topic","kind":"symbol","role":"symbol"}}}