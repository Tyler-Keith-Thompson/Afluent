{"sections":[],"kind":"symbol","metadata":{"roleHeading":"Instance Method","role":"symbol","extendedModule":"Afluent","modules":[{"name":"Afluent"}],"title":"handle(error:)","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"handle","kind":"identifier"},{"text":"(","kind":"text"},{"text":"error","kind":"externalParam"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"remoteSource":{"fileName":"RetryStrategy.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/RetryStrategies\/RetryStrategy.swift#L38"},"externalID":"s:7Afluent13RetryStrategyPAAE6handle5errorSbs5Error_p_tYaKF::SYNTHESIZED::s:7Afluent22RetryByBackoffStrategyC"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"handle","kind":"identifier"},{"text":"(","kind":"text"},{"text":"error","kind":"externalParam"},{"kind":"text","text":" "},{"text":"err","kind":"internalParam"},{"text":": any ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"inlineContent":[{"text":"A Boolean value indicating whether a retry should be attempted (","type":"text"},{"type":"codeVoice","code":"true"},{"text":") or not (","type":"text"},{"code":"false","type":"codeVoice"},{"type":"text","text":")."}],"type":"paragraph"}]},{"content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"aside","name":"Throws","style":"note","content":[{"inlineContent":[{"type":"text","text":"An error if either the retry strategy itself fails or if the "},{"code":"beforeRetry","type":"codeVoice"},{"type":"text","text":" closure encounters an error."}],"type":"paragraph"}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/afluent\/retrybybackoffstrategy\/handle(error:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/handle(error:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/RetryStrategy-Implementations"]]},"abstract":[{"text":"Determines whether an operation should be retried after encountering an error.","type":"text"}],"references":{"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy":{"navigatorTitle":[{"text":"RetryByBackoffStrategy","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","type":"topic","url":"\/documentation\/afluent\/retrybybackoffstrategy","title":"RetryByBackoffStrategy","abstract":[{"type":"text","text":"A retry strategy using a specified backoff strategy and clock."}],"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"RetryByBackoffStrategy","kind":"identifier"}]},"doc://Afluent/documentation/Afluent":{"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent","type":"topic","url":"\/documentation\/afluent","kind":"symbol","title":"Afluent","role":"collection"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/handle(error:)":{"url":"\/documentation\/afluent\/retrybybackoffstrategy\/handle(error:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"handle","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"error"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"abstract":[{"text":"Determines whether an operation should be retried after encountering an error.","type":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/handle(error:)","title":"handle(error:)","type":"topic","kind":"symbol"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/RetryStrategy-Implementations":{"abstract":[],"role":"collectionGroup","kind":"article","url":"\/documentation\/afluent\/retrybybackoffstrategy\/retrystrategy-implementations","title":"RetryStrategy Implementations","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/RetryStrategy-Implementations"}}}