{"sections":[],"variants":[{"paths":["\/documentation\/afluent\/retrybybackoffstrategy\/handle(error:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"handle"},{"kind":"text","text":"("},{"kind":"externalParam","text":"error"},{"kind":"text","text":" "},{"text":"err","kind":"internalParam"},{"kind":"text","text":": any "},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"inlineContent":[{"type":"text","text":"A Boolean value indicating whether a retry should be attempted ("},{"code":"true","type":"codeVoice"},{"type":"text","text":") or not ("},{"code":"false","type":"codeVoice"},{"text":").","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An error if either the retry strategy itself fails or if the "},{"code":"beforeRetry","type":"codeVoice"},{"type":"text","text":" closure encounters an error."}]}],"name":"Throws","style":"note"}]}],"metadata":{"modules":[{"name":"Afluent"}],"role":"symbol","roleHeading":"Instance Method","title":"handle(error:)","externalID":"s:7Afluent13RetryStrategyPAAE6handle5errorSbs5Error_p_tYaKF::SYNTHESIZED::s:7Afluent22RetryByBackoffStrategyC","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handle","kind":"identifier"},{"text":"(","kind":"text"},{"text":"error","kind":"externalParam"},{"kind":"text","text":": any "},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"extendedModule":"Afluent","symbolKind":"method","remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/RetryStrategies\/RetryStrategy.swift#L38","fileName":"RetryStrategy.swift"}},"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/handle(error:)","interfaceLanguage":"swift"},"kind":"symbol","abstract":[{"type":"text","text":"Determines whether an operation should be retried after encountering an error."}],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/RetryStrategy-Implementations"]]},"references":{"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy":{"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RetryByBackoffStrategy"}],"url":"\/documentation\/afluent\/retrybybackoffstrategy","abstract":[{"type":"text","text":"A retry strategy using a specified backoff strategy and clock."}],"kind":"symbol","role":"symbol","title":"RetryByBackoffStrategy","navigatorTitle":[{"text":"RetryByBackoffStrategy","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/RetryStrategy-Implementations":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/RetryStrategy-Implementations","kind":"article","role":"collectionGroup","title":"RetryStrategy Implementations","abstract":[],"type":"topic","url":"\/documentation\/afluent\/retrybybackoffstrategy\/retrystrategy-implementations"},"doc://Afluent/documentation/Afluent":{"kind":"symbol","role":"collection","abstract":[],"url":"\/documentation\/afluent","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent","title":"Afluent"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/handle(error:)":{"kind":"symbol","type":"topic","url":"\/documentation\/afluent\/retrybybackoffstrategy\/handle(error:)","role":"symbol","abstract":[{"type":"text","text":"Determines whether an operation should be retried after encountering an error."}],"title":"handle(error:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"handle","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"error"},{"text":": any ","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/handle(error:)"}}}