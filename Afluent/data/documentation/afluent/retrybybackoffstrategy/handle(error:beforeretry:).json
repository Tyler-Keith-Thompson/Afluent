{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/retrybybackoffstrategy\/handle(error:beforeretry:)"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"handle","kind":"identifier"},{"kind":"text","text":"("},{"text":"error","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"err"},{"kind":"text","text":": any "},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"beforeRetry","kind":"externalParam"},{"kind":"text","text":": (any "},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Inherited from "},{"code":"RetryStrategy.handle(error:beforeRetry:)","type":"codeVoice"},{"type":"text","text":"."}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy"]]},"metadata":{"externalID":"s:7Afluent22RetryByBackoffStrategyC6handle5error06beforeB0Sbs5Error_p_ysAG_pYaYbKXEtYaKF","modules":[{"name":"Afluent"}],"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/RetryStrategies\/RetryByBackoffStrategy.swift#L58","fileName":"RetryByBackoffStrategy.swift"},"roleHeading":"Instance Method","platforms":[{"deprecated":false,"introducedAt":"16.0","name":"iOS","beta":false,"unavailable":false},{"unavailable":false,"name":"macOS","deprecated":false,"beta":false,"introducedAt":"13.0"},{"name":"tvOS","beta":false,"unavailable":false,"introducedAt":"16.0","deprecated":false},{"name":"watchOS","unavailable":false,"introducedAt":"9.0","beta":false,"deprecated":false}],"role":"symbol","title":"handle(error:beforeRetry:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handle","kind":"identifier"},{"kind":"text","text":"("},{"text":"error","kind":"externalParam"},{"kind":"text","text":": any "},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"beforeRetry"},{"text":": (any ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"symbolKind":"method"},"kind":"symbol","identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/handle(error:beforeRetry:)","interfaceLanguage":"swift"},"sections":[],"references":{"doc://Afluent/documentation/Afluent":{"abstract":[],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent","title":"Afluent","url":"\/documentation\/afluent","type":"topic","role":"collection"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/handle(error:beforeRetry:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"handle","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"error"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"kind":"text","text":", "},{"text":"beforeRetry","kind":"externalParam"},{"text":": (any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/afluent\/retrybybackoffstrategy\/handle(error:beforeretry:)","abstract":[],"type":"topic","role":"symbol","title":"handle(error:beforeRetry:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/handle(error:beforeRetry:)","kind":"symbol"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy":{"abstract":[{"type":"text","text":"A retry strategy using a specified backoff strategy and clock."}],"kind":"symbol","url":"\/documentation\/afluent\/retrybybackoffstrategy","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"RetryByBackoffStrategy","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"RetryByBackoffStrategy"}],"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","title":"RetryByBackoffStrategy"}}}