{"topicSections":[{"anchor":"Instance-Methods","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/handle(error:)"],"generated":true,"title":"Instance Methods"},{"anchor":"Type-Methods","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/backoff(_:)"],"generated":true,"title":"Type Methods"}],"kind":"article","metadata":{"title":"RetryStrategy Implementations","role":"collectionGroup","modules":[{"name":"Afluent"}],"roleHeading":"API Collection"},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy"]]},"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/RetryStrategy-Implementations","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/afluent\/retrybybackoffstrategy\/retrystrategy-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://Afluent/documentation/Afluent":{"type":"topic","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","abstract":[],"url":"\/documentation\/afluent","role":"collection","kind":"symbol"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy":{"role":"symbol","type":"topic","url":"\/documentation\/afluent\/retrybybackoffstrategy","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RetryByBackoffStrategy","kind":"identifier"}],"title":"RetryByBackoffStrategy","abstract":[{"text":"A retry strategy using a specified backoff strategy and clock.","type":"text"}],"navigatorTitle":[{"text":"RetryByBackoffStrategy","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","kind":"symbol"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/backoff(_:)":{"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/backoff(_:)","url":"\/documentation\/afluent\/retrybybackoffstrategy\/backoff(_:)","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Creates a retry strategy using the provided exponential backoff and a continuous clock."}],"title":"backoff(_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"backoff","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ExponentialBackoffStrategy","preciseIdentifier":"s:7Afluent26ExponentialBackoffStrategyC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ContinuousClock","preciseIdentifier":"s:12_Concurrency15ContinuousClockV","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"RetryByBackoffStrategy","preciseIdentifier":"s:7Afluent22RetryByBackoffStrategyC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ExponentialBackoffStrategy","preciseIdentifier":"s:7Afluent26ExponentialBackoffStrategyC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ContinuousClock","preciseIdentifier":"s:12_Concurrency15ContinuousClockV","kind":"typeIdentifier"},{"text":">>","kind":"text"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" is "},{"type":"codeVoice","code":"RetryByBackoffStrategy<ExponentialBackoffStrategy<ContinuousClock>>"},{"type":"text","text":"."}]}},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/handle(error:)":{"kind":"symbol","url":"\/documentation\/afluent\/retrybybackoffstrategy\/handle(error:)","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/handle(error:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handle","kind":"identifier"},{"text":"(","kind":"text"},{"text":"error","kind":"externalParam"},{"text":": any ","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"title":"handle(error:)","abstract":[{"type":"text","text":"Determines whether an operation should be retried after encountering an error."}],"type":"topic"}}}