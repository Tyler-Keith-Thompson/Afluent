{"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RetryStrategy"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Sendable","preciseIdentifier":"s:s8SendableP"}],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"text":"Overview","anchor":"overview","type":"heading"},{"inlineContent":[{"text":"Conforming types must implement logic to determine if an operation should be retried after an error occurs.","type":"text"},{"text":" ","type":"text"},{"text":"This protocol also allows executing any pre-retry logic, such as logging or cleanup, before attempting a retry.","type":"text"}],"type":"paragraph"}]}],"metadata":{"role":"symbol","externalID":"s:7Afluent13RetryStrategyP","title":"RetryStrategy","symbolKind":"protocol","modules":[{"name":"Afluent"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RetryStrategy"}],"remoteSource":{"fileName":"RetryStrategy.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/RetryStrategies\/RetryStrategy.swift#L12"},"roleHeading":"Protocol","navigatorTitle":[{"text":"RetryStrategy","kind":"identifier"}]},"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"type":"text","text":"A strategy for handling errors and determining whether to retry an operation."}],"relationshipsSections":[{"title":"Inherits From","type":"inheritsFrom","kind":"relationships","identifiers":["doc:\/\/Afluent\/s8SendableP"]},{"title":"Conforming Types","type":"conformingTypes","kind":"relationships","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/RetryByCountStrategy"]}],"kind":"symbol","topicSections":[{"title":"Instance Methods","anchor":"Instance-Methods","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy\/handle(error:)","doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy\/handle(error:beforeRetry:)"]},{"title":"Type Methods","anchor":"Type-Methods","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy\/backoff(_:)","doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy\/byCount(_:)"]}],"variants":[{"paths":["\/documentation\/afluent\/retrystrategy"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"references":{"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy":{"kind":"symbol","abstract":[{"type":"text","text":"A retry strategy using a specified backoff strategy and clock."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RetryByBackoffStrategy"}],"title":"RetryByBackoffStrategy","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","url":"\/documentation\/afluent\/retrybybackoffstrategy","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RetryByBackoffStrategy"}]},"doc://Afluent/documentation/Afluent/RetryStrategy/backoff(_:)":{"kind":"symbol","type":"topic","role":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" is "},{"type":"codeVoice","code":"RetryByBackoffStrategy<ExponentialBackoffStrategy<ContinuousClock>>"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"abstract":[{"type":"text","text":"Creates a retry strategy using the provided backoff strategy and a continuous clock."}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"backoff","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ExponentialBackoffStrategy","preciseIdentifier":"s:7Afluent26ExponentialBackoffStrategyC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ContinuousClock","preciseIdentifier":"s:12_Concurrency15ContinuousClockV","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"RetryByBackoffStrategy","preciseIdentifier":"s:7Afluent22RetryByBackoffStrategyC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ExponentialBackoffStrategy","preciseIdentifier":"s:7Afluent26ExponentialBackoffStrategyC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ContinuousClock","preciseIdentifier":"s:12_Concurrency15ContinuousClockV","kind":"typeIdentifier"},{"text":">>","kind":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy\/backoff(_:)","url":"\/documentation\/afluent\/retrystrategy\/backoff(_:)","title":"backoff(_:)"},"doc://Afluent/documentation/Afluent/RetryByCountStrategy":{"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RetryByCountStrategy"}],"kind":"symbol","abstract":[{"text":"A ","type":"text"},{"code":"RetryStrategy","type":"codeVoice"},{"text":" that limits the number of retry attempts.","type":"text"}],"role":"symbol","title":"RetryByCountStrategy","navigatorTitle":[{"kind":"identifier","text":"RetryByCountStrategy"}],"url":"\/documentation\/afluent\/retrybycountstrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByCountStrategy"},"doc://Afluent/documentation/Afluent/RetryStrategy/handle(error:beforeRetry:)":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy\/handle(error:beforeRetry:)","url":"\/documentation\/afluent\/retrystrategy\/handle(error:beforeretry:)","type":"topic","required":true,"role":"symbol","title":"handle(error:beforeRetry:)","kind":"symbol","abstract":[{"type":"text","text":"Determines whether an operation should be retried after encountering an error."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handle","kind":"identifier"},{"text":"(","kind":"text"},{"text":"error","kind":"externalParam"},{"text":": any ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":", ","kind":"text"},{"text":"beforeRetry","kind":"externalParam"},{"text":": (any ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}]},"doc://Afluent/documentation/Afluent/RetryStrategy/handle(error:)":{"type":"topic","url":"\/documentation\/afluent\/retrystrategy\/handle(error:)","title":"handle(error:)","abstract":[{"text":"Determines whether an operation should be retried after encountering an error.","type":"text"}],"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy\/handle(error:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handle","kind":"identifier"},{"text":"(","kind":"text"},{"text":"error","kind":"externalParam"},{"text":": any ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]},"doc://Afluent/documentation/Afluent/RetryStrategy/byCount(_:)":{"conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" is "},{"code":"RetryByCountStrategy","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"type":"topic","title":"byCount(_:)","url":"\/documentation\/afluent\/retrystrategy\/bycount(_:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy\/byCount(_:)","abstract":[{"text":"Creates a retry strategy that retries the operation up to a specified number of times.","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"byCount","kind":"identifier"},{"text":"(","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":") -> ","kind":"text"},{"text":"RetryByCountStrategy","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent20RetryByCountStrategyC"}]},"doc://Afluent/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/Afluent\/s8SendableP"},"doc://Afluent/documentation/Afluent/RetryStrategy":{"role":"symbol","kind":"symbol","url":"\/documentation\/afluent\/retrystrategy","navigatorTitle":[{"kind":"identifier","text":"RetryStrategy"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RetryStrategy"}],"title":"RetryStrategy","abstract":[{"type":"text","text":"A strategy for handling errors and determining whether to retry an operation."}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy"},"doc://Afluent/documentation/Afluent":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent","abstract":[],"title":"Afluent","type":"topic","kind":"symbol","role":"collection","url":"\/documentation\/afluent"}}}