{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy\/handle(error:beforeRetry:)"},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy"]]},"abstract":[{"type":"text","text":"Determines whether an operation should be retried after encountering an error."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handle","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"error"},{"text":": any ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":", ","kind":"text"},{"text":"beforeRetry","kind":"externalParam"},{"kind":"text","text":": (any "},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"error","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The error that occurred during the operation."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that is executed before a retry is attempted. The closure is passed the encountered error"},{"text":" ","type":"text"},{"type":"text","text":"and can perform actions such as logging or cleanup before the retry is made. The closure itself is asynchronous"},{"text":" ","type":"text"},{"type":"text","text":"and can throw errors if needed."}]}],"name":"beforeRetry"}]},{"content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A Boolean value indicating whether a retry should be attempted ("},{"type":"codeVoice","code":"true"},{"text":") or not (","type":"text"},{"type":"codeVoice","code":"false"},{"type":"text","text":")."}]}],"kind":"content"},{"content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"name":"Throws","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An error if either the retry strategy itself fails or if the "},{"type":"codeVoice","code":"beforeRetry"},{"text":" closure encounters an error.","type":"text"}]}],"style":"note"}],"kind":"content"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/retrystrategy\/handle(error:beforeretry:)"]}],"metadata":{"modules":[{"name":"Afluent"}],"externalID":"s:7Afluent13RetryStrategyP6handle5error06beforeB0Sbs5Error_p_ysAG_pYaYbKXEtYaKF","title":"handle(error:beforeRetry:)","symbolKind":"method","role":"symbol","required":true,"roleHeading":"Instance Method","remoteSource":{"fileName":"RetryStrategy.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/RetryStrategies\/RetryStrategy.swift#L25"},"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"handle"},{"kind":"text","text":"("},{"text":"error","kind":"externalParam"},{"text":": any ","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"beforeRetry","kind":"externalParam"},{"kind":"text","text":": (any "},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"sections":[],"kind":"symbol","references":{"doc://Afluent/documentation/Afluent/RetryStrategy":{"type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RetryStrategy"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"RetryStrategy","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","url":"\/documentation\/afluent\/retrystrategy","title":"RetryStrategy","abstract":[{"type":"text","text":"A strategy for handling errors and determining whether to retry an operation."}]},"doc://Afluent/documentation/Afluent/RetryStrategy/handle(error:beforeRetry:)":{"role":"symbol","required":true,"kind":"symbol","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy\/handle(error:beforeRetry:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"handle","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"error"},{"text":": any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":", "},{"kind":"externalParam","text":"beforeRetry"},{"text":": (any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"title":"handle(error:beforeRetry:)","url":"\/documentation\/afluent\/retrystrategy\/handle(error:beforeretry:)","abstract":[{"text":"Determines whether an operation should be retried after encountering an error.","type":"text"}]},"doc://Afluent/documentation/Afluent":{"kind":"symbol","abstract":[],"url":"\/documentation\/afluent","type":"topic","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","role":"collection"}}}