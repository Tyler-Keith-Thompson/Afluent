{"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"metadata":{"roleHeading":"Class","symbolKind":"class","modules":[{"name":"Afluent"}],"role":"symbol","externalID":"s:7Afluent15SerialTaskQueueC","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SerialTaskQueue","kind":"identifier"}],"remoteSource":{"fileName":"SerialTaskQueue.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SerialTaskQueue.swift#L19"},"navigatorTitle":[{"kind":"identifier","text":"SerialTaskQueue"}],"title":"SerialTaskQueue"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue"},"sections":[],"topicSections":[{"title":"Initializers","anchor":"Initializers","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/init()"],"generated":true},{"title":"Instance Methods","anchor":"Instance-Methods","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/cancelAll()","doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/queue(_:)"],"generated":true}],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"final","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SerialTaskQueue"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"anchor":"overview","type":"heading","text":"Overview"},{"inlineContent":[{"text":"This actor manages a queue of tasks, ensuring that only one task is executed at a time. If a task is currently running, any new tasks are added to the queue and executed sequentially.","type":"text"}],"type":"paragraph"},{"level":2,"anchor":"Discussion","type":"heading","text":"Discussion"},{"inlineContent":[{"text":"The ","type":"text"},{"code":"SerialTaskQueue","type":"codeVoice"},{"text":" actor provides a way to manage task execution in a serial manner. When a new task is queued, it checks if another task is currently running. If no task is running, the new task is executed immediately. If a task is already running, the new task is added to a queue and will be executed once the current task completes.","type":"text"},{"text":" ","type":"text"},{"text":"This actor is useful in scenarios where tasks must be executed in a specific order or when you need to ensure that only one task is executed at a time to avoid race conditions.","type":"text"}],"type":"paragraph"}]}],"variants":[{"paths":["\/documentation\/afluent\/serialtaskqueue"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"A serial task queue that ensures tasks are executed one at a time."}],"relationshipsSections":[{"kind":"relationships","title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/Afluent\/s8SendableP"]}],"kind":"symbol","references":{"doc://Afluent/documentation/Afluent/SerialTaskQueue/cancelAll()":{"abstract":[{"type":"text","text":"Cancels all the ongoing tasks in the queue"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/cancelAll()","url":"\/documentation\/afluent\/serialtaskqueue\/cancelall()","kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cancelAll"},{"kind":"text","text":"()"}],"title":"cancelAll()"},"doc://Afluent/documentation/Afluent/SerialTaskQueue/init()":{"role":"symbol","kind":"symbol","title":"init()","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"type":"topic","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/init()","url":"\/documentation\/afluent\/serialtaskqueue\/init()"},"doc://Afluent/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/Afluent\/s8SendableP"},"doc://Afluent/documentation/Afluent":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent","abstract":[],"title":"Afluent","type":"topic","kind":"symbol","role":"collection","url":"\/documentation\/afluent"},"doc://Afluent/documentation/Afluent/SerialTaskQueue":{"title":"SerialTaskQueue","role":"symbol","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SerialTaskQueue"}],"navigatorTitle":[{"kind":"identifier","text":"SerialTaskQueue"}],"type":"topic","url":"\/documentation\/afluent\/serialtaskqueue","abstract":[{"type":"text","text":"A serial task queue that ensures tasks are executed one at a time."}]},"doc://Afluent/documentation/Afluent/SerialTaskQueue/queue(_:)":{"title":"queue(_:)","url":"\/documentation\/afluent\/serialtaskqueue\/queue(_:)","type":"topic","abstract":[{"type":"text","text":"Queues a task to be executed serially."}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"queue"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(() "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/queue(_:)"}}}