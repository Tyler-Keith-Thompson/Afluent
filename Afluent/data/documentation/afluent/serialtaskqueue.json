{"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"relationshipsSections":[{"identifiers":["doc:\/\/Afluent\/s8SendableP"],"type":"conformsTo","title":"Conforms To","kind":"relationships"}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/serialtaskqueue"]}],"topicSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/init()"],"generated":true,"anchor":"Initializers","title":"Initializers"},{"title":"Instance Methods","anchor":"Instance-Methods","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/cancelAll()","doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/queue(_:)"],"generated":true}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"final","kind":"keyword"},{"kind":"text","text":" "},{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"SerialTaskQueue","kind":"identifier"}]}]},{"kind":"content","content":[{"level":2,"text":"Overview","anchor":"overview","type":"heading"},{"inlineContent":[{"type":"text","text":"This actor manages a queue of tasks, ensuring that only one task is executed at a time. If a task is currently running, any new tasks are added to the queue and executed sequentially."}],"type":"paragraph"},{"type":"heading","text":"Discussion","level":2,"anchor":"Discussion"},{"inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"SerialTaskQueue"},{"text":" actor provides a way to manage task execution in a serial manner. When a new task is queued, it checks if another task is currently running. If no task is running, the new task is executed immediately. If a task is already running, the new task is added to a queue and will be executed once the current task completes.","type":"text"},{"text":" ","type":"text"},{"text":"This actor is useful in scenarios where tasks must be executed in a specific order or when you need to ensure that only one task is executed at a time to avoid race conditions.","type":"text"}],"type":"paragraph"}]}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"SerialTaskQueue","kind":"identifier"}],"remoteSource":{"fileName":"SerialTaskQueue.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SerialTaskQueue.swift#L19"},"role":"symbol","title":"SerialTaskQueue","externalID":"s:7Afluent15SerialTaskQueueC","symbolKind":"class","roleHeading":"Class","navigatorTitle":[{"kind":"identifier","text":"SerialTaskQueue"}],"modules":[{"name":"Afluent"}]},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"abstract":[{"type":"text","text":"A serial task queue that ensures tasks are executed one at a time."}],"references":{"doc://Afluent/documentation/Afluent/SerialTaskQueue/cancelAll()":{"title":"cancelAll()","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cancelAll","kind":"identifier"},{"text":"()","kind":"text"}],"kind":"symbol","abstract":[{"type":"text","text":"Cancels all the ongoing tasks in the queue"}],"url":"\/documentation\/afluent\/serialtaskqueue\/cancelall()","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/cancelAll()"},"doc://Afluent/documentation/Afluent":{"title":"Afluent","role":"collection","type":"topic","url":"\/documentation\/afluent","abstract":[],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent"},"doc://Afluent/documentation/Afluent/SerialTaskQueue/init()":{"fragments":[{"kind":"identifier","text":"init"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/init()","kind":"symbol","abstract":[],"title":"init()","type":"topic","url":"\/documentation\/afluent\/serialtaskqueue\/init()","role":"symbol"},"doc://Afluent/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/Afluent\/s8SendableP"},"doc://Afluent/documentation/Afluent/SerialTaskQueue":{"type":"topic","abstract":[{"text":"A serial task queue that ensures tasks are executed one at a time.","type":"text"}],"navigatorTitle":[{"text":"SerialTaskQueue","kind":"identifier"}],"url":"\/documentation\/afluent\/serialtaskqueue","kind":"symbol","title":"SerialTaskQueue","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SerialTaskQueue","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/SerialTaskQueue/queue(_:)":{"title":"queue(_:)","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/queue(_:)","url":"\/documentation\/afluent\/serialtaskqueue\/queue(_:)","abstract":[{"text":"Queues a task to be executed serially.","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"queue"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(() ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}]}}}