{"metadata":{"navigatorTitle":[{"text":"SerialTaskQueue","kind":"identifier"}],"role":"symbol","remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SerialTaskQueue.swift#L19","fileName":"SerialTaskQueue.swift"},"modules":[{"name":"Afluent"}],"symbolKind":"class","roleHeading":"Class","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SerialTaskQueue"}],"title":"SerialTaskQueue","externalID":"s:7Afluent15SerialTaskQueueC"},"kind":"symbol","topicSections":[{"generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/init()"],"title":"Initializers","anchor":"Initializers"},{"title":"Instance Methods","anchor":"Instance-Methods","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/cancelAll()","doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/queue(_:)"]}],"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/Afluent\/s8SendableP"],"type":"conformsTo","kind":"relationships"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/serialtaskqueue"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue"},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"final"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"SerialTaskQueue","kind":"identifier"}]}]},{"kind":"content","content":[{"anchor":"overview","text":"Overview","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"This actor manages a queue of tasks, ensuring that only one task is executed at a time. If a task is currently running, any new tasks are added to the queue and executed sequentially."}],"type":"paragraph"},{"level":2,"anchor":"Discussion","type":"heading","text":"Discussion"},{"inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"SerialTaskQueue"},{"type":"text","text":" actor provides a way to manage task execution in a serial manner. When a new task is queued, it checks if another task is currently running. If no task is running, the new task is executed immediately. If a task is already running, the new task is added to a queue and will be executed once the current task completes."},{"type":"text","text":" "},{"type":"text","text":"This actor is useful in scenarios where tasks must be executed in a specific order or when you need to ensure that only one task is executed at a time to avoid race conditions."}],"type":"paragraph"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"text":"A serial task queue that ensures tasks are executed one at a time.","type":"text"}],"sections":[],"references":{"doc://Afluent/documentation/Afluent/SerialTaskQueue/cancelAll()":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/cancelAll()","url":"\/documentation\/afluent\/serialtaskqueue\/cancelall()","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cancelAll"},{"text":"()","kind":"text"}],"title":"cancelAll()","abstract":[{"type":"text","text":"Cancels all the ongoing tasks in the queue"}],"role":"symbol","kind":"symbol"},"doc://Afluent/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/Afluent\/s8SendableP","title":"Swift.Sendable"},"doc://Afluent/documentation/Afluent/SerialTaskQueue/init()":{"url":"\/documentation\/afluent\/serialtaskqueue\/init()","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/init()","title":"init()","type":"topic","role":"symbol","abstract":[],"fragments":[{"kind":"identifier","text":"init"},{"text":"()","kind":"text"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/SerialTaskQueue/queue(_:)":{"kind":"symbol","type":"topic","title":"queue(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"queue","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(() ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/queue(_:)","abstract":[{"text":"Queues a task to be executed serially.","type":"text"}],"url":"\/documentation\/afluent\/serialtaskqueue\/queue(_:)"},"doc://Afluent/documentation/Afluent/SerialTaskQueue":{"kind":"symbol","title":"SerialTaskQueue","type":"topic","url":"\/documentation\/afluent\/serialtaskqueue","role":"symbol","abstract":[{"text":"A serial task queue that ensures tasks are executed one at a time.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SerialTaskQueue"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","navigatorTitle":[{"kind":"identifier","text":"SerialTaskQueue"}]},"doc://Afluent/documentation/Afluent":{"kind":"symbol","role":"collection","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent","abstract":[],"title":"Afluent","url":"\/documentation\/afluent"}}}