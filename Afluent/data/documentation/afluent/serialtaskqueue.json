{"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/init()"],"anchor":"Initializers","generated":true},{"title":"Instance Methods","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/cancelAll()","doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/queue(_:)"],"anchor":"Instance-Methods","generated":true}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/serialtaskqueue"]}],"sections":[],"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SerialTaskQueue","kind":"identifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"This class manages a queue of asynchronous tasks, executing each task sequentially to prevent concurrent execution."},{"type":"text","text":" "},{"type":"text","text":"It is useful when tasks must run in order or when you want to avoid race conditions by ensuring only one task runs at any given time."}],"type":"paragraph"},{"text":"Example","anchor":"Example","type":"heading","level":2},{"syntax":"swift","type":"codeListing","code":["let queue = SerialTaskQueue()","","async let first = queue.queue {","    try await Task.sleep(nanoseconds: 2_000_000_000)","    return \"first\"","}","async let second = queue.queue {","    try await Task.sleep(nanoseconds: 1_000_000_000)","    return \"second\"","}","","\/\/ The results are delivered in order: [\"first\", \"second\"], even though the second task sleeps less","let results = try await [first, second]","print(results)","","\/\/ To cancel all tasks:","queue.cancelAll()"]}]}],"abstract":[{"type":"text","text":"A serial task queue that ensures tasks are executed one at a time."}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/Afluent\/s8SendableP"],"type":"conformsTo","kind":"relationships"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"remoteSource":{"fileName":"SerialTaskQueue.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SerialTaskQueue.swift#L36"},"roleHeading":"Class","externalID":"s:7Afluent15SerialTaskQueueC","title":"SerialTaskQueue","navigatorTitle":[{"kind":"identifier","text":"SerialTaskQueue"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SerialTaskQueue"}],"symbolKind":"class","role":"symbol","modules":[{"name":"Afluent"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue"},"references":{"doc://Afluent/documentation/Afluent/SerialTaskQueue":{"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SerialTaskQueue","kind":"identifier"}],"title":"SerialTaskQueue","type":"topic","kind":"symbol","navigatorTitle":[{"text":"SerialTaskQueue","kind":"identifier"}],"url":"\/documentation\/afluent\/serialtaskqueue","abstract":[{"type":"text","text":"A serial task queue that ensures tasks are executed one at a time."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue"},"doc://Afluent/documentation/Afluent/SerialTaskQueue/queue(_:)":{"type":"topic","url":"\/documentation\/afluent\/serialtaskqueue\/queue(_:)","abstract":[{"text":"Queues a task to be executed serially.","type":"text"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"queue","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"title":"queue(_:)","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/queue(_:)"},"doc://Afluent/documentation/Afluent/SerialTaskQueue/cancelAll()":{"role":"symbol","abstract":[{"type":"text","text":"Cancels all the ongoing tasks in the queue."}],"kind":"symbol","type":"topic","url":"\/documentation\/afluent\/serialtaskqueue\/cancelall()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cancelAll"},{"kind":"text","text":"()"}],"title":"cancelAll()","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/cancelAll()"},"doc://Afluent/documentation/Afluent":{"type":"topic","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","abstract":[],"url":"\/documentation\/afluent","role":"collection","kind":"symbol"},"doc://Afluent/documentation/Afluent/SerialTaskQueue/init()":{"type":"topic","url":"\/documentation\/afluent\/serialtaskqueue\/init()","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/init()","title":"init()","abstract":[],"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"kind":"symbol"},"doc://Afluent/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/Afluent\/s8SendableP"}}}