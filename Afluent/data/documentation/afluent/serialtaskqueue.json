{"sections":[],"relationshipsSections":[{"identifiers":["doc:\/\/Afluent\/s8SendableP"],"title":"Conforms To","kind":"relationships","type":"conformsTo"}],"metadata":{"symbolKind":"class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"SerialTaskQueue","kind":"identifier"}],"modules":[{"name":"Afluent"}],"roleHeading":"Class","title":"SerialTaskQueue","externalID":"s:7Afluent15SerialTaskQueueC","remoteSource":{"fileName":"SerialTaskQueue.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SerialTaskQueue.swift#L19"},"role":"symbol","navigatorTitle":[{"text":"SerialTaskQueue","kind":"identifier"}]},"abstract":[{"text":"A serial task queue that ensures tasks are executed one at a time.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/serialtaskqueue"]}],"topicSections":[{"anchor":"Initializers","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/init()"],"generated":true,"title":"Initializers"},{"anchor":"Instance-Methods","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/cancelAll()","doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/queue(_:)"],"title":"Instance Methods","generated":true}],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"final","kind":"keyword"},{"kind":"text","text":" "},{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"SerialTaskQueue","kind":"identifier"}],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"text":"Overview","type":"heading"},{"inlineContent":[{"type":"text","text":"This actor manages a queue of tasks, ensuring that only one task is executed at a time. If a task is currently running, any new tasks are added to the queue and executed sequentially."}],"type":"paragraph"},{"text":"Discussion","type":"heading","anchor":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"SerialTaskQueue"},{"type":"text","text":" actor provides a way to manage task execution in a serial manner. When a new task is queued, it checks if another task is currently running. If no task is running, the new task is executed immediately. If a task is already running, the new task is added to a queue and will be executed once the current task completes."},{"type":"text","text":" "},{"type":"text","text":"This actor is useful in scenarios where tasks must be executed in a specific order or when you need to ensure that only one task is executed at a time to avoid race conditions."}]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue"},"kind":"symbol","references":{"doc://Afluent/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/Afluent\/s8SendableP"},"doc://Afluent/documentation/Afluent/SerialTaskQueue/init()":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"kind":"symbol","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/init()","url":"\/documentation\/afluent\/serialtaskqueue\/init()","title":"init()","type":"topic","role":"symbol"},"doc://Afluent/documentation/Afluent":{"abstract":[],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent","title":"Afluent","url":"\/documentation\/afluent","type":"topic","role":"collection"},"doc://Afluent/documentation/Afluent/SerialTaskQueue":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","navigatorTitle":[{"kind":"identifier","text":"SerialTaskQueue"}],"title":"SerialTaskQueue","abstract":[{"type":"text","text":"A serial task queue that ensures tasks are executed one at a time."}],"kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SerialTaskQueue"}],"url":"\/documentation\/afluent\/serialtaskqueue"},"doc://Afluent/documentation/Afluent/SerialTaskQueue/cancelAll()":{"type":"topic","role":"symbol","url":"\/documentation\/afluent\/serialtaskqueue\/cancelall()","title":"cancelAll()","abstract":[{"type":"text","text":"Cancels all the ongoing tasks in the queue"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cancelAll"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/cancelAll()","kind":"symbol"},"doc://Afluent/documentation/Afluent/SerialTaskQueue/queue(_:)":{"abstract":[{"type":"text","text":"Queues a task to be executed serially."}],"type":"topic","title":"queue(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"queue","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(() "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/queue(_:)","role":"symbol","kind":"symbol","url":"\/documentation\/afluent\/serialtaskqueue\/queue(_:)"}}}