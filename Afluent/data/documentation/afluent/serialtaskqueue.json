{"topicSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/init()"],"generated":true,"anchor":"Initializers","title":"Initializers"},{"generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/cancelAll()","doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/queue(_:)"],"title":"Instance Methods","anchor":"Instance-Methods"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"SerialTaskQueue","kind":"identifier"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"text":"Overview","type":"heading","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This actor manages a queue of tasks, ensuring that only one task is executed at a time. If a task is currently running, any new tasks are added to the queue and executed sequentially."}]},{"type":"heading","text":"Discussion","anchor":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"SerialTaskQueue","type":"codeVoice"},{"type":"text","text":" actor provides a way to manage task execution in a serial manner. When a new task is queued, it checks if another task is currently running. If no task is running, the new task is executed immediately. If a task is already running, the new task is added to a queue and will be executed once the current task completes."},{"type":"text","text":" "},{"type":"text","text":"This actor is useful in scenarios where tasks must be executed in a specific order or when you need to ensure that only one task is executed at a time to avoid race conditions."}]}],"kind":"content"}],"relationshipsSections":[{"identifiers":["doc:\/\/Afluent\/s8SendableP"],"title":"Conforms To","kind":"relationships","type":"conformsTo"}],"variants":[{"paths":["\/documentation\/afluent\/serialtaskqueue"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"symbolKind":"class","modules":[{"name":"Afluent"}],"title":"SerialTaskQueue","roleHeading":"Class","navigatorTitle":[{"text":"SerialTaskQueue","kind":"identifier"}],"remoteSource":{"fileName":"SerialTaskQueue.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SerialTaskQueue.swift#L19"},"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SerialTaskQueue"}],"externalID":"s:7Afluent15SerialTaskQueueC","role":"symbol"},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"sections":[],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","interfaceLanguage":"swift"},"abstract":[{"text":"A serial task queue that ensures tasks are executed one at a time.","type":"text"}],"kind":"symbol","references":{"doc://Afluent/documentation/Afluent/SerialTaskQueue/queue(_:)":{"role":"symbol","url":"\/documentation\/afluent\/serialtaskqueue\/queue(_:)","title":"queue(_:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/queue(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"queue"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(() "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"abstract":[{"text":"Queues a task to be executed serially.","type":"text"}],"kind":"symbol","type":"topic"},"doc://Afluent/documentation/Afluent/SerialTaskQueue":{"title":"SerialTaskQueue","url":"\/documentation\/afluent\/serialtaskqueue","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","abstract":[{"type":"text","text":"A serial task queue that ensures tasks are executed one at a time."}],"role":"symbol","navigatorTitle":[{"text":"SerialTaskQueue","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SerialTaskQueue"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/SerialTaskQueue/init()":{"url":"\/documentation\/afluent\/serialtaskqueue\/init()","abstract":[],"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"()"}],"kind":"symbol","title":"init()","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/init()","role":"symbol","type":"topic"},"doc://Afluent/documentation/Afluent/SerialTaskQueue/cancelAll()":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/cancelAll()","abstract":[{"type":"text","text":"Cancels all the ongoing tasks in the queue"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cancelAll"},{"text":"()","kind":"text"}],"url":"\/documentation\/afluent\/serialtaskqueue\/cancelall()","title":"cancelAll()","kind":"symbol","role":"symbol","type":"topic"},"doc://Afluent/s8SendableP":{"identifier":"doc:\/\/Afluent\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://Afluent/documentation/Afluent":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent","abstract":[],"kind":"symbol","title":"Afluent","url":"\/documentation\/afluent","role":"collection","type":"topic"}}}