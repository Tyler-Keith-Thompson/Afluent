{"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"navigatorTitle":[{"kind":"identifier","text":"SerialTaskQueue"}],"externalID":"s:7Afluent15SerialTaskQueueC","roleHeading":"Class","remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SerialTaskQueue.swift#L36","fileName":"SerialTaskQueue.swift"},"symbolKind":"class","modules":[{"name":"Afluent"}],"role":"symbol","title":"SerialTaskQueue","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SerialTaskQueue","kind":"identifier"}]},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"sections":[],"abstract":[{"type":"text","text":"A serial task queue that ensures tasks are executed one at a time."}],"topicSections":[{"generated":true,"anchor":"Initializers","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/init()"],"title":"Initializers"},{"generated":true,"anchor":"Instance-Methods","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/cancelAll()","doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/enqueue(_:)-53amy","doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/enqueue(_:)-9308e","doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/queue(_:)"],"title":"Instance Methods"}],"kind":"symbol","relationshipsSections":[{"type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/Afluent\/s8SendableP"],"title":"Conforms To"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SerialTaskQueue","kind":"identifier"}]}]},{"content":[{"anchor":"overview","type":"heading","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This class manages a queue of asynchronous tasks, executing each task sequentially to prevent concurrent execution."},{"type":"text","text":" "},{"type":"text","text":"It is useful when tasks must run in order or when you want to avoid race conditions by ensuring only one task runs at any given time."}]},{"anchor":"Example","type":"heading","level":2,"text":"Example"},{"syntax":"swift","type":"codeListing","code":["let queue = SerialTaskQueue()","","async let first = queue.enqueue {","    try await Task.sleep(nanoseconds: 2_000_000_000)","    return \"first\"","}","async let second = queue.enqueue {","    try await Task.sleep(nanoseconds: 1_000_000_000)","    return \"second\"","}","","\/\/ The results are delivered in order: [\"first\", \"second\"], even though the second task sleeps less","let results = try await [first, second]","print(results)","","\/\/ To cancel all tasks:","queue.cancelAll()"]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/afluent\/serialtaskqueue"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","interfaceLanguage":"swift"},"references":{"doc://Afluent/documentation/Afluent/SerialTaskQueue/cancelAll()":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/cancelAll()","url":"\/documentation\/afluent\/serialtaskqueue\/cancelall()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cancelAll"},{"kind":"text","text":"()"}],"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Cancels all the ongoing tasks in the queue."}],"title":"cancelAll()","type":"topic"},"doc://Afluent/documentation/Afluent":{"title":"Afluent","url":"\/documentation\/afluent","role":"collection","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol","abstract":[]},"doc://Afluent/documentation/Afluent/SerialTaskQueue":{"url":"\/documentation\/afluent\/serialtaskqueue","navigatorTitle":[{"text":"SerialTaskQueue","kind":"identifier"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","abstract":[{"text":"A serial task queue that ensures tasks are executed one at a time.","type":"text"}],"type":"topic","title":"SerialTaskQueue","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SerialTaskQueue","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/SerialTaskQueue/init()":{"role":"symbol","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/init()","title":"init()","url":"\/documentation\/afluent\/serialtaskqueue\/init()","abstract":[]},"doc://Afluent/documentation/Afluent/SerialTaskQueue/enqueue(_:)-9308e":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"enqueue"},{"kind":"text","text":"(() "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"url":"\/documentation\/afluent\/serialtaskqueue\/enqueue(_:)-9308e","title":"enqueue(_:)","role":"symbol","kind":"symbol","type":"topic","abstract":[{"text":"Queues a task to be executed serially without waiting for completion (fire-and-forget).","type":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/enqueue(_:)-9308e"},"doc://Afluent/documentation/Afluent/SerialTaskQueue/queue(_:)":{"deprecated":true,"kind":"symbol","url":"\/documentation\/afluent\/serialtaskqueue\/queue(_:)","title":"queue(_:)","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/queue(_:)","type":"topic","abstract":[{"type":"text","text":"Queues a task to be executed serially."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"queue","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}]},"doc://Afluent/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/Afluent\/s8SendableP","type":"unresolvable"},"doc://Afluent/documentation/Afluent/SerialTaskQueue/enqueue(_:)-53amy":{"type":"topic","url":"\/documentation\/afluent\/serialtaskqueue\/enqueue(_:)-53amy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/enqueue(_:)-53amy","title":"enqueue(_:)","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Queues a task to be executed serially."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"enqueue","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}]}}}