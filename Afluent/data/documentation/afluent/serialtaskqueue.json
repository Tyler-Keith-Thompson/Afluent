{"schemaVersion":{"minor":3,"patch":0,"major":0},"topicSections":[{"generated":true,"title":"Initializers","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/init()"],"anchor":"Initializers"},{"title":"Instance Methods","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/cancelAll()","doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/queue(_:)"],"anchor":"Instance-Methods"}],"relationshipsSections":[{"kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/Afluent\/s8SendableP"],"title":"Conforms To"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/serialtaskqueue"]}],"metadata":{"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SerialTaskQueue"}],"symbolKind":"class","title":"SerialTaskQueue","role":"symbol","roleHeading":"Class","externalID":"s:7Afluent15SerialTaskQueueC","remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SerialTaskQueue.swift#L19","fileName":"SerialTaskQueue.swift"},"modules":[{"name":"Afluent"}],"navigatorTitle":[{"text":"SerialTaskQueue","kind":"identifier"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SerialTaskQueue"}],"platforms":["macOS"],"languages":["swift"]}]},{"content":[{"text":"Overview","level":2,"type":"heading","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"This actor manages a queue of tasks, ensuring that only one task is executed at a time. If a task is currently running, any new tasks are added to the queue and executed sequentially.","type":"text"}]},{"text":"Discussion","type":"heading","level":2,"anchor":"Discussion"},{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"SerialTaskQueue"},{"type":"text","text":" actor provides a way to manage task execution in a serial manner. When a new task is queued, it checks if another task is currently running. If no task is running, the new task is executed immediately. If a task is already running, the new task is added to a queue and will be executed once the current task completes."},{"type":"text","text":" "},{"type":"text","text":"This actor is useful in scenarios where tasks must be executed in a specific order or when you need to ensure that only one task is executed at a time to avoid race conditions."}],"type":"paragraph"}],"kind":"content"}],"abstract":[{"text":"A serial task queue that ensures tasks are executed one at a time.","type":"text"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"sections":[],"references":{"doc://Afluent/documentation/Afluent/SerialTaskQueue/init()":{"url":"\/documentation\/afluent\/serialtaskqueue\/init()","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"title":"init()","role":"symbol","abstract":[],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/init()","type":"topic"},"doc://Afluent/documentation/Afluent":{"title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol","abstract":[],"type":"topic","role":"collection","url":"\/documentation\/afluent"},"doc://Afluent/documentation/Afluent/SerialTaskQueue/queue(_:)":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/queue(_:)","role":"symbol","abstract":[{"type":"text","text":"Queues a task to be executed serially."}],"type":"topic","kind":"symbol","title":"queue(_:)","url":"\/documentation\/afluent\/serialtaskqueue\/queue(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"queue"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(() ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}]},"doc://Afluent/documentation/Afluent/SerialTaskQueue/cancelAll()":{"url":"\/documentation\/afluent\/serialtaskqueue\/cancelall()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cancelAll"},{"kind":"text","text":"()"}],"title":"cancelAll()","role":"symbol","abstract":[{"text":"Cancels all the ongoing tasks in the queue","type":"text"}],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/cancelAll()","type":"topic"},"doc://Afluent/s8SendableP":{"identifier":"doc:\/\/Afluent\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://Afluent/documentation/Afluent/SerialTaskQueue":{"url":"\/documentation\/afluent\/serialtaskqueue","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"SerialTaskQueue","kind":"identifier"}],"title":"SerialTaskQueue","role":"symbol","abstract":[{"text":"A serial task queue that ensures tasks are executed one at a time.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","type":"topic","navigatorTitle":[{"text":"SerialTaskQueue","kind":"identifier"}]}}}