{"abstract":[{"type":"text","text":"A serial task queue that ensures tasks are executed one at a time."}],"topicSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/init()"],"generated":true,"title":"Initializers","anchor":"Initializers"},{"generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/cancelAll()","doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/queue(_:)"],"title":"Instance Methods","anchor":"Instance-Methods"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/serialtaskqueue"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue"},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"metadata":{"navigatorTitle":[{"kind":"identifier","text":"SerialTaskQueue"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SerialTaskQueue"}],"modules":[{"name":"Afluent"}],"externalID":"s:7Afluent15SerialTaskQueueC","remoteSource":{"fileName":"SerialTaskQueue.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SerialTaskQueue.swift#L19"},"roleHeading":"Class","role":"symbol","title":"SerialTaskQueue","symbolKind":"class"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"SerialTaskQueue","kind":"identifier"}],"platforms":["macOS"]}]},{"content":[{"text":"Overview","type":"heading","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"text":"This actor manages a queue of tasks, ensuring that only one task is executed at a time. If a task is currently running, any new tasks are added to the queue and executed sequentially.","type":"text"}]},{"type":"heading","level":2,"anchor":"Discussion","text":"Discussion"},{"inlineContent":[{"type":"text","text":"The "},{"code":"SerialTaskQueue","type":"codeVoice"},{"text":" actor provides a way to manage task execution in a serial manner. When a new task is queued, it checks if another task is currently running. If no task is running, the new task is executed immediately. If a task is already running, the new task is added to a queue and will be executed once the current task completes.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"This actor is useful in scenarios where tasks must be executed in a specific order or when you need to ensure that only one task is executed at a time to avoid race conditions."}],"type":"paragraph"}],"kind":"content"}],"kind":"symbol","relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/Afluent\/s8SendableP"],"type":"conformsTo","kind":"relationships"}],"references":{"doc://Afluent/documentation/Afluent/SerialTaskQueue/init()":{"fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"abstract":[],"role":"symbol","url":"\/documentation\/afluent\/serialtaskqueue\/init()","title":"init()","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/init()","type":"topic","kind":"symbol"},"doc://Afluent/documentation/Afluent/SerialTaskQueue/cancelAll()":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"cancelAll","kind":"identifier"},{"text":"()","kind":"text"}],"abstract":[{"type":"text","text":"Cancels all the ongoing tasks in the queue"}],"kind":"symbol","title":"cancelAll()","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/cancelAll()","type":"topic","role":"symbol","url":"\/documentation\/afluent\/serialtaskqueue\/cancelall()"},"doc://Afluent/s8SendableP":{"identifier":"doc:\/\/Afluent\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://Afluent/documentation/Afluent/SerialTaskQueue/queue(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"queue"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">(() "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"}],"abstract":[{"text":"Queues a task to be executed serially.","type":"text"}],"role":"symbol","url":"\/documentation\/afluent\/serialtaskqueue\/queue(_:)","title":"queue(_:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/queue(_:)","type":"topic","kind":"symbol"},"doc://Afluent/documentation/Afluent":{"abstract":[],"title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","type":"topic","kind":"symbol","role":"collection","url":"\/documentation\/afluent"},"doc://Afluent/documentation/Afluent/SerialTaskQueue":{"abstract":[{"type":"text","text":"A serial task queue that ensures tasks are executed one at a time."}],"url":"\/documentation\/afluent\/serialtaskqueue","kind":"symbol","role":"symbol","title":"SerialTaskQueue","navigatorTitle":[{"text":"SerialTaskQueue","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"SerialTaskQueue","kind":"identifier"}]}}}