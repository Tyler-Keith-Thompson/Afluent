{"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SingleValueChannel","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Success","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Success","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Sendable","preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"inlineContent":[{"code":"SingleValueChannel","type":"codeVoice"},{"text":" is an ","type":"text"},{"code":"AsynchronousUnitOfWork","type":"codeVoice"},{"text":" that can be manually completed exactly once, making it ideal for integrating legacy or delegate\/callback APIs with modern async workflows.","type":"text"}],"type":"paragraph"},{"text":"Example: Bridging a callback to async\/await","anchor":"Example-Bridging-a-callback-to-asyncawait","type":"heading","level":2},{"syntax":"swift","code":["func fetchData(url: URL) async throws -> Data {","    let channel = SingleValueChannel<Data>()","    let task = URLSession.shared.dataTask(with: url) { data, _, error in","        if let data { try? await channel.send(data) }","        else if let error { try? await channel.send(error: error) }","    }","    task.resume()","    return try await channel.execute()","}"],"type":"codeListing"},{"content":[{"inlineContent":[{"text":"Once completed, any further send or error will throw ","type":"text"},{"type":"codeVoice","code":"ChannelError.alreadyCompleted"},{"text":".","type":"text"}],"type":"paragraph"}],"style":"note","name":"Note","type":"aside"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Prefer this over a subject for bridging when possible, as it is more ergonomic for async\/await and similar to "},{"type":"codeVoice","code":"AsyncChannel"},{"type":"text","text":" in swift-async-algorithms."}]}],"style":"important","name":"Important","type":"aside"}]}],"metadata":{"remoteSource":{"fileName":"SingleValueChannel.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/Workers\/SingleValueChannel.swift#L29"},"navigatorTitle":[{"text":"SingleValueChannel","kind":"identifier"}],"externalID":"s:7Afluent18SingleValueChannelC","symbolKind":"class","roleHeading":"Class","title":"SingleValueChannel","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SingleValueChannel","kind":"identifier"}],"modules":[{"name":"Afluent"}],"role":"symbol"},"abstract":[{"text":"A channel for bridging callback-based APIs to async\/await, emitting a single value or error.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel"},"relationshipsSections":[{"kind":"relationships","type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","doc:\/\/Afluent\/s8SendableP","doc:\/\/Afluent\/ScA"]}],"topicSections":[{"generated":true,"anchor":"Initializers","title":"Initializers","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel\/init()"]},{"generated":true,"anchor":"Instance-Properties","title":"Instance Properties","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel\/state"]},{"generated":true,"anchor":"Instance-Methods","title":"Instance Methods","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel\/send()","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel\/send(_:)","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel\/send(error:)"]},{"generated":true,"anchor":"Enumerations","title":"Enumerations","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel\/ChannelError"]},{"generated":true,"anchor":"Default-Implementations","title":"Default Implementations","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel\/Actor-Implementations","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel\/AsynchronousUnitOfWork-Implementations"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/singlevaluechannel"]}],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://Afluent/ScA":{"identifier":"doc:\/\/Afluent\/ScA","title":"_Concurrency.Actor","type":"unresolvable"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsynchronousUnitOfWork"}],"navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWork"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","role":"symbol","abstract":[{"text":"Represents an asynchronous unit of work.","type":"text"}],"url":"\/documentation\/afluent\/asynchronousunitofwork","title":"AsynchronousUnitOfWork","kind":"symbol","type":"topic"},"doc://Afluent/documentation/Afluent/SingleValueChannel/ChannelError":{"role":"symbol","title":"SingleValueChannel.ChannelError","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelError"}],"navigatorTitle":[{"kind":"identifier","text":"ChannelError"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel\/ChannelError","url":"\/documentation\/afluent\/singlevaluechannel\/channelerror","abstract":[{"type":"text","text":"Errors specific to "},{"type":"codeVoice","code":"SingleValueChannel"},{"type":"text","text":"."}],"type":"topic"},"doc://Afluent/documentation/Afluent/SingleValueChannel":{"title":"SingleValueChannel","type":"topic","abstract":[{"text":"A channel for bridging callback-based APIs to async\/await, emitting a single value or error.","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel","navigatorTitle":[{"kind":"identifier","text":"SingleValueChannel"}],"url":"\/documentation\/afluent\/singlevaluechannel","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SingleValueChannel"}]},"doc://Afluent/documentation/Afluent/SingleValueChannel/send()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"send"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"}],"type":"topic","title":"send()","url":"\/documentation\/afluent\/singlevaluechannel\/send()","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Sends a value to the channel."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel\/send()"},"doc://Afluent/documentation/Afluent":{"type":"topic","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","abstract":[],"url":"\/documentation\/afluent","role":"collection","kind":"symbol"},"doc://Afluent/documentation/Afluent/SingleValueChannel/init()":{"url":"\/documentation\/afluent\/singlevaluechannel\/init()","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel\/init()","kind":"symbol","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"title":"init()","abstract":[{"type":"text","text":"Creates a new "},{"code":"SingleValueChannel","type":"codeVoice"},{"type":"text","text":"."}]},"doc://Afluent/documentation/Afluent/SingleValueChannel/send(_:)":{"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"send"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Success"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"url":"\/documentation\/afluent\/singlevaluechannel\/send(_:)","kind":"symbol","title":"send(_:)","abstract":[{"type":"text","text":"Sends a value to the channel."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel\/send(_:)"},"doc://Afluent/documentation/Afluent/SingleValueChannel/AsynchronousUnitOfWork-Implementations":{"role":"collectionGroup","type":"topic","kind":"article","title":"AsynchronousUnitOfWork Implementations","url":"\/documentation\/afluent\/singlevaluechannel\/asynchronousunitofwork-implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel\/AsynchronousUnitOfWork-Implementations","abstract":[]},"doc://Afluent/documentation/Afluent/SingleValueChannel/Actor-Implementations":{"role":"collectionGroup","type":"topic","kind":"article","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel\/Actor-Implementations","abstract":[],"url":"\/documentation\/afluent\/singlevaluechannel\/actor-implementations","title":"Actor Implementations"},"doc://Afluent/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/Afluent\/s8SendableP"},"doc://Afluent/documentation/Afluent/SingleValueChannel/send(error:)":{"title":"send(error:)","url":"\/documentation\/afluent\/singlevaluechannel\/send(error:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"send","kind":"identifier"},{"text":"(","kind":"text"},{"text":"error","kind":"externalParam"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel\/send(error:)","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Sends an error to the channel."}]},"doc://Afluent/documentation/Afluent/SingleValueChannel/state":{"role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"state","kind":"identifier"},{"text":": ","kind":"text"},{"text":"TaskState","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent9TaskStateC"},{"text":"<","kind":"text"},{"text":"Success","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel\/state","abstract":[],"url":"\/documentation\/afluent\/singlevaluechannel\/state","title":"state"}}}