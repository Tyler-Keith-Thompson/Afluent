{"metadata":{"externalID":"s:7Afluent22AsynchronousUnitOfWorkPAAE6retainQryF::SYNTHESIZED::s:7Afluent18SingleValueChannelC","title":"retain()","remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/Workers\/Retain.swift#L58","fileName":"Retain.swift"},"modules":[{"name":"Afluent"}],"extendedModule":"Afluent","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"retain"},{"kind":"text","text":"() -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","text":"AsynchronousUnitOfWork"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa","text":"Success"},{"kind":"text","text":">\n"}],"role":"symbol","symbolKind":"method"},"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel\/retain()","interfaceLanguage":"swift"},"sections":[],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel"]]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"retain"},{"kind":"text","text":"() -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","text":"AsynchronousUnitOfWork"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/Success","text":"Success"},{"kind":"text","text":">\n"}]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"type":"codeVoice","code":"AsynchronousUnitOfWork"},{"type":"text","text":" that caches and reuses its initial successful result."}]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"inlineContent":[{"text":"Use this operator when you want to prevent repeated side effects or recomputation by caching the result of the first execution.","type":"text"}],"type":"paragraph"},{"text":"Example","type":"heading","anchor":"Example","level":2},{"code":["var runCount = 0","let task = DeferredTask { runCount += 1; return 42 }","    .retain()","","let a = try await task.execute() \/\/ runCount is 1","let b = try await task.execute() \/\/ runCount is still 1, value is cached"],"type":"codeListing","syntax":"swift"},{"style":"note","name":"Note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If the operation fails, no value is cached and subsequent executions will retry the operation."}]}]}]}],"abstract":[{"type":"text","text":"Retains the successful result of this unit of work, ensuring the operation is performed only once. Subsequent executions return the cached result."}],"variants":[{"paths":["\/documentation\/afluent\/singlevaluechannel\/retain()"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://Afluent/documentation/Afluent":{"title":"Afluent","url":"\/documentation\/afluent","role":"collection","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol","abstract":[]},"doc://Afluent/documentation/Afluent/SingleValueChannel/retain()":{"url":"\/documentation\/afluent\/singlevaluechannel\/retain()","title":"retain()","abstract":[{"text":"Retains the successful result of this unit of work, ensuring the operation is performed only once. Subsequent executions return the cached result.","type":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel\/retain()","type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"retain","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWork","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Success","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa"},{"text":">\n","kind":"text"}]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"title":"AsynchronousUnitOfWork","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"role":"symbol","abstract":[{"text":"Represents an asynchronous unit of work.","type":"text"}],"navigatorTitle":[{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/afluent\/asynchronousunitofwork","type":"topic"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork/Success":{"type":"topic","required":true,"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Success","kind":"identifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"}],"kind":"symbol","abstract":[{"text":"The type of data the unit of work will produce if it succeeds.","type":"text"}],"url":"\/documentation\/afluent\/asynchronousunitofwork\/success","title":"Success","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/Success","role":"symbol"},"doc://Afluent/documentation/Afluent/SingleValueChannel":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel","title":"SingleValueChannel","kind":"symbol","navigatorTitle":[{"text":"SingleValueChannel","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A channel for bridging callback-based APIs to async\/await, emitting a single value or error."}],"fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SingleValueChannel","kind":"identifier"}],"url":"\/documentation\/afluent\/singlevaluechannel","role":"symbol"}}}