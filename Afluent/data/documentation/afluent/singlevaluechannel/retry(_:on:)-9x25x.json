{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel\/AsynchronousUnitOfWork-Implementations"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel\/retry(_:on:)-9x25x"},"metadata":{"extendedModule":"Afluent","remoteSource":{"fileName":"Retry.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/Workers\/Retry.swift#L188"},"externalID":"s:7Afluent22AsynchronousUnitOfWorkPAAE5retry_2onQrSu_qd__mts5ErrorRd__lF::SYNTHESIZED::s:7Afluent18SingleValueChannelC","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"retry","kind":"identifier"},{"text":"<","kind":"text"},{"text":"E","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":", ","kind":"text"},{"text":"on","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWork","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Success","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa"},{"text":">\n","kind":"text"}],"modules":[{"name":"Afluent"}],"symbolKind":"method","role":"symbol","roleHeading":"Instance Method","title":"retry(_:on:)"},"sections":[],"abstract":[{"text":"Retries this unit of work up to the specified number of times, but only when the error is of the given type.","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"retry","kind":"identifier"},{"text":"<","kind":"text"},{"text":"E","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"retries","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"kind":"text","text":" = 1, "},{"kind":"externalParam","text":"on"},{"kind":"text","text":" "},{"kind":"internalParam","text":"error"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":".Type) -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","kind":"typeIdentifier","text":"AsynchronousUnitOfWork"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/Success","text":"Success","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":"\n","kind":"text"}]}],"kind":"declarations"},{"parameters":[{"name":"retries","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The max number of retry attempts (default is 1)."}]}]},{"name":"error","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The error type that triggers a retry if a cast succeeds."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"type":"codeVoice","code":"AsynchronousUnitOfWork"},{"type":"text","text":" that retries on the specified error type up to the given count."}]}]},{"kind":"content","content":[{"anchor":"Example","type":"heading","level":2,"text":"Example"},{"type":"codeListing","code":["enum NetworkError: Error { case offline, timeout }","try await DeferredTask { throw NetworkError.timeout }","    .retry(3, on: NetworkError.self)","    .execute()"],"syntax":null}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/singlevaluechannel\/retry(_:on:)-9x25x"]}],"references":{"doc://Afluent/documentation/Afluent":{"abstract":[],"url":"\/documentation\/afluent","role":"collection","type":"topic","kind":"symbol","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent"},"doc://Afluent/documentation/Afluent/SingleValueChannel/retry(_:on:)-9x25x":{"abstract":[{"type":"text","text":"Retries this unit of work up to the specified number of times, but only when the error is of the given type."}],"title":"retry(_:on:)","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel\/retry(_:on:)-9x25x","role":"symbol","url":"\/documentation\/afluent\/singlevaluechannel\/retry(_:on:)-9x25x","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"retry"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"E"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":", "},{"kind":"externalParam","text":"on"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":".Type) -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","text":"AsynchronousUnitOfWork"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa","text":"Success"},{"kind":"text","text":">\n"}]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"role":"symbol","title":"AsynchronousUnitOfWork","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","url":"\/documentation\/afluent\/asynchronousunitofwork","navigatorTitle":[{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"abstract":[{"type":"text","text":"Represents an asynchronous unit of work."}],"type":"topic"},"doc://Afluent/documentation/Afluent/SingleValueChannel":{"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/afluent\/singlevaluechannel","title":"SingleValueChannel","navigatorTitle":[{"kind":"identifier","text":"SingleValueChannel"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SingleValueChannel"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel","abstract":[{"text":"A channel for bridging callback-based APIs to async\/await, emitting a single value or error.","type":"text"}]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork/Success":{"required":true,"abstract":[{"text":"The type of data the unit of work will produce if it succeeds.","type":"text"}],"role":"symbol","title":"Success","url":"\/documentation\/afluent\/asynchronousunitofwork\/success","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/Success","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Success","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Sendable","preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier"}],"type":"topic"},"doc://Afluent/documentation/Afluent/SingleValueChannel/AsynchronousUnitOfWork-Implementations":{"title":"AsynchronousUnitOfWork Implementations","type":"topic","url":"\/documentation\/afluent\/singlevaluechannel\/asynchronousunitofwork-implementations","kind":"article","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel\/AsynchronousUnitOfWork-Implementations","abstract":[],"role":"collectionGroup"}}}