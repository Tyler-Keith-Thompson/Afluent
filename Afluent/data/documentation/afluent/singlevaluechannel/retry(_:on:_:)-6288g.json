{"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"retry"},{"text":"<","kind":"text"},{"text":"D","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"E"},{"kind":"text","text":", "},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"strategy","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"on"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"error"},{"kind":"text","text":": "},{"text":"E","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"transform"},{"text":": ","kind":"text"},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"text":"E","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"D"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","text":"AsynchronousUnitOfWork","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Success","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/Success","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","kind":"typeIdentifier","text":"AsynchronousUnitOfWork"},{"text":", ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SQ","kind":"typeIdentifier","text":"Equatable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:7Afluent13RetryStrategyP","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","text":"RetryStrategy","kind":"typeIdentifier"},{"kind":"text","text":"\n"}]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The retry strategy to use.","type":"text"}]}],"name":"strategy"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The specific error that should trigger the transform.","type":"text"}]}],"name":"error"},{"name":"transform","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An async closure that takes the error from the upstream and returns a new "},{"type":"codeVoice","code":"AsynchronousUnitOfWork"},{"type":"text","text":"."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"inlineContent":[{"text":"An ","type":"text"},{"type":"codeVoice","code":"AsynchronousUnitOfWork"},{"text":" that emits the same output as the upstream but retries on the specified error up to the specified number of times, with the applied transformation.","type":"text"}],"type":"paragraph"}]}],"kind":"symbol","metadata":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"retry","kind":"identifier"},{"text":"<","kind":"text"},{"text":"D","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"E","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S"},{"text":", ","kind":"text"},{"text":"on","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"E"},{"text":", (","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"D"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","text":"AsynchronousUnitOfWork","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa","text":"Success"},{"text":">\n","kind":"text"}],"title":"retry(_:on:_:)","extendedModule":"Afluent","externalID":"s:7Afluent22AsynchronousUnitOfWorkPAAE5retry_2on_Qrqd_1__qd_0_qd__qd_0_YaYbKctAaBRd__SQRd_0_s5ErrorRd_0_AA13RetryStrategyRd_1_r1_lF::SYNTHESIZED::s:7Afluent18SingleValueChannelC","roleHeading":"Instance Method","symbolKind":"method","modules":[{"name":"Afluent"}],"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/Workers\/RetryAfterFlatMapping.swift#L162","fileName":"RetryAfterFlatMapping.swift"}},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel\/AsynchronousUnitOfWork-Implementations"]]},"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel\/retry(_:on:_:)-6288g","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"abstract":[{"type":"text","text":"Retries the upstream "},{"type":"codeVoice","code":"AsynchronousUnitOfWork"},{"text":" up to a specified number of times only when a specific error occurs, while applying a transformation on error.","type":"text"}],"variants":[{"paths":["\/documentation\/afluent\/singlevaluechannel\/retry(_:on:_:)-6288g"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Afluent/documentation/Afluent/SingleValueChannel/AsynchronousUnitOfWork-Implementations":{"role":"collectionGroup","kind":"article","abstract":[],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel\/AsynchronousUnitOfWork-Implementations","url":"\/documentation\/afluent\/singlevaluechannel\/asynchronousunitofwork-implementations","title":"AsynchronousUnitOfWork Implementations"},"doc://Afluent/documentation/Afluent/SingleValueChannel/retry(_:on:_:)-6288g":{"type":"topic","url":"\/documentation\/afluent\/singlevaluechannel\/retry(_:on:_:)-6288g","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel\/retry(_:on:_:)-6288g","kind":"symbol","title":"retry(_:on:_:)","abstract":[{"text":"Retries the upstream ","type":"text"},{"type":"codeVoice","code":"AsynchronousUnitOfWork"},{"type":"text","text":" up to a specified number of times only when a specific error occurs, while applying a transformation on error."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"retry","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"D"},{"text":", ","kind":"text"},{"text":"E","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"on","kind":"externalParam"},{"kind":"text","text":": "},{"text":"E","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"kind":"typeIdentifier","text":"E"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"AsynchronousUnitOfWork","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Success","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa"},{"text":">\n","kind":"text"}]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork/Success":{"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Success","kind":"identifier"},{"kind":"text","text":" : "},{"text":"Sendable","preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/Success","type":"topic","title":"Success","url":"\/documentation\/afluent\/asynchronousunitofwork\/success","abstract":[{"text":"The type of data the unit of work will produce if it succeeds.","type":"text"}],"required":true},"doc://Afluent/documentation/Afluent":{"abstract":[],"title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","type":"topic","kind":"symbol","role":"collection","url":"\/documentation\/afluent"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"title":"AsynchronousUnitOfWork","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","abstract":[{"type":"text","text":"Represents an asynchronous unit of work."}],"type":"topic","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWork"}],"url":"\/documentation\/afluent\/asynchronousunitofwork"},"doc://Afluent/documentation/Afluent/RetryStrategy":{"url":"\/documentation\/afluent\/retrystrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","abstract":[{"text":"A strategy for handling errors and determining whether to retry an operation.","type":"text"}],"type":"topic","title":"RetryStrategy","role":"symbol","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RetryStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"RetryStrategy","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/SingleValueChannel":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SingleValueChannel","kind":"identifier"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel","type":"topic","title":"SingleValueChannel","url":"\/documentation\/afluent\/singlevaluechannel","abstract":[{"type":"text","text":"A channel that emits a single value or an error."}],"navigatorTitle":[{"kind":"identifier","text":"SingleValueChannel"}]}}}