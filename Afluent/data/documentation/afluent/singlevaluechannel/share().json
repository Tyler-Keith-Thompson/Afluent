{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"share","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","text":"AsynchronousUnitOfWork","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa","kind":"typeIdentifier","text":"Success","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/Success"},{"kind":"text","text":"> & "},{"kind":"typeIdentifier","text":"Actor","preciseIdentifier":"s:ScA"},{"kind":"text","text":"\n"}]}]},{"kind":"content","content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"inlineContent":[{"type":"text","text":"An "},{"code":"AsynchronousUnitOfWork","type":"codeVoice"},{"type":"text","text":" that shares a single execution among all subscribers."}],"type":"paragraph"}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"inlineContent":[{"text":"Use this operator to avoid duplicate work when multiple parts of your code need the result of the same asynchronous operation.","type":"text"}],"type":"paragraph"},{"level":2,"anchor":"Example","type":"heading","text":"Example"},{"syntax":"swift","type":"codeListing","code":["let sharedTask = DeferredTask { UUID() }","    .share()","","async let value1 = sharedTask.execute()","async let value2 = sharedTask.execute()","let (a, b) = try await (value1, value2)","\/\/ 'a' and 'b' are guaranteed to be the same UUID instance"]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The upstream operation runs only once, regardless of the number of calls to "},{"type":"codeVoice","code":"execute()"},{"type":"text","text":"."}]}],"type":"aside","style":"note","name":"Note"}]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel\/share()"},"kind":"symbol","metadata":{"title":"share()","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"share","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWork","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Success","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa"},{"text":"> & ","kind":"text"},{"text":"Actor","kind":"typeIdentifier","preciseIdentifier":"s:ScA"}],"role":"symbol","symbolKind":"method","remoteSource":{"fileName":"Share.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/Workers\/Share.swift#L67"},"externalID":"s:7Afluent22AsynchronousUnitOfWorkPAAE5shareQryF::SYNTHESIZED::s:7Afluent18SingleValueChannelC","extendedModule":"Afluent","modules":[{"name":"Afluent"}]},"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel"]]},"abstract":[{"type":"text","text":"Shares the result of this unit of work among multiple subscribers, ensuring the upstream operation is only performed once."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/singlevaluechannel\/share()"]}],"references":{"doc://Afluent/documentation/Afluent/SingleValueChannel/share()":{"kind":"symbol","title":"share()","abstract":[{"type":"text","text":"Shares the result of this unit of work among multiple subscribers, ensuring the upstream operation is only performed once."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel\/share()","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"share","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWork","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Success","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa"},{"text":"> & ","kind":"text"},{"text":"Actor","kind":"typeIdentifier","preciseIdentifier":"s:ScA"}],"url":"\/documentation\/afluent\/singlevaluechannel\/share()","type":"topic"},"doc://Afluent/documentation/Afluent/SingleValueChannel":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel","title":"SingleValueChannel","kind":"symbol","navigatorTitle":[{"text":"SingleValueChannel","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A channel for bridging callback-based APIs to async\/await, emitting a single value or error."}],"fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SingleValueChannel","kind":"identifier"}],"url":"\/documentation\/afluent\/singlevaluechannel","role":"symbol"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork/Success":{"type":"topic","required":true,"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Success","kind":"identifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"}],"kind":"symbol","abstract":[{"text":"The type of data the unit of work will produce if it succeeds.","type":"text"}],"url":"\/documentation\/afluent\/asynchronousunitofwork\/success","title":"Success","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/Success","role":"symbol"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"title":"AsynchronousUnitOfWork","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"role":"symbol","abstract":[{"text":"Represents an asynchronous unit of work.","type":"text"}],"navigatorTitle":[{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/afluent\/asynchronousunitofwork","type":"topic"},"doc://Afluent/documentation/Afluent":{"title":"Afluent","url":"\/documentation\/afluent","role":"collection","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol","abstract":[]}}}