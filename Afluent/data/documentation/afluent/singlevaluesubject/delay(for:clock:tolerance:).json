{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueSubject"]]},"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueSubject\/delay(for:clock:tolerance:)","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"variants":[{"paths":["\/documentation\/afluent\/singlevaluesubject\/delay(for:clock:tolerance:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"delay","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"for","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"duration","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Duration","preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"clock","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"tolerance","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Duration","preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa","kind":"typeIdentifier"},{"text":"? = nil) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWork","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Success","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/Success","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Clock","preciseIdentifier":"s:12_Concurrency5ClockP","kind":"typeIdentifier"},{"text":"\n","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"duration","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The duration to delay the output, conforming to the clockâ€™s associated "},{"type":"codeVoice","code":"Duration"},{"type":"text","text":" type."}]}]},{"name":"clock","content":[{"inlineContent":[{"type":"text","text":"The clock used for timekeeping. Defaults to "},{"type":"codeVoice","code":"SuspendingClock()"},{"type":"text","text":"."}],"type":"paragraph"}]},{"name":"tolerance","content":[{"type":"paragraph","inlineContent":[{"text":"An optional tolerance for the delay. Defaults to ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"}]}]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"An ","type":"text"},{"code":"AsynchronousUnitOfWork","type":"codeVoice"},{"text":" that emits the upstream output after the specified delay.","type":"text"}]}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This operator suspends the emission of output for the specified duration according to the provided clock."}]},{"type":"heading","text":"Discussion","anchor":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Delaying work using a custom clock is beneficial when you need precise control over timing behavior,"},{"type":"text","text":" "},{"type":"text","text":"such as testing with test clocks or synchronizing work with specific time sources."},{"type":"text","text":" "},{"type":"text","text":"Use this operator to implement retry backoff, throttling, or scheduled tasks that depend on a particular clock implementation."}]},{"type":"heading","text":"Example","anchor":"Example","level":2},{"type":"codeListing","code":["let start = Date()","let clock = SuspendingClock()","let delayedTask = DeferredTask {","    \"Delayed with custom clock\"","}.delay(for: .seconds(1), clock: clock, tolerance: .milliseconds(100))","let result = try await delayedTask.execute()","let elapsed = Date().timeIntervalSince(start)","print(\"Result: \\(result) after \\(elapsed) seconds\")"],"syntax":"swift"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Availability: macOS 13.0, iOS 16.0, watchOS 9.0, tvOS 16.0, visionOS 1.0 and above.","type":"text"}],"type":"paragraph"}]}]}]}],"abstract":[{"text":"Delays the emission of output from the upstream ","type":"text"},{"code":"AsynchronousUnitOfWork","type":"codeVoice"},{"text":" by a specified duration using a given clock.","type":"text"}],"metadata":{"role":"symbol","remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/Workers\/Delay.swift#L90","fileName":"Delay.swift"},"title":"delay(for:clock:tolerance:)","extendedModule":"Afluent","externalID":"s:7Afluent22AsynchronousUnitOfWorkPAAE5delay3for5clock9toleranceQr8DurationQyd___qd__AISgt12_Concurrency5ClockRd__lF::SYNTHESIZED::s:7Afluent18SingleValueSubjectC","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"delay","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"for","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa","text":"Duration","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"clock","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"tolerance","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa","text":"Duration","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","text":"AsynchronousUnitOfWork","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa","text":"Success","kind":"typeIdentifier"},{"text":">\n","kind":"text"}],"symbolKind":"method","modules":[{"name":"Afluent"}],"platforms":[{"unavailable":false,"deprecated":false,"beta":false,"introducedAt":"16.0","name":"iOS"},{"unavailable":false,"deprecated":false,"beta":false,"introducedAt":"13.0","name":"macOS"},{"unavailable":false,"deprecated":false,"beta":false,"introducedAt":"16.0","name":"tvOS"},{"unavailable":false,"deprecated":false,"beta":false,"introducedAt":"1.0","name":"visionOS"},{"unavailable":false,"deprecated":false,"beta":false,"introducedAt":"9.0","name":"watchOS"}],"roleHeading":"Instance Method"},"references":{"doc://Afluent/documentation/Afluent":{"title":"Afluent","url":"\/documentation\/afluent","role":"collection","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol","abstract":[]},"doc://Afluent/documentation/Afluent/SingleValueSubject":{"title":"SingleValueSubject","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueSubject","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SingleValueSubject"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A subject for bridging callback-based APIs to async\/await, emitting a single value or error."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SingleValueSubject"}],"url":"\/documentation\/afluent\/singlevaluesubject"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"title":"AsynchronousUnitOfWork","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"role":"symbol","abstract":[{"text":"Represents an asynchronous unit of work.","type":"text"}],"navigatorTitle":[{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/afluent\/asynchronousunitofwork","type":"topic"},"doc://Afluent/documentation/Afluent/SingleValueSubject/delay(for:clock:tolerance:)":{"kind":"symbol","type":"topic","abstract":[{"text":"Delays the emission of output from the upstream ","type":"text"},{"code":"AsynchronousUnitOfWork","type":"codeVoice"},{"text":" by a specified duration using a given clock.","type":"text"}],"url":"\/documentation\/afluent\/singlevaluesubject\/delay(for:clock:tolerance:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"delay","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"for","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa","text":"Duration","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"clock","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"tolerance","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa","text":"Duration","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","text":"AsynchronousUnitOfWork","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa","text":"Success","kind":"typeIdentifier"},{"text":">\n","kind":"text"}],"role":"symbol","title":"delay(for:clock:tolerance:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueSubject\/delay(for:clock:tolerance:)"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork/Success":{"type":"topic","required":true,"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Success","kind":"identifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"}],"kind":"symbol","abstract":[{"text":"The type of data the unit of work will produce if it succeeds.","type":"text"}],"url":"\/documentation\/afluent\/asynchronousunitofwork\/success","title":"Success","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/Success","role":"symbol"}}}