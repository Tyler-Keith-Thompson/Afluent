{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shareFromCache","kind":"identifier"},{"text":"<","kind":"text"},{"text":"H0","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"H1","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"H2","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"H3","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H4"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H5"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"cache"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent9AUOWCachea","text":"AUOWCache","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache"},{"kind":"text","text":", "},{"kind":"externalParam","text":"strategy"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy","preciseIdentifier":"s:7Afluent17AUOWCacheStrategyP","text":"AUOWCacheStrategy"},{"kind":"text","text":", "},{"kind":"externalParam","text":"keys"},{"kind":"text","text":" "},{"kind":"internalParam","text":"k0"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"H0"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"k1"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"H1"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"k2"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"H2"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"k3"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"H3"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"k4"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"H4"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"k5"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"H5"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","text":"AsynchronousUnitOfWork"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/Success","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa","text":"Success"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"H0"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SH","text":"Hashable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H1"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SH","text":"Hashable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H2"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SH","text":"Hashable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H3"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SH","text":"Hashable"},{"kind":"text","text":", "},{"text":"H4","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SH","text":"Hashable","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"H5","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SH","text":"Hashable","kind":"typeIdentifier"},{"text":"\n","kind":"text"}],"platforms":["macOS"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The cache to share results from."}]}],"name":"cache"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The caching strategy.","type":"text"}]}],"name":"strategy"}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","text":"Return Value","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"code":"AsynchronousUnitOfWork","type":"codeVoice"},{"type":"text","text":" that shares its results from cache."}]}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"Use this operator to share or de-duplicate expensive work based on custom, hashable cache keys."}],"type":"paragraph"},{"anchor":"Example","text":"Example","level":2,"type":"heading"},{"syntax":null,"type":"codeListing","code":["let cache = AUOWCache()","let shared = DeferredTask { UUID() }","    .shareFromCache(cache, strategy: .cacheUntilCompletionOrCancellation, keys: \"user\", 42, \"session\", 1, \"extra\", 99)","async let a = shared.execute()","async let b = shared.execute()","let (val1, val2) = try await (a, b)","\/\/ val1 and val2 are guaranteed to be identical (from cache)"]},{"name":"Important","style":"important","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"This operator should generally be placed at the end of an operator chain. Any operators applied after ","type":"text"},{"code":"shareFromCache","type":"codeVoice"},{"text":" will not be shared and may result in duplicated work or side effects.","type":"text"}]}]}]}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueSubject","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueSubject\/AsynchronousUnitOfWork-Implementations"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueSubject\/shareFromCache(_:strategy:keys:_:_:_:_:_:)","interfaceLanguage":"swift"},"kind":"symbol","abstract":[{"text":"Shares the result of this unit of work from the given cache using the specified strategy and custom cache keys.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/singlevaluesubject\/sharefromcache(_:strategy:keys:_:_:_:_:_:)"]}],"sections":[],"metadata":{"extendedModule":"Afluent","symbolKind":"method","remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/Workers\/ShareFromCache.swift#L238","fileName":"ShareFromCache.swift"},"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shareFromCache","kind":"identifier"},{"text":"<","kind":"text"},{"text":"H0","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"H1","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"H2","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"H3","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"H4","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"H5","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"AUOWCache","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent9AUOWCachea"},{"text":", ","kind":"text"},{"text":"strategy","kind":"externalParam"},{"text":": any ","kind":"text"},{"text":"AUOWCacheStrategy","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent17AUOWCacheStrategyP"},{"text":", ","kind":"text"},{"text":"keys","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"H0","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"H1","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"H2","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"H3","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"H4","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"H5","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWork","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Success","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa"},{"text":">\n","kind":"text"}],"modules":[{"name":"Afluent"}],"title":"shareFromCache(_:strategy:keys:_:_:_:_:_:)","externalID":"s:7Afluent22AsynchronousUnitOfWorkPAAE14shareFromCache_8strategy4keys_____QrAA0bcdeH0C_AA17AUOWCacheStrategy_pqd__qd_0_qd_1_qd_2_qd_3_qd_4_tSHRd__SHRd_0_SHRd_1_SHRd_2_SHRd_3_SHRd_4_r4_lF::SYNTHESIZED::s:7Afluent18SingleValueSubjectC","roleHeading":"Instance Method"},"references":{"doc://Afluent/documentation/Afluent":{"abstract":[],"url":"\/documentation\/afluent","role":"collection","type":"topic","kind":"symbol","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent"},"doc://Afluent/documentation/Afluent/SingleValueSubject/AsynchronousUnitOfWork-Implementations":{"abstract":[],"title":"AsynchronousUnitOfWork Implementations","kind":"article","url":"\/documentation\/afluent\/singlevaluesubject\/asynchronousunitofwork-implementations","role":"collectionGroup","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueSubject\/AsynchronousUnitOfWork-Implementations","type":"topic"},"doc://Afluent/documentation/Afluent/SingleValueSubject":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SingleValueSubject","kind":"identifier"}],"navigatorTitle":[{"text":"SingleValueSubject","kind":"identifier"}],"url":"\/documentation\/afluent\/singlevaluesubject","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueSubject","role":"symbol","abstract":[{"type":"text","text":"A subject for bridging callback-based APIs to async\/await, emitting a single value or error."}],"title":"SingleValueSubject","kind":"symbol"},"doc://Afluent/documentation/Afluent/AUOWCacheStrategy":{"abstract":[{"type":"text","text":"Represents a cache strategy for use with "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache"},{"type":"text","text":"."}],"url":"\/documentation\/afluent\/auowcachestrategy","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCacheStrategy","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AUOWCacheStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"AUOWCacheStrategy","kind":"identifier"}],"type":"topic","role":"symbol","title":"AUOWCacheStrategy"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"role":"symbol","title":"AsynchronousUnitOfWork","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","url":"\/documentation\/afluent\/asynchronousunitofwork","navigatorTitle":[{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"abstract":[{"type":"text","text":"Represents an asynchronous unit of work."}],"type":"topic"},"doc://Afluent/documentation/Afluent/AUOWCache":{"abstract":[],"role":"symbol","title":"AUOWCache","kind":"symbol","navigatorTitle":[{"text":"AUOWCache","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","url":"\/documentation\/afluent\/auowcache","type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AUOWCache","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork/Success":{"required":true,"abstract":[{"text":"The type of data the unit of work will produce if it succeeds.","type":"text"}],"role":"symbol","title":"Success","url":"\/documentation\/afluent\/asynchronousunitofwork\/success","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/Success","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Success","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Sendable","preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier"}],"type":"topic"},"doc://Afluent/documentation/Afluent/SingleValueSubject/shareFromCache(_:strategy:keys:_:_:_:_:_:)":{"url":"\/documentation\/afluent\/singlevaluesubject\/sharefromcache(_:strategy:keys:_:_:_:_:_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shareFromCache","kind":"identifier"},{"text":"<","kind":"text"},{"text":"H0","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"H1","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"H2","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"H3","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"H4","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"H5","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:7Afluent9AUOWCachea","text":"AUOWCache","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"strategy","kind":"externalParam"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:7Afluent17AUOWCacheStrategyP","text":"AUOWCacheStrategy","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"keys","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"H0","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"H1","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"H2","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"H3","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"H4","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"H5","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","text":"AsynchronousUnitOfWork","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa","text":"Success","kind":"typeIdentifier"},{"text":">\n","kind":"text"}],"title":"shareFromCache(_:strategy:keys:_:_:_:_:_:)","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueSubject\/shareFromCache(_:strategy:keys:_:_:_:_:_:)","type":"topic","abstract":[{"type":"text","text":"Shares the result of this unit of work from the given cache using the specified strategy and custom cache keys."}],"kind":"symbol"}}}