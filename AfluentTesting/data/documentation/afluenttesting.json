{"sections":[],"metadata":{"symbolKind":"module","modules":[{"name":"AfluentTesting"}],"externalID":"AfluentTesting","title":"AfluentTesting","roleHeading":"Framework","role":"collection"},"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[[]]},"variants":[{"paths":["\/documentation\/afluenttesting"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"identifiers":["doc:\/\/AfluentTesting\/documentation\/AfluentTesting\/wait(until:timeout:)","doc:\/\/AfluentTesting\/documentation\/AfluentTesting\/wait(until:timeout:clock:)"],"title":"Functions","generated":true,"anchor":"Functions"},{"identifiers":["doc:\/\/AfluentTesting\/documentation\/AfluentTesting\/_Concurrency"],"generated":true,"title":"Extended Modules","anchor":"Extended-Modules"}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/AfluentTesting\/documentation\/AfluentTesting"},"references":{"doc://AfluentTesting/documentation/AfluentTesting/wait(until:timeout:)":{"abstract":[{"type":"text","text":"Waits for some condition before proceeding, unless the specified timeout is reached, in which case an error is thrown."}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/AfluentTesting\/documentation\/AfluentTesting\/wait(until:timeout:)","title":"wait(until:timeout:)","url":"\/documentation\/afluenttesting\/wait(until:timeout:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"wait","kind":"identifier"},{"kind":"text","text":"("},{"text":"until","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"attribute","text":"@autoclosure "},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"externalParam","text":"timeout"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s8DurationV","text":"Duration"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"type":"topic"},"doc://AfluentTesting/documentation/AfluentTesting":{"type":"topic","abstract":[],"url":"\/documentation\/afluenttesting","kind":"symbol","title":"AfluentTesting","identifier":"doc:\/\/AfluentTesting\/documentation\/AfluentTesting","role":"collection"},"doc://AfluentTesting/documentation/AfluentTesting/wait(until:timeout:clock:)":{"abstract":[{"type":"text","text":"Waits for some condition before proceeding, unless the specified timeout is reached, in which case an error is thrown."}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/AfluentTesting\/documentation\/AfluentTesting\/wait(until:timeout:clock:)","title":"wait(until:timeout:clock:)","url":"\/documentation\/afluenttesting\/wait(until:timeout:clock:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"wait","kind":"identifier"},{"kind":"text","text":"<"},{"text":"C","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"until"},{"kind":"text","text":": "},{"text":"@autoclosure ","kind":"attribute"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"timeout"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":"."},{"preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa","text":"Duration","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"clock","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"C"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"type":"topic"},"doc://AfluentTesting/documentation/AfluentTesting/_Concurrency":{"type":"topic","title":"_Concurrency","identifier":"doc:\/\/AfluentTesting\/documentation\/AfluentTesting\/_Concurrency","kind":"symbol","role":"collection","abstract":[],"url":"\/documentation\/afluenttesting\/_concurrency"}}}