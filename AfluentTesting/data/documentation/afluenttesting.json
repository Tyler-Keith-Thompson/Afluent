{"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"symbolKind":"module","title":"AfluentTesting","modules":[{"name":"AfluentTesting"}],"role":"collection","roleHeading":"Framework","externalID":"AfluentTesting"},"hierarchy":{"paths":[[]]},"identifier":{"url":"doc:\/\/AfluentTesting\/documentation\/AfluentTesting","interfaceLanguage":"swift"},"sections":[],"topicSections":[{"anchor":"Functions","title":"Functions","generated":true,"identifiers":["doc:\/\/AfluentTesting\/documentation\/AfluentTesting\/wait(until:timeout:)","doc:\/\/AfluentTesting\/documentation\/AfluentTesting\/wait(until:timeout:clock:)"]},{"title":"Extended Modules","anchor":"Extended-Modules","identifiers":["doc:\/\/AfluentTesting\/documentation\/AfluentTesting\/_Concurrency"],"generated":true}],"variants":[{"paths":["\/documentation\/afluenttesting"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","references":{"doc://AfluentTesting/documentation/AfluentTesting/wait(until:timeout:)":{"type":"topic","url":"\/documentation\/afluenttesting\/wait(until:timeout:)","abstract":[{"text":"Waits for some condition before proceeding, unless the specified timeout is reached, in which case an error is thrown.","type":"text"}],"identifier":"doc:\/\/AfluentTesting\/documentation\/AfluentTesting\/wait(until:timeout:)","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"wait","kind":"identifier"},{"kind":"text","text":"("},{"text":"until","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"attribute","text":"@autoclosure "},{"text":"() ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"timeout"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s8DurationV","text":"Duration"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"}],"title":"wait(until:timeout:)"},"doc://AfluentTesting/documentation/AfluentTesting":{"identifier":"doc:\/\/AfluentTesting\/documentation\/AfluentTesting","url":"\/documentation\/afluenttesting","kind":"symbol","type":"topic","role":"collection","title":"AfluentTesting","abstract":[]},"doc://AfluentTesting/documentation/AfluentTesting/wait(until:timeout:clock:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"wait"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">("},{"text":"until","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"attribute","text":"@autoclosure "},{"kind":"text","text":"() "},{"text":"async","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"timeout"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"C"},{"text":".","kind":"text"},{"text":"Duration","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa"},{"kind":"text","text":", "},{"kind":"externalParam","text":"clock"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"abstract":[{"text":"Waits for some condition before proceeding, unless the specified timeout is reached, in which case an error is thrown.","type":"text"}],"type":"topic","url":"\/documentation\/afluenttesting\/wait(until:timeout:clock:)","kind":"symbol","identifier":"doc:\/\/AfluentTesting\/documentation\/AfluentTesting\/wait(until:timeout:clock:)","title":"wait(until:timeout:clock:)","role":"symbol"},"doc://AfluentTesting/documentation/AfluentTesting/_Concurrency":{"abstract":[],"url":"\/documentation\/afluenttesting\/_concurrency","type":"topic","kind":"symbol","identifier":"doc:\/\/AfluentTesting\/documentation\/AfluentTesting\/_Concurrency","title":"_Concurrency","role":"collection"}}}