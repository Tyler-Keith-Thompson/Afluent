{"sections":[],"abstract":[{"type":"text","text":"The storage representation for an atomic integer value, providing"},{"text":" ","type":"text"},{"text":"pointer-based atomic operations.","type":"text"}],"topicSections":[{"title":"Atomic Integer Operations","anchor":"Atomic-Integer-Operations","identifiers":["doc:\/\/Atomics\/documentation\/Atomics\/AtomicIntegerStorage\/atomicLoadThenWrappingIncrement(by:at:ordering:)","doc:\/\/Atomics\/documentation\/Atomics\/AtomicIntegerStorage\/atomicLoadThenWrappingDecrement(by:at:ordering:)","doc:\/\/Atomics\/documentation\/Atomics\/AtomicIntegerStorage\/atomicLoadThenBitwiseOr(with:at:ordering:)","doc:\/\/Atomics\/documentation\/Atomics\/AtomicIntegerStorage\/atomicLoadThenBitwiseAnd(with:at:ordering:)","doc:\/\/Atomics\/documentation\/Atomics\/AtomicIntegerStorage\/atomicLoadThenBitwiseXor(with:at:ordering:)"]}],"hierarchy":{"paths":[["doc:\/\/Atomics\/documentation\/Atomics"]]},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"AtomicIntegerStorage","kind":"identifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:7Atomics13AtomicStorageP","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicStorage","text":"AtomicStorage","kind":"typeIdentifier"}]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"text":"Overview","anchor":"overview","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is a low-level implementation detail of atomic types; instead"},{"type":"text","text":" "},{"type":"text","text":"of directly handling conforming types, it is usually better to use"},{"text":" ","type":"text"},{"type":"text","text":"the "},{"type":"codeVoice","code":"UnsafeAtomic"},{"type":"text","text":" or "},{"type":"codeVoice","code":"ManagedAtomic"},{"type":"text","text":" generics â€“ these provide a"},{"type":"text","text":" "},{"type":"text","text":"more reliable interface while ensuring that the storage is"},{"type":"text","text":" "},{"type":"text","text":"correctly constructed and destroyed."}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atomics\/atomicintegerstorage"]}],"relationshipsSections":[{"title":"Inherits From","identifiers":["doc:\/\/Atomics\/documentation\/Atomics\/AtomicStorage"],"kind":"relationships","type":"inheritsFrom"},{"title":"Conforming Types","type":"conformingTypes","kind":"relationships","identifiers":["doc:\/\/Atomics\/documentation\/Atomics\/Swift\/Int\/AtomicRepresentation","doc:\/\/Atomics\/documentation\/Atomics\/Swift\/Int16\/AtomicRepresentation","doc:\/\/Atomics\/documentation\/Atomics\/Swift\/Int32\/AtomicRepresentation","doc:\/\/Atomics\/documentation\/Atomics\/Swift\/Int64\/AtomicRepresentation","doc:\/\/Atomics\/documentation\/Atomics\/Swift\/Int8\/AtomicRepresentation","doc:\/\/Atomics\/documentation\/Atomics\/Swift\/UInt\/AtomicRepresentation","doc:\/\/Atomics\/documentation\/Atomics\/Swift\/UInt16\/AtomicRepresentation","doc:\/\/Atomics\/documentation\/Atomics\/Swift\/UInt32\/AtomicRepresentation","doc:\/\/Atomics\/documentation\/Atomics\/Swift\/UInt64\/AtomicRepresentation","doc:\/\/Atomics\/documentation\/Atomics\/Swift\/UInt8\/AtomicRepresentation"]}],"seeAlsoSections":[{"identifiers":["doc:\/\/Atomics\/documentation\/Atomics\/AtomicStorage","doc:\/\/Atomics\/documentation\/Atomics\/AtomicRawRepresentableStorage","doc:\/\/Atomics\/documentation\/Atomics\/AtomicReferenceStorage","doc:\/\/Atomics\/documentation\/Atomics\/AtomicOptionalReferenceStorage"],"generated":true,"anchor":"Atomic-Storage-Representations","title":"Atomic Storage Representations"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicIntegerStorage"},"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","metadata":{"externalID":"s:7Atomics20AtomicIntegerStorageP","remoteSource":{"fileName":"AtomicInteger.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/.build\/checkouts\/swift-atomics\/Sources\/Atomics\/Protocols\/AtomicInteger.swift#L37"},"modules":[{"name":"Atomics"}],"symbolKind":"protocol","title":"AtomicIntegerStorage","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"AtomicIntegerStorage","kind":"identifier"}],"roleHeading":"Protocol","navigatorTitle":[{"text":"AtomicIntegerStorage","kind":"identifier"}],"role":"symbol"},"references":{"doc://Atomics/documentation/Atomics/Swift/UInt8/AtomicRepresentation":{"type":"topic","role":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"AtomicRepresentation","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AtomicRepresentation"}],"identifier":"doc:\/\/Atomics\/documentation\/Atomics\/Swift\/UInt8\/AtomicRepresentation","url":"\/documentation\/atomics\/swift\/uint8\/atomicrepresentation","title":"UInt8.AtomicRepresentation","kind":"symbol"},"doc://Atomics/documentation/Atomics/AtomicIntegerStorage":{"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomicIntegerStorage","kind":"identifier"}],"abstract":[{"type":"text","text":"The storage representation for an atomic integer value, providing"},{"type":"text","text":" "},{"type":"text","text":"pointer-based atomic operations."}],"url":"\/documentation\/atomics\/atomicintegerstorage","title":"AtomicIntegerStorage","type":"topic","navigatorTitle":[{"text":"AtomicIntegerStorage","kind":"identifier"}],"identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicIntegerStorage","role":"symbol"},"doc://Atomics/documentation/Atomics/AtomicIntegerStorage/atomicLoadThenWrappingIncrement(by:at:ordering:)":{"title":"atomicLoadThenWrappingIncrement(by:at:ordering:)","role":"symbol","url":"\/documentation\/atomics\/atomicintegerstorage\/atomicloadthenwrappingincrement(by:at:ordering:)","abstract":[{"type":"text","text":"Perform an atomic wrapping increment operation on the value referenced by"},{"type":"text","text":" "},{"type":"codeVoice","code":"pointer"},{"text":" and return the original value, applying the specified memory","type":"text"},{"type":"text","text":" "},{"type":"text","text":"ordering."}],"type":"topic","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicIntegerStorage\/atomicLoadThenWrappingIncrement(by:at:ordering:)","required":true,"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"atomicLoadThenWrappingIncrement","kind":"identifier"},{"kind":"text","text":"("},{"text":"by","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics13AtomicStorageP5ValueQa","text":"Value"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sp","text":"UnsafeMutablePointer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">, "},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics13AtomicStorageP5ValueQa"}],"kind":"symbol"},"doc://Atomics/documentation/Atomics/AtomicIntegerStorage/atomicLoadThenBitwiseOr(with:at:ordering:)":{"type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"atomicLoadThenBitwiseOr","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics13AtomicStorageP5ValueQa"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sp","kind":"typeIdentifier","text":"UnsafeMutablePointer"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Atomics13AtomicStorageP5ValueQa","text":"Value","kind":"typeIdentifier"}],"title":"atomicLoadThenBitwiseOr(with:at:ordering:)","kind":"symbol","required":true,"abstract":[{"type":"text","text":"Perform an atomic bitwise OR operation on the value referenced by"},{"type":"text","text":" "},{"code":"pointer","type":"codeVoice"},{"type":"text","text":" and return the original value, applying the specified memory"},{"text":" ","type":"text"},{"type":"text","text":"ordering."}],"role":"symbol","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicIntegerStorage\/atomicLoadThenBitwiseOr(with:at:ordering:)","url":"\/documentation\/atomics\/atomicintegerstorage\/atomicloadthenbitwiseor(with:at:ordering:)"},"doc://Atomics/documentation/Atomics/AtomicRawRepresentableStorage":{"identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicRawRepresentableStorage","abstract":[{"text":"The default atomic storage representation for an atomic ","type":"text"},{"code":"RawRepresentable","type":"codeVoice"},{"text":" ","type":"text"},{"text":"type whose ","type":"text"},{"code":"RawValue","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"AtomicValue"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"AtomicRawRepresentableStorage","kind":"identifier"}],"kind":"symbol","title":"AtomicRawRepresentableStorage","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AtomicRawRepresentableStorage","kind":"identifier"}],"url":"\/documentation\/atomics\/atomicrawrepresentablestorage","role":"symbol"},"doc://Atomics/documentation/Atomics/Swift/UInt32/AtomicRepresentation":{"type":"topic","url":"\/documentation\/atomics\/swift\/uint32\/atomicrepresentation","title":"UInt32.AtomicRepresentation","role":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"AtomicRepresentation","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"AtomicRepresentation","kind":"identifier"}],"identifier":"doc:\/\/Atomics\/documentation\/Atomics\/Swift\/UInt32\/AtomicRepresentation"},"doc://Atomics/documentation/Atomics/Swift/Int64/AtomicRepresentation":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomicRepresentation"}],"abstract":[],"title":"Int64.AtomicRepresentation","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/Swift\/Int64\/AtomicRepresentation","url":"\/documentation\/atomics\/swift\/int64\/atomicrepresentation","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AtomicRepresentation"}],"role":"symbol"},"doc://Atomics/documentation/Atomics/Swift/Int8/AtomicRepresentation":{"url":"\/documentation\/atomics\/swift\/int8\/atomicrepresentation","navigatorTitle":[{"text":"AtomicRepresentation","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AtomicRepresentation","kind":"identifier"}],"title":"Int8.AtomicRepresentation","kind":"symbol","abstract":[],"role":"symbol","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/Swift\/Int8\/AtomicRepresentation","type":"topic"},"doc://Atomics/documentation/Atomics/Swift/Int/AtomicRepresentation":{"url":"\/documentation\/atomics\/swift\/int\/atomicrepresentation","navigatorTitle":[{"text":"AtomicRepresentation","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AtomicRepresentation","kind":"identifier"}],"title":"Int.AtomicRepresentation","kind":"symbol","abstract":[],"role":"symbol","type":"topic","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/Swift\/Int\/AtomicRepresentation"},"doc://Atomics/documentation/Atomics/AtomicIntegerStorage/atomicLoadThenBitwiseXor(with:at:ordering:)":{"required":true,"kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"atomicLoadThenBitwiseXor","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics13AtomicStorageP5ValueQa"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sp","kind":"typeIdentifier","text":"UnsafeMutablePointer"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Atomics13AtomicStorageP5ValueQa","kind":"typeIdentifier","text":"Value"}],"abstract":[{"type":"text","text":"Perform an atomic bitwise XOR operation on the value referenced by"},{"type":"text","text":" "},{"type":"codeVoice","code":"pointer"},{"text":" and return the original value, applying the specified memory","type":"text"},{"type":"text","text":" "},{"text":"ordering.","type":"text"}],"url":"\/documentation\/atomics\/atomicintegerstorage\/atomicloadthenbitwisexor(with:at:ordering:)","title":"atomicLoadThenBitwiseXor(with:at:ordering:)","type":"topic","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicIntegerStorage\/atomicLoadThenBitwiseXor(with:at:ordering:)","role":"symbol"},"doc://Atomics/documentation/Atomics/AtomicIntegerStorage/atomicLoadThenBitwiseAnd(with:at:ordering:)":{"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"atomicLoadThenBitwiseAnd","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Atomics13AtomicStorageP5ValueQa","text":"Value","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"at","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sp","text":"UnsafeMutablePointer","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Atomics13AtomicStorageP5ValueQa","text":"Value","kind":"typeIdentifier"}],"role":"symbol","type":"topic","url":"\/documentation\/atomics\/atomicintegerstorage\/atomicloadthenbitwiseand(with:at:ordering:)","abstract":[{"type":"text","text":"Perform an atomic bitwise AND operation on the value referenced by"},{"type":"text","text":" "},{"type":"codeVoice","code":"pointer"},{"type":"text","text":" and return the original value, applying the specified memory"},{"text":" ","type":"text"},{"type":"text","text":"ordering."}],"title":"atomicLoadThenBitwiseAnd(with:at:ordering:)","kind":"symbol","required":true,"identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicIntegerStorage\/atomicLoadThenBitwiseAnd(with:at:ordering:)"},"doc://Atomics/documentation/Atomics/AtomicOptionalReferenceStorage":{"url":"\/documentation\/atomics\/atomicoptionalreferencestorage","navigatorTitle":[{"text":"AtomicOptionalReferenceStorage","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"AtomicOptionalReferenceStorage","kind":"identifier"}],"title":"AtomicOptionalReferenceStorage","kind":"symbol","abstract":[],"role":"symbol","type":"topic","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicOptionalReferenceStorage"},"doc://Atomics/documentation/Atomics/AtomicIntegerStorage/atomicLoadThenWrappingDecrement(by:at:ordering:)":{"type":"topic","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"atomicLoadThenWrappingDecrement","kind":"identifier"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Atomics13AtomicStorageP5ValueQa","kind":"typeIdentifier","text":"Value"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UnsafeMutablePointer","kind":"typeIdentifier","preciseIdentifier":"s:Sp"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Atomics13AtomicStorageP5ValueQa","text":"Value","kind":"typeIdentifier"}],"title":"atomicLoadThenWrappingDecrement(by:at:ordering:)","kind":"symbol","required":true,"abstract":[{"text":"Perform an atomic wrapping decrement operation on the value referenced by","type":"text"},{"type":"text","text":" "},{"code":"pointer","type":"codeVoice"},{"type":"text","text":" and return the original value, applying the specified memory"},{"type":"text","text":" "},{"type":"text","text":"ordering."}],"role":"symbol","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicIntegerStorage\/atomicLoadThenWrappingDecrement(by:at:ordering:)","url":"\/documentation\/atomics\/atomicintegerstorage\/atomicloadthenwrappingdecrement(by:at:ordering:)"},"doc://Atomics/documentation/Atomics/Swift/Int32/AtomicRepresentation":{"title":"Int32.AtomicRepresentation","type":"topic","kind":"symbol","url":"\/documentation\/atomics\/swift\/int32\/atomicrepresentation","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/Swift\/Int32\/AtomicRepresentation","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AtomicRepresentation","kind":"identifier"}],"navigatorTitle":[{"text":"AtomicRepresentation","kind":"identifier"}],"abstract":[],"role":"symbol"},"doc://Atomics/documentation/Atomics/Swift/UInt16/AtomicRepresentation":{"url":"\/documentation\/atomics\/swift\/uint16\/atomicrepresentation","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/Swift\/UInt16\/AtomicRepresentation","type":"topic","abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomicRepresentation"}],"title":"UInt16.AtomicRepresentation","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomicRepresentation"}],"kind":"symbol"},"doc://Atomics/documentation/Atomics":{"type":"topic","url":"\/documentation\/atomics","kind":"symbol","abstract":[{"type":"text","text":"An atomics library for Swift."}],"title":"Atomics","role":"collection","identifier":"doc:\/\/Atomics\/documentation\/Atomics"},"doc://Atomics/documentation/Atomics/Swift/Int16/AtomicRepresentation":{"role":"symbol","title":"Int16.AtomicRepresentation","kind":"symbol","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/Swift\/Int16\/AtomicRepresentation","url":"\/documentation\/atomics\/swift\/int16\/atomicrepresentation","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomicRepresentation"}],"abstract":[],"navigatorTitle":[{"text":"AtomicRepresentation","kind":"identifier"}],"type":"topic"},"doc://Atomics/documentation/Atomics/Swift/UInt/AtomicRepresentation":{"url":"\/documentation\/atomics\/swift\/uint\/atomicrepresentation","kind":"symbol","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/Swift\/UInt\/AtomicRepresentation","type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomicRepresentation"}],"title":"UInt.AtomicRepresentation","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"AtomicRepresentation"}]},"doc://Atomics/documentation/Atomics/Swift/UInt64/AtomicRepresentation":{"abstract":[],"url":"\/documentation\/atomics\/swift\/uint64\/atomicrepresentation","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomicRepresentation"}],"identifier":"doc:\/\/Atomics\/documentation\/Atomics\/Swift\/UInt64\/AtomicRepresentation","title":"UInt64.AtomicRepresentation","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomicRepresentation"}],"type":"topic"},"doc://Atomics/documentation/Atomics/AtomicReferenceStorage":{"type":"topic","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicReferenceStorage","title":"AtomicReferenceStorage","kind":"symbol","abstract":[],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomicReferenceStorage"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AtomicReferenceStorage","kind":"identifier"}],"url":"\/documentation\/atomics\/atomicreferencestorage"},"doc://Atomics/documentation/Atomics/AtomicStorage":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomicStorage"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicStorage","role":"symbol","abstract":[{"type":"text","text":"The storage representation for an atomic value, providing pointer-based"},{"type":"text","text":" "},{"type":"text","text":"atomic operations. This is a low-level implementation detail of atomic"},{"type":"text","text":" "},{"text":"types; instead of directly handling conforming types, it is usually better","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to use the "},{"code":"UnsafeAtomic","type":"codeVoice"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"ManagedAtomic"},{"type":"text","text":" generics â€“ these provide more"},{"text":" ","type":"text"},{"text":"convenient and safer interfaces while also ensuring that the storage is","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"correctly constructed and destroyed."}],"url":"\/documentation\/atomics\/atomicstorage","navigatorTitle":[{"kind":"identifier","text":"AtomicStorage"}],"title":"AtomicStorage"}}}