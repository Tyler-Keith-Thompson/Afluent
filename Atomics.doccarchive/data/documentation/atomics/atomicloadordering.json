{"topicSections":[{"anchor":"Ordering-Values","title":"Ordering Values","identifiers":["doc:\/\/Atomics\/documentation\/Atomics\/AtomicLoadOrdering\/relaxed","doc:\/\/Atomics\/documentation\/Atomics\/AtomicLoadOrdering\/acquiring","doc:\/\/Atomics\/documentation\/Atomics\/AtomicLoadOrdering\/sequentiallyConsistent"]},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/Atomics\/documentation\/Atomics\/AtomicLoadOrdering\/CustomStringConvertible-Implementations","doc:\/\/Atomics\/documentation\/Atomics\/AtomicLoadOrdering\/Equatable-Implementations","doc:\/\/Atomics\/documentation\/Atomics\/AtomicLoadOrdering\/Hashable-Implementations"],"anchor":"Default-Implementations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atomics\/atomicloadordering"]}],"kind":"symbol","abstract":[{"type":"text","text":"Specifies the memory ordering semantics of an atomic load operation."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"@frozen","kind":"attribute"},{"kind":"text","text":" "},{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AtomicLoadOrdering","kind":"identifier"}],"platforms":["macOS"]}]}],"identifier":{"url":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicLoadOrdering","interfaceLanguage":"swift"},"sections":[],"hierarchy":{"paths":[["doc:\/\/Atomics\/documentation\/Atomics"]]},"relationshipsSections":[{"kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/Atomics\/s15BitwiseCopyableP","doc:\/\/Atomics\/s8CopyableP","doc:\/\/Atomics\/s23CustomStringConvertibleP","doc:\/\/Atomics\/SQ","doc:\/\/Atomics\/SH","doc:\/\/Atomics\/s8SendableP"],"type":"conformsTo"}],"seeAlsoSections":[{"title":"Memory Orderings","identifiers":["doc:\/\/Atomics\/documentation\/Atomics\/AtomicStoreOrdering","doc:\/\/Atomics\/documentation\/Atomics\/AtomicUpdateOrdering"],"generated":true,"anchor":"Memory-Orderings"}],"metadata":{"modules":[{"name":"Atomics"}],"symbolKind":"struct","navigatorTitle":[{"text":"AtomicLoadOrdering","kind":"identifier"}],"role":"symbol","roleHeading":"Structure","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"AtomicLoadOrdering","kind":"identifier"}],"remoteSource":{"fileName":"AtomicMemoryOrderings.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/.build\/checkouts\/swift-atomics\/Sources\/Atomics\/Types\/AtomicMemoryOrderings.swift#L15"},"title":"AtomicLoadOrdering","externalID":"s:7Atomics18AtomicLoadOrderingV"},"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://Atomics/documentation/Atomics/AtomicUpdateOrdering":{"title":"AtomicUpdateOrdering","abstract":[{"text":"Specifies the memory ordering semantics of an atomic read-modify-write","type":"text"},{"type":"text","text":" "},{"type":"text","text":"operation."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AtomicUpdateOrdering","kind":"identifier"}],"navigatorTitle":[{"text":"AtomicUpdateOrdering","kind":"identifier"}],"type":"topic","url":"\/documentation\/atomics\/atomicupdateordering","role":"symbol","kind":"symbol","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicUpdateOrdering"},"doc://Atomics/documentation/Atomics/AtomicLoadOrdering/relaxed":{"type":"topic","url":"\/documentation\/atomics\/atomicloadordering\/relaxed","kind":"symbol","abstract":[{"type":"text","text":"Guarantees the atomicity of the specific operation on which it is applied,"},{"type":"text","text":" "},{"type":"text","text":"but imposes no ordering constraints on any other variable accesses."}],"title":"relaxed","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"relaxed","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","text":"AtomicLoadOrdering","kind":"typeIdentifier"}],"identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicLoadOrdering\/relaxed"},"doc://Atomics/s8CopyableP":{"type":"unresolvable","identifier":"doc:\/\/Atomics\/s8CopyableP","title":"Swift.Copyable"},"doc://Atomics/documentation/Atomics/AtomicStoreOrdering":{"type":"topic","role":"symbol","abstract":[{"text":"Specifies the memory ordering semantics of an atomic store operation.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomicStoreOrdering"}],"navigatorTitle":[{"kind":"identifier","text":"AtomicStoreOrdering"}],"identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicStoreOrdering","url":"\/documentation\/atomics\/atomicstoreordering","title":"AtomicStoreOrdering","kind":"symbol"},"doc://Atomics/SH":{"type":"unresolvable","identifier":"doc:\/\/Atomics\/SH","title":"Swift.Hashable"},"doc://Atomics/SQ":{"type":"unresolvable","identifier":"doc:\/\/Atomics\/SQ","title":"Swift.Equatable"},"doc://Atomics/documentation/Atomics/AtomicLoadOrdering/acquiring":{"type":"topic","title":"acquiring","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicLoadOrdering\/acquiring","kind":"symbol","abstract":[{"type":"text","text":"An acquiring load synchronizes with a releasing operation whose"},{"type":"text","text":" "},{"text":"value its reads. It ensures that the releasing and acquiring","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"threads agree that all subsequent variable accesses on the"},{"type":"text","text":" "},{"type":"text","text":"acquiring thread happen after the atomic operation itself."}],"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"acquiring"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","text":"AtomicLoadOrdering","kind":"typeIdentifier"}],"url":"\/documentation\/atomics\/atomicloadordering\/acquiring"},"doc://Atomics/s23CustomStringConvertibleP":{"type":"unresolvable","identifier":"doc:\/\/Atomics\/s23CustomStringConvertibleP","title":"Swift.CustomStringConvertible"},"doc://Atomics/documentation/Atomics/AtomicLoadOrdering/sequentiallyConsistent":{"type":"topic","url":"\/documentation\/atomics\/atomicloadordering\/sequentiallyconsistent","kind":"symbol","abstract":[{"type":"text","text":"A sequentially consistent load performs an acquiring load and"},{"type":"text","text":" "},{"text":"also guarantees that it and all other sequentially consistent","type":"text"},{"type":"text","text":" "},{"text":"atomic operations (loads, stores, updates) appear to be executed","type":"text"},{"type":"text","text":" "},{"type":"text","text":"in a single, total sequential ordering."}],"title":"sequentiallyConsistent","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"sequentiallyConsistent","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","text":"AtomicLoadOrdering","kind":"typeIdentifier"}],"identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicLoadOrdering\/sequentiallyConsistent"},"doc://Atomics/documentation/Atomics/AtomicLoadOrdering/Equatable-Implementations":{"role":"collectionGroup","title":"Equatable Implementations","kind":"article","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicLoadOrdering\/Equatable-Implementations","url":"\/documentation\/atomics\/atomicloadordering\/equatable-implementations","abstract":[],"type":"topic"},"doc://Atomics/documentation/Atomics/AtomicLoadOrdering/CustomStringConvertible-Implementations":{"kind":"article","abstract":[],"identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicLoadOrdering\/CustomStringConvertible-Implementations","url":"\/documentation\/atomics\/atomicloadordering\/customstringconvertible-implementations","role":"collectionGroup","title":"CustomStringConvertible Implementations","type":"topic"},"doc://Atomics/documentation/Atomics/AtomicLoadOrdering/Hashable-Implementations":{"kind":"article","abstract":[],"title":"Hashable Implementations","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicLoadOrdering\/Hashable-Implementations","url":"\/documentation\/atomics\/atomicloadordering\/hashable-implementations","type":"topic","role":"collectionGroup"},"doc://Atomics/s15BitwiseCopyableP":{"type":"unresolvable","identifier":"doc:\/\/Atomics\/s15BitwiseCopyableP","title":"Swift.BitwiseCopyable"},"doc://Atomics/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/Atomics\/s8SendableP","title":"Swift.Sendable"},"doc://Atomics/documentation/Atomics":{"type":"topic","url":"\/documentation\/atomics","kind":"symbol","abstract":[{"type":"text","text":"An atomics library for Swift."}],"title":"Atomics","role":"collection","identifier":"doc:\/\/Atomics\/documentation\/Atomics"},"doc://Atomics/documentation/Atomics/AtomicLoadOrdering":{"type":"topic","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicLoadOrdering","title":"AtomicLoadOrdering","kind":"symbol","abstract":[{"text":"Specifies the memory ordering semantics of an atomic load operation.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"AtomicLoadOrdering","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AtomicLoadOrdering","kind":"identifier"}],"url":"\/documentation\/atomics\/atomicloadordering"}}}