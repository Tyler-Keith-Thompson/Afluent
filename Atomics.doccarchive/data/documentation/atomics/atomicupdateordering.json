{"abstract":[{"type":"text","text":"Specifies the memory ordering semantics of an atomic read-modify-write"},{"text":" ","type":"text"},{"text":"operation.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/Atomics\/documentation\/Atomics"]]},"metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomicUpdateOrdering"}],"externalID":"s:7Atomics20AtomicUpdateOrderingV","roleHeading":"Structure","remoteSource":{"fileName":"AtomicMemoryOrderings.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/.build\/checkouts\/swift-atomics\/Sources\/Atomics\/Types\/AtomicMemoryOrderings.swift#L182"},"title":"AtomicUpdateOrdering","navigatorTitle":[{"kind":"identifier","text":"AtomicUpdateOrdering"}],"symbolKind":"struct","role":"symbol","modules":[{"name":"Atomics"}]},"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"@frozen","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AtomicUpdateOrdering","kind":"identifier"}],"platforms":["macOS"]}],"kind":"declarations"}],"relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/Atomics\/s15BitwiseCopyableP","doc:\/\/Atomics\/s8CopyableP","doc:\/\/Atomics\/s23CustomStringConvertibleP","doc:\/\/Atomics\/SQ","doc:\/\/Atomics\/SH","doc:\/\/Atomics\/s8SendableP"],"title":"Conforms To","kind":"relationships"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atomics\/atomicupdateordering"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicUpdateOrdering"},"topicSections":[{"identifiers":["doc:\/\/Atomics\/documentation\/Atomics\/AtomicUpdateOrdering\/relaxed","doc:\/\/Atomics\/documentation\/Atomics\/AtomicUpdateOrdering\/acquiring","doc:\/\/Atomics\/documentation\/Atomics\/AtomicUpdateOrdering\/releasing","doc:\/\/Atomics\/documentation\/Atomics\/AtomicUpdateOrdering\/acquiringAndReleasing","doc:\/\/Atomics\/documentation\/Atomics\/AtomicUpdateOrdering\/sequentiallyConsistent"],"title":"Ordering Values","anchor":"Ordering-Values"},{"identifiers":["doc:\/\/Atomics\/documentation\/Atomics\/AtomicUpdateOrdering\/CustomStringConvertible-Implementations","doc:\/\/Atomics\/documentation\/Atomics\/AtomicUpdateOrdering\/Equatable-Implementations","doc:\/\/Atomics\/documentation\/Atomics\/AtomicUpdateOrdering\/Hashable-Implementations"],"title":"Default Implementations","anchor":"Default-Implementations","generated":true}],"seeAlsoSections":[{"generated":true,"title":"Memory Orderings","anchor":"Memory-Orderings","identifiers":["doc:\/\/Atomics\/documentation\/Atomics\/AtomicLoadOrdering","doc:\/\/Atomics\/documentation\/Atomics\/AtomicStoreOrdering"]}],"sections":[],"references":{"doc://Atomics/documentation/Atomics/AtomicUpdateOrdering/acquiring":{"type":"topic","title":"acquiring","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicUpdateOrdering\/acquiring","kind":"symbol","abstract":[{"text":"An acquiring update synchronizes with a releasing operation","type":"text"},{"type":"text","text":" "},{"type":"text","text":"whose value its reads. It ensures that the releasing and"},{"text":" ","type":"text"},{"text":"acquiring threads agree that all subsequent variable accesses on","type":"text"},{"type":"text","text":" "},{"text":"the acquring thread happen after the atomic operation itself.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"acquiring"},{"kind":"text","text":": "},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"}],"url":"\/documentation\/atomics\/atomicupdateordering\/acquiring"},"doc://Atomics/documentation/Atomics/AtomicUpdateOrdering/Hashable-Implementations":{"role":"collectionGroup","title":"Hashable Implementations","kind":"article","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicUpdateOrdering\/Hashable-Implementations","url":"\/documentation\/atomics\/atomicupdateordering\/hashable-implementations","abstract":[],"type":"topic"},"doc://Atomics/documentation/Atomics/AtomicStoreOrdering":{"type":"topic","role":"symbol","abstract":[{"text":"Specifies the memory ordering semantics of an atomic store operation.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomicStoreOrdering"}],"navigatorTitle":[{"kind":"identifier","text":"AtomicStoreOrdering"}],"identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicStoreOrdering","url":"\/documentation\/atomics\/atomicstoreordering","title":"AtomicStoreOrdering","kind":"symbol"},"doc://Atomics/documentation/Atomics/AtomicUpdateOrdering/Equatable-Implementations":{"abstract":[],"title":"Equatable Implementations","type":"topic","kind":"article","role":"collectionGroup","url":"\/documentation\/atomics\/atomicupdateordering\/equatable-implementations","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicUpdateOrdering\/Equatable-Implementations"},"doc://Atomics/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/Atomics\/s8SendableP","title":"Swift.Sendable"},"doc://Atomics/s8CopyableP":{"type":"unresolvable","identifier":"doc:\/\/Atomics\/s8CopyableP","title":"Swift.Copyable"},"doc://Atomics/SH":{"type":"unresolvable","identifier":"doc:\/\/Atomics\/SH","title":"Swift.Hashable"},"doc://Atomics/documentation/Atomics/AtomicUpdateOrdering/relaxed":{"role":"symbol","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicUpdateOrdering\/relaxed","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"relaxed","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering"}],"kind":"symbol","title":"relaxed","abstract":[{"type":"text","text":"Guarantees the atomicity of the specific operation on which it is applied,"},{"type":"text","text":" "},{"text":"but imposes no ordering constraints on any other variable accesses.","type":"text"}],"url":"\/documentation\/atomics\/atomicupdateordering\/relaxed"},"doc://Atomics/documentation/Atomics/AtomicUpdateOrdering/CustomStringConvertible-Implementations":{"url":"\/documentation\/atomics\/atomicupdateordering\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicUpdateOrdering\/CustomStringConvertible-Implementations","role":"collectionGroup","abstract":[],"kind":"article","type":"topic"},"doc://Atomics/s23CustomStringConvertibleP":{"type":"unresolvable","identifier":"doc:\/\/Atomics\/s23CustomStringConvertibleP","title":"Swift.CustomStringConvertible"},"doc://Atomics/documentation/Atomics/AtomicUpdateOrdering/releasing":{"type":"topic","title":"releasing","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicUpdateOrdering\/releasing","kind":"symbol","abstract":[{"type":"text","text":"A releasing update synchronizes with acquiring operations that"},{"text":" ","type":"text"},{"type":"text","text":"read the value it stores. It ensures that the releasing and"},{"text":" ","type":"text"},{"text":"acquiring threads agree that all preceding variable accesses on","type":"text"},{"text":" ","type":"text"},{"text":"the releasing thread happen before the atomic operation itself.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"releasing","kind":"identifier"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier"}],"url":"\/documentation\/atomics\/atomicupdateordering\/releasing"},"doc://Atomics/documentation/Atomics/AtomicUpdateOrdering":{"title":"AtomicUpdateOrdering","abstract":[{"text":"Specifies the memory ordering semantics of an atomic read-modify-write","type":"text"},{"type":"text","text":" "},{"type":"text","text":"operation."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AtomicUpdateOrdering","kind":"identifier"}],"navigatorTitle":[{"text":"AtomicUpdateOrdering","kind":"identifier"}],"type":"topic","url":"\/documentation\/atomics\/atomicupdateordering","role":"symbol","kind":"symbol","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicUpdateOrdering"},"doc://Atomics/documentation/Atomics/AtomicUpdateOrdering/sequentiallyConsistent":{"role":"symbol","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicUpdateOrdering\/sequentiallyConsistent","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"sequentiallyConsistent","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering"}],"kind":"symbol","title":"sequentiallyConsistent","abstract":[{"text":"A sequentially consistent update performs an","type":"text"},{"text":" ","type":"text"},{"text":"acquiring-and-releasing update and also guarantees that it and","type":"text"},{"text":" ","type":"text"},{"text":"all other sequentially consistent atomic operations (loads, stores,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"updates) appear to be executed in a single, total sequential"},{"text":" ","type":"text"},{"type":"text","text":"ordering."}],"url":"\/documentation\/atomics\/atomicupdateordering\/sequentiallyconsistent"},"doc://Atomics/documentation/Atomics":{"type":"topic","url":"\/documentation\/atomics","kind":"symbol","abstract":[{"type":"text","text":"An atomics library for Swift."}],"title":"Atomics","role":"collection","identifier":"doc:\/\/Atomics\/documentation\/Atomics"},"doc://Atomics/s15BitwiseCopyableP":{"type":"unresolvable","identifier":"doc:\/\/Atomics\/s15BitwiseCopyableP","title":"Swift.BitwiseCopyable"},"doc://Atomics/SQ":{"type":"unresolvable","identifier":"doc:\/\/Atomics\/SQ","title":"Swift.Equatable"},"doc://Atomics/documentation/Atomics/AtomicLoadOrdering":{"type":"topic","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicLoadOrdering","title":"AtomicLoadOrdering","kind":"symbol","abstract":[{"text":"Specifies the memory ordering semantics of an atomic load operation.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"AtomicLoadOrdering","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AtomicLoadOrdering","kind":"identifier"}],"url":"\/documentation\/atomics\/atomicloadordering"},"doc://Atomics/documentation/Atomics/AtomicUpdateOrdering/acquiringAndReleasing":{"role":"symbol","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicUpdateOrdering\/acquiringAndReleasing","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"acquiringAndReleasing"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering"}],"kind":"symbol","title":"acquiringAndReleasing","abstract":[{"type":"text","text":"An acquiring-and-releasing operation is a combination of"},{"type":"text","text":" "},{"code":".acquiring","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":".releasing"},{"text":" operation on the same variable.","type":"text"}],"url":"\/documentation\/atomics\/atomicupdateordering\/acquiringandreleasing"}}}