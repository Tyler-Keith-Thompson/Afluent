{"identifier":{"url":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicUpdateOrdering\/releasing","interfaceLanguage":"swift"},"metadata":{"remoteSource":{"fileName":"AtomicMemoryOrderings.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/.build\/checkouts\/swift-atomics\/Sources\/Atomics\/Types\/AtomicMemoryOrderings.swift#L231"},"externalID":"s:7Atomics20AtomicUpdateOrderingV9releasingACvpZ","symbolKind":"property","modules":[{"name":"Atomics"}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"releasing","kind":"identifier"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier"}],"extendedModule":"Atomics","title":"releasing","role":"symbol","roleHeading":"Type Property"},"abstract":[{"text":"A releasing update synchronizes with acquiring operations that","type":"text"},{"type":"text","text":" "},{"text":"read the value it stores. It ensures that the releasing and","type":"text"},{"text":" ","type":"text"},{"text":"acquiring threads agree that all preceding variable accesses on","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the releasing thread happen before the atomic operation itself."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atomics\/atomicupdateordering\/releasing"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/Atomics\/documentation\/Atomics","doc:\/\/Atomics\/documentation\/Atomics\/AtomicUpdateOrdering"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"releasing","kind":"identifier"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicUpdateOrdering","text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier"},{"text":" { ","kind":"text"},{"kind":"keyword","text":"get"},{"text":" }","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"This value corresponds to ","type":"text"},{"type":"codeVoice","code":"std::memory_order_release"},{"text":" in C++.","type":"text"}]}],"kind":"content"}],"seeAlsoSections":[{"generated":true,"title":"Ordering Values","anchor":"Ordering-Values","identifiers":["doc:\/\/Atomics\/documentation\/Atomics\/AtomicUpdateOrdering\/relaxed","doc:\/\/Atomics\/documentation\/Atomics\/AtomicUpdateOrdering\/acquiring","doc:\/\/Atomics\/documentation\/Atomics\/AtomicUpdateOrdering\/acquiringAndReleasing","doc:\/\/Atomics\/documentation\/Atomics\/AtomicUpdateOrdering\/sequentiallyConsistent"]}],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://Atomics/documentation/Atomics/AtomicUpdateOrdering/acquiring":{"type":"topic","title":"acquiring","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicUpdateOrdering\/acquiring","kind":"symbol","abstract":[{"text":"An acquiring update synchronizes with a releasing operation","type":"text"},{"type":"text","text":" "},{"type":"text","text":"whose value its reads. It ensures that the releasing and"},{"text":" ","type":"text"},{"text":"acquiring threads agree that all subsequent variable accesses on","type":"text"},{"type":"text","text":" "},{"text":"the acquring thread happen after the atomic operation itself.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"acquiring"},{"kind":"text","text":": "},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"}],"url":"\/documentation\/atomics\/atomicupdateordering\/acquiring"},"doc://Atomics/documentation/Atomics/AtomicUpdateOrdering/acquiringAndReleasing":{"role":"symbol","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicUpdateOrdering\/acquiringAndReleasing","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"acquiringAndReleasing"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering"}],"kind":"symbol","title":"acquiringAndReleasing","abstract":[{"type":"text","text":"An acquiring-and-releasing operation is a combination of"},{"type":"text","text":" "},{"code":".acquiring","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":".releasing"},{"text":" operation on the same variable.","type":"text"}],"url":"\/documentation\/atomics\/atomicupdateordering\/acquiringandreleasing"},"doc://Atomics/documentation/Atomics/AtomicUpdateOrdering/relaxed":{"role":"symbol","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicUpdateOrdering\/relaxed","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"relaxed","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering"}],"kind":"symbol","title":"relaxed","abstract":[{"type":"text","text":"Guarantees the atomicity of the specific operation on which it is applied,"},{"type":"text","text":" "},{"text":"but imposes no ordering constraints on any other variable accesses.","type":"text"}],"url":"\/documentation\/atomics\/atomicupdateordering\/relaxed"},"doc://Atomics/documentation/Atomics":{"type":"topic","url":"\/documentation\/atomics","kind":"symbol","abstract":[{"type":"text","text":"An atomics library for Swift."}],"title":"Atomics","role":"collection","identifier":"doc:\/\/Atomics\/documentation\/Atomics"},"doc://Atomics/documentation/Atomics/AtomicUpdateOrdering":{"title":"AtomicUpdateOrdering","abstract":[{"text":"Specifies the memory ordering semantics of an atomic read-modify-write","type":"text"},{"type":"text","text":" "},{"type":"text","text":"operation."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AtomicUpdateOrdering","kind":"identifier"}],"navigatorTitle":[{"text":"AtomicUpdateOrdering","kind":"identifier"}],"type":"topic","url":"\/documentation\/atomics\/atomicupdateordering","role":"symbol","kind":"symbol","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicUpdateOrdering"},"doc://Atomics/documentation/Atomics/AtomicUpdateOrdering/sequentiallyConsistent":{"role":"symbol","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicUpdateOrdering\/sequentiallyConsistent","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"sequentiallyConsistent","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering"}],"kind":"symbol","title":"sequentiallyConsistent","abstract":[{"text":"A sequentially consistent update performs an","type":"text"},{"text":" ","type":"text"},{"text":"acquiring-and-releasing update and also guarantees that it and","type":"text"},{"text":" ","type":"text"},{"text":"all other sequentially consistent atomic operations (loads, stores,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"updates) appear to be executed in a single, total sequential"},{"text":" ","type":"text"},{"type":"text","text":"ordering."}],"url":"\/documentation\/atomics\/atomicupdateordering\/sequentiallyconsistent"},"doc://Atomics/documentation/Atomics/AtomicUpdateOrdering/releasing":{"type":"topic","title":"releasing","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicUpdateOrdering\/releasing","kind":"symbol","abstract":[{"type":"text","text":"A releasing update synchronizes with acquiring operations that"},{"text":" ","type":"text"},{"type":"text","text":"read the value it stores. It ensures that the releasing and"},{"text":" ","type":"text"},{"text":"acquiring threads agree that all preceding variable accesses on","type":"text"},{"text":" ","type":"text"},{"text":"the releasing thread happen before the atomic operation itself.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"releasing","kind":"identifier"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier"}],"url":"\/documentation\/atomics\/atomicupdateordering\/releasing"}}}