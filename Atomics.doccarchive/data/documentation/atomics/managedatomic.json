{"abstract":[{"type":"text","text":"A reference type holding an atomic value, with automatic memory management."}],"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"hierarchy":{"paths":[["doc:\/\/Atomics\/documentation\/Atomics"]]},"kind":"symbol","relationshipsSections":[{"identifiers":["doc:\/\/Atomics\/s8SendableP"],"title":"Conforms To","type":"conformsTo","kind":"relationships"}],"metadata":{"navigatorTitle":[{"text":"ManagedAtomic","kind":"identifier"}],"modules":[{"name":"Atomics"}],"role":"symbol","externalID":"s:7Atomics13ManagedAtomicC","symbolKind":"class","roleHeading":"Class","title":"ManagedAtomic","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"ManagedAtomic","kind":"identifier"}],"remoteSource":{"fileName":"ManagedAtomic.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/.build\/checkouts\/swift-atomics\/Sources\/Atomics\/Types\/ManagedAtomic.swift#L15"}},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"ManagedAtomic","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Value","kind":"genericParameter"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicValue","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics11AtomicValueP","text":"AtomicValue"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Atomics11AtomicValueP0B14RepresentationQa","kind":"typeIdentifier","text":"AtomicRepresentation","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicValue\/AtomicRepresentation"},{"text":".","kind":"text"},{"identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicStorage\/Value","text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics13AtomicStorageP5ValueQa"}],"platforms":["macOS"]}],"kind":"declarations"}],"identifier":{"url":"doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic","interfaceLanguage":"swift"},"topicSections":[{"identifiers":["doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/init(_:)"],"anchor":"Initializers","title":"Initializers"},{"anchor":"Atomic-Operations","identifiers":["doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/load(ordering:)","doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/store(_:ordering:)","doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/exchange(_:ordering:)","doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/compareExchange(expected:desired:ordering:)","doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/compareExchange(expected:desired:successOrdering:failureOrdering:)","doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/weakCompareExchange(expected:desired:ordering:)","doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/weakCompareExchange(expected:desired:successOrdering:failureOrdering:)"],"title":"Atomic Operations"},{"anchor":"Atomic-Integer-Operations","title":"Atomic Integer Operations","identifiers":["doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/wrappingIncrement(by:ordering:)","doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/wrappingDecrement(by:ordering:)","doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/loadThenWrappingIncrement(by:ordering:)","doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/loadThenWrappingDecrement(by:ordering:)","doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/loadThenBitwiseOr(with:ordering:)","doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/loadThenBitwiseAnd(with:ordering:)","doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/loadThenBitwiseXor(with:ordering:)","doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/wrappingIncrementThenLoad(by:ordering:)","doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/wrappingDecrementThenLoad(by:ordering:)","doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/bitwiseOrThenLoad(with:ordering:)","doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/bitwiseAndThenLoad(with:ordering:)","doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/bitwiseXorThenLoad(with:ordering:)"]},{"title":"Atomic Boolean Operations","identifiers":["doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/logicalOrThenLoad(with:ordering:)","doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/logicalAndThenLoad(with:ordering:)","doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/logicalXorThenLoad(with:ordering:)","doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/loadThenLogicalOr(with:ordering:)","doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/loadThenLogicalAnd(with:ordering:)","doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/loadThenLogicalXor(with:ordering:)"],"anchor":"Atomic-Boolean-Operations"}],"seeAlsoSections":[{"title":"Atomic Container Types","anchor":"Atomic-Container-Types","identifiers":["doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic","doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomicLazyReference","doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference"],"generated":true}],"variants":[{"paths":["\/documentation\/atomics\/managedatomic"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Atomics/documentation/Atomics/ManagedAtomic/loadThenWrappingDecrement(by:ordering:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"loadThenWrappingDecrement","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"by"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"ordering","kind":"externalParam"},{"kind":"text","text":": "},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"AtomicInteger"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"title":"loadThenWrappingDecrement(by:ordering:)","url":"\/documentation\/atomics\/managedatomic\/loadthenwrappingdecrement(by:ordering:)","type":"topic","abstract":[{"text":"Perform an atomic wrapping subtract operation and return the original value, applying","type":"text"},{"type":"text","text":" "},{"text":"the specified memory ordering.","type":"text"}],"identifier":"doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/loadThenWrappingDecrement(by:ordering:)","kind":"symbol"},"doc://Atomics/documentation/Atomics/ManagedAtomic/wrappingIncrement(by:ordering:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrappingIncrement","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"by"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":")","kind":"text"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"code":"AtomicInteger","type":"codeVoice"},{"type":"text","text":"."}]},"title":"wrappingIncrement(by:ordering:)","url":"\/documentation\/atomics\/managedatomic\/wrappingincrement(by:ordering:)","type":"topic","abstract":[{"type":"text","text":"Perform an atomic wrapping increment operation applying the"},{"text":" ","type":"text"},{"type":"text","text":"specified memory ordering."}],"identifier":"doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/wrappingIncrement(by:ordering:)","kind":"symbol"},"doc://Atomics/documentation/Atomics/ManagedAtomic/store(_:ordering:)":{"role":"symbol","title":"store(_:ordering:)","kind":"symbol","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/store(_:ordering:)","url":"\/documentation\/atomics\/managedatomic\/store(_:ordering:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"AtomicValue","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Value.AtomicRepresentation.Value"},{"type":"text","text":"."}]},"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"store","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AtomicStoreOrdering","preciseIdentifier":"s:7Atomics19AtomicStoreOrderingV"},{"text":")","kind":"text"}],"abstract":[{"text":"Atomically sets the current value to ","type":"text"},{"code":"desired","type":"codeVoice"},{"type":"text","text":", applying the specified"},{"type":"text","text":" "},{"type":"text","text":"memory ordering."}],"type":"topic"},"doc://Atomics/documentation/Atomics/AtomicStorage/Value":{"identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicStorage\/Value","abstract":[{"type":"text","text":"The type whose values this storage representation is representing."}],"url":"\/documentation\/atomics\/atomicstorage\/value","kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Value"}],"title":"Value","required":true},"doc://Atomics/documentation/Atomics/AtomicValue":{"type":"topic","url":"\/documentation\/atomics\/atomicvalue","kind":"symbol","abstract":[{"type":"text","text":"A type that supports atomic operations through a separate atomic storage"},{"type":"text","text":" "},{"text":"representation.","type":"text"}],"title":"AtomicValue","navigatorTitle":[{"kind":"identifier","text":"AtomicValue"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"AtomicValue","kind":"identifier"}],"identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicValue"},"doc://Atomics/documentation/Atomics/ManagedAtomic/exchange(_:ordering:)":{"role":"symbol","title":"exchange(_:ordering:)","kind":"symbol","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/exchange(_:ordering:)","url":"\/documentation\/atomics\/managedatomic\/exchange(_:ordering:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"code":"AtomicValue","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"code":"Value.AtomicRepresentation.Value","type":"codeVoice"},{"type":"text","text":"."}]},"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"exchange","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"kind":"text","text":": "},{"text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Value"}],"abstract":[{"text":"Atomically sets the current value to ","type":"text"},{"type":"codeVoice","code":"desired"},{"text":" and returns the original","type":"text"},{"type":"text","text":" "},{"type":"text","text":"value, applying the specified memory ordering."}],"type":"topic"},"doc://Atomics/documentation/Atomics/ManagedAtomic":{"url":"\/documentation\/atomics\/managedatomic","abstract":[{"type":"text","text":"A reference type holding an atomic value, with automatic memory management."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ManagedAtomic"}],"identifier":"doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic","title":"ManagedAtomic","navigatorTitle":[{"kind":"identifier","text":"ManagedAtomic"}],"type":"topic","role":"symbol"},"doc://Atomics/documentation/Atomics/ManagedAtomic/compareExchange(expected:desired:successOrdering:failureOrdering:)":{"abstract":[{"type":"text","text":"Perform an atomic compare and exchange operation on the current value,"},{"type":"text","text":" "},{"text":"applying the specified success\/failure memory orderings.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"compareExchange"},{"text":"(","kind":"text"},{"text":"expected","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"desired"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"successOrdering"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"failureOrdering"},{"kind":"text","text":": "},{"text":"AtomicLoadOrdering","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","kind":"typeIdentifier"},{"text":") -> (exchanged","kind":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", original"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":")"}],"title":"compareExchange(expected:desired:successOrdering:failureOrdering:)","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"AtomicValue","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Value","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Value.AtomicRepresentation.Value"},{"type":"text","text":"."}]},"type":"topic","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/compareExchange(expected:desired:successOrdering:failureOrdering:)","role":"symbol","url":"\/documentation\/atomics\/managedatomic\/compareexchange(expected:desired:successordering:failureordering:)","kind":"symbol"},"doc://Atomics/documentation/Atomics/ManagedAtomicLazyReference":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomicLazyReference","abstract":[{"text":"A reference type holding a lazily initializable atomic","type":"text"},{"type":"text","text":" "},{"type":"text","text":"strong reference, with automatic memory management."}],"url":"\/documentation\/atomics\/managedatomiclazyreference","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"ManagedAtomicLazyReference","kind":"identifier"}],"navigatorTitle":[{"text":"ManagedAtomicLazyReference","kind":"identifier"}],"title":"ManagedAtomicLazyReference"},"doc://Atomics/documentation/Atomics/AtomicValue/AtomicRepresentation":{"role":"symbol","title":"AtomicRepresentation","kind":"symbol","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicValue\/AtomicRepresentation","url":"\/documentation\/atomics\/atomicvalue\/atomicrepresentation","required":true,"fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomicRepresentation"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics13AtomicStorageP","text":"AtomicStorage"}],"abstract":[{"type":"text","text":"The atomic storage representation for this value."}],"type":"topic"},"doc://Atomics/documentation/Atomics/ManagedAtomic/loadThenBitwiseOr(with:ordering:)":{"url":"\/documentation\/atomics\/managedatomic\/loadthenbitwiseor(with:ordering:)","abstract":[{"type":"text","text":"Perform an atomic bitwise OR operation and return the original value, applying"},{"text":" ","type":"text"},{"type":"text","text":"the specified memory ordering."}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"loadThenBitwiseOr"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"ordering"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Value"}],"identifier":"doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/loadThenBitwiseOr(with:ordering:)","title":"loadThenBitwiseOr(with:ordering:)","conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AtomicInteger"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"type":"topic","role":"symbol"},"doc://Atomics/documentation/Atomics/ManagedAtomic/weakCompareExchange(expected:desired:ordering:)":{"role":"symbol","title":"weakCompareExchange(expected:desired:ordering:)","kind":"symbol","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/weakCompareExchange(expected:desired:ordering:)","url":"\/documentation\/atomics\/managedatomic\/weakcompareexchange(expected:desired:ordering:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"code":"AtomicValue","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Value","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Value.AtomicRepresentation.Value","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"weakCompareExchange"},{"text":"(","kind":"text"},{"text":"expected","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":", ","kind":"text"},{"text":"desired","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"ordering"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering","kind":"typeIdentifier"},{"kind":"text","text":") -> (exchanged"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":", original","kind":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"text":")","kind":"text"}],"abstract":[{"text":"Perform an atomic weak compare and exchange operation on the current","type":"text"},{"type":"text","text":" "},{"type":"text","text":"value, applying the memory ordering. This compare-exchange variant is"},{"text":" ","type":"text"},{"type":"text","text":"allowed to spuriously fail; it is designed to be called in a loop until"},{"type":"text","text":" "},{"type":"text","text":"it indicates a successful exchange has happened."}],"type":"topic"},"doc://Atomics/documentation/Atomics/ManagedAtomic/logicalOrThenLoad(with:ordering:)":{"kind":"symbol","type":"topic","title":"logicalOrThenLoad(with:ordering:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Bool"},{"text":".","type":"text"}]},"url":"\/documentation\/atomics\/managedatomic\/logicalorthenload(with:ordering:)","abstract":[{"text":"Perform an atomic logical OR operation and return the original value, applying","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the specified memory ordering."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"logicalOrThenLoad"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"ordering"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"kind":"text","text":") -> "},{"text":"Value","kind":"typeIdentifier"}],"identifier":"doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/logicalOrThenLoad(with:ordering:)","role":"symbol"},"doc://Atomics/documentation/Atomics/ManagedAtomic/bitwiseOrThenLoad(with:ordering:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"bitwiseOrThenLoad","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"ordering"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"AtomicInteger"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"title":"bitwiseOrThenLoad(with:ordering:)","url":"\/documentation\/atomics\/managedatomic\/bitwiseorthenload(with:ordering:)","type":"topic","abstract":[{"type":"text","text":"Perform an atomic bitwise OR operation and return the new value, applying"},{"type":"text","text":" "},{"text":"the specified memory ordering.","type":"text"}],"identifier":"doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/bitwiseOrThenLoad(with:ordering:)","kind":"symbol"},"doc://Atomics/documentation/Atomics/ManagedAtomic/bitwiseAndThenLoad(with:ordering:)":{"url":"\/documentation\/atomics\/managedatomic\/bitwiseandthenload(with:ordering:)","abstract":[{"text":"Perform an atomic bitwise AND operation and return the new value, applying","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the specified memory ordering."}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"bitwiseAndThenLoad","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"kind":"text","text":") -> "},{"text":"Value","kind":"typeIdentifier"}],"identifier":"doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/bitwiseAndThenLoad(with:ordering:)","title":"bitwiseAndThenLoad(with:ordering:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AtomicInteger"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"type":"topic","role":"symbol"},"doc://Atomics/documentation/Atomics/ManagedAtomic/wrappingIncrementThenLoad(by:ordering:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"wrappingIncrementThenLoad","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"by"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Value","kind":"typeIdentifier"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AtomicInteger"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"title":"wrappingIncrementThenLoad(by:ordering:)","url":"\/documentation\/atomics\/managedatomic\/wrappingincrementthenload(by:ordering:)","type":"topic","abstract":[{"text":"Perform an atomic wrapping add operation and return the new value, applying","type":"text"},{"type":"text","text":" "},{"text":"the specified memory ordering.","type":"text"}],"identifier":"doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/wrappingIncrementThenLoad(by:ordering:)","kind":"symbol"},"doc://Atomics/documentation/Atomics/ManagedAtomic/loadThenBitwiseXor(with:ordering:)":{"url":"\/documentation\/atomics\/managedatomic\/loadthenbitwisexor(with:ordering:)","abstract":[{"text":"Perform an atomic bitwise XOR operation and return the original value, applying","type":"text"},{"type":"text","text":" "},{"text":"the specified memory ordering.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"loadThenBitwiseXor","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"ordering"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"identifier":"doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/loadThenBitwiseXor(with:ordering:)","title":"loadThenBitwiseXor(with:ordering:)","conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AtomicInteger"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"type":"topic","role":"symbol"},"doc://Atomics/documentation/Atomics/ManagedAtomic/logicalAndThenLoad(with:ordering:)":{"role":"symbol","title":"logicalAndThenLoad(with:ordering:)","kind":"symbol","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/logicalAndThenLoad(with:ordering:)","url":"\/documentation\/atomics\/managedatomic\/logicalandthenload(with:ordering:)","conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Bool"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"logicalAndThenLoad","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ordering"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Value"}],"abstract":[{"type":"text","text":"Perform an atomic logical AND operation and return the original value, applying"},{"text":" ","type":"text"},{"text":"the specified memory ordering.","type":"text"}],"type":"topic"},"doc://Atomics/documentation/Atomics/ManagedAtomic/loadThenBitwiseAnd(with:ordering:)":{"url":"\/documentation\/atomics\/managedatomic\/loadthenbitwiseand(with:ordering:)","abstract":[{"type":"text","text":"Perform an atomic bitwise AND operation and return the original value, applying"},{"type":"text","text":" "},{"type":"text","text":"the specified memory ordering."}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"loadThenBitwiseAnd","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Value"}],"identifier":"doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/loadThenBitwiseAnd(with:ordering:)","title":"loadThenBitwiseAnd(with:ordering:)","conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"AtomicInteger","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"type":"topic","role":"symbol"},"doc://Atomics/documentation/Atomics/ManagedAtomic/loadThenLogicalOr(with:ordering:)":{"role":"symbol","title":"loadThenLogicalOr(with:ordering:)","kind":"symbol","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/loadThenLogicalOr(with:ordering:)","url":"\/documentation\/atomics\/managedatomic\/loadthenlogicalor(with:ordering:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Value"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Bool"},{"text":".","type":"text"}]},"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"loadThenLogicalOr"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Value","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Perform an atomic logical OR operation and return the original value, applying"},{"text":" ","type":"text"},{"text":"the specified memory ordering.","type":"text"}],"type":"topic"},"doc://Atomics/documentation/Atomics/ManagedAtomic/loadThenWrappingIncrement(by:ordering:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"loadThenWrappingIncrement","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"by"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"ordering"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"AtomicInteger","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"title":"loadThenWrappingIncrement(by:ordering:)","url":"\/documentation\/atomics\/managedatomic\/loadthenwrappingincrement(by:ordering:)","type":"topic","abstract":[{"text":"Perform an atomic wrapping add operation and return the original value, applying","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the specified memory ordering."}],"identifier":"doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/loadThenWrappingIncrement(by:ordering:)","kind":"symbol"},"doc://Atomics/documentation/Atomics/ManagedAtomic/compareExchange(expected:desired:ordering:)":{"abstract":[{"text":"Perform an atomic compare and exchange operation on the current value,","type":"text"},{"text":" ","type":"text"},{"text":"applying the specified memory ordering.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"compareExchange"},{"kind":"text","text":"("},{"kind":"externalParam","text":"expected"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"desired"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier"},{"text":") -> (exchanged","kind":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":", original","kind":"text"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":")","kind":"text"}],"title":"compareExchange(expected:desired:ordering:)","conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"code":"AtomicValue","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Value","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Value.AtomicRepresentation.Value"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"type":"topic","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/compareExchange(expected:desired:ordering:)","role":"symbol","url":"\/documentation\/atomics\/managedatomic\/compareexchange(expected:desired:ordering:)","kind":"symbol"},"doc://Atomics/documentation/Atomics/ManagedAtomic/bitwiseXorThenLoad(with:ordering:)":{"url":"\/documentation\/atomics\/managedatomic\/bitwisexorthenload(with:ordering:)","abstract":[{"text":"Perform an atomic bitwise XOR operation and return the new value, applying","type":"text"},{"type":"text","text":" "},{"text":"the specified memory ordering.","type":"text"}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"bitwiseXorThenLoad","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Value"}],"identifier":"doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/bitwiseXorThenLoad(with:ordering:)","title":"bitwiseXorThenLoad(with:ordering:)","conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"AtomicInteger"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"type":"topic","role":"symbol"},"doc://Atomics/documentation/Atomics/ManagedAtomic/wrappingDecrement(by:ordering:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrappingDecrement","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering","kind":"typeIdentifier"},{"kind":"text","text":")"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"AtomicInteger"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"wrappingDecrement(by:ordering:)","url":"\/documentation\/atomics\/managedatomic\/wrappingdecrement(by:ordering:)","type":"topic","abstract":[{"text":"Perform an atomic wrapping decrement operation applying the","type":"text"},{"text":" ","type":"text"},{"text":"specified memory ordering.","type":"text"}],"identifier":"doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/wrappingDecrement(by:ordering:)","kind":"symbol"},"doc://Atomics/documentation/Atomics/ManagedAtomic/wrappingDecrementThenLoad(by:ordering:)":{"url":"\/documentation\/atomics\/managedatomic\/wrappingdecrementthenload(by:ordering:)","abstract":[{"text":"Perform an atomic wrapping subtract operation and return the new value, applying","type":"text"},{"text":" ","type":"text"},{"text":"the specified memory ordering.","type":"text"}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"wrappingDecrementThenLoad"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"ordering","kind":"externalParam"},{"kind":"text","text":": "},{"text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Value"}],"identifier":"doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/wrappingDecrementThenLoad(by:ordering:)","title":"wrappingDecrementThenLoad(by:ordering:)","conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"AtomicInteger"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"type":"topic","role":"symbol"},"doc://Atomics/documentation/Atomics/ManagedAtomic/weakCompareExchange(expected:desired:successOrdering:failureOrdering:)":{"abstract":[{"type":"text","text":"Perform an atomic weak compare and exchange operation on the current"},{"type":"text","text":" "},{"text":"value, applying the specified success\/failure memory orderings. This","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"compare-exchange variant is allowed to spuriously fail; it is designed to"},{"text":" ","type":"text"},{"text":"be called in a loop until it indicates a successful exchange has happened.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"weakCompareExchange","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"expected"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"text":"desired","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"successOrdering"},{"kind":"text","text":": "},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":", ","kind":"text"},{"text":"failureOrdering","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AtomicLoadOrdering","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV"},{"text":") -> (exchanged","kind":"text"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":", original","kind":"text"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":")"}],"title":"weakCompareExchange(expected:desired:successOrdering:failureOrdering:)","conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AtomicValue"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"code":"Value.AtomicRepresentation.Value","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"type":"topic","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/weakCompareExchange(expected:desired:successOrdering:failureOrdering:)","role":"symbol","url":"\/documentation\/atomics\/managedatomic\/weakcompareexchange(expected:desired:successordering:failureordering:)","kind":"symbol"},"doc://Atomics/documentation/Atomics/ManagedAtomic/loadThenLogicalAnd(with:ordering:)":{"kind":"symbol","type":"topic","title":"loadThenLogicalAnd(with:ordering:)","conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Bool","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"url":"\/documentation\/atomics\/managedatomic\/loadthenlogicaland(with:ordering:)","abstract":[{"text":"Perform an atomic logical AND operation and return the original value, applying","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the specified memory ordering."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"loadThenLogicalAnd","kind":"identifier"},{"kind":"text","text":"("},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier","text":"AtomicUpdateOrdering"},{"kind":"text","text":") -> "},{"text":"Value","kind":"typeIdentifier"}],"identifier":"doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/loadThenLogicalAnd(with:ordering:)","role":"symbol"},"doc://Atomics/documentation/Atomics/ManagedAtomic/logicalXorThenLoad(with:ordering:)":{"kind":"symbol","type":"topic","title":"logicalXorThenLoad(with:ordering:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Bool","type":"codeVoice"},{"text":".","type":"text"}]},"url":"\/documentation\/atomics\/managedatomic\/logicalxorthenload(with:ordering:)","abstract":[{"text":"Perform an atomic logical XOR operation and return the original value, applying","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the specified memory ordering."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"logicalXorThenLoad","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ordering"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"kind":"text","text":") -> "},{"text":"Value","kind":"typeIdentifier"}],"identifier":"doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/logicalXorThenLoad(with:ordering:)","role":"symbol"},"doc://Atomics/documentation/Atomics/ManagedAtomic/loadThenLogicalXor(with:ordering:)":{"abstract":[{"type":"text","text":"Perform an atomic logical XOR operation and return the original value, applying"},{"type":"text","text":" "},{"text":"the specified memory ordering.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/loadThenLogicalXor(with:ordering:)","url":"\/documentation\/atomics\/managedatomic\/loadthenlogicalxor(with:ordering:)","type":"topic","conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Bool"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"loadThenLogicalXor(with:ordering:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"loadThenLogicalXor","kind":"identifier"},{"kind":"text","text":"("},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}]},"doc://Atomics/documentation/Atomics/UnsafeAtomicLazyReference":{"identifier":"doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference","title":"UnsafeAtomicLazyReference","url":"\/documentation\/atomics\/unsafeatomiclazyreference","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UnsafeAtomicLazyReference","kind":"identifier"}],"navigatorTitle":[{"text":"UnsafeAtomicLazyReference","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"An unsafe reference type holding a lazily initializable atomic","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"strong reference, requiring manual memory management of the"},{"text":" ","type":"text"},{"type":"text","text":"underlying storage representation."}],"type":"topic"},"doc://Atomics/documentation/Atomics/ManagedAtomic/load(ordering:)":{"abstract":[{"type":"text","text":"Atomically loads and returns the current value, applying the specified"},{"type":"text","text":" "},{"type":"text","text":"memory ordering."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"load","kind":"identifier"},{"kind":"text","text":"("},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","text":"AtomicLoadOrdering"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"title":"load(ordering:)","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AtomicValue"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"code":"Value.AtomicRepresentation.Value","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"type":"topic","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/load(ordering:)","role":"symbol","url":"\/documentation\/atomics\/managedatomic\/load(ordering:)","kind":"symbol"},"doc://Atomics/documentation/Atomics":{"type":"topic","url":"\/documentation\/atomics","kind":"symbol","abstract":[{"type":"text","text":"An atomics library for Swift."}],"title":"Atomics","role":"collection","identifier":"doc:\/\/Atomics\/documentation\/Atomics"},"doc://Atomics/documentation/Atomics/ManagedAtomic/init(_:)":{"url":"\/documentation\/atomics\/managedatomic\/init(_:)","type":"topic","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/init(_:)","title":"init(_:)","kind":"symbol","abstract":[{"type":"text","text":"Initialize a new managed atomic instance holding the specified initial"},{"text":" ","type":"text"},{"text":"value.","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Value"},{"text":")","kind":"text"}],"role":"symbol"},"doc://Atomics/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/Atomics\/s8SendableP","title":"Swift.Sendable"},"doc://Atomics/documentation/Atomics/UnsafeAtomic":{"url":"\/documentation\/atomics\/unsafeatomic","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic","abstract":[{"type":"text","text":"An unsafe reference type holding an atomic value, requiring manual memory"},{"text":" ","type":"text"},{"type":"text","text":"management of the underlying storage representation."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnsafeAtomic"}],"type":"topic","title":"UnsafeAtomic","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"UnsafeAtomic"}]}}}