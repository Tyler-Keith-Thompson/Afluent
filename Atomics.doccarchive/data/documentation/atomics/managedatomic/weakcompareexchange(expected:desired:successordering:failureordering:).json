{"kind":"symbol","seeAlsoSections":[{"generated":true,"title":"Atomic Operations","anchor":"Atomic-Operations","identifiers":["doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/load(ordering:)","doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/store(_:ordering:)","doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/exchange(_:ordering:)","doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/compareExchange(expected:desired:ordering:)","doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/compareExchange(expected:desired:successOrdering:failureOrdering:)","doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/weakCompareExchange(expected:desired:ordering:)"]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"weakCompareExchange"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"expected"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"desired"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"successOrdering"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier","text":"AtomicUpdateOrdering","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicUpdateOrdering"},{"kind":"text","text":", "},{"kind":"externalParam","text":"failureOrdering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AtomicLoadOrdering","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicLoadOrdering","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV"},{"kind":"text","text":") -> (exchanged"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":", original"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"text":")","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"The expected current value.","type":"text"}],"type":"paragraph"}],"name":"expected"},{"name":"desired","content":[{"inlineContent":[{"type":"text","text":"The desired new value."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"The memory ordering to apply if this","type":"text"},{"type":"text","text":" "},{"text":"operation performs the exchange.","type":"text"}],"type":"paragraph"}],"name":"successOrdering"},{"name":"failureOrdering","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The memory ordering to apply on this"},{"type":"text","text":" "},{"text":"operation does not perform the exchange.","type":"text"}]}]}]},{"kind":"content","content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"inlineContent":[{"text":"A tuple ","type":"text"},{"type":"codeVoice","code":"(exchanged, original)"},{"text":", where ","type":"text"},{"type":"codeVoice","code":"exchanged"},{"type":"text","text":" is true if"},{"text":" ","type":"text"},{"text":"the exchange was successful, and ","type":"text"},{"type":"codeVoice","code":"original"},{"type":"text","text":" is the original value."}],"type":"paragraph"}]},{"content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"inlineContent":[{"text":"This operation performs the following algorithm as a single atomic","type":"text"},{"type":"text","text":" "},{"type":"text","text":"transaction:"}],"type":"paragraph"},{"code":["atomic(self) { currentValue in","  let original = currentValue","  guard original == expected else { return (false, original) }","  currentValue = desired","  return (true, original)","}"],"syntax":null,"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"(In this weak form, transient conditions may cause the "},{"code":"original == expected","type":"codeVoice"},{"type":"text","text":" check to sometimes return false when the two values are in fact"},{"type":"text","text":" "},{"type":"text","text":"the same.)"}]},{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"ordering"},{"text":" argument specifies the memory ordering to use when the","type":"text"},{"text":" ","type":"text"},{"text":"operation manages to update the current value, while ","type":"text"},{"code":"failureOrdering","type":"codeVoice"},{"type":"text","text":" "},{"text":"will be used when the operation leaves the value intact.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/Atomics\/documentation\/Atomics","doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic"]]},"abstract":[{"type":"text","text":"Perform an atomic weak compare and exchange operation on the current"},{"text":" ","type":"text"},{"type":"text","text":"value, applying the specified success\/failure memory orderings. This"},{"text":" ","type":"text"},{"type":"text","text":"compare-exchange variant is allowed to spuriously fail; it is designed to"},{"type":"text","text":" "},{"text":"be called in a loop until it indicates a successful exchange has happened.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atomics\/managedatomic\/weakcompareexchange(expected:desired:successordering:failureordering:)"]}],"metadata":{"externalID":"s:7Atomics13ManagedAtomicC19weakCompareExchange8expected7desired15successOrdering07failureJ0Sb9exchanged_x8originaltx_xnAA0c6UpdateJ0VAA0c4LoadJ0VtF","modules":[{"name":"Atomics"}],"extendedModule":"Atomics","title":"weakCompareExchange(expected:desired:successOrdering:failureOrdering:)","role":"symbol","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"weakCompareExchange","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"expected"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"text":"desired","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"successOrdering"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"failureOrdering"},{"kind":"text","text":": "},{"text":"AtomicLoadOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV"},{"text":") -> (exchanged","kind":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":", original","kind":"text"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":")"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"AtomicValue"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Value"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Value.AtomicRepresentation.Value"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"remoteSource":{"fileName":"ManagedAtomic.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/.build\/checkouts\/swift-atomics\/Sources\/Atomics\/Types\/ManagedAtomic.swift#L253"},"roleHeading":"Instance Method"},"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/weakCompareExchange(expected:desired:successOrdering:failureOrdering:)"},"references":{"doc://Atomics/documentation/Atomics/ManagedAtomic":{"url":"\/documentation\/atomics\/managedatomic","abstract":[{"type":"text","text":"A reference type holding an atomic value, with automatic memory management."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ManagedAtomic"}],"identifier":"doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic","title":"ManagedAtomic","navigatorTitle":[{"kind":"identifier","text":"ManagedAtomic"}],"type":"topic","role":"symbol"},"doc://Atomics/documentation/Atomics/ManagedAtomic/weakCompareExchange(expected:desired:successOrdering:failureOrdering:)":{"abstract":[{"type":"text","text":"Perform an atomic weak compare and exchange operation on the current"},{"type":"text","text":" "},{"text":"value, applying the specified success\/failure memory orderings. This","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"compare-exchange variant is allowed to spuriously fail; it is designed to"},{"text":" ","type":"text"},{"text":"be called in a loop until it indicates a successful exchange has happened.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"weakCompareExchange","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"expected"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"text":"desired","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"successOrdering"},{"kind":"text","text":": "},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":", ","kind":"text"},{"text":"failureOrdering","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AtomicLoadOrdering","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV"},{"text":") -> (exchanged","kind":"text"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":", original","kind":"text"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":")"}],"title":"weakCompareExchange(expected:desired:successOrdering:failureOrdering:)","conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AtomicValue"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"code":"Value.AtomicRepresentation.Value","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"type":"topic","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/weakCompareExchange(expected:desired:successOrdering:failureOrdering:)","role":"symbol","url":"\/documentation\/atomics\/managedatomic\/weakcompareexchange(expected:desired:successordering:failureordering:)","kind":"symbol"},"doc://Atomics/documentation/Atomics/AtomicLoadOrdering":{"type":"topic","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicLoadOrdering","title":"AtomicLoadOrdering","kind":"symbol","abstract":[{"text":"Specifies the memory ordering semantics of an atomic load operation.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"AtomicLoadOrdering","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AtomicLoadOrdering","kind":"identifier"}],"url":"\/documentation\/atomics\/atomicloadordering"},"doc://Atomics/documentation/Atomics/ManagedAtomic/store(_:ordering:)":{"role":"symbol","title":"store(_:ordering:)","kind":"symbol","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/store(_:ordering:)","url":"\/documentation\/atomics\/managedatomic\/store(_:ordering:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"AtomicValue","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Value.AtomicRepresentation.Value"},{"type":"text","text":"."}]},"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"store","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AtomicStoreOrdering","preciseIdentifier":"s:7Atomics19AtomicStoreOrderingV"},{"text":")","kind":"text"}],"abstract":[{"text":"Atomically sets the current value to ","type":"text"},{"code":"desired","type":"codeVoice"},{"type":"text","text":", applying the specified"},{"type":"text","text":" "},{"type":"text","text":"memory ordering."}],"type":"topic"},"doc://Atomics/documentation/Atomics/ManagedAtomic/load(ordering:)":{"abstract":[{"type":"text","text":"Atomically loads and returns the current value, applying the specified"},{"type":"text","text":" "},{"type":"text","text":"memory ordering."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"load","kind":"identifier"},{"kind":"text","text":"("},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","text":"AtomicLoadOrdering"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"title":"load(ordering:)","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AtomicValue"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"code":"Value.AtomicRepresentation.Value","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"type":"topic","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/load(ordering:)","role":"symbol","url":"\/documentation\/atomics\/managedatomic\/load(ordering:)","kind":"symbol"},"doc://Atomics/documentation/Atomics/AtomicUpdateOrdering":{"title":"AtomicUpdateOrdering","abstract":[{"text":"Specifies the memory ordering semantics of an atomic read-modify-write","type":"text"},{"type":"text","text":" "},{"type":"text","text":"operation."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AtomicUpdateOrdering","kind":"identifier"}],"navigatorTitle":[{"text":"AtomicUpdateOrdering","kind":"identifier"}],"type":"topic","url":"\/documentation\/atomics\/atomicupdateordering","role":"symbol","kind":"symbol","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicUpdateOrdering"},"doc://Atomics/documentation/Atomics/ManagedAtomic/weakCompareExchange(expected:desired:ordering:)":{"role":"symbol","title":"weakCompareExchange(expected:desired:ordering:)","kind":"symbol","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/weakCompareExchange(expected:desired:ordering:)","url":"\/documentation\/atomics\/managedatomic\/weakcompareexchange(expected:desired:ordering:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"code":"AtomicValue","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Value","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Value.AtomicRepresentation.Value","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"weakCompareExchange"},{"text":"(","kind":"text"},{"text":"expected","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":", ","kind":"text"},{"text":"desired","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"ordering"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering","kind":"typeIdentifier"},{"kind":"text","text":") -> (exchanged"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":", original","kind":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"text":")","kind":"text"}],"abstract":[{"text":"Perform an atomic weak compare and exchange operation on the current","type":"text"},{"type":"text","text":" "},{"type":"text","text":"value, applying the memory ordering. This compare-exchange variant is"},{"text":" ","type":"text"},{"type":"text","text":"allowed to spuriously fail; it is designed to be called in a loop until"},{"type":"text","text":" "},{"type":"text","text":"it indicates a successful exchange has happened."}],"type":"topic"},"doc://Atomics/documentation/Atomics/ManagedAtomic/compareExchange(expected:desired:ordering:)":{"abstract":[{"text":"Perform an atomic compare and exchange operation on the current value,","type":"text"},{"text":" ","type":"text"},{"text":"applying the specified memory ordering.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"compareExchange"},{"kind":"text","text":"("},{"kind":"externalParam","text":"expected"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"desired"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier"},{"text":") -> (exchanged","kind":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":", original","kind":"text"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":")","kind":"text"}],"title":"compareExchange(expected:desired:ordering:)","conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"code":"AtomicValue","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Value","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Value.AtomicRepresentation.Value"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"type":"topic","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/compareExchange(expected:desired:ordering:)","role":"symbol","url":"\/documentation\/atomics\/managedatomic\/compareexchange(expected:desired:ordering:)","kind":"symbol"},"doc://Atomics/documentation/Atomics":{"type":"topic","url":"\/documentation\/atomics","kind":"symbol","abstract":[{"type":"text","text":"An atomics library for Swift."}],"title":"Atomics","role":"collection","identifier":"doc:\/\/Atomics\/documentation\/Atomics"},"doc://Atomics/documentation/Atomics/ManagedAtomic/exchange(_:ordering:)":{"role":"symbol","title":"exchange(_:ordering:)","kind":"symbol","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/exchange(_:ordering:)","url":"\/documentation\/atomics\/managedatomic\/exchange(_:ordering:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"code":"AtomicValue","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"code":"Value.AtomicRepresentation.Value","type":"codeVoice"},{"type":"text","text":"."}]},"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"exchange","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"kind":"text","text":": "},{"text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Value"}],"abstract":[{"text":"Atomically sets the current value to ","type":"text"},{"type":"codeVoice","code":"desired"},{"text":" and returns the original","type":"text"},{"type":"text","text":" "},{"type":"text","text":"value, applying the specified memory ordering."}],"type":"topic"},"doc://Atomics/documentation/Atomics/ManagedAtomic/compareExchange(expected:desired:successOrdering:failureOrdering:)":{"abstract":[{"type":"text","text":"Perform an atomic compare and exchange operation on the current value,"},{"type":"text","text":" "},{"text":"applying the specified success\/failure memory orderings.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"compareExchange"},{"text":"(","kind":"text"},{"text":"expected","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"desired"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"successOrdering"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"failureOrdering"},{"kind":"text","text":": "},{"text":"AtomicLoadOrdering","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","kind":"typeIdentifier"},{"text":") -> (exchanged","kind":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", original"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":")"}],"title":"compareExchange(expected:desired:successOrdering:failureOrdering:)","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"AtomicValue","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Value","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Value.AtomicRepresentation.Value"},{"type":"text","text":"."}]},"type":"topic","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic\/compareExchange(expected:desired:successOrdering:failureOrdering:)","role":"symbol","url":"\/documentation\/atomics\/managedatomic\/compareexchange(expected:desired:successordering:failureordering:)","kind":"symbol"}}}