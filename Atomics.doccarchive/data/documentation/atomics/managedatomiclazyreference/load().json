{"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"load","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"Instance","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"The load operation is performed with the memory ordering"},{"type":"text","text":" "},{"code":"AtomicLoadOrdering.acquiring","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]}],"seeAlsoSections":[{"anchor":"Atomic-Operations","identifiers":["doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomicLazyReference\/storeIfNilThenLoad(_:)"],"generated":true,"title":"Atomic Operations"}],"metadata":{"role":"symbol","symbolKind":"method","remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/.build\/checkouts\/swift-atomics\/Sources\/Atomics\/Types\/ManagedAtomicLazyReference.swift#L99","fileName":"ManagedAtomicLazyReference.swift"},"modules":[{"name":"Atomics"}],"extendedModule":"Atomics","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"load","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"Instance"},{"text":"?","kind":"text"}],"externalID":"s:7Atomics26ManagedAtomicLazyReferenceC4loadxSgyF","title":"load()"},"hierarchy":{"paths":[["doc:\/\/Atomics\/documentation\/Atomics","doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomicLazyReference"]]},"sections":[],"identifier":{"url":"doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomicLazyReference\/load()","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/atomics\/managedatomiclazyreference\/load()"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","abstract":[{"type":"text","text":"Atomically loads and returns the current value of this reference."}],"references":{"doc://Atomics/documentation/Atomics/ManagedAtomicLazyReference":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomicLazyReference","abstract":[{"text":"A reference type holding a lazily initializable atomic","type":"text"},{"type":"text","text":" "},{"type":"text","text":"strong reference, with automatic memory management."}],"url":"\/documentation\/atomics\/managedatomiclazyreference","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"ManagedAtomicLazyReference","kind":"identifier"}],"navigatorTitle":[{"text":"ManagedAtomicLazyReference","kind":"identifier"}],"title":"ManagedAtomicLazyReference"},"doc://Atomics/documentation/Atomics/ManagedAtomicLazyReference/load()":{"title":"load()","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"load","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"Instance"},{"text":"?","kind":"text"}],"url":"\/documentation\/atomics\/managedatomiclazyreference\/load()","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomicLazyReference\/load()","kind":"symbol","abstract":[{"type":"text","text":"Atomically loads and returns the current value of this reference."}]},"doc://Atomics/documentation/Atomics":{"type":"topic","url":"\/documentation\/atomics","kind":"symbol","abstract":[{"type":"text","text":"An atomics library for Swift."}],"title":"Atomics","role":"collection","identifier":"doc:\/\/Atomics\/documentation\/Atomics"},"doc://Atomics/documentation/Atomics/ManagedAtomicLazyReference/storeIfNilThenLoad(_:)":{"role":"symbol","kind":"symbol","url":"\/documentation\/atomics\/managedatomiclazyreference\/storeifnilthenload(_:)","abstract":[{"type":"text","text":"Atomically initializes this reference if its current value is nil, then"},{"text":" ","type":"text"},{"type":"text","text":"returns the initialized value. If this reference is already initialized,"},{"text":" ","type":"text"},{"type":"text","text":"then "},{"code":"storeIfNilThenLoad(_:)","type":"codeVoice"},{"type":"text","text":" discards its supplied argument and returns"},{"type":"text","text":" "},{"text":"the current value without updating it.","type":"text"}],"identifier":"doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomicLazyReference\/storeIfNilThenLoad(_:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"storeIfNilThenLoad"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Instance"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Instance"}],"title":"storeIfNilThenLoad(_:)"}}}