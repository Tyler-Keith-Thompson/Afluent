{"hierarchy":{"paths":[["doc:\/\/Atomics\/documentation\/Atomics"]]},"abstract":[{"text":"An unsafe reference type holding an atomic value, requiring manual memory","type":"text"},{"text":" ","type":"text"},{"text":"management of the underlying storage representation.","type":"text"}],"relationshipsSections":[{"type":"conformsTo","kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/Atomics\/s15BitwiseCopyableP","doc:\/\/Atomics\/s8SendableP"]}],"kind":"symbol","sections":[],"metadata":{"title":"UnsafeAtomic","symbolKind":"struct","role":"symbol","navigatorTitle":[{"text":"UnsafeAtomic","kind":"identifier"}],"roleHeading":"Structure","externalID":"s:7Atomics12UnsafeAtomicV","modules":[{"name":"Atomics"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnsafeAtomic","kind":"identifier"}],"remoteSource":{"fileName":"UnsafeAtomic.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/.build\/checkouts\/swift-atomics\/Sources\/Atomics\/Types\/UnsafeAtomic.swift#L16"}},"schemaVersion":{"patch":0,"major":0,"minor":3},"topicSections":[{"title":"Storage Representation","identifiers":["doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/Storage"],"anchor":"Storage-Representation"},{"title":"Initializers","identifiers":["doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/init(at:)"],"anchor":"Initializers"},{"identifiers":["doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/create(_:)","doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/destroy()"],"anchor":"Shorthand-Methods-for-Dynamically-Allocating-Storage","title":"Shorthand Methods for Dynamically Allocating Storage"},{"identifiers":["doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/load(ordering:)","doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/store(_:ordering:)","doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/exchange(_:ordering:)","doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/compareExchange(expected:desired:ordering:)","doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/compareExchange(expected:desired:successOrdering:failureOrdering:)","doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/weakCompareExchange(expected:desired:ordering:)","doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/weakCompareExchange(expected:desired:successOrdering:failureOrdering:)"],"title":"Atomic Operations","anchor":"Atomic-Operations"},{"title":"Atomic Integer Operations","anchor":"Atomic-Integer-Operations","identifiers":["doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/wrappingIncrement(by:ordering:)","doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/wrappingDecrement(by:ordering:)","doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/loadThenWrappingIncrement(by:ordering:)","doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/loadThenWrappingDecrement(by:ordering:)","doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/loadThenBitwiseOr(with:ordering:)","doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/loadThenBitwiseAnd(with:ordering:)","doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/loadThenBitwiseXor(with:ordering:)","doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/wrappingIncrementThenLoad(by:ordering:)","doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/wrappingDecrementThenLoad(by:ordering:)","doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/bitwiseOrThenLoad(with:ordering:)","doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/bitwiseAndThenLoad(with:ordering:)","doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/bitwiseXorThenLoad(with:ordering:)"]},{"anchor":"Atomic-Boolean-Operations","identifiers":["doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/logicalOrThenLoad(with:ordering:)","doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/logicalAndThenLoad(with:ordering:)","doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/logicalXorThenLoad(with:ordering:)","doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/loadThenLogicalOr(with:ordering:)","doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/loadThenLogicalAnd(with:ordering:)","doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/loadThenLogicalXor(with:ordering:)"],"title":"Atomic Boolean Operations"}],"identifier":{"url":"doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic","interfaceLanguage":"swift"},"seeAlsoSections":[{"anchor":"Atomic-Container-Types","title":"Atomic Container Types","identifiers":["doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic","doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomicLazyReference","doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference"],"generated":true}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"@frozen","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UnsafeAtomic","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Value"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"AtomicValue","preciseIdentifier":"s:7Atomics11AtomicValueP","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicValue"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":" == "},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicValue\/AtomicRepresentation","preciseIdentifier":"s:7Atomics11AtomicValueP0B14RepresentationQa","text":"AtomicRepresentation"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Atomics13AtomicStorageP5ValueQa","kind":"typeIdentifier","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicStorage\/Value","text":"Value"}]}]}],"variants":[{"paths":["\/documentation\/atomics\/unsafeatomic"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Atomics/s15BitwiseCopyableP":{"type":"unresolvable","identifier":"doc:\/\/Atomics\/s15BitwiseCopyableP","title":"Swift.BitwiseCopyable"},"doc://Atomics/documentation/Atomics/ManagedAtomic":{"url":"\/documentation\/atomics\/managedatomic","abstract":[{"type":"text","text":"A reference type holding an atomic value, with automatic memory management."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ManagedAtomic"}],"identifier":"doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomic","title":"ManagedAtomic","navigatorTitle":[{"kind":"identifier","text":"ManagedAtomic"}],"type":"topic","role":"symbol"},"doc://Atomics/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/Atomics\/s8SendableP","title":"Swift.Sendable"},"doc://Atomics/documentation/Atomics/UnsafeAtomic/wrappingIncrementThenLoad(by:ordering:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"AtomicInteger"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"abstract":[{"type":"text","text":"Perform an atomic wrapping add operation and return the new value, applying"},{"type":"text","text":" "},{"text":"the specified memory ordering.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"wrappingIncrementThenLoad"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ordering"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Value"}],"type":"topic","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/wrappingIncrementThenLoad(by:ordering:)","url":"\/documentation\/atomics\/unsafeatomic\/wrappingincrementthenload(by:ordering:)","title":"wrappingIncrementThenLoad(by:ordering:)","kind":"symbol","role":"symbol"},"doc://Atomics/documentation/Atomics/UnsafeAtomic/Storage":{"navigatorTitle":[{"kind":"identifier","text":"Storage"}],"fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Storage"}],"abstract":[],"type":"topic","kind":"symbol","url":"\/documentation\/atomics\/unsafeatomic\/storage","role":"symbol","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/Storage","title":"UnsafeAtomic.Storage"},"doc://Atomics/documentation/Atomics/ManagedAtomicLazyReference":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/ManagedAtomicLazyReference","abstract":[{"text":"A reference type holding a lazily initializable atomic","type":"text"},{"type":"text","text":" "},{"type":"text","text":"strong reference, with automatic memory management."}],"url":"\/documentation\/atomics\/managedatomiclazyreference","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"ManagedAtomicLazyReference","kind":"identifier"}],"navigatorTitle":[{"text":"ManagedAtomicLazyReference","kind":"identifier"}],"title":"ManagedAtomicLazyReference"},"doc://Atomics/documentation/Atomics/UnsafeAtomic/destroy()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"destroy"},{"kind":"text","text":"() -> "},{"text":"Value","kind":"typeIdentifier"}],"title":"destroy()","url":"\/documentation\/atomics\/unsafeatomic\/destroy()","type":"topic","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/destroy()","role":"symbol","abstract":[{"type":"text","text":"Disposes of the current value of the storage location corresponding to"},{"type":"text","text":" "},{"type":"text","text":"this unsafe atomic value, then deinitializes and deallocates the storage."}],"kind":"symbol"},"doc://Atomics/documentation/Atomics/UnsafeAtomic/store(_:ordering:)":{"abstract":[{"type":"text","text":"Atomically sets the current value to "},{"type":"codeVoice","code":"desired"},{"text":", applying the specified","type":"text"},{"type":"text","text":" "},{"text":"memory ordering.","type":"text"}],"title":"store(_:ordering:)","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/store(_:ordering:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"store","kind":"identifier"},{"kind":"text","text":"("},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"text":"AtomicStoreOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics19AtomicStoreOrderingV"},{"kind":"text","text":")"}],"kind":"symbol","type":"topic","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"AtomicValue"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Value.AtomicRepresentation.Value"},{"type":"text","text":"."}]},"url":"\/documentation\/atomics\/unsafeatomic\/store(_:ordering:)","role":"symbol"},"doc://Atomics/documentation/Atomics/AtomicValue":{"type":"topic","url":"\/documentation\/atomics\/atomicvalue","kind":"symbol","abstract":[{"type":"text","text":"A type that supports atomic operations through a separate atomic storage"},{"type":"text","text":" "},{"text":"representation.","type":"text"}],"title":"AtomicValue","navigatorTitle":[{"kind":"identifier","text":"AtomicValue"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"AtomicValue","kind":"identifier"}],"identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicValue"},"doc://Atomics/documentation/Atomics/UnsafeAtomic/load(ordering:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"code":"AtomicValue","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Value","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Value.AtomicRepresentation.Value","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"role":"symbol","url":"\/documentation\/atomics\/unsafeatomic\/load(ordering:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"load","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","kind":"typeIdentifier","text":"AtomicLoadOrdering"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"kind":"symbol","type":"topic","title":"load(ordering:)","abstract":[{"type":"text","text":"Atomically loads and returns the current value, applying the specified"},{"text":" ","type":"text"},{"text":"memory ordering.","type":"text"}],"identifier":"doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/load(ordering:)"},"doc://Atomics/documentation/Atomics/UnsafeAtomic/logicalOrThenLoad(with:ordering:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"logicalOrThenLoad"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"kind":"text","text":") -> "},{"text":"Value","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Perform an atomic logical OR operation and return the original value, applying"},{"type":"text","text":" "},{"type":"text","text":"the specified memory ordering."}],"type":"topic","kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Bool","type":"codeVoice"},{"text":".","type":"text"}]},"url":"\/documentation\/atomics\/unsafeatomic\/logicalorthenload(with:ordering:)","role":"symbol","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/logicalOrThenLoad(with:ordering:)","title":"logicalOrThenLoad(with:ordering:)"},"doc://Atomics/documentation/Atomics/UnsafeAtomic/exchange(_:ordering:)":{"role":"symbol","title":"exchange(_:ordering:)","kind":"symbol","url":"\/documentation\/atomics\/unsafeatomic\/exchange(_:ordering:)","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/exchange(_:ordering:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AtomicValue"},{"type":"text","text":" and "},{"code":"Value","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Value.AtomicRepresentation.Value"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"exchange"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ordering"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering"},{"kind":"text","text":") -> "},{"text":"Value","kind":"typeIdentifier"}],"abstract":[{"text":"Atomically sets the current value to ","type":"text"},{"type":"codeVoice","code":"desired"},{"type":"text","text":" and returns the original"},{"type":"text","text":" "},{"type":"text","text":"value, applying the specified memory ordering."}],"type":"topic"},"doc://Atomics/documentation/Atomics/UnsafeAtomic/bitwiseXorThenLoad(with:ordering:)":{"url":"\/documentation\/atomics\/unsafeatomic\/bitwisexorthenload(with:ordering:)","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/bitwiseXorThenLoad(with:ordering:)","abstract":[{"text":"Perform an atomic bitwise XOR operation and return the new value, applying","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the specified memory ordering."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"bitwiseXorThenLoad","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ordering"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"kind":"text","text":") -> "},{"text":"Value","kind":"typeIdentifier"}],"type":"topic","title":"bitwiseXorThenLoad(with:ordering:)","kind":"symbol","role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"AtomicInteger","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"doc://Atomics/documentation/Atomics/UnsafeAtomic/logicalXorThenLoad(with:ordering:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"logicalXorThenLoad"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"ordering"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"title":"logicalXorThenLoad(with:ordering:)","url":"\/documentation\/atomics\/unsafeatomic\/logicalxorthenload(with:ordering:)","type":"topic","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Bool"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"identifier":"doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/logicalXorThenLoad(with:ordering:)","role":"symbol","abstract":[{"text":"Perform an atomic logical XOR operation and return the original value, applying","type":"text"},{"text":" ","type":"text"},{"text":"the specified memory ordering.","type":"text"}],"kind":"symbol"},"doc://Atomics/documentation/Atomics/UnsafeAtomic/compareExchange(expected:desired:ordering:)":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"AtomicValue"},{"text":" and ","type":"text"},{"code":"Value","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Value.AtomicRepresentation.Value","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","url":"\/documentation\/atomics\/unsafeatomic\/compareexchange(expected:desired:ordering:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"compareExchange","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"expected"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"desired","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":") -> (exchanged","kind":"text"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", original","kind":"text"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":")"}],"kind":"symbol","type":"topic","title":"compareExchange(expected:desired:ordering:)","abstract":[{"type":"text","text":"Perform an atomic compare and exchange operation on the current value,"},{"text":" ","type":"text"},{"text":"applying the specified memory ordering.","type":"text"}],"identifier":"doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/compareExchange(expected:desired:ordering:)"},"doc://Atomics/documentation/Atomics/UnsafeAtomic/loadThenLogicalOr(with:ordering:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"loadThenLogicalOr","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"kind":"text","text":") -> "},{"text":"Value","kind":"typeIdentifier"}],"abstract":[{"text":"Perform an atomic logical OR operation and return the original value, applying","type":"text"},{"text":" ","type":"text"},{"text":"the specified memory ordering.","type":"text"}],"type":"topic","kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"code":"Bool","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/atomics\/unsafeatomic\/loadthenlogicalor(with:ordering:)","role":"symbol","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/loadThenLogicalOr(with:ordering:)","title":"loadThenLogicalOr(with:ordering:)"},"doc://Atomics/documentation/Atomics/UnsafeAtomic/wrappingDecrement(by:ordering:)":{"conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AtomicInteger"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"abstract":[{"text":"Perform an atomic wrapping decrement operation applying the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"specified memory ordering."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"wrappingDecrement"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"by"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"ordering"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering"},{"kind":"text","text":")"}],"type":"topic","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/wrappingDecrement(by:ordering:)","url":"\/documentation\/atomics\/unsafeatomic\/wrappingdecrement(by:ordering:)","title":"wrappingDecrement(by:ordering:)","kind":"symbol","role":"symbol"},"doc://Atomics/documentation/Atomics/UnsafeAtomic/create(_:)":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"create","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":") -> ","kind":"text"},{"text":"UnsafeAtomic","preciseIdentifier":"s:7Atomics12UnsafeAtomicV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"create(_:)","url":"\/documentation\/atomics\/unsafeatomic\/create(_:)","type":"topic","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/create(_:)","role":"symbol","abstract":[{"type":"text","text":"Create a new "},{"code":"UnsafeAtomic","type":"codeVoice"},{"type":"text","text":" value with the supplied initial value by"},{"text":" ","type":"text"},{"type":"text","text":"dynamically allocating storage for it."}],"kind":"symbol"},"doc://Atomics/documentation/Atomics/UnsafeAtomic/loadThenBitwiseXor(with:ordering:)":{"url":"\/documentation\/atomics\/unsafeatomic\/loadthenbitwisexor(with:ordering:)","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/loadThenBitwiseXor(with:ordering:)","abstract":[{"type":"text","text":"Perform an atomic bitwise XOR operation and return the original value, applying"},{"type":"text","text":" "},{"text":"the specified memory ordering.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"loadThenBitwiseXor"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"ordering"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier","text":"AtomicUpdateOrdering"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"}],"type":"topic","title":"loadThenBitwiseXor(with:ordering:)","kind":"symbol","role":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"code":"AtomicInteger","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]}},"doc://Atomics/documentation/Atomics/UnsafeAtomic/weakCompareExchange(expected:desired:successOrdering:failureOrdering:)":{"role":"symbol","title":"weakCompareExchange(expected:desired:successOrdering:failureOrdering:)","kind":"symbol","url":"\/documentation\/atomics\/unsafeatomic\/weakcompareexchange(expected:desired:successordering:failureordering:)","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/weakCompareExchange(expected:desired:successOrdering:failureOrdering:)","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"code":"AtomicValue","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Value"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Value.AtomicRepresentation.Value"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"weakCompareExchange","kind":"identifier"},{"text":"(","kind":"text"},{"text":"expected","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"desired"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":", ","kind":"text"},{"text":"successOrdering","kind":"externalParam"},{"kind":"text","text":": "},{"text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"failureOrdering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicLoadOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV"},{"kind":"text","text":") -> (exchanged"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":", original"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"text":"Perform an atomic weak compare and exchange operation on the current","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"value, applying the specified success\/failure memory orderings. This"},{"text":" ","type":"text"},{"type":"text","text":"compare-exchange variant is allowed to spuriously fail; it is designed to"},{"type":"text","text":" "},{"type":"text","text":"be called in a loop until it indicates a successful exchange has happened."}],"type":"topic"},"doc://Atomics/documentation/Atomics/AtomicStorage/Value":{"identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicStorage\/Value","abstract":[{"type":"text","text":"The type whose values this storage representation is representing."}],"url":"\/documentation\/atomics\/atomicstorage\/value","kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Value"}],"title":"Value","required":true},"doc://Atomics/documentation/Atomics/UnsafeAtomic/weakCompareExchange(expected:desired:ordering:)":{"abstract":[{"type":"text","text":"Perform an atomic weak compare and exchange operation on the current"},{"type":"text","text":" "},{"type":"text","text":"value, applying the memory ordering. This compare-exchange variant is"},{"type":"text","text":" "},{"text":"allowed to spuriously fail; it is designed to be called in a loop until","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"it indicates a successful exchange has happened."}],"title":"weakCompareExchange(expected:desired:ordering:)","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/weakCompareExchange(expected:desired:ordering:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"weakCompareExchange"},{"kind":"text","text":"("},{"kind":"externalParam","text":"expected"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":", ","kind":"text"},{"text":"desired","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering","kind":"typeIdentifier"},{"text":") -> (exchanged","kind":"text"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", original","kind":"text"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":")"}],"kind":"symbol","type":"topic","conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AtomicValue"},{"type":"text","text":" and "},{"code":"Value","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Value.AtomicRepresentation.Value","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"url":"\/documentation\/atomics\/unsafeatomic\/weakcompareexchange(expected:desired:ordering:)","role":"symbol"},"doc://Atomics/documentation/Atomics/UnsafeAtomic/loadThenBitwiseOr(with:ordering:)":{"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"code":"AtomicInteger","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"abstract":[{"type":"text","text":"Perform an atomic bitwise OR operation and return the original value, applying"},{"type":"text","text":" "},{"type":"text","text":"the specified memory ordering."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"loadThenBitwiseOr","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ordering"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Value","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/loadThenBitwiseOr(with:ordering:)","url":"\/documentation\/atomics\/unsafeatomic\/loadthenbitwiseor(with:ordering:)","title":"loadThenBitwiseOr(with:ordering:)","kind":"symbol","role":"symbol"},"doc://Atomics/documentation/Atomics/UnsafeAtomic/loadThenLogicalXor(with:ordering:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"loadThenLogicalXor","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier","text":"AtomicUpdateOrdering"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Value"}],"abstract":[{"type":"text","text":"Perform an atomic logical XOR operation and return the original value, applying"},{"text":" ","type":"text"},{"type":"text","text":"the specified memory ordering."}],"type":"topic","kind":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Bool"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"url":"\/documentation\/atomics\/unsafeatomic\/loadthenlogicalxor(with:ordering:)","role":"symbol","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/loadThenLogicalXor(with:ordering:)","title":"loadThenLogicalXor(with:ordering:)"},"doc://Atomics/documentation/Atomics/UnsafeAtomic/bitwiseAndThenLoad(with:ordering:)":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"AtomicInteger"},{"type":"text","text":"."}]},"abstract":[{"text":"Perform an atomic bitwise AND operation and return the new value, applying","type":"text"},{"text":" ","type":"text"},{"text":"the specified memory ordering.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"bitwiseAndThenLoad"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"ordering"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/bitwiseAndThenLoad(with:ordering:)","url":"\/documentation\/atomics\/unsafeatomic\/bitwiseandthenload(with:ordering:)","title":"bitwiseAndThenLoad(with:ordering:)","kind":"symbol","role":"symbol"},"doc://Atomics/documentation/Atomics/UnsafeAtomic/wrappingDecrementThenLoad(by:ordering:)":{"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AtomicInteger"},{"type":"text","text":"."}]},"abstract":[{"type":"text","text":"Perform an atomic wrapping subtract operation and return the new value, applying"},{"type":"text","text":" "},{"type":"text","text":"the specified memory ordering."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"wrappingDecrementThenLoad","kind":"identifier"},{"kind":"text","text":"("},{"text":"by","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"ordering","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier","text":"AtomicUpdateOrdering"},{"kind":"text","text":") -> "},{"text":"Value","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/wrappingDecrementThenLoad(by:ordering:)","url":"\/documentation\/atomics\/unsafeatomic\/wrappingdecrementthenload(by:ordering:)","title":"wrappingDecrementThenLoad(by:ordering:)","kind":"symbol","role":"symbol"},"doc://Atomics/documentation/Atomics/UnsafeAtomic/loadThenWrappingIncrement(by:ordering:)":{"url":"\/documentation\/atomics\/unsafeatomic\/loadthenwrappingincrement(by:ordering:)","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/loadThenWrappingIncrement(by:ordering:)","abstract":[{"text":"Perform an atomic wrapping add operation and return the original value, applying","type":"text"},{"text":" ","type":"text"},{"text":"the specified memory ordering.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"loadThenWrappingIncrement"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"by"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"ordering"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"}],"type":"topic","title":"loadThenWrappingIncrement(by:ordering:)","kind":"symbol","role":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AtomicInteger"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}},"doc://Atomics/documentation/Atomics/UnsafeAtomicLazyReference":{"identifier":"doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference","title":"UnsafeAtomicLazyReference","url":"\/documentation\/atomics\/unsafeatomiclazyreference","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UnsafeAtomicLazyReference","kind":"identifier"}],"navigatorTitle":[{"text":"UnsafeAtomicLazyReference","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"An unsafe reference type holding a lazily initializable atomic","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"strong reference, requiring manual memory management of the"},{"text":" ","type":"text"},{"type":"text","text":"underlying storage representation."}],"type":"topic"},"doc://Atomics/documentation/Atomics/UnsafeAtomic/wrappingIncrement(by:ordering:)":{"url":"\/documentation\/atomics\/unsafeatomic\/wrappingincrement(by:ordering:)","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/wrappingIncrement(by:ordering:)","abstract":[{"type":"text","text":"Perform an atomic wrapping increment operation applying the"},{"type":"text","text":" "},{"type":"text","text":"specified memory ordering."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"wrappingIncrement","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"by"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ordering"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering"},{"text":")","kind":"text"}],"type":"topic","title":"wrappingIncrement(by:ordering:)","kind":"symbol","role":"symbol","conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"AtomicInteger"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}},"doc://Atomics/documentation/Atomics/UnsafeAtomic/bitwiseOrThenLoad(with:ordering:)":{"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AtomicInteger"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"abstract":[{"type":"text","text":"Perform an atomic bitwise OR operation and return the new value, applying"},{"type":"text","text":" "},{"type":"text","text":"the specified memory ordering."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"bitwiseOrThenLoad"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier","text":"AtomicUpdateOrdering"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"}],"type":"topic","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/bitwiseOrThenLoad(with:ordering:)","url":"\/documentation\/atomics\/unsafeatomic\/bitwiseorthenload(with:ordering:)","title":"bitwiseOrThenLoad(with:ordering:)","kind":"symbol","role":"symbol"},"doc://Atomics/documentation/Atomics/UnsafeAtomic/compareExchange(expected:desired:successOrdering:failureOrdering:)":{"role":"symbol","title":"compareExchange(expected:desired:successOrdering:failureOrdering:)","kind":"symbol","url":"\/documentation\/atomics\/unsafeatomic\/compareexchange(expected:desired:successordering:failureordering:)","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/compareExchange(expected:desired:successOrdering:failureOrdering:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"AtomicValue"},{"text":" and ","type":"text"},{"code":"Value","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Value.AtomicRepresentation.Value","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"compareExchange"},{"kind":"text","text":"("},{"kind":"externalParam","text":"expected"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"desired","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"successOrdering","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"failureOrdering"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AtomicLoadOrdering","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV"},{"text":") -> (exchanged","kind":"text"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":", original","kind":"text"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"text":"Perform an atomic compare and exchange operation on the current value,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"applying the specified success\/failure memory orderings."}],"type":"topic"},"doc://Atomics/documentation/Atomics":{"type":"topic","url":"\/documentation\/atomics","kind":"symbol","abstract":[{"type":"text","text":"An atomics library for Swift."}],"title":"Atomics","role":"collection","identifier":"doc:\/\/Atomics\/documentation\/Atomics"},"doc://Atomics/documentation/Atomics/UnsafeAtomic/logicalAndThenLoad(with:ordering:)":{"identifier":"doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/logicalAndThenLoad(with:ordering:)","abstract":[{"type":"text","text":"Perform an atomic logical AND operation and return the original value, applying"},{"text":" ","type":"text"},{"text":"the specified memory ordering.","type":"text"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Bool"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"kind":"symbol","title":"logicalAndThenLoad(with:ordering:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"logicalAndThenLoad"},{"kind":"text","text":"("},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Value"}],"url":"\/documentation\/atomics\/unsafeatomic\/logicalandthenload(with:ordering:)","role":"symbol"},"doc://Atomics/documentation/Atomics/UnsafeAtomic/loadThenBitwiseAnd(with:ordering:)":{"url":"\/documentation\/atomics\/unsafeatomic\/loadthenbitwiseand(with:ordering:)","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/loadThenBitwiseAnd(with:ordering:)","abstract":[{"type":"text","text":"Perform an atomic bitwise AND operation and return the original value, applying"},{"type":"text","text":" "},{"text":"the specified memory ordering.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"loadThenBitwiseAnd"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"with"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier","text":"AtomicUpdateOrdering"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"type":"topic","title":"loadThenBitwiseAnd(with:ordering:)","kind":"symbol","role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"code":"AtomicInteger","type":"codeVoice"},{"type":"text","text":"."}]}},"doc://Atomics/documentation/Atomics/UnsafeAtomic/loadThenLogicalAnd(with:ordering:)":{"role":"symbol","title":"loadThenLogicalAnd(with:ordering:)","kind":"symbol","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/loadThenLogicalAnd(with:ordering:)","url":"\/documentation\/atomics\/unsafeatomic\/loadthenlogicaland(with:ordering:)","conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"text":" is ","type":"text"},{"code":"Bool","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"loadThenLogicalAnd"},{"kind":"text","text":"("},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ordering"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Perform an atomic logical AND operation and return the original value, applying"},{"type":"text","text":" "},{"type":"text","text":"the specified memory ordering."}],"type":"topic"},"doc://Atomics/documentation/Atomics/UnsafeAtomic/loadThenWrappingDecrement(by:ordering:)":{"url":"\/documentation\/atomics\/unsafeatomic\/loadthenwrappingdecrement(by:ordering:)","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/loadThenWrappingDecrement(by:ordering:)","abstract":[{"type":"text","text":"Perform an atomic wrapping subtract operation and return the original value, applying"},{"type":"text","text":" "},{"text":"the specified memory ordering.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"loadThenWrappingDecrement","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"by"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"ordering"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Value"}],"type":"topic","title":"loadThenWrappingDecrement(by:ordering:)","kind":"symbol","role":"symbol","conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AtomicInteger"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"doc://Atomics/documentation/Atomics/AtomicValue/AtomicRepresentation":{"role":"symbol","title":"AtomicRepresentation","kind":"symbol","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicValue\/AtomicRepresentation","url":"\/documentation\/atomics\/atomicvalue\/atomicrepresentation","required":true,"fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomicRepresentation"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics13AtomicStorageP","text":"AtomicStorage"}],"abstract":[{"type":"text","text":"The atomic storage representation for this value."}],"type":"topic"},"doc://Atomics/documentation/Atomics/UnsafeAtomic":{"url":"\/documentation\/atomics\/unsafeatomic","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic","abstract":[{"type":"text","text":"An unsafe reference type holding an atomic value, requiring manual memory"},{"text":" ","type":"text"},{"type":"text","text":"management of the underlying storage representation."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnsafeAtomic"}],"type":"topic","title":"UnsafeAtomic","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"UnsafeAtomic"}]},"doc://Atomics/documentation/Atomics/UnsafeAtomic/init(at:)":{"abstract":[{"type":"text","text":"Initialize an unsafe atomic value that uses the supplied memory location"},{"type":"text","text":" "},{"type":"text","text":"for storage. The storage location must already be initialized to"},{"text":" ","type":"text"},{"text":"represent a valid atomic value.","type":"text"}],"identifier":"doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/init(at:)","kind":"symbol","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sp","kind":"typeIdentifier","text":"UnsafeMutablePointer"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:7Atomics12UnsafeAtomicV","text":"UnsafeAtomic","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Storage","kind":"typeIdentifier"},{"kind":"text","text":">)"}],"title":"init(at:)","url":"\/documentation\/atomics\/unsafeatomic\/init(at:)","role":"symbol"}}}