{"sections":[],"abstract":[{"type":"text","text":"Atomically sets the current value to "},{"code":"desired","type":"codeVoice"},{"type":"text","text":", applying the specified"},{"text":" ","type":"text"},{"type":"text","text":"memory ordering."}],"identifier":{"url":"doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/store(_:ordering:)","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"store","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"desired"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicStoreOrdering","text":"AtomicStoreOrdering","preciseIdentifier":"s:7Atomics19AtomicStoreOrderingV","kind":"typeIdentifier"},{"kind":"text","text":")"}],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The desired new value."}]}],"name":"desired"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The memory ordering to apply on this operation.","type":"text"}]}],"name":"ordering"}]}],"seeAlsoSections":[{"anchor":"Atomic-Operations","identifiers":["doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/load(ordering:)","doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/exchange(_:ordering:)","doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/compareExchange(expected:desired:ordering:)","doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/compareExchange(expected:desired:successOrdering:failureOrdering:)","doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/weakCompareExchange(expected:desired:ordering:)","doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/weakCompareExchange(expected:desired:successOrdering:failureOrdering:)"],"generated":true,"title":"Atomic Operations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atomics\/unsafeatomic\/store(_:ordering:)"]}],"kind":"symbol","metadata":{"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AtomicValue"},{"type":"text","text":" and "},{"code":"Value","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Value.AtomicRepresentation.Value","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"externalID":"s:7Atomics12UnsafeAtomicV5store_8orderingyxn_AA0C13StoreOrderingVtF","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"store","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"text":"ordering","kind":"externalParam"},{"kind":"text","text":": "},{"text":"AtomicStoreOrdering","preciseIdentifier":"s:7Atomics19AtomicStoreOrderingV","kind":"typeIdentifier"},{"kind":"text","text":")"}],"extendedModule":"Atomics","remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/.build\/checkouts\/swift-atomics\/Sources\/Atomics\/Types\/UnsafeAtomic.swift#L100","fileName":"UnsafeAtomic.swift"},"title":"store(_:ordering:)","role":"symbol","roleHeading":"Instance Method","modules":[{"name":"Atomics"}],"symbolKind":"method"},"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/Atomics\/documentation\/Atomics","doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic"]]},"references":{"doc://Atomics/documentation/Atomics/UnsafeAtomic/compareExchange(expected:desired:successOrdering:failureOrdering:)":{"role":"symbol","title":"compareExchange(expected:desired:successOrdering:failureOrdering:)","kind":"symbol","url":"\/documentation\/atomics\/unsafeatomic\/compareexchange(expected:desired:successordering:failureordering:)","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/compareExchange(expected:desired:successOrdering:failureOrdering:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"AtomicValue"},{"text":" and ","type":"text"},{"code":"Value","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Value.AtomicRepresentation.Value","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"compareExchange"},{"kind":"text","text":"("},{"kind":"externalParam","text":"expected"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"desired","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"successOrdering","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"failureOrdering"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AtomicLoadOrdering","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV"},{"text":") -> (exchanged","kind":"text"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":", original","kind":"text"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"text":"Perform an atomic compare and exchange operation on the current value,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"applying the specified success\/failure memory orderings."}],"type":"topic"},"doc://Atomics/documentation/Atomics/UnsafeAtomic/weakCompareExchange(expected:desired:successOrdering:failureOrdering:)":{"role":"symbol","title":"weakCompareExchange(expected:desired:successOrdering:failureOrdering:)","kind":"symbol","url":"\/documentation\/atomics\/unsafeatomic\/weakcompareexchange(expected:desired:successordering:failureordering:)","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/weakCompareExchange(expected:desired:successOrdering:failureOrdering:)","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"code":"AtomicValue","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Value"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Value.AtomicRepresentation.Value"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"weakCompareExchange","kind":"identifier"},{"text":"(","kind":"text"},{"text":"expected","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"desired"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":", ","kind":"text"},{"text":"successOrdering","kind":"externalParam"},{"kind":"text","text":": "},{"text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"failureOrdering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicLoadOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV"},{"kind":"text","text":") -> (exchanged"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":", original"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"text":"Perform an atomic weak compare and exchange operation on the current","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"value, applying the specified success\/failure memory orderings. This"},{"text":" ","type":"text"},{"type":"text","text":"compare-exchange variant is allowed to spuriously fail; it is designed to"},{"type":"text","text":" "},{"type":"text","text":"be called in a loop until it indicates a successful exchange has happened."}],"type":"topic"},"doc://Atomics/documentation/Atomics/AtomicStoreOrdering":{"type":"topic","role":"symbol","abstract":[{"text":"Specifies the memory ordering semantics of an atomic store operation.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomicStoreOrdering"}],"navigatorTitle":[{"kind":"identifier","text":"AtomicStoreOrdering"}],"identifier":"doc:\/\/Atomics\/documentation\/Atomics\/AtomicStoreOrdering","url":"\/documentation\/atomics\/atomicstoreordering","title":"AtomicStoreOrdering","kind":"symbol"},"doc://Atomics/documentation/Atomics/UnsafeAtomic/load(ordering:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"code":"AtomicValue","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Value","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Value.AtomicRepresentation.Value","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"role":"symbol","url":"\/documentation\/atomics\/unsafeatomic\/load(ordering:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"load","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","kind":"typeIdentifier","text":"AtomicLoadOrdering"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"kind":"symbol","type":"topic","title":"load(ordering:)","abstract":[{"type":"text","text":"Atomically loads and returns the current value, applying the specified"},{"text":" ","type":"text"},{"text":"memory ordering.","type":"text"}],"identifier":"doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/load(ordering:)"},"doc://Atomics/documentation/Atomics/UnsafeAtomic/store(_:ordering:)":{"abstract":[{"type":"text","text":"Atomically sets the current value to "},{"type":"codeVoice","code":"desired"},{"text":", applying the specified","type":"text"},{"type":"text","text":" "},{"text":"memory ordering.","type":"text"}],"title":"store(_:ordering:)","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/store(_:ordering:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"store","kind":"identifier"},{"kind":"text","text":"("},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"text":"AtomicStoreOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics19AtomicStoreOrderingV"},{"kind":"text","text":")"}],"kind":"symbol","type":"topic","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"AtomicValue"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Value.AtomicRepresentation.Value"},{"type":"text","text":"."}]},"url":"\/documentation\/atomics\/unsafeatomic\/store(_:ordering:)","role":"symbol"},"doc://Atomics/documentation/Atomics/UnsafeAtomic/compareExchange(expected:desired:ordering:)":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"AtomicValue"},{"text":" and ","type":"text"},{"code":"Value","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Value.AtomicRepresentation.Value","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","url":"\/documentation\/atomics\/unsafeatomic\/compareexchange(expected:desired:ordering:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"compareExchange","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"expected"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"desired","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":") -> (exchanged","kind":"text"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", original","kind":"text"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":")"}],"kind":"symbol","type":"topic","title":"compareExchange(expected:desired:ordering:)","abstract":[{"type":"text","text":"Perform an atomic compare and exchange operation on the current value,"},{"text":" ","type":"text"},{"text":"applying the specified memory ordering.","type":"text"}],"identifier":"doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/compareExchange(expected:desired:ordering:)"},"doc://Atomics/documentation/Atomics/UnsafeAtomic":{"url":"\/documentation\/atomics\/unsafeatomic","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic","abstract":[{"type":"text","text":"An unsafe reference type holding an atomic value, requiring manual memory"},{"text":" ","type":"text"},{"type":"text","text":"management of the underlying storage representation."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnsafeAtomic"}],"type":"topic","title":"UnsafeAtomic","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"UnsafeAtomic"}]},"doc://Atomics/documentation/Atomics/UnsafeAtomic/weakCompareExchange(expected:desired:ordering:)":{"abstract":[{"type":"text","text":"Perform an atomic weak compare and exchange operation on the current"},{"type":"text","text":" "},{"type":"text","text":"value, applying the memory ordering. This compare-exchange variant is"},{"type":"text","text":" "},{"text":"allowed to spuriously fail; it is designed to be called in a loop until","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"it indicates a successful exchange has happened."}],"title":"weakCompareExchange(expected:desired:ordering:)","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/weakCompareExchange(expected:desired:ordering:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"weakCompareExchange"},{"kind":"text","text":"("},{"kind":"externalParam","text":"expected"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":", ","kind":"text"},{"text":"desired","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering","kind":"typeIdentifier"},{"text":") -> (exchanged","kind":"text"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", original","kind":"text"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":")"}],"kind":"symbol","type":"topic","conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AtomicValue"},{"type":"text","text":" and "},{"code":"Value","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Value.AtomicRepresentation.Value","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"url":"\/documentation\/atomics\/unsafeatomic\/weakcompareexchange(expected:desired:ordering:)","role":"symbol"},"doc://Atomics/documentation/Atomics":{"type":"topic","url":"\/documentation\/atomics","kind":"symbol","abstract":[{"type":"text","text":"An atomics library for Swift."}],"title":"Atomics","role":"collection","identifier":"doc:\/\/Atomics\/documentation\/Atomics"},"doc://Atomics/documentation/Atomics/UnsafeAtomic/exchange(_:ordering:)":{"role":"symbol","title":"exchange(_:ordering:)","kind":"symbol","url":"\/documentation\/atomics\/unsafeatomic\/exchange(_:ordering:)","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomic\/exchange(_:ordering:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AtomicValue"},{"type":"text","text":" and "},{"code":"Value","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Value.AtomicRepresentation.Value"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"exchange"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ordering"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering"},{"kind":"text","text":") -> "},{"text":"Value","kind":"typeIdentifier"}],"abstract":[{"text":"Atomically sets the current value to ","type":"text"},{"type":"codeVoice","code":"desired"},{"type":"text","text":" and returns the original"},{"type":"text","text":" "},{"type":"text","text":"value, applying the specified memory ordering."}],"type":"topic"}}}