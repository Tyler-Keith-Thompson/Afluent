{"sections":[],"variants":[{"paths":["\/documentation\/atomics\/unsafeatomiclazyreference\/create()"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"externalID":"s:7Atomics25UnsafeAtomicLazyReferenceV6createACyxGyFZ","extendedModule":"Atomics","roleHeading":"Type Method","modules":[{"name":"Atomics"}],"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"create","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"UnsafeAtomicLazyReference","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics25UnsafeAtomicLazyReferenceV"},{"text":"<","kind":"text"},{"text":"Instance","kind":"typeIdentifier"},{"kind":"text","text":">"}],"symbolKind":"method","title":"create()","remoteSource":{"fileName":"UnsafeAtomicLazyReference.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/.build\/checkouts\/swift-atomics\/Sources\/Atomics\/Types\/UnsafeAtomicLazyReference.swift#L96"}},"hierarchy":{"paths":[["doc:\/\/Atomics\/documentation\/Atomics","doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference"]]},"abstract":[{"type":"text","text":"Create a new "},{"code":"UnsafeAtomicLazyReference","type":"codeVoice"},{"type":"text","text":" value by dynamically allocating"},{"type":"text","text":" "},{"type":"text","text":"storage for it."}],"kind":"symbol","seeAlsoSections":[{"generated":true,"anchor":"Shorthand-Methods-for-Dynamically-Allocating-Storage","title":"Shorthand Methods for Dynamically Allocating Storage","identifiers":["doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference\/destroy()"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"create","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference","text":"UnsafeAtomicLazyReference","preciseIdentifier":"s:7Atomics25UnsafeAtomicLazyReferenceV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Instance"},{"kind":"text","text":">"}]}]},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This call is usually paired with "},{"code":"destroy","type":"codeVoice"},{"text":" to get rid of the allocated","type":"text"},{"type":"text","text":" "},{"text":"storage at the end of its lifetime.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note: This is not an atomic operation."}]}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference\/create()"},"references":{"doc://Atomics/documentation/Atomics/UnsafeAtomicLazyReference/destroy()":{"title":"destroy()","url":"\/documentation\/atomics\/unsafeatomiclazyreference\/destroy()","type":"topic","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference\/destroy()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"destroy"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"UnsafeAtomicLazyReference","preciseIdentifier":"s:7Atomics25UnsafeAtomicLazyReferenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Instance"},{"text":">.","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics25UnsafeAtomicLazyReferenceV5Valuea"}],"kind":"symbol","abstract":[{"text":"Disposes of the current value of the storage location corresponding to","type":"text"},{"type":"text","text":" "},{"text":"this unsafe atomic lazy reference, then deinitializes and deallocates the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"storage."}]},"doc://Atomics/documentation/Atomics/UnsafeAtomicLazyReference":{"identifier":"doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference","title":"UnsafeAtomicLazyReference","url":"\/documentation\/atomics\/unsafeatomiclazyreference","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UnsafeAtomicLazyReference","kind":"identifier"}],"navigatorTitle":[{"text":"UnsafeAtomicLazyReference","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"An unsafe reference type holding a lazily initializable atomic","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"strong reference, requiring manual memory management of the"},{"text":" ","type":"text"},{"type":"text","text":"underlying storage representation."}],"type":"topic"},"doc://Atomics/documentation/Atomics":{"type":"topic","url":"\/documentation\/atomics","kind":"symbol","abstract":[{"type":"text","text":"An atomics library for Swift."}],"title":"Atomics","role":"collection","identifier":"doc:\/\/Atomics\/documentation\/Atomics"},"doc://Atomics/documentation/Atomics/UnsafeAtomicLazyReference/create()":{"identifier":"doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference\/create()","abstract":[{"type":"text","text":"Create a new "},{"type":"codeVoice","code":"UnsafeAtomicLazyReference"},{"text":" value by dynamically allocating","type":"text"},{"type":"text","text":" "},{"type":"text","text":"storage for it."}],"kind":"symbol","title":"create()","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"create"},{"kind":"text","text":"() -> "},{"text":"UnsafeAtomicLazyReference","preciseIdentifier":"s:7Atomics25UnsafeAtomicLazyReferenceV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Instance","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/atomics\/unsafeatomiclazyreference\/create()","role":"symbol"}}}