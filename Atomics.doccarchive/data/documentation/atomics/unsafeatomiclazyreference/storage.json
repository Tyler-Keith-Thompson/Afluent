{"hierarchy":{"paths":[["doc:\/\/Atomics\/documentation\/Atomics","doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"topicSections":[{"identifiers":["doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference\/Storage\/init()"],"title":"Initializers","generated":true,"anchor":"Initializers"},{"anchor":"Instance-Methods","identifiers":["doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference\/Storage\/dispose()"],"generated":true,"title":"Instance Methods"}],"relationshipsSections":[{"identifiers":["doc:\/\/Atomics\/s15BitwiseCopyableP","doc:\/\/Atomics\/s8SendableP"],"kind":"relationships","type":"conformsTo","title":"Conforms To"}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@frozen"},{"kind":"text","text":" "},{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Storage","kind":"identifier"}],"platforms":["macOS"],"languages":["swift"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atomics\/unsafeatomiclazyreference\/storage"]}],"kind":"symbol","identifier":{"url":"doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference\/Storage","interfaceLanguage":"swift"},"metadata":{"externalID":"s:7Atomics25UnsafeAtomicLazyReferenceV7StorageV","role":"symbol","modules":[{"name":"Atomics"}],"navigatorTitle":[{"kind":"identifier","text":"Storage"}],"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/.build\/checkouts\/swift-atomics\/Sources\/Atomics\/Types\/UnsafeAtomicLazyReference.swift#L52","fileName":"UnsafeAtomicLazyReference.swift"},"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Storage"}],"symbolKind":"struct","roleHeading":"Structure","extendedModule":"Atomics","title":"UnsafeAtomicLazyReference.Storage"},"abstract":[{"text":"The storage representation for an atomic lazy reference value.","type":"text"}],"references":{"doc://Atomics/documentation/Atomics/UnsafeAtomicLazyReference/Storage/dispose()":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dispose","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"UnsafeAtomicLazyReference","preciseIdentifier":"s:7Atomics25UnsafeAtomicLazyReferenceV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Instance"},{"text":">.","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics25UnsafeAtomicLazyReferenceV5Valuea"}],"title":"dispose()","url":"\/documentation\/atomics\/unsafeatomiclazyreference\/storage\/dispose()","abstract":[{"text":"Prepare this atomic storage value for deinitialization, extracting the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"logical value it represents. This invalidates this atomic storage; you"},{"type":"text","text":" "},{"type":"text","text":"must not perform any operations on it after this call (except for"},{"type":"text","text":" "},{"text":"deinitialization).","type":"text"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference\/Storage\/dispose()"},"doc://Atomics/s15BitwiseCopyableP":{"identifier":"doc:\/\/Atomics\/s15BitwiseCopyableP","type":"unresolvable","title":"Swift.BitwiseCopyable"},"doc://Atomics/documentation/Atomics/UnsafeAtomicLazyReference":{"identifier":"doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference","title":"UnsafeAtomicLazyReference","url":"\/documentation\/atomics\/unsafeatomiclazyreference","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UnsafeAtomicLazyReference","kind":"identifier"}],"navigatorTitle":[{"text":"UnsafeAtomicLazyReference","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"An unsafe reference type holding a lazily initializable atomic","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"strong reference, requiring manual memory management of the"},{"text":" ","type":"text"},{"type":"text","text":"underlying storage representation."}],"type":"topic"},"doc://Atomics/documentation/Atomics/UnsafeAtomicLazyReference/Storage":{"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Storage"}],"abstract":[{"type":"text","text":"The storage representation for an atomic lazy reference value."}],"title":"UnsafeAtomicLazyReference.Storage","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference\/Storage","url":"\/documentation\/atomics\/unsafeatomiclazyreference\/storage","type":"topic","navigatorTitle":[{"text":"Storage","kind":"identifier"}],"role":"symbol"},"doc://Atomics/documentation/Atomics":{"type":"topic","url":"\/documentation\/atomics","kind":"symbol","abstract":[{"type":"text","text":"An atomics library for Swift."}],"title":"Atomics","role":"collection","identifier":"doc:\/\/Atomics\/documentation\/Atomics"},"doc://Atomics/s8SendableP":{"identifier":"doc:\/\/Atomics\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://Atomics/documentation/Atomics/UnsafeAtomicLazyReference/Storage/init()":{"url":"\/documentation\/atomics\/unsafeatomiclazyreference\/storage\/init()","abstract":[{"text":"Initialize a new atomic lazy reference storage value holding ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","title":"init()","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"()"}],"role":"symbol","identifier":"doc:\/\/Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference\/Storage\/init()","type":"topic"}}}