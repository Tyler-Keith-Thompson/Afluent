{"includedArchiveIdentifiers":["Atomics"],"interfaceLanguages":{"swift":[{"children":[{"title":"Atomic Container Types","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomics\/managedatomic\/init(_:)","title":"init(Value)","type":"init"},{"title":"Atomic Operations","type":"groupMarker"},{"path":"\/documentation\/atomics\/managedatomic\/load(ordering:)","title":"func load(ordering: AtomicLoadOrdering) -> Value","type":"method"},{"path":"\/documentation\/atomics\/managedatomic\/store(_:ordering:)","title":"func store(Value, ordering: AtomicStoreOrdering)","type":"method"},{"path":"\/documentation\/atomics\/managedatomic\/exchange(_:ordering:)","title":"func exchange(Value, ordering: AtomicUpdateOrdering) -> Value","type":"method"},{"path":"\/documentation\/atomics\/managedatomic\/compareexchange(expected:desired:ordering:)","title":"func compareExchange(expected: Value, desired: Value, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Value)","type":"method"},{"path":"\/documentation\/atomics\/managedatomic\/compareexchange(expected:desired:successordering:failureordering:)","title":"func compareExchange(expected: Value, desired: Value, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: Value)","type":"method"},{"path":"\/documentation\/atomics\/managedatomic\/weakcompareexchange(expected:desired:ordering:)","title":"func weakCompareExchange(expected: Value, desired: Value, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Value)","type":"method"},{"path":"\/documentation\/atomics\/managedatomic\/weakcompareexchange(expected:desired:successordering:failureordering:)","title":"func weakCompareExchange(expected: Value, desired: Value, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: Value)","type":"method"},{"title":"Atomic Integer Operations","type":"groupMarker"},{"path":"\/documentation\/atomics\/managedatomic\/wrappingincrement(by:ordering:)","title":"func wrappingIncrement(by: Value, ordering: AtomicUpdateOrdering)","type":"method"},{"path":"\/documentation\/atomics\/managedatomic\/wrappingdecrement(by:ordering:)","title":"func wrappingDecrement(by: Value, ordering: AtomicUpdateOrdering)","type":"method"},{"path":"\/documentation\/atomics\/managedatomic\/loadthenwrappingincrement(by:ordering:)","title":"func loadThenWrappingIncrement(by: Value, ordering: AtomicUpdateOrdering) -> Value","type":"method"},{"path":"\/documentation\/atomics\/managedatomic\/loadthenwrappingdecrement(by:ordering:)","title":"func loadThenWrappingDecrement(by: Value, ordering: AtomicUpdateOrdering) -> Value","type":"method"},{"path":"\/documentation\/atomics\/managedatomic\/loadthenbitwiseor(with:ordering:)","title":"func loadThenBitwiseOr(with: Value, ordering: AtomicUpdateOrdering) -> Value","type":"method"},{"path":"\/documentation\/atomics\/managedatomic\/loadthenbitwiseand(with:ordering:)","title":"func loadThenBitwiseAnd(with: Value, ordering: AtomicUpdateOrdering) -> Value","type":"method"},{"path":"\/documentation\/atomics\/managedatomic\/loadthenbitwisexor(with:ordering:)","title":"func loadThenBitwiseXor(with: Value, ordering: AtomicUpdateOrdering) -> Value","type":"method"},{"path":"\/documentation\/atomics\/managedatomic\/wrappingincrementthenload(by:ordering:)","title":"func wrappingIncrementThenLoad(by: Value, ordering: AtomicUpdateOrdering) -> Value","type":"method"},{"path":"\/documentation\/atomics\/managedatomic\/wrappingdecrementthenload(by:ordering:)","title":"func wrappingDecrementThenLoad(by: Value, ordering: AtomicUpdateOrdering) -> Value","type":"method"},{"path":"\/documentation\/atomics\/managedatomic\/bitwiseorthenload(with:ordering:)","title":"func bitwiseOrThenLoad(with: Value, ordering: AtomicUpdateOrdering) -> Value","type":"method"},{"path":"\/documentation\/atomics\/managedatomic\/bitwiseandthenload(with:ordering:)","title":"func bitwiseAndThenLoad(with: Value, ordering: AtomicUpdateOrdering) -> Value","type":"method"},{"path":"\/documentation\/atomics\/managedatomic\/bitwisexorthenload(with:ordering:)","title":"func bitwiseXorThenLoad(with: Value, ordering: AtomicUpdateOrdering) -> Value","type":"method"},{"title":"Atomic Boolean Operations","type":"groupMarker"},{"path":"\/documentation\/atomics\/managedatomic\/logicalorthenload(with:ordering:)","title":"func logicalOrThenLoad(with: Value, ordering: AtomicUpdateOrdering) -> Value","type":"method"},{"path":"\/documentation\/atomics\/managedatomic\/logicalandthenload(with:ordering:)","title":"func logicalAndThenLoad(with: Value, ordering: AtomicUpdateOrdering) -> Value","type":"method"},{"path":"\/documentation\/atomics\/managedatomic\/logicalxorthenload(with:ordering:)","title":"func logicalXorThenLoad(with: Value, ordering: AtomicUpdateOrdering) -> Value","type":"method"},{"path":"\/documentation\/atomics\/managedatomic\/loadthenlogicalor(with:ordering:)","title":"func loadThenLogicalOr(with: Value, ordering: AtomicUpdateOrdering) -> Value","type":"method"},{"path":"\/documentation\/atomics\/managedatomic\/loadthenlogicaland(with:ordering:)","title":"func loadThenLogicalAnd(with: Value, ordering: AtomicUpdateOrdering) -> Value","type":"method"},{"path":"\/documentation\/atomics\/managedatomic\/loadthenlogicalxor(with:ordering:)","title":"func loadThenLogicalXor(with: Value, ordering: AtomicUpdateOrdering) -> Value","type":"method"}],"path":"\/documentation\/atomics\/managedatomic","title":"ManagedAtomic","type":"class"},{"children":[{"title":"Storage Representation","type":"groupMarker"},{"path":"\/documentation\/atomics\/unsafeatomic\/storage","title":"UnsafeAtomic.Storage","type":"typealias"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomics\/unsafeatomic\/init(at:)","title":"init(at: UnsafeMutablePointer<UnsafeAtomic<Value>.Storage>)","type":"init"},{"title":"Shorthand Methods for Dynamically Allocating Storage","type":"groupMarker"},{"path":"\/documentation\/atomics\/unsafeatomic\/create(_:)","title":"static func create(Value) -> UnsafeAtomic<Value>","type":"method"},{"path":"\/documentation\/atomics\/unsafeatomic\/destroy()","title":"func destroy() -> Value","type":"method"},{"title":"Atomic Operations","type":"groupMarker"},{"path":"\/documentation\/atomics\/unsafeatomic\/load(ordering:)","title":"func load(ordering: AtomicLoadOrdering) -> Value","type":"method"},{"path":"\/documentation\/atomics\/unsafeatomic\/store(_:ordering:)","title":"func store(Value, ordering: AtomicStoreOrdering)","type":"method"},{"path":"\/documentation\/atomics\/unsafeatomic\/exchange(_:ordering:)","title":"func exchange(Value, ordering: AtomicUpdateOrdering) -> Value","type":"method"},{"path":"\/documentation\/atomics\/unsafeatomic\/compareexchange(expected:desired:ordering:)","title":"func compareExchange(expected: Value, desired: Value, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Value)","type":"method"},{"path":"\/documentation\/atomics\/unsafeatomic\/compareexchange(expected:desired:successordering:failureordering:)","title":"func compareExchange(expected: Value, desired: Value, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: Value)","type":"method"},{"path":"\/documentation\/atomics\/unsafeatomic\/weakcompareexchange(expected:desired:ordering:)","title":"func weakCompareExchange(expected: Value, desired: Value, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Value)","type":"method"},{"path":"\/documentation\/atomics\/unsafeatomic\/weakcompareexchange(expected:desired:successordering:failureordering:)","title":"func weakCompareExchange(expected: Value, desired: Value, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: Value)","type":"method"},{"title":"Atomic Integer Operations","type":"groupMarker"},{"path":"\/documentation\/atomics\/unsafeatomic\/wrappingincrement(by:ordering:)","title":"func wrappingIncrement(by: Value, ordering: AtomicUpdateOrdering)","type":"method"},{"path":"\/documentation\/atomics\/unsafeatomic\/wrappingdecrement(by:ordering:)","title":"func wrappingDecrement(by: Value, ordering: AtomicUpdateOrdering)","type":"method"},{"path":"\/documentation\/atomics\/unsafeatomic\/loadthenwrappingincrement(by:ordering:)","title":"func loadThenWrappingIncrement(by: Value, ordering: AtomicUpdateOrdering) -> Value","type":"method"},{"path":"\/documentation\/atomics\/unsafeatomic\/loadthenwrappingdecrement(by:ordering:)","title":"func loadThenWrappingDecrement(by: Value, ordering: AtomicUpdateOrdering) -> Value","type":"method"},{"path":"\/documentation\/atomics\/unsafeatomic\/loadthenbitwiseor(with:ordering:)","title":"func loadThenBitwiseOr(with: Value, ordering: AtomicUpdateOrdering) -> Value","type":"method"},{"path":"\/documentation\/atomics\/unsafeatomic\/loadthenbitwiseand(with:ordering:)","title":"func loadThenBitwiseAnd(with: Value, ordering: AtomicUpdateOrdering) -> Value","type":"method"},{"path":"\/documentation\/atomics\/unsafeatomic\/loadthenbitwisexor(with:ordering:)","title":"func loadThenBitwiseXor(with: Value, ordering: AtomicUpdateOrdering) -> Value","type":"method"},{"path":"\/documentation\/atomics\/unsafeatomic\/wrappingincrementthenload(by:ordering:)","title":"func wrappingIncrementThenLoad(by: Value, ordering: AtomicUpdateOrdering) -> Value","type":"method"},{"path":"\/documentation\/atomics\/unsafeatomic\/wrappingdecrementthenload(by:ordering:)","title":"func wrappingDecrementThenLoad(by: Value, ordering: AtomicUpdateOrdering) -> Value","type":"method"},{"path":"\/documentation\/atomics\/unsafeatomic\/bitwiseorthenload(with:ordering:)","title":"func bitwiseOrThenLoad(with: Value, ordering: AtomicUpdateOrdering) -> Value","type":"method"},{"path":"\/documentation\/atomics\/unsafeatomic\/bitwiseandthenload(with:ordering:)","title":"func bitwiseAndThenLoad(with: Value, ordering: AtomicUpdateOrdering) -> Value","type":"method"},{"path":"\/documentation\/atomics\/unsafeatomic\/bitwisexorthenload(with:ordering:)","title":"func bitwiseXorThenLoad(with: Value, ordering: AtomicUpdateOrdering) -> Value","type":"method"},{"title":"Atomic Boolean Operations","type":"groupMarker"},{"path":"\/documentation\/atomics\/unsafeatomic\/logicalorthenload(with:ordering:)","title":"func logicalOrThenLoad(with: Value, ordering: AtomicUpdateOrdering) -> Value","type":"method"},{"path":"\/documentation\/atomics\/unsafeatomic\/logicalandthenload(with:ordering:)","title":"func logicalAndThenLoad(with: Value, ordering: AtomicUpdateOrdering) -> Value","type":"method"},{"path":"\/documentation\/atomics\/unsafeatomic\/logicalxorthenload(with:ordering:)","title":"func logicalXorThenLoad(with: Value, ordering: AtomicUpdateOrdering) -> Value","type":"method"},{"path":"\/documentation\/atomics\/unsafeatomic\/loadthenlogicalor(with:ordering:)","title":"func loadThenLogicalOr(with: Value, ordering: AtomicUpdateOrdering) -> Value","type":"method"},{"path":"\/documentation\/atomics\/unsafeatomic\/loadthenlogicaland(with:ordering:)","title":"func loadThenLogicalAnd(with: Value, ordering: AtomicUpdateOrdering) -> Value","type":"method"},{"path":"\/documentation\/atomics\/unsafeatomic\/loadthenlogicalxor(with:ordering:)","title":"func loadThenLogicalXor(with: Value, ordering: AtomicUpdateOrdering) -> Value","type":"method"}],"path":"\/documentation\/atomics\/unsafeatomic","title":"UnsafeAtomic","type":"struct"},{"children":[{"title":"Related Types","type":"groupMarker"},{"path":"\/documentation\/atomics\/managedatomiclazyreference\/value","title":"ManagedAtomicLazyReference.Value","type":"typealias"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomics\/managedatomiclazyreference\/init()","title":"init()","type":"init"},{"title":"Atomic Operations","type":"groupMarker"},{"path":"\/documentation\/atomics\/managedatomiclazyreference\/load()","title":"func load() -> Instance?","type":"method"},{"path":"\/documentation\/atomics\/managedatomiclazyreference\/storeifnilthenload(_:)","title":"func storeIfNilThenLoad(Instance) -> Instance","type":"method"}],"path":"\/documentation\/atomics\/managedatomiclazyreference","title":"ManagedAtomicLazyReference","type":"class"},{"children":[{"title":"Related Types","type":"groupMarker"},{"path":"\/documentation\/atomics\/unsafeatomiclazyreference\/value","title":"UnsafeAtomicLazyReference.Value","type":"typealias"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomics\/unsafeatomiclazyreference\/init(at:)","title":"init(at: UnsafeMutablePointer<UnsafeAtomicLazyReference<Instance>.Storage>)","type":"init"},{"title":"Shorthand Methods for Dynamically Allocating Storage","type":"groupMarker"},{"path":"\/documentation\/atomics\/unsafeatomiclazyreference\/create()","title":"static func create() -> UnsafeAtomicLazyReference<Instance>","type":"method"},{"path":"\/documentation\/atomics\/unsafeatomiclazyreference\/destroy()","title":"func destroy() -> UnsafeAtomicLazyReference<Instance>.Value","type":"method"},{"title":"Atomic Operations","type":"groupMarker"},{"path":"\/documentation\/atomics\/unsafeatomiclazyreference\/load()","title":"func load() -> Instance?","type":"method"},{"path":"\/documentation\/atomics\/unsafeatomiclazyreference\/storeifnilthenload(_:)","title":"func storeIfNilThenLoad(Instance) -> Instance","type":"method"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomics\/unsafeatomiclazyreference\/storage\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/unsafeatomiclazyreference\/storage\/dispose()","title":"func dispose() -> UnsafeAtomicLazyReference<Instance>.Value","type":"method"}],"path":"\/documentation\/atomics\/unsafeatomiclazyreference\/storage","title":"UnsafeAtomicLazyReference.Storage","type":"struct"}],"path":"\/documentation\/atomics\/unsafeatomiclazyreference","title":"UnsafeAtomicLazyReference","type":"struct"},{"title":"Memory Orderings","type":"groupMarker"},{"children":[{"title":"Ordering Values","type":"groupMarker"},{"path":"\/documentation\/atomics\/atomicloadordering\/relaxed","title":"static var relaxed: AtomicLoadOrdering","type":"property"},{"path":"\/documentation\/atomics\/atomicloadordering\/acquiring","title":"static var acquiring: AtomicLoadOrdering","type":"property"},{"path":"\/documentation\/atomics\/atomicloadordering\/sequentiallyconsistent","title":"static var sequentiallyConsistent: AtomicLoadOrdering","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomics\/atomicloadordering\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/atomics\/atomicloadordering\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomics\/atomicloadordering\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/atomics\/atomicloadordering\/==(_:_:)","title":"static func == (AtomicLoadOrdering, AtomicLoadOrdering) -> Bool","type":"op"}],"path":"\/documentation\/atomics\/atomicloadordering\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/atomicloadordering\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/atomics\/atomicloadordering\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/atomics\/atomicloadordering","title":"AtomicLoadOrdering","type":"struct"},{"children":[{"title":"Ordering Values","type":"groupMarker"},{"path":"\/documentation\/atomics\/atomicstoreordering\/relaxed","title":"static var relaxed: AtomicStoreOrdering","type":"property"},{"path":"\/documentation\/atomics\/atomicstoreordering\/releasing","title":"static var releasing: AtomicStoreOrdering","type":"property"},{"path":"\/documentation\/atomics\/atomicstoreordering\/sequentiallyconsistent","title":"static var sequentiallyConsistent: AtomicStoreOrdering","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomics\/atomicstoreordering\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/atomics\/atomicstoreordering\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomics\/atomicstoreordering\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/atomics\/atomicstoreordering\/==(_:_:)","title":"static func == (AtomicStoreOrdering, AtomicStoreOrdering) -> Bool","type":"op"}],"path":"\/documentation\/atomics\/atomicstoreordering\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/atomicstoreordering\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/atomics\/atomicstoreordering\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/atomics\/atomicstoreordering","title":"AtomicStoreOrdering","type":"struct"},{"children":[{"title":"Ordering Values","type":"groupMarker"},{"path":"\/documentation\/atomics\/atomicupdateordering\/relaxed","title":"static var relaxed: AtomicUpdateOrdering","type":"property"},{"path":"\/documentation\/atomics\/atomicupdateordering\/acquiring","title":"static var acquiring: AtomicUpdateOrdering","type":"property"},{"path":"\/documentation\/atomics\/atomicupdateordering\/releasing","title":"static var releasing: AtomicUpdateOrdering","type":"property"},{"path":"\/documentation\/atomics\/atomicupdateordering\/acquiringandreleasing","title":"static var acquiringAndReleasing: AtomicUpdateOrdering","type":"property"},{"path":"\/documentation\/atomics\/atomicupdateordering\/sequentiallyconsistent","title":"static var sequentiallyConsistent: AtomicUpdateOrdering","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomics\/atomicupdateordering\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/atomics\/atomicupdateordering\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomics\/atomicupdateordering\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/atomics\/atomicupdateordering\/==(_:_:)","title":"static func == (AtomicUpdateOrdering, AtomicUpdateOrdering) -> Bool","type":"op"}],"path":"\/documentation\/atomics\/atomicupdateordering\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/atomicupdateordering\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/atomics\/atomicupdateordering\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/atomics\/atomicupdateordering","title":"AtomicUpdateOrdering","type":"struct"},{"title":"Atomic Value Protocols","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/atomics\/atomicvalue\/atomicrepresentation","title":"AtomicRepresentation","type":"associatedtype"}],"path":"\/documentation\/atomics\/atomicvalue","title":"AtomicValue","type":"protocol"},{"path":"\/documentation\/atomics\/atomicinteger","title":"AtomicInteger","type":"protocol"},{"path":"\/documentation\/atomics\/atomicreference","title":"AtomicReference","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/atomics\/atomicoptionalwrappable\/atomicoptionalrepresentation","title":"AtomicOptionalRepresentation","type":"associatedtype"}],"path":"\/documentation\/atomics\/atomicoptionalwrappable","title":"AtomicOptionalWrappable","type":"protocol"},{"title":"Atomic Storage Representations","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/atomics\/atomicstorage\/value","title":"Value","type":"associatedtype"},{"title":"Creating and Disposing Atomic Storage","type":"groupMarker"},{"path":"\/documentation\/atomics\/atomicstorage\/init(_:)","title":"init(Self.Value)","type":"init"},{"path":"\/documentation\/atomics\/atomicstorage\/dispose()","title":"func dispose() -> Self.Value","type":"method"},{"title":"Atomic Operations","type":"groupMarker"},{"path":"\/documentation\/atomics\/atomicstorage\/atomicload(at:ordering:)","title":"static func atomicLoad(at: UnsafeMutablePointer<Self>, ordering: AtomicLoadOrdering) -> Self.Value","type":"method"},{"path":"\/documentation\/atomics\/atomicstorage\/atomicstore(_:at:ordering:)","title":"static func atomicStore(Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicStoreOrdering)","type":"method"},{"path":"\/documentation\/atomics\/atomicstorage\/atomicexchange(_:at:ordering:)","title":"static func atomicExchange(Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> Self.Value","type":"method"},{"children":[{"children":[{"path":"\/documentation\/atomics\/atomicstorage\/atomiccompareexchange(expected:desired:at:ordering:)-zf4","title":"static func atomicCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"}],"title":"AtomicStorage Implementations","type":"groupMarker"}],"path":"\/documentation\/atomics\/atomicstorage\/atomiccompareexchange(expected:desired:at:ordering:)-9t4wj","title":"static func atomicCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/atomics\/atomicstorage\/atomicweakcompareexchange(expected:desired:at:ordering:)-2et7j","title":"static func atomicWeakCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"}],"title":"AtomicStorage Implementations","type":"groupMarker"}],"path":"\/documentation\/atomics\/atomicstorage\/atomicweakcompareexchange(expected:desired:at:ordering:)-55229","title":"static func atomicWeakCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"},{"path":"\/documentation\/atomics\/atomicstorage\/atomicweakcompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicWeakCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/atomicstorage\/atomiccompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"}],"path":"\/documentation\/atomics\/atomicstorage","title":"AtomicStorage","type":"protocol"},{"children":[{"title":"Atomic Integer Operations","type":"groupMarker"},{"path":"\/documentation\/atomics\/atomicintegerstorage\/atomicloadthenwrappingincrement(by:at:ordering:)","title":"static func atomicLoadThenWrappingIncrement(by: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> Self.Value","type":"method"},{"path":"\/documentation\/atomics\/atomicintegerstorage\/atomicloadthenwrappingdecrement(by:at:ordering:)","title":"static func atomicLoadThenWrappingDecrement(by: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> Self.Value","type":"method"},{"path":"\/documentation\/atomics\/atomicintegerstorage\/atomicloadthenbitwiseor(with:at:ordering:)","title":"static func atomicLoadThenBitwiseOr(with: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> Self.Value","type":"method"},{"path":"\/documentation\/atomics\/atomicintegerstorage\/atomicloadthenbitwiseand(with:at:ordering:)","title":"static func atomicLoadThenBitwiseAnd(with: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> Self.Value","type":"method"},{"path":"\/documentation\/atomics\/atomicintegerstorage\/atomicloadthenbitwisexor(with:at:ordering:)","title":"static func atomicLoadThenBitwiseXor(with: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> Self.Value","type":"method"}],"path":"\/documentation\/atomics\/atomicintegerstorage","title":"AtomicIntegerStorage","type":"protocol"},{"children":[{"title":"Creating and Disposing Atomic Storage","type":"groupMarker"},{"path":"\/documentation\/atomics\/atomicrawrepresentablestorage\/init(_:)","title":"init(Value)","type":"init"},{"path":"\/documentation\/atomics\/atomicrawrepresentablestorage\/dispose()","title":"func dispose() -> Value","type":"method"},{"title":"Atomic Operations","type":"groupMarker"},{"path":"\/documentation\/atomics\/atomicrawrepresentablestorage\/atomicload(at:ordering:)","title":"static func atomicLoad(at: UnsafeMutablePointer<AtomicRawRepresentableStorage<Value>>, ordering: AtomicLoadOrdering) -> Value","type":"method"},{"path":"\/documentation\/atomics\/atomicrawrepresentablestorage\/atomicstore(_:at:ordering:)","title":"static func atomicStore(Value, at: UnsafeMutablePointer<AtomicRawRepresentableStorage<Value>>, ordering: AtomicStoreOrdering)","type":"method"},{"path":"\/documentation\/atomics\/atomicrawrepresentablestorage\/atomicexchange(_:at:ordering:)","title":"static func atomicExchange(Value, at: UnsafeMutablePointer<AtomicRawRepresentableStorage<Value>>, ordering: AtomicUpdateOrdering) -> Value","type":"method"},{"path":"\/documentation\/atomics\/atomicrawrepresentablestorage\/atomiccompareexchange(expected:desired:at:ordering:)-1teq9","title":"static func atomicCompareExchange(expected: Value, desired: Value, at: UnsafeMutablePointer<AtomicRawRepresentableStorage<Value>>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Value)","type":"method"},{"path":"\/documentation\/atomics\/atomicrawrepresentablestorage\/atomiccompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicCompareExchange(expected: Value, desired: Value, at: UnsafeMutablePointer<AtomicRawRepresentableStorage<Value>>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: Value)","type":"method"},{"path":"\/documentation\/atomics\/atomicrawrepresentablestorage\/atomicweakcompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicWeakCompareExchange(expected: Value, desired: Value, at: UnsafeMutablePointer<AtomicRawRepresentableStorage<Value>>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: Value)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/atomicrawrepresentablestorage\/atomiccompareexchange(expected:desired:at:ordering:)-6itii","title":"static func atomicCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"},{"path":"\/documentation\/atomics\/atomicrawrepresentablestorage\/atomicweakcompareexchange(expected:desired:at:ordering:)","title":"static func atomicWeakCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"}],"path":"\/documentation\/atomics\/atomicrawrepresentablestorage\/atomicstorage-implementations","title":"AtomicStorage Implementations","type":"symbol"}],"path":"\/documentation\/atomics\/atomicrawrepresentablestorage","title":"AtomicRawRepresentableStorage","type":"struct"},{"children":[{"title":"Creating and Disposing Atomic Storage","type":"groupMarker"},{"path":"\/documentation\/atomics\/atomicreferencestorage\/init(_:)","title":"init(Value)","type":"init"},{"path":"\/documentation\/atomics\/atomicreferencestorage\/dispose()","title":"func dispose() -> Value","type":"method"},{"title":"Atomic Operations","type":"groupMarker"},{"path":"\/documentation\/atomics\/atomicreferencestorage\/atomicload(at:ordering:)","title":"static func atomicLoad(at: UnsafeMutablePointer<AtomicReferenceStorage<Value>>, ordering: AtomicLoadOrdering) -> Value","type":"method"},{"path":"\/documentation\/atomics\/atomicreferencestorage\/atomicstore(_:at:ordering:)","title":"static func atomicStore(Value, at: UnsafeMutablePointer<AtomicReferenceStorage<Value>>, ordering: AtomicStoreOrdering)","type":"method"},{"path":"\/documentation\/atomics\/atomicreferencestorage\/atomicexchange(_:at:ordering:)","title":"static func atomicExchange(Value, at: UnsafeMutablePointer<AtomicReferenceStorage<Value>>, ordering: AtomicUpdateOrdering) -> Value","type":"method"},{"path":"\/documentation\/atomics\/atomicreferencestorage\/atomiccompareexchange(expected:desired:at:ordering:)-6fgle","title":"static func atomicCompareExchange(expected: Value, desired: Value, at: UnsafeMutablePointer<AtomicReferenceStorage<Value>>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Value)","type":"method"},{"path":"\/documentation\/atomics\/atomicreferencestorage\/atomiccompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicCompareExchange(expected: Value, desired: Value, at: UnsafeMutablePointer<AtomicReferenceStorage<Value>>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: Value)","type":"method"},{"path":"\/documentation\/atomics\/atomicreferencestorage\/atomicweakcompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicWeakCompareExchange(expected: Value, desired: Value, at: UnsafeMutablePointer<AtomicReferenceStorage<Value>>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: Value)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/atomicreferencestorage\/atomiccompareexchange(expected:desired:at:ordering:)-1u5rc","title":"static func atomicCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"},{"path":"\/documentation\/atomics\/atomicreferencestorage\/atomiccompareexchange(expected:desired:at:ordering:)-6fgle","title":"static func atomicCompareExchange(expected: Value, desired: Value, at: UnsafeMutablePointer<AtomicReferenceStorage<Value>>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Value)","type":"method"},{"path":"\/documentation\/atomics\/atomicreferencestorage\/atomiccompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicCompareExchange(expected: Value, desired: Value, at: UnsafeMutablePointer<AtomicReferenceStorage<Value>>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: Value)","type":"method"},{"path":"\/documentation\/atomics\/atomicreferencestorage\/atomicexchange(_:at:ordering:)","title":"static func atomicExchange(Value, at: UnsafeMutablePointer<AtomicReferenceStorage<Value>>, ordering: AtomicUpdateOrdering) -> Value","type":"method"},{"path":"\/documentation\/atomics\/atomicreferencestorage\/atomicload(at:ordering:)","title":"static func atomicLoad(at: UnsafeMutablePointer<AtomicReferenceStorage<Value>>, ordering: AtomicLoadOrdering) -> Value","type":"method"},{"path":"\/documentation\/atomics\/atomicreferencestorage\/atomicstore(_:at:ordering:)","title":"static func atomicStore(Value, at: UnsafeMutablePointer<AtomicReferenceStorage<Value>>, ordering: AtomicStoreOrdering)","type":"method"},{"path":"\/documentation\/atomics\/atomicreferencestorage\/atomicweakcompareexchange(expected:desired:at:ordering:)","title":"static func atomicWeakCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"},{"path":"\/documentation\/atomics\/atomicreferencestorage\/atomicweakcompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicWeakCompareExchange(expected: Value, desired: Value, at: UnsafeMutablePointer<AtomicReferenceStorage<Value>>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: Value)","type":"method"}],"path":"\/documentation\/atomics\/atomicreferencestorage\/atomicstorage-implementations","title":"AtomicStorage Implementations","type":"symbol"}],"path":"\/documentation\/atomics\/atomicreferencestorage","title":"AtomicReferenceStorage","type":"struct"},{"children":[{"title":"Creating and Disposing Atomic Storage","type":"groupMarker"},{"path":"\/documentation\/atomics\/atomicoptionalreferencestorage\/init(_:)","title":"init(Instance?)","type":"init"},{"path":"\/documentation\/atomics\/atomicoptionalreferencestorage\/dispose()","title":"func dispose() -> Instance?","type":"method"},{"title":"Atomic Operations","type":"groupMarker"},{"path":"\/documentation\/atomics\/atomicoptionalreferencestorage\/atomicload(at:ordering:)","title":"static func atomicLoad(at: UnsafeMutablePointer<AtomicOptionalReferenceStorage<Instance>>, ordering: AtomicLoadOrdering) -> Instance?","type":"method"},{"path":"\/documentation\/atomics\/atomicoptionalreferencestorage\/atomicstore(_:at:ordering:)","title":"static func atomicStore(Instance?, at: UnsafeMutablePointer<AtomicOptionalReferenceStorage<Instance>>, ordering: AtomicStoreOrdering)","type":"method"},{"path":"\/documentation\/atomics\/atomicoptionalreferencestorage\/atomicexchange(_:at:ordering:)","title":"static func atomicExchange(Instance?, at: UnsafeMutablePointer<AtomicOptionalReferenceStorage<Instance>>, ordering: AtomicUpdateOrdering) -> Instance?","type":"method"},{"path":"\/documentation\/atomics\/atomicoptionalreferencestorage\/atomiccompareexchange(expected:desired:at:ordering:)-8i63k","title":"static func atomicCompareExchange(expected: Instance?, desired: Instance?, at: UnsafeMutablePointer<AtomicOptionalReferenceStorage<Instance>>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Instance?)","type":"method"},{"path":"\/documentation\/atomics\/atomicoptionalreferencestorage\/atomiccompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicCompareExchange(expected: Instance?, desired: Instance?, at: UnsafeMutablePointer<AtomicOptionalReferenceStorage<Instance>>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: Instance?)","type":"method"},{"path":"\/documentation\/atomics\/atomicoptionalreferencestorage\/atomicweakcompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicWeakCompareExchange(expected: Instance?, desired: Instance?, at: UnsafeMutablePointer<AtomicOptionalReferenceStorage<Instance>>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: Instance?)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/atomics\/atomicoptionalreferencestorage\/value","title":"AtomicOptionalReferenceStorage.Value","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/atomicoptionalreferencestorage\/atomiccompareexchange(expected:desired:at:ordering:)-6g995","title":"static func atomicCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"},{"path":"\/documentation\/atomics\/atomicoptionalreferencestorage\/atomiccompareexchange(expected:desired:at:ordering:)-8i63k","title":"static func atomicCompareExchange(expected: Instance?, desired: Instance?, at: UnsafeMutablePointer<AtomicOptionalReferenceStorage<Instance>>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Instance?)","type":"method"},{"path":"\/documentation\/atomics\/atomicoptionalreferencestorage\/atomiccompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicCompareExchange(expected: Instance?, desired: Instance?, at: UnsafeMutablePointer<AtomicOptionalReferenceStorage<Instance>>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: Instance?)","type":"method"},{"path":"\/documentation\/atomics\/atomicoptionalreferencestorage\/atomicexchange(_:at:ordering:)","title":"static func atomicExchange(Instance?, at: UnsafeMutablePointer<AtomicOptionalReferenceStorage<Instance>>, ordering: AtomicUpdateOrdering) -> Instance?","type":"method"},{"path":"\/documentation\/atomics\/atomicoptionalreferencestorage\/atomicload(at:ordering:)","title":"static func atomicLoad(at: UnsafeMutablePointer<AtomicOptionalReferenceStorage<Instance>>, ordering: AtomicLoadOrdering) -> Instance?","type":"method"},{"path":"\/documentation\/atomics\/atomicoptionalreferencestorage\/atomicstore(_:at:ordering:)","title":"static func atomicStore(Instance?, at: UnsafeMutablePointer<AtomicOptionalReferenceStorage<Instance>>, ordering: AtomicStoreOrdering)","type":"method"},{"path":"\/documentation\/atomics\/atomicoptionalreferencestorage\/atomicweakcompareexchange(expected:desired:at:ordering:)","title":"static func atomicWeakCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"},{"path":"\/documentation\/atomics\/atomicoptionalreferencestorage\/atomicweakcompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicWeakCompareExchange(expected: Instance?, desired: Instance?, at: UnsafeMutablePointer<AtomicOptionalReferenceStorage<Instance>>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: Instance?)","type":"method"}],"path":"\/documentation\/atomics\/atomicoptionalreferencestorage\/atomicstorage-implementations","title":"AtomicStorage Implementations","type":"symbol"}],"path":"\/documentation\/atomics\/atomicoptionalreferencestorage","title":"AtomicOptionalReferenceStorage","type":"struct"},{"title":"Fences","type":"groupMarker"},{"path":"\/documentation\/atomics\/atomicmemoryfence(ordering:)","title":"func atomicMemoryFence(ordering: AtomicUpdateOrdering)","type":"func"},{"title":"Value Types","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomics\/doubleword\/init(first:second:)","title":"init(first: UInt, second: UInt)","type":"init"},{"path":"\/documentation\/atomics\/doubleword\/init(high:low:)","title":"init(high: UInt, low: UInt)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomics\/doubleword\/first","title":"var first: UInt","type":"property"},{"path":"\/documentation\/atomics\/doubleword\/high","title":"var high: UInt","type":"property"},{"path":"\/documentation\/atomics\/doubleword\/low","title":"var low: UInt","type":"property"},{"path":"\/documentation\/atomics\/doubleword\/second","title":"var second: UInt","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomics\/doubleword\/atomicrepresentation\/init(_:)","title":"init(DoubleWord.AtomicRepresentation.Value)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/doubleword\/atomicrepresentation\/dispose()","title":"func dispose() -> DoubleWord.AtomicRepresentation.Value","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/atomics\/doubleword\/atomicrepresentation\/value","title":"DoubleWord.AtomicRepresentation.Value","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/doubleword\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:ordering:)-7injc","title":"static func atomicCompareExchange(expected: DoubleWord, desired: DoubleWord, at: UnsafeMutablePointer<DoubleWord.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: DoubleWord)","type":"method"},{"path":"\/documentation\/atomics\/doubleword\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:ordering:)-iecx","title":"static func atomicCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"},{"path":"\/documentation\/atomics\/doubleword\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicCompareExchange(expected: DoubleWord, desired: DoubleWord, at: UnsafeMutablePointer<DoubleWord.AtomicRepresentation>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: DoubleWord)","type":"method"},{"path":"\/documentation\/atomics\/doubleword\/atomicrepresentation\/atomicexchange(_:at:ordering:)","title":"static func atomicExchange(DoubleWord, at: UnsafeMutablePointer<DoubleWord.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> DoubleWord","type":"method"},{"path":"\/documentation\/atomics\/doubleword\/atomicrepresentation\/atomicload(at:ordering:)","title":"static func atomicLoad(at: UnsafeMutablePointer<DoubleWord.AtomicRepresentation>, ordering: AtomicLoadOrdering) -> DoubleWord","type":"method"},{"path":"\/documentation\/atomics\/doubleword\/atomicrepresentation\/atomicstore(_:at:ordering:)","title":"static func atomicStore(DoubleWord, at: UnsafeMutablePointer<DoubleWord.AtomicRepresentation>, ordering: AtomicStoreOrdering)","type":"method"},{"path":"\/documentation\/atomics\/doubleword\/atomicrepresentation\/atomicweakcompareexchange(expected:desired:at:ordering:)","title":"static func atomicWeakCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"},{"path":"\/documentation\/atomics\/doubleword\/atomicrepresentation\/atomicweakcompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicWeakCompareExchange(expected: DoubleWord, desired: DoubleWord, at: UnsafeMutablePointer<DoubleWord.AtomicRepresentation>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: DoubleWord)","type":"method"}],"path":"\/documentation\/atomics\/doubleword\/atomicrepresentation\/atomicstorage-implementations","title":"AtomicStorage Implementations","type":"symbol"}],"path":"\/documentation\/atomics\/doubleword\/atomicrepresentation","title":"DoubleWord.AtomicRepresentation","type":"struct"}],"path":"\/documentation\/atomics\/doubleword\/atomicvalue-implementations","title":"AtomicValue Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomics\/doubleword\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/atomics\/doubleword\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomics\/doubleword\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/atomics\/doubleword\/==(_:_:)","title":"static func == (DoubleWord, DoubleWord) -> Bool","type":"op"}],"path":"\/documentation\/atomics\/doubleword\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/doubleword\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/atomics\/doubleword\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/atomics\/doubleword","title":"DoubleWord","type":"struct"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomics\/atomicoptionalrawrepresentablestorage\/init(_:)","title":"init(Optional<Wrapped>)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/atomicoptionalrawrepresentablestorage\/dispose()","title":"func dispose() -> Optional<Wrapped>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/atomics\/atomicoptionalrawrepresentablestorage\/value","title":"AtomicOptionalRawRepresentableStorage.Value","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/atomicoptionalrawrepresentablestorage\/atomiccompareexchange(expected:desired:at:ordering:)-3aodx","title":"static func atomicCompareExchange(expected: Optional<Wrapped>, desired: Optional<Wrapped>, at: UnsafeMutablePointer<AtomicOptionalRawRepresentableStorage<Wrapped>>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Optional<Wrapped>)","type":"method"},{"path":"\/documentation\/atomics\/atomicoptionalrawrepresentablestorage\/atomiccompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicCompareExchange(expected: Optional<Wrapped>, desired: Optional<Wrapped>, at: UnsafeMutablePointer<AtomicOptionalRawRepresentableStorage<Wrapped>>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: Optional<Wrapped>)","type":"method"},{"path":"\/documentation\/atomics\/atomicoptionalrawrepresentablestorage\/atomicexchange(_:at:ordering:)","title":"static func atomicExchange(Optional<Wrapped>, at: UnsafeMutablePointer<AtomicOptionalRawRepresentableStorage<Wrapped>>, ordering: AtomicUpdateOrdering) -> Optional<Wrapped>","type":"method"},{"path":"\/documentation\/atomics\/atomicoptionalrawrepresentablestorage\/atomicload(at:ordering:)","title":"static func atomicLoad(at: UnsafeMutablePointer<AtomicOptionalRawRepresentableStorage<Wrapped>>, ordering: AtomicLoadOrdering) -> Optional<Wrapped>","type":"method"},{"path":"\/documentation\/atomics\/atomicoptionalrawrepresentablestorage\/atomicstore(_:at:ordering:)","title":"static func atomicStore(Optional<Wrapped>, at: UnsafeMutablePointer<AtomicOptionalRawRepresentableStorage<Wrapped>>, ordering: AtomicStoreOrdering)","type":"method"},{"path":"\/documentation\/atomics\/atomicoptionalrawrepresentablestorage\/atomicweakcompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicWeakCompareExchange(expected: Optional<Wrapped>, desired: Optional<Wrapped>, at: UnsafeMutablePointer<AtomicOptionalRawRepresentableStorage<Wrapped>>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: Optional<Wrapped>)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/atomicoptionalrawrepresentablestorage\/atomiccompareexchange(expected:desired:at:ordering:)-hgj4","title":"static func atomicCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"},{"path":"\/documentation\/atomics\/atomicoptionalrawrepresentablestorage\/atomicweakcompareexchange(expected:desired:at:ordering:)","title":"static func atomicWeakCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"}],"path":"\/documentation\/atomics\/atomicoptionalrawrepresentablestorage\/atomicstorage-implementations","title":"AtomicStorage Implementations","type":"symbol"}],"path":"\/documentation\/atomics\/atomicoptionalrawrepresentablestorage","title":"AtomicOptionalRawRepresentableStorage","type":"struct"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Protocols","type":"groupMarker"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/rawrepresentable\/atomicoptionalrepresentation","title":"RawRepresentable.AtomicOptionalRepresentation","type":"typealias"},{"path":"\/documentation\/atomics\/swift\/rawrepresentable\/atomicrepresentation","title":"RawRepresentable.AtomicRepresentation","type":"typealias"}],"path":"\/documentation\/atomics\/swift\/rawrepresentable","title":"RawRepresentable","type":"extension"},{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/bool\/atomicrepresentation\/init(_:)","title":"init(Bool)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/bool\/atomicrepresentation\/dispose()","title":"func dispose() -> Bool.AtomicRepresentation.Value","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/bool\/atomicrepresentation\/value","title":"Bool.AtomicRepresentation.Value","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/bool\/atomicrepresentation\/atomicloadthenlogicaland(with:at:ordering:)","title":"static func atomicLoadThenLogicalAnd(with: Bool.AtomicRepresentation.Value, at: UnsafeMutablePointer<Bool.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> Bool.AtomicRepresentation.Value","type":"method"},{"path":"\/documentation\/atomics\/swift\/bool\/atomicrepresentation\/atomicloadthenlogicalor(with:at:ordering:)","title":"static func atomicLoadThenLogicalOr(with: Bool.AtomicRepresentation.Value, at: UnsafeMutablePointer<Bool.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> Bool.AtomicRepresentation.Value","type":"method"},{"path":"\/documentation\/atomics\/swift\/bool\/atomicrepresentation\/atomicloadthenlogicalxor(with:at:ordering:)","title":"static func atomicLoadThenLogicalXor(with: Bool.AtomicRepresentation.Value, at: UnsafeMutablePointer<Bool.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> Bool.AtomicRepresentation.Value","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/bool\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:ordering:)-7q60b","title":"static func atomicCompareExchange(expected: Bool, desired: Bool, at: UnsafeMutablePointer<Bool.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Bool)","type":"method"},{"path":"\/documentation\/atomics\/swift\/bool\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:ordering:)-8iy0z","title":"static func atomicCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/bool\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicCompareExchange(expected: Bool, desired: Bool, at: UnsafeMutablePointer<Bool.AtomicRepresentation>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: Bool)","type":"method"},{"path":"\/documentation\/atomics\/swift\/bool\/atomicrepresentation\/atomicexchange(_:at:ordering:)","title":"static func atomicExchange(Bool, at: UnsafeMutablePointer<Bool.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> Bool","type":"method"},{"path":"\/documentation\/atomics\/swift\/bool\/atomicrepresentation\/atomicload(at:ordering:)","title":"static func atomicLoad(at: UnsafeMutablePointer<Bool.AtomicRepresentation>, ordering: AtomicLoadOrdering) -> Bool","type":"method"},{"path":"\/documentation\/atomics\/swift\/bool\/atomicrepresentation\/atomicstore(_:at:ordering:)","title":"static func atomicStore(Bool, at: UnsafeMutablePointer<Bool.AtomicRepresentation>, ordering: AtomicStoreOrdering)","type":"method"},{"path":"\/documentation\/atomics\/swift\/bool\/atomicrepresentation\/atomicweakcompareexchange(expected:desired:at:ordering:)","title":"static func atomicWeakCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/bool\/atomicrepresentation\/atomicweakcompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicWeakCompareExchange(expected: Bool, desired: Bool, at: UnsafeMutablePointer<Bool.AtomicRepresentation>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: Bool)","type":"method"}],"path":"\/documentation\/atomics\/swift\/bool\/atomicrepresentation\/atomicstorage-implementations","title":"AtomicStorage Implementations","type":"symbol"}],"path":"\/documentation\/atomics\/swift\/bool\/atomicrepresentation","title":"Bool.AtomicRepresentation","type":"struct"}],"path":"\/documentation\/atomics\/swift\/bool\/atomicvalue-implementations","title":"AtomicValue Implementations","type":"symbol"}],"path":"\/documentation\/atomics\/swift\/bool","title":"Bool","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/int\/atomicrepresentation\/init(_:)","title":"init(Int.AtomicRepresentation.Value)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/int\/atomicrepresentation\/dispose()","title":"func dispose() -> Int.AtomicRepresentation.Value","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/int\/atomicrepresentation\/value","title":"Int.AtomicRepresentation.Value","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/int\/atomicrepresentation\/atomicloadthenbitwiseand(with:at:ordering:)","title":"static func atomicLoadThenBitwiseAnd(with: Int, at: UnsafeMutablePointer<Int.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> Int","type":"method"},{"path":"\/documentation\/atomics\/swift\/int\/atomicrepresentation\/atomicloadthenbitwiseor(with:at:ordering:)","title":"static func atomicLoadThenBitwiseOr(with: Int, at: UnsafeMutablePointer<Int.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> Int","type":"method"},{"path":"\/documentation\/atomics\/swift\/int\/atomicrepresentation\/atomicloadthenbitwisexor(with:at:ordering:)","title":"static func atomicLoadThenBitwiseXor(with: Int, at: UnsafeMutablePointer<Int.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> Int","type":"method"},{"path":"\/documentation\/atomics\/swift\/int\/atomicrepresentation\/atomicloadthenwrappingdecrement(by:at:ordering:)","title":"static func atomicLoadThenWrappingDecrement(by: Int, at: UnsafeMutablePointer<Int.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> Int","type":"method"},{"path":"\/documentation\/atomics\/swift\/int\/atomicrepresentation\/atomicloadthenwrappingincrement(by:at:ordering:)","title":"static func atomicLoadThenWrappingIncrement(by: Int, at: UnsafeMutablePointer<Int.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> Int","type":"method"}],"path":"\/documentation\/atomics\/swift\/int\/atomicrepresentation\/atomicintegerstorage-implementations","title":"AtomicIntegerStorage Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/int\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:ordering:)-4d8s3","title":"static func atomicCompareExchange(expected: Int, desired: Int, at: UnsafeMutablePointer<Int.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Int)","type":"method"},{"path":"\/documentation\/atomics\/swift\/int\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:ordering:)-5db66","title":"static func atomicCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/int\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicCompareExchange(expected: Int, desired: Int, at: UnsafeMutablePointer<Int.AtomicRepresentation>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: Int)","type":"method"},{"path":"\/documentation\/atomics\/swift\/int\/atomicrepresentation\/atomicexchange(_:at:ordering:)","title":"static func atomicExchange(Int, at: UnsafeMutablePointer<Int.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> Int","type":"method"},{"path":"\/documentation\/atomics\/swift\/int\/atomicrepresentation\/atomicload(at:ordering:)","title":"static func atomicLoad(at: UnsafeMutablePointer<Int.AtomicRepresentation>, ordering: AtomicLoadOrdering) -> Int","type":"method"},{"path":"\/documentation\/atomics\/swift\/int\/atomicrepresentation\/atomicstore(_:at:ordering:)","title":"static func atomicStore(Int, at: UnsafeMutablePointer<Int.AtomicRepresentation>, ordering: AtomicStoreOrdering)","type":"method"},{"path":"\/documentation\/atomics\/swift\/int\/atomicrepresentation\/atomicweakcompareexchange(expected:desired:at:ordering:)","title":"static func atomicWeakCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/int\/atomicrepresentation\/atomicweakcompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicWeakCompareExchange(expected: Int, desired: Int, at: UnsafeMutablePointer<Int.AtomicRepresentation>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: Int)","type":"method"}],"path":"\/documentation\/atomics\/swift\/int\/atomicrepresentation\/atomicstorage-implementations","title":"AtomicStorage Implementations","type":"symbol"}],"path":"\/documentation\/atomics\/swift\/int\/atomicrepresentation","title":"Int.AtomicRepresentation","type":"struct"}],"path":"\/documentation\/atomics\/swift\/int\/atomicvalue-implementations","title":"AtomicValue Implementations","type":"symbol"}],"path":"\/documentation\/atomics\/swift\/int","title":"Int","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/int16\/atomicrepresentation\/init(_:)","title":"init(Int16.AtomicRepresentation.Value)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/int16\/atomicrepresentation\/dispose()","title":"func dispose() -> Int16.AtomicRepresentation.Value","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/int16\/atomicrepresentation\/value","title":"Int16.AtomicRepresentation.Value","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/int16\/atomicrepresentation\/atomicloadthenbitwiseand(with:at:ordering:)","title":"static func atomicLoadThenBitwiseAnd(with: Int16, at: UnsafeMutablePointer<Int16.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> Int16","type":"method"},{"path":"\/documentation\/atomics\/swift\/int16\/atomicrepresentation\/atomicloadthenbitwiseor(with:at:ordering:)","title":"static func atomicLoadThenBitwiseOr(with: Int16, at: UnsafeMutablePointer<Int16.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> Int16","type":"method"},{"path":"\/documentation\/atomics\/swift\/int16\/atomicrepresentation\/atomicloadthenbitwisexor(with:at:ordering:)","title":"static func atomicLoadThenBitwiseXor(with: Int16, at: UnsafeMutablePointer<Int16.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> Int16","type":"method"},{"path":"\/documentation\/atomics\/swift\/int16\/atomicrepresentation\/atomicloadthenwrappingdecrement(by:at:ordering:)","title":"static func atomicLoadThenWrappingDecrement(by: Int16, at: UnsafeMutablePointer<Int16.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> Int16","type":"method"},{"path":"\/documentation\/atomics\/swift\/int16\/atomicrepresentation\/atomicloadthenwrappingincrement(by:at:ordering:)","title":"static func atomicLoadThenWrappingIncrement(by: Int16, at: UnsafeMutablePointer<Int16.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> Int16","type":"method"}],"path":"\/documentation\/atomics\/swift\/int16\/atomicrepresentation\/atomicintegerstorage-implementations","title":"AtomicIntegerStorage Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/int16\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:ordering:)-26dwi","title":"static func atomicCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/int16\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:ordering:)-7gyc3","title":"static func atomicCompareExchange(expected: Int16, desired: Int16, at: UnsafeMutablePointer<Int16.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Int16)","type":"method"},{"path":"\/documentation\/atomics\/swift\/int16\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicCompareExchange(expected: Int16, desired: Int16, at: UnsafeMutablePointer<Int16.AtomicRepresentation>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: Int16)","type":"method"},{"path":"\/documentation\/atomics\/swift\/int16\/atomicrepresentation\/atomicexchange(_:at:ordering:)","title":"static func atomicExchange(Int16, at: UnsafeMutablePointer<Int16.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> Int16","type":"method"},{"path":"\/documentation\/atomics\/swift\/int16\/atomicrepresentation\/atomicload(at:ordering:)","title":"static func atomicLoad(at: UnsafeMutablePointer<Int16.AtomicRepresentation>, ordering: AtomicLoadOrdering) -> Int16","type":"method"},{"path":"\/documentation\/atomics\/swift\/int16\/atomicrepresentation\/atomicstore(_:at:ordering:)","title":"static func atomicStore(Int16, at: UnsafeMutablePointer<Int16.AtomicRepresentation>, ordering: AtomicStoreOrdering)","type":"method"},{"path":"\/documentation\/atomics\/swift\/int16\/atomicrepresentation\/atomicweakcompareexchange(expected:desired:at:ordering:)","title":"static func atomicWeakCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/int16\/atomicrepresentation\/atomicweakcompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicWeakCompareExchange(expected: Int16, desired: Int16, at: UnsafeMutablePointer<Int16.AtomicRepresentation>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: Int16)","type":"method"}],"path":"\/documentation\/atomics\/swift\/int16\/atomicrepresentation\/atomicstorage-implementations","title":"AtomicStorage Implementations","type":"symbol"}],"path":"\/documentation\/atomics\/swift\/int16\/atomicrepresentation","title":"Int16.AtomicRepresentation","type":"struct"}],"path":"\/documentation\/atomics\/swift\/int16\/atomicvalue-implementations","title":"AtomicValue Implementations","type":"symbol"}],"path":"\/documentation\/atomics\/swift\/int16","title":"Int16","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/int32\/atomicrepresentation\/init(_:)","title":"init(Int32.AtomicRepresentation.Value)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/int32\/atomicrepresentation\/dispose()","title":"func dispose() -> Int32.AtomicRepresentation.Value","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/int32\/atomicrepresentation\/value","title":"Int32.AtomicRepresentation.Value","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/int32\/atomicrepresentation\/atomicloadthenbitwiseand(with:at:ordering:)","title":"static func atomicLoadThenBitwiseAnd(with: Int32, at: UnsafeMutablePointer<Int32.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> Int32","type":"method"},{"path":"\/documentation\/atomics\/swift\/int32\/atomicrepresentation\/atomicloadthenbitwiseor(with:at:ordering:)","title":"static func atomicLoadThenBitwiseOr(with: Int32, at: UnsafeMutablePointer<Int32.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> Int32","type":"method"},{"path":"\/documentation\/atomics\/swift\/int32\/atomicrepresentation\/atomicloadthenbitwisexor(with:at:ordering:)","title":"static func atomicLoadThenBitwiseXor(with: Int32, at: UnsafeMutablePointer<Int32.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> Int32","type":"method"},{"path":"\/documentation\/atomics\/swift\/int32\/atomicrepresentation\/atomicloadthenwrappingdecrement(by:at:ordering:)","title":"static func atomicLoadThenWrappingDecrement(by: Int32, at: UnsafeMutablePointer<Int32.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> Int32","type":"method"},{"path":"\/documentation\/atomics\/swift\/int32\/atomicrepresentation\/atomicloadthenwrappingincrement(by:at:ordering:)","title":"static func atomicLoadThenWrappingIncrement(by: Int32, at: UnsafeMutablePointer<Int32.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> Int32","type":"method"}],"path":"\/documentation\/atomics\/swift\/int32\/atomicrepresentation\/atomicintegerstorage-implementations","title":"AtomicIntegerStorage Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/int32\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:ordering:)-25prs","title":"static func atomicCompareExchange(expected: Int32, desired: Int32, at: UnsafeMutablePointer<Int32.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Int32)","type":"method"},{"path":"\/documentation\/atomics\/swift\/int32\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:ordering:)-89ha7","title":"static func atomicCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/int32\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicCompareExchange(expected: Int32, desired: Int32, at: UnsafeMutablePointer<Int32.AtomicRepresentation>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: Int32)","type":"method"},{"path":"\/documentation\/atomics\/swift\/int32\/atomicrepresentation\/atomicexchange(_:at:ordering:)","title":"static func atomicExchange(Int32, at: UnsafeMutablePointer<Int32.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> Int32","type":"method"},{"path":"\/documentation\/atomics\/swift\/int32\/atomicrepresentation\/atomicload(at:ordering:)","title":"static func atomicLoad(at: UnsafeMutablePointer<Int32.AtomicRepresentation>, ordering: AtomicLoadOrdering) -> Int32","type":"method"},{"path":"\/documentation\/atomics\/swift\/int32\/atomicrepresentation\/atomicstore(_:at:ordering:)","title":"static func atomicStore(Int32, at: UnsafeMutablePointer<Int32.AtomicRepresentation>, ordering: AtomicStoreOrdering)","type":"method"},{"path":"\/documentation\/atomics\/swift\/int32\/atomicrepresentation\/atomicweakcompareexchange(expected:desired:at:ordering:)","title":"static func atomicWeakCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/int32\/atomicrepresentation\/atomicweakcompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicWeakCompareExchange(expected: Int32, desired: Int32, at: UnsafeMutablePointer<Int32.AtomicRepresentation>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: Int32)","type":"method"}],"path":"\/documentation\/atomics\/swift\/int32\/atomicrepresentation\/atomicstorage-implementations","title":"AtomicStorage Implementations","type":"symbol"}],"path":"\/documentation\/atomics\/swift\/int32\/atomicrepresentation","title":"Int32.AtomicRepresentation","type":"struct"}],"path":"\/documentation\/atomics\/swift\/int32\/atomicvalue-implementations","title":"AtomicValue Implementations","type":"symbol"}],"path":"\/documentation\/atomics\/swift\/int32","title":"Int32","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/int64\/atomicrepresentation\/init(_:)","title":"init(Int64.AtomicRepresentation.Value)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/int64\/atomicrepresentation\/dispose()","title":"func dispose() -> Int64.AtomicRepresentation.Value","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/int64\/atomicrepresentation\/value","title":"Int64.AtomicRepresentation.Value","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/int64\/atomicrepresentation\/atomicloadthenbitwiseand(with:at:ordering:)","title":"static func atomicLoadThenBitwiseAnd(with: Int64, at: UnsafeMutablePointer<Int64.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> Int64","type":"method"},{"path":"\/documentation\/atomics\/swift\/int64\/atomicrepresentation\/atomicloadthenbitwiseor(with:at:ordering:)","title":"static func atomicLoadThenBitwiseOr(with: Int64, at: UnsafeMutablePointer<Int64.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> Int64","type":"method"},{"path":"\/documentation\/atomics\/swift\/int64\/atomicrepresentation\/atomicloadthenbitwisexor(with:at:ordering:)","title":"static func atomicLoadThenBitwiseXor(with: Int64, at: UnsafeMutablePointer<Int64.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> Int64","type":"method"},{"path":"\/documentation\/atomics\/swift\/int64\/atomicrepresentation\/atomicloadthenwrappingdecrement(by:at:ordering:)","title":"static func atomicLoadThenWrappingDecrement(by: Int64, at: UnsafeMutablePointer<Int64.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> Int64","type":"method"},{"path":"\/documentation\/atomics\/swift\/int64\/atomicrepresentation\/atomicloadthenwrappingincrement(by:at:ordering:)","title":"static func atomicLoadThenWrappingIncrement(by: Int64, at: UnsafeMutablePointer<Int64.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> Int64","type":"method"}],"path":"\/documentation\/atomics\/swift\/int64\/atomicrepresentation\/atomicintegerstorage-implementations","title":"AtomicIntegerStorage Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/int64\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:ordering:)-6ks4b","title":"static func atomicCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/int64\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:ordering:)-930xx","title":"static func atomicCompareExchange(expected: Int64, desired: Int64, at: UnsafeMutablePointer<Int64.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Int64)","type":"method"},{"path":"\/documentation\/atomics\/swift\/int64\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicCompareExchange(expected: Int64, desired: Int64, at: UnsafeMutablePointer<Int64.AtomicRepresentation>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: Int64)","type":"method"},{"path":"\/documentation\/atomics\/swift\/int64\/atomicrepresentation\/atomicexchange(_:at:ordering:)","title":"static func atomicExchange(Int64, at: UnsafeMutablePointer<Int64.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> Int64","type":"method"},{"path":"\/documentation\/atomics\/swift\/int64\/atomicrepresentation\/atomicload(at:ordering:)","title":"static func atomicLoad(at: UnsafeMutablePointer<Int64.AtomicRepresentation>, ordering: AtomicLoadOrdering) -> Int64","type":"method"},{"path":"\/documentation\/atomics\/swift\/int64\/atomicrepresentation\/atomicstore(_:at:ordering:)","title":"static func atomicStore(Int64, at: UnsafeMutablePointer<Int64.AtomicRepresentation>, ordering: AtomicStoreOrdering)","type":"method"},{"path":"\/documentation\/atomics\/swift\/int64\/atomicrepresentation\/atomicweakcompareexchange(expected:desired:at:ordering:)","title":"static func atomicWeakCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/int64\/atomicrepresentation\/atomicweakcompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicWeakCompareExchange(expected: Int64, desired: Int64, at: UnsafeMutablePointer<Int64.AtomicRepresentation>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: Int64)","type":"method"}],"path":"\/documentation\/atomics\/swift\/int64\/atomicrepresentation\/atomicstorage-implementations","title":"AtomicStorage Implementations","type":"symbol"}],"path":"\/documentation\/atomics\/swift\/int64\/atomicrepresentation","title":"Int64.AtomicRepresentation","type":"struct"}],"path":"\/documentation\/atomics\/swift\/int64\/atomicvalue-implementations","title":"AtomicValue Implementations","type":"symbol"}],"path":"\/documentation\/atomics\/swift\/int64","title":"Int64","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/int8\/atomicrepresentation\/init(_:)","title":"init(Int8.AtomicRepresentation.Value)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/int8\/atomicrepresentation\/dispose()","title":"func dispose() -> Int8.AtomicRepresentation.Value","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/int8\/atomicrepresentation\/value","title":"Int8.AtomicRepresentation.Value","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/int8\/atomicrepresentation\/atomicloadthenbitwiseand(with:at:ordering:)","title":"static func atomicLoadThenBitwiseAnd(with: Int8, at: UnsafeMutablePointer<Int8.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> Int8","type":"method"},{"path":"\/documentation\/atomics\/swift\/int8\/atomicrepresentation\/atomicloadthenbitwiseor(with:at:ordering:)","title":"static func atomicLoadThenBitwiseOr(with: Int8, at: UnsafeMutablePointer<Int8.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> Int8","type":"method"},{"path":"\/documentation\/atomics\/swift\/int8\/atomicrepresentation\/atomicloadthenbitwisexor(with:at:ordering:)","title":"static func atomicLoadThenBitwiseXor(with: Int8, at: UnsafeMutablePointer<Int8.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> Int8","type":"method"},{"path":"\/documentation\/atomics\/swift\/int8\/atomicrepresentation\/atomicloadthenwrappingdecrement(by:at:ordering:)","title":"static func atomicLoadThenWrappingDecrement(by: Int8, at: UnsafeMutablePointer<Int8.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> Int8","type":"method"},{"path":"\/documentation\/atomics\/swift\/int8\/atomicrepresentation\/atomicloadthenwrappingincrement(by:at:ordering:)","title":"static func atomicLoadThenWrappingIncrement(by: Int8, at: UnsafeMutablePointer<Int8.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> Int8","type":"method"}],"path":"\/documentation\/atomics\/swift\/int8\/atomicrepresentation\/atomicintegerstorage-implementations","title":"AtomicIntegerStorage Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/int8\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:ordering:)-2aj21","title":"static func atomicCompareExchange(expected: Int8, desired: Int8, at: UnsafeMutablePointer<Int8.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Int8)","type":"method"},{"path":"\/documentation\/atomics\/swift\/int8\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:ordering:)-3zbm9","title":"static func atomicCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/int8\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicCompareExchange(expected: Int8, desired: Int8, at: UnsafeMutablePointer<Int8.AtomicRepresentation>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: Int8)","type":"method"},{"path":"\/documentation\/atomics\/swift\/int8\/atomicrepresentation\/atomicexchange(_:at:ordering:)","title":"static func atomicExchange(Int8, at: UnsafeMutablePointer<Int8.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> Int8","type":"method"},{"path":"\/documentation\/atomics\/swift\/int8\/atomicrepresentation\/atomicload(at:ordering:)","title":"static func atomicLoad(at: UnsafeMutablePointer<Int8.AtomicRepresentation>, ordering: AtomicLoadOrdering) -> Int8","type":"method"},{"path":"\/documentation\/atomics\/swift\/int8\/atomicrepresentation\/atomicstore(_:at:ordering:)","title":"static func atomicStore(Int8, at: UnsafeMutablePointer<Int8.AtomicRepresentation>, ordering: AtomicStoreOrdering)","type":"method"},{"path":"\/documentation\/atomics\/swift\/int8\/atomicrepresentation\/atomicweakcompareexchange(expected:desired:at:ordering:)","title":"static func atomicWeakCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/int8\/atomicrepresentation\/atomicweakcompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicWeakCompareExchange(expected: Int8, desired: Int8, at: UnsafeMutablePointer<Int8.AtomicRepresentation>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: Int8)","type":"method"}],"path":"\/documentation\/atomics\/swift\/int8\/atomicrepresentation\/atomicstorage-implementations","title":"AtomicStorage Implementations","type":"symbol"}],"path":"\/documentation\/atomics\/swift\/int8\/atomicrepresentation","title":"Int8.AtomicRepresentation","type":"struct"}],"path":"\/documentation\/atomics\/swift\/int8\/atomicvalue-implementations","title":"AtomicValue Implementations","type":"symbol"}],"path":"\/documentation\/atomics\/swift\/int8","title":"Int8","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/uint\/atomicrepresentation\/init(_:)","title":"init(UInt.AtomicRepresentation.Value)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/uint\/atomicrepresentation\/dispose()","title":"func dispose() -> UInt.AtomicRepresentation.Value","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/uint\/atomicrepresentation\/value","title":"UInt.AtomicRepresentation.Value","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/uint\/atomicrepresentation\/atomicloadthenbitwiseand(with:at:ordering:)","title":"static func atomicLoadThenBitwiseAnd(with: UInt, at: UnsafeMutablePointer<UInt.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> UInt","type":"method"},{"path":"\/documentation\/atomics\/swift\/uint\/atomicrepresentation\/atomicloadthenbitwiseor(with:at:ordering:)","title":"static func atomicLoadThenBitwiseOr(with: UInt, at: UnsafeMutablePointer<UInt.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> UInt","type":"method"},{"path":"\/documentation\/atomics\/swift\/uint\/atomicrepresentation\/atomicloadthenbitwisexor(with:at:ordering:)","title":"static func atomicLoadThenBitwiseXor(with: UInt, at: UnsafeMutablePointer<UInt.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> UInt","type":"method"},{"path":"\/documentation\/atomics\/swift\/uint\/atomicrepresentation\/atomicloadthenwrappingdecrement(by:at:ordering:)","title":"static func atomicLoadThenWrappingDecrement(by: UInt, at: UnsafeMutablePointer<UInt.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> UInt","type":"method"},{"path":"\/documentation\/atomics\/swift\/uint\/atomicrepresentation\/atomicloadthenwrappingincrement(by:at:ordering:)","title":"static func atomicLoadThenWrappingIncrement(by: UInt, at: UnsafeMutablePointer<UInt.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> UInt","type":"method"}],"path":"\/documentation\/atomics\/swift\/uint\/atomicrepresentation\/atomicintegerstorage-implementations","title":"AtomicIntegerStorage Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/uint\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:ordering:)-137aj","title":"static func atomicCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/uint\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:ordering:)-248mv","title":"static func atomicCompareExchange(expected: UInt, desired: UInt, at: UnsafeMutablePointer<UInt.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: UInt)","type":"method"},{"path":"\/documentation\/atomics\/swift\/uint\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicCompareExchange(expected: UInt, desired: UInt, at: UnsafeMutablePointer<UInt.AtomicRepresentation>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: UInt)","type":"method"},{"path":"\/documentation\/atomics\/swift\/uint\/atomicrepresentation\/atomicexchange(_:at:ordering:)","title":"static func atomicExchange(UInt, at: UnsafeMutablePointer<UInt.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> UInt","type":"method"},{"path":"\/documentation\/atomics\/swift\/uint\/atomicrepresentation\/atomicload(at:ordering:)","title":"static func atomicLoad(at: UnsafeMutablePointer<UInt.AtomicRepresentation>, ordering: AtomicLoadOrdering) -> UInt","type":"method"},{"path":"\/documentation\/atomics\/swift\/uint\/atomicrepresentation\/atomicstore(_:at:ordering:)","title":"static func atomicStore(UInt, at: UnsafeMutablePointer<UInt.AtomicRepresentation>, ordering: AtomicStoreOrdering)","type":"method"},{"path":"\/documentation\/atomics\/swift\/uint\/atomicrepresentation\/atomicweakcompareexchange(expected:desired:at:ordering:)","title":"static func atomicWeakCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/uint\/atomicrepresentation\/atomicweakcompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicWeakCompareExchange(expected: UInt, desired: UInt, at: UnsafeMutablePointer<UInt.AtomicRepresentation>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: UInt)","type":"method"}],"path":"\/documentation\/atomics\/swift\/uint\/atomicrepresentation\/atomicstorage-implementations","title":"AtomicStorage Implementations","type":"symbol"}],"path":"\/documentation\/atomics\/swift\/uint\/atomicrepresentation","title":"UInt.AtomicRepresentation","type":"struct"}],"path":"\/documentation\/atomics\/swift\/uint\/atomicvalue-implementations","title":"AtomicValue Implementations","type":"symbol"}],"path":"\/documentation\/atomics\/swift\/uint","title":"UInt","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/uint16\/atomicrepresentation\/init(_:)","title":"init(UInt16.AtomicRepresentation.Value)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/uint16\/atomicrepresentation\/dispose()","title":"func dispose() -> UInt16.AtomicRepresentation.Value","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/uint16\/atomicrepresentation\/value","title":"UInt16.AtomicRepresentation.Value","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/uint16\/atomicrepresentation\/atomicloadthenbitwiseand(with:at:ordering:)","title":"static func atomicLoadThenBitwiseAnd(with: UInt16, at: UnsafeMutablePointer<UInt16.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> UInt16","type":"method"},{"path":"\/documentation\/atomics\/swift\/uint16\/atomicrepresentation\/atomicloadthenbitwiseor(with:at:ordering:)","title":"static func atomicLoadThenBitwiseOr(with: UInt16, at: UnsafeMutablePointer<UInt16.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> UInt16","type":"method"},{"path":"\/documentation\/atomics\/swift\/uint16\/atomicrepresentation\/atomicloadthenbitwisexor(with:at:ordering:)","title":"static func atomicLoadThenBitwiseXor(with: UInt16, at: UnsafeMutablePointer<UInt16.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> UInt16","type":"method"},{"path":"\/documentation\/atomics\/swift\/uint16\/atomicrepresentation\/atomicloadthenwrappingdecrement(by:at:ordering:)","title":"static func atomicLoadThenWrappingDecrement(by: UInt16, at: UnsafeMutablePointer<UInt16.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> UInt16","type":"method"},{"path":"\/documentation\/atomics\/swift\/uint16\/atomicrepresentation\/atomicloadthenwrappingincrement(by:at:ordering:)","title":"static func atomicLoadThenWrappingIncrement(by: UInt16, at: UnsafeMutablePointer<UInt16.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> UInt16","type":"method"}],"path":"\/documentation\/atomics\/swift\/uint16\/atomicrepresentation\/atomicintegerstorage-implementations","title":"AtomicIntegerStorage Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/uint16\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:ordering:)-7ebvi","title":"static func atomicCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/uint16\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:ordering:)-8axqh","title":"static func atomicCompareExchange(expected: UInt16, desired: UInt16, at: UnsafeMutablePointer<UInt16.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: UInt16)","type":"method"},{"path":"\/documentation\/atomics\/swift\/uint16\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicCompareExchange(expected: UInt16, desired: UInt16, at: UnsafeMutablePointer<UInt16.AtomicRepresentation>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: UInt16)","type":"method"},{"path":"\/documentation\/atomics\/swift\/uint16\/atomicrepresentation\/atomicexchange(_:at:ordering:)","title":"static func atomicExchange(UInt16, at: UnsafeMutablePointer<UInt16.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> UInt16","type":"method"},{"path":"\/documentation\/atomics\/swift\/uint16\/atomicrepresentation\/atomicload(at:ordering:)","title":"static func atomicLoad(at: UnsafeMutablePointer<UInt16.AtomicRepresentation>, ordering: AtomicLoadOrdering) -> UInt16","type":"method"},{"path":"\/documentation\/atomics\/swift\/uint16\/atomicrepresentation\/atomicstore(_:at:ordering:)","title":"static func atomicStore(UInt16, at: UnsafeMutablePointer<UInt16.AtomicRepresentation>, ordering: AtomicStoreOrdering)","type":"method"},{"path":"\/documentation\/atomics\/swift\/uint16\/atomicrepresentation\/atomicweakcompareexchange(expected:desired:at:ordering:)","title":"static func atomicWeakCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/uint16\/atomicrepresentation\/atomicweakcompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicWeakCompareExchange(expected: UInt16, desired: UInt16, at: UnsafeMutablePointer<UInt16.AtomicRepresentation>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: UInt16)","type":"method"}],"path":"\/documentation\/atomics\/swift\/uint16\/atomicrepresentation\/atomicstorage-implementations","title":"AtomicStorage Implementations","type":"symbol"}],"path":"\/documentation\/atomics\/swift\/uint16\/atomicrepresentation","title":"UInt16.AtomicRepresentation","type":"struct"}],"path":"\/documentation\/atomics\/swift\/uint16\/atomicvalue-implementations","title":"AtomicValue Implementations","type":"symbol"}],"path":"\/documentation\/atomics\/swift\/uint16","title":"UInt16","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/uint32\/atomicrepresentation\/init(_:)","title":"init(UInt32.AtomicRepresentation.Value)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/uint32\/atomicrepresentation\/dispose()","title":"func dispose() -> UInt32.AtomicRepresentation.Value","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/uint32\/atomicrepresentation\/value","title":"UInt32.AtomicRepresentation.Value","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/uint32\/atomicrepresentation\/atomicloadthenbitwiseand(with:at:ordering:)","title":"static func atomicLoadThenBitwiseAnd(with: UInt32, at: UnsafeMutablePointer<UInt32.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> UInt32","type":"method"},{"path":"\/documentation\/atomics\/swift\/uint32\/atomicrepresentation\/atomicloadthenbitwiseor(with:at:ordering:)","title":"static func atomicLoadThenBitwiseOr(with: UInt32, at: UnsafeMutablePointer<UInt32.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> UInt32","type":"method"},{"path":"\/documentation\/atomics\/swift\/uint32\/atomicrepresentation\/atomicloadthenbitwisexor(with:at:ordering:)","title":"static func atomicLoadThenBitwiseXor(with: UInt32, at: UnsafeMutablePointer<UInt32.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> UInt32","type":"method"},{"path":"\/documentation\/atomics\/swift\/uint32\/atomicrepresentation\/atomicloadthenwrappingdecrement(by:at:ordering:)","title":"static func atomicLoadThenWrappingDecrement(by: UInt32, at: UnsafeMutablePointer<UInt32.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> UInt32","type":"method"},{"path":"\/documentation\/atomics\/swift\/uint32\/atomicrepresentation\/atomicloadthenwrappingincrement(by:at:ordering:)","title":"static func atomicLoadThenWrappingIncrement(by: UInt32, at: UnsafeMutablePointer<UInt32.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> UInt32","type":"method"}],"path":"\/documentation\/atomics\/swift\/uint32\/atomicrepresentation\/atomicintegerstorage-implementations","title":"AtomicIntegerStorage Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/uint32\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:ordering:)-3nf1r","title":"static func atomicCompareExchange(expected: UInt32, desired: UInt32, at: UnsafeMutablePointer<UInt32.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: UInt32)","type":"method"},{"path":"\/documentation\/atomics\/swift\/uint32\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:ordering:)-jimp","title":"static func atomicCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/uint32\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicCompareExchange(expected: UInt32, desired: UInt32, at: UnsafeMutablePointer<UInt32.AtomicRepresentation>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: UInt32)","type":"method"},{"path":"\/documentation\/atomics\/swift\/uint32\/atomicrepresentation\/atomicexchange(_:at:ordering:)","title":"static func atomicExchange(UInt32, at: UnsafeMutablePointer<UInt32.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> UInt32","type":"method"},{"path":"\/documentation\/atomics\/swift\/uint32\/atomicrepresentation\/atomicload(at:ordering:)","title":"static func atomicLoad(at: UnsafeMutablePointer<UInt32.AtomicRepresentation>, ordering: AtomicLoadOrdering) -> UInt32","type":"method"},{"path":"\/documentation\/atomics\/swift\/uint32\/atomicrepresentation\/atomicstore(_:at:ordering:)","title":"static func atomicStore(UInt32, at: UnsafeMutablePointer<UInt32.AtomicRepresentation>, ordering: AtomicStoreOrdering)","type":"method"},{"path":"\/documentation\/atomics\/swift\/uint32\/atomicrepresentation\/atomicweakcompareexchange(expected:desired:at:ordering:)","title":"static func atomicWeakCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/uint32\/atomicrepresentation\/atomicweakcompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicWeakCompareExchange(expected: UInt32, desired: UInt32, at: UnsafeMutablePointer<UInt32.AtomicRepresentation>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: UInt32)","type":"method"}],"path":"\/documentation\/atomics\/swift\/uint32\/atomicrepresentation\/atomicstorage-implementations","title":"AtomicStorage Implementations","type":"symbol"}],"path":"\/documentation\/atomics\/swift\/uint32\/atomicrepresentation","title":"UInt32.AtomicRepresentation","type":"struct"}],"path":"\/documentation\/atomics\/swift\/uint32\/atomicvalue-implementations","title":"AtomicValue Implementations","type":"symbol"}],"path":"\/documentation\/atomics\/swift\/uint32","title":"UInt32","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/uint64\/atomicrepresentation\/init(_:)","title":"init(UInt64.AtomicRepresentation.Value)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/uint64\/atomicrepresentation\/dispose()","title":"func dispose() -> UInt64.AtomicRepresentation.Value","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/uint64\/atomicrepresentation\/value","title":"UInt64.AtomicRepresentation.Value","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/uint64\/atomicrepresentation\/atomicloadthenbitwiseand(with:at:ordering:)","title":"static func atomicLoadThenBitwiseAnd(with: UInt64, at: UnsafeMutablePointer<UInt64.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> UInt64","type":"method"},{"path":"\/documentation\/atomics\/swift\/uint64\/atomicrepresentation\/atomicloadthenbitwiseor(with:at:ordering:)","title":"static func atomicLoadThenBitwiseOr(with: UInt64, at: UnsafeMutablePointer<UInt64.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> UInt64","type":"method"},{"path":"\/documentation\/atomics\/swift\/uint64\/atomicrepresentation\/atomicloadthenbitwisexor(with:at:ordering:)","title":"static func atomicLoadThenBitwiseXor(with: UInt64, at: UnsafeMutablePointer<UInt64.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> UInt64","type":"method"},{"path":"\/documentation\/atomics\/swift\/uint64\/atomicrepresentation\/atomicloadthenwrappingdecrement(by:at:ordering:)","title":"static func atomicLoadThenWrappingDecrement(by: UInt64, at: UnsafeMutablePointer<UInt64.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> UInt64","type":"method"},{"path":"\/documentation\/atomics\/swift\/uint64\/atomicrepresentation\/atomicloadthenwrappingincrement(by:at:ordering:)","title":"static func atomicLoadThenWrappingIncrement(by: UInt64, at: UnsafeMutablePointer<UInt64.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> UInt64","type":"method"}],"path":"\/documentation\/atomics\/swift\/uint64\/atomicrepresentation\/atomicintegerstorage-implementations","title":"AtomicIntegerStorage Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/uint64\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:ordering:)-229st","title":"static func atomicCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/uint64\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:ordering:)-9z37m","title":"static func atomicCompareExchange(expected: UInt64, desired: UInt64, at: UnsafeMutablePointer<UInt64.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: UInt64)","type":"method"},{"path":"\/documentation\/atomics\/swift\/uint64\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicCompareExchange(expected: UInt64, desired: UInt64, at: UnsafeMutablePointer<UInt64.AtomicRepresentation>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: UInt64)","type":"method"},{"path":"\/documentation\/atomics\/swift\/uint64\/atomicrepresentation\/atomicexchange(_:at:ordering:)","title":"static func atomicExchange(UInt64, at: UnsafeMutablePointer<UInt64.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> UInt64","type":"method"},{"path":"\/documentation\/atomics\/swift\/uint64\/atomicrepresentation\/atomicload(at:ordering:)","title":"static func atomicLoad(at: UnsafeMutablePointer<UInt64.AtomicRepresentation>, ordering: AtomicLoadOrdering) -> UInt64","type":"method"},{"path":"\/documentation\/atomics\/swift\/uint64\/atomicrepresentation\/atomicstore(_:at:ordering:)","title":"static func atomicStore(UInt64, at: UnsafeMutablePointer<UInt64.AtomicRepresentation>, ordering: AtomicStoreOrdering)","type":"method"},{"path":"\/documentation\/atomics\/swift\/uint64\/atomicrepresentation\/atomicweakcompareexchange(expected:desired:at:ordering:)","title":"static func atomicWeakCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/uint64\/atomicrepresentation\/atomicweakcompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicWeakCompareExchange(expected: UInt64, desired: UInt64, at: UnsafeMutablePointer<UInt64.AtomicRepresentation>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: UInt64)","type":"method"}],"path":"\/documentation\/atomics\/swift\/uint64\/atomicrepresentation\/atomicstorage-implementations","title":"AtomicStorage Implementations","type":"symbol"}],"path":"\/documentation\/atomics\/swift\/uint64\/atomicrepresentation","title":"UInt64.AtomicRepresentation","type":"struct"}],"path":"\/documentation\/atomics\/swift\/uint64\/atomicvalue-implementations","title":"AtomicValue Implementations","type":"symbol"}],"path":"\/documentation\/atomics\/swift\/uint64","title":"UInt64","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/uint8\/atomicrepresentation\/init(_:)","title":"init(UInt8.AtomicRepresentation.Value)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/uint8\/atomicrepresentation\/dispose()","title":"func dispose() -> UInt8.AtomicRepresentation.Value","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/uint8\/atomicrepresentation\/value","title":"UInt8.AtomicRepresentation.Value","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/uint8\/atomicrepresentation\/atomicloadthenbitwiseand(with:at:ordering:)","title":"static func atomicLoadThenBitwiseAnd(with: UInt8, at: UnsafeMutablePointer<UInt8.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> UInt8","type":"method"},{"path":"\/documentation\/atomics\/swift\/uint8\/atomicrepresentation\/atomicloadthenbitwiseor(with:at:ordering:)","title":"static func atomicLoadThenBitwiseOr(with: UInt8, at: UnsafeMutablePointer<UInt8.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> UInt8","type":"method"},{"path":"\/documentation\/atomics\/swift\/uint8\/atomicrepresentation\/atomicloadthenbitwisexor(with:at:ordering:)","title":"static func atomicLoadThenBitwiseXor(with: UInt8, at: UnsafeMutablePointer<UInt8.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> UInt8","type":"method"},{"path":"\/documentation\/atomics\/swift\/uint8\/atomicrepresentation\/atomicloadthenwrappingdecrement(by:at:ordering:)","title":"static func atomicLoadThenWrappingDecrement(by: UInt8, at: UnsafeMutablePointer<UInt8.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> UInt8","type":"method"},{"path":"\/documentation\/atomics\/swift\/uint8\/atomicrepresentation\/atomicloadthenwrappingincrement(by:at:ordering:)","title":"static func atomicLoadThenWrappingIncrement(by: UInt8, at: UnsafeMutablePointer<UInt8.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> UInt8","type":"method"}],"path":"\/documentation\/atomics\/swift\/uint8\/atomicrepresentation\/atomicintegerstorage-implementations","title":"AtomicIntegerStorage Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/uint8\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:ordering:)-2zsk0","title":"static func atomicCompareExchange(expected: UInt8, desired: UInt8, at: UnsafeMutablePointer<UInt8.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: UInt8)","type":"method"},{"path":"\/documentation\/atomics\/swift\/uint8\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:ordering:)-y640","title":"static func atomicCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/uint8\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicCompareExchange(expected: UInt8, desired: UInt8, at: UnsafeMutablePointer<UInt8.AtomicRepresentation>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: UInt8)","type":"method"},{"path":"\/documentation\/atomics\/swift\/uint8\/atomicrepresentation\/atomicexchange(_:at:ordering:)","title":"static func atomicExchange(UInt8, at: UnsafeMutablePointer<UInt8.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> UInt8","type":"method"},{"path":"\/documentation\/atomics\/swift\/uint8\/atomicrepresentation\/atomicload(at:ordering:)","title":"static func atomicLoad(at: UnsafeMutablePointer<UInt8.AtomicRepresentation>, ordering: AtomicLoadOrdering) -> UInt8","type":"method"},{"path":"\/documentation\/atomics\/swift\/uint8\/atomicrepresentation\/atomicstore(_:at:ordering:)","title":"static func atomicStore(UInt8, at: UnsafeMutablePointer<UInt8.AtomicRepresentation>, ordering: AtomicStoreOrdering)","type":"method"},{"path":"\/documentation\/atomics\/swift\/uint8\/atomicrepresentation\/atomicweakcompareexchange(expected:desired:at:ordering:)","title":"static func atomicWeakCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/uint8\/atomicrepresentation\/atomicweakcompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicWeakCompareExchange(expected: UInt8, desired: UInt8, at: UnsafeMutablePointer<UInt8.AtomicRepresentation>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: UInt8)","type":"method"}],"path":"\/documentation\/atomics\/swift\/uint8\/atomicrepresentation\/atomicstorage-implementations","title":"AtomicStorage Implementations","type":"symbol"}],"path":"\/documentation\/atomics\/swift\/uint8\/atomicrepresentation","title":"UInt8.AtomicRepresentation","type":"struct"}],"path":"\/documentation\/atomics\/swift\/uint8\/atomicvalue-implementations","title":"AtomicValue Implementations","type":"symbol"}],"path":"\/documentation\/atomics\/swift\/uint8","title":"UInt8","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/unmanaged\/atomicoptionalrepresentation\/init(_:)","title":"init(Unmanaged<Instance>.AtomicOptionalRepresentation.Value)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/unmanaged\/atomicoptionalrepresentation\/dispose()","title":"func dispose() -> Unmanaged<Instance>.AtomicOptionalRepresentation.Value","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/unmanaged\/atomicoptionalrepresentation\/value","title":"Unmanaged.AtomicOptionalRepresentation.Value","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/unmanaged\/atomicoptionalrepresentation\/atomiccompareexchange(expected:desired:at:ordering:)-55y8o","title":"static func atomicCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/unmanaged\/atomicoptionalrepresentation\/atomiccompareexchange(expected:desired:at:ordering:)-61tj7","title":"static func atomicCompareExchange(expected: Unmanaged<Instance>.AtomicOptionalRepresentation.Value, desired: Unmanaged<Instance>.AtomicOptionalRepresentation.Value, at: UnsafeMutablePointer<Unmanaged<Instance>.AtomicOptionalRepresentation>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Unmanaged<Instance>.AtomicOptionalRepresentation.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/unmanaged\/atomicoptionalrepresentation\/atomiccompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicCompareExchange(expected: Unmanaged<Instance>.AtomicOptionalRepresentation.Value, desired: Unmanaged<Instance>.AtomicOptionalRepresentation.Value, at: UnsafeMutablePointer<Unmanaged<Instance>.AtomicOptionalRepresentation>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: Unmanaged<Instance>.AtomicOptionalRepresentation.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/unmanaged\/atomicoptionalrepresentation\/atomicexchange(_:at:ordering:)","title":"static func atomicExchange(Unmanaged<Instance>.AtomicOptionalRepresentation.Value, at: UnsafeMutablePointer<Unmanaged<Instance>.AtomicOptionalRepresentation>, ordering: AtomicUpdateOrdering) -> Unmanaged<Instance>.AtomicOptionalRepresentation.Value","type":"method"},{"path":"\/documentation\/atomics\/swift\/unmanaged\/atomicoptionalrepresentation\/atomicload(at:ordering:)","title":"static func atomicLoad(at: UnsafeMutablePointer<Unmanaged<Instance>.AtomicOptionalRepresentation>, ordering: AtomicLoadOrdering) -> Unmanaged<Instance>.AtomicOptionalRepresentation.Value","type":"method"},{"path":"\/documentation\/atomics\/swift\/unmanaged\/atomicoptionalrepresentation\/atomicstore(_:at:ordering:)","title":"static func atomicStore(Unmanaged<Instance>.AtomicOptionalRepresentation.Value, at: UnsafeMutablePointer<Unmanaged<Instance>.AtomicOptionalRepresentation>, ordering: AtomicStoreOrdering)","type":"method"},{"path":"\/documentation\/atomics\/swift\/unmanaged\/atomicoptionalrepresentation\/atomicweakcompareexchange(expected:desired:at:ordering:)","title":"static func atomicWeakCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/unmanaged\/atomicoptionalrepresentation\/atomicweakcompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicWeakCompareExchange(expected: Unmanaged<Instance>.AtomicOptionalRepresentation.Value, desired: Unmanaged<Instance>.AtomicOptionalRepresentation.Value, at: UnsafeMutablePointer<Unmanaged<Instance>.AtomicOptionalRepresentation>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: Unmanaged<Instance>.AtomicOptionalRepresentation.Value)","type":"method"}],"path":"\/documentation\/atomics\/swift\/unmanaged\/atomicoptionalrepresentation\/atomicstorage-implementations","title":"AtomicStorage Implementations","type":"symbol"}],"path":"\/documentation\/atomics\/swift\/unmanaged\/atomicoptionalrepresentation","title":"Unmanaged.AtomicOptionalRepresentation","type":"struct"}],"path":"\/documentation\/atomics\/swift\/unmanaged\/atomicoptionalwrappable-implementations","title":"AtomicOptionalWrappable Implementations","type":"symbol"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/unmanaged\/atomicrepresentation\/init(_:)","title":"init(Unmanaged<Instance>.AtomicRepresentation.Value)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/unmanaged\/atomicrepresentation\/dispose()","title":"func dispose() -> Unmanaged<Instance>.AtomicRepresentation.Value","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/unmanaged\/atomicrepresentation\/value","title":"Unmanaged.AtomicRepresentation.Value","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/unmanaged\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:ordering:)-62hsv","title":"static func atomicCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/unmanaged\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:ordering:)-c4sr","title":"static func atomicCompareExchange(expected: Unmanaged<Instance>.AtomicRepresentation.Value, desired: Unmanaged<Instance>.AtomicRepresentation.Value, at: UnsafeMutablePointer<Unmanaged<Instance>.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Unmanaged<Instance>.AtomicRepresentation.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/unmanaged\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicCompareExchange(expected: Unmanaged<Instance>.AtomicRepresentation.Value, desired: Unmanaged<Instance>.AtomicRepresentation.Value, at: UnsafeMutablePointer<Unmanaged<Instance>.AtomicRepresentation>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: Unmanaged<Instance>.AtomicRepresentation.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/unmanaged\/atomicrepresentation\/atomicexchange(_:at:ordering:)","title":"static func atomicExchange(Unmanaged<Instance>.AtomicRepresentation.Value, at: UnsafeMutablePointer<Unmanaged<Instance>.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> Unmanaged<Instance>.AtomicRepresentation.Value","type":"method"},{"path":"\/documentation\/atomics\/swift\/unmanaged\/atomicrepresentation\/atomicload(at:ordering:)","title":"static func atomicLoad(at: UnsafeMutablePointer<Unmanaged<Instance>.AtomicRepresentation>, ordering: AtomicLoadOrdering) -> Unmanaged<Instance>.AtomicRepresentation.Value","type":"method"},{"path":"\/documentation\/atomics\/swift\/unmanaged\/atomicrepresentation\/atomicstore(_:at:ordering:)","title":"static func atomicStore(Unmanaged<Instance>.AtomicRepresentation.Value, at: UnsafeMutablePointer<Unmanaged<Instance>.AtomicRepresentation>, ordering: AtomicStoreOrdering)","type":"method"},{"path":"\/documentation\/atomics\/swift\/unmanaged\/atomicrepresentation\/atomicweakcompareexchange(expected:desired:at:ordering:)","title":"static func atomicWeakCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/unmanaged\/atomicrepresentation\/atomicweakcompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicWeakCompareExchange(expected: Unmanaged<Instance>.AtomicRepresentation.Value, desired: Unmanaged<Instance>.AtomicRepresentation.Value, at: UnsafeMutablePointer<Unmanaged<Instance>.AtomicRepresentation>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: Unmanaged<Instance>.AtomicRepresentation.Value)","type":"method"}],"path":"\/documentation\/atomics\/swift\/unmanaged\/atomicrepresentation\/atomicstorage-implementations","title":"AtomicStorage Implementations","type":"symbol"}],"path":"\/documentation\/atomics\/swift\/unmanaged\/atomicrepresentation","title":"Unmanaged.AtomicRepresentation","type":"struct"}],"path":"\/documentation\/atomics\/swift\/unmanaged\/atomicvalue-implementations","title":"AtomicValue Implementations","type":"symbol"}],"path":"\/documentation\/atomics\/swift\/unmanaged","title":"Unmanaged","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/unsafemutablepointer\/atomicoptionalrepresentation\/init(_:)","title":"init(UnsafeMutablePointer<Pointee>.AtomicOptionalRepresentation.Value)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/unsafemutablepointer\/atomicoptionalrepresentation\/dispose()","title":"func dispose() -> UnsafeMutablePointer<Pointee>.AtomicOptionalRepresentation.Value","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/unsafemutablepointer\/atomicoptionalrepresentation\/value","title":"UnsafeMutablePointer.AtomicOptionalRepresentation.Value","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/unsafemutablepointer\/atomicoptionalrepresentation\/atomiccompareexchange(expected:desired:at:ordering:)-7oocc","title":"static func atomicCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsafemutablepointer\/atomicoptionalrepresentation\/atomiccompareexchange(expected:desired:at:ordering:)-8x99e","title":"static func atomicCompareExchange(expected: UnsafeMutablePointer<Pointee>.AtomicOptionalRepresentation.Value, desired: UnsafeMutablePointer<Pointee>.AtomicOptionalRepresentation.Value, at: UnsafeMutablePointer<UnsafeMutablePointer<Pointee>.AtomicOptionalRepresentation>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: UnsafeMutablePointer<Pointee>.AtomicOptionalRepresentation.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsafemutablepointer\/atomicoptionalrepresentation\/atomiccompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicCompareExchange(expected: UnsafeMutablePointer<Pointee>.AtomicOptionalRepresentation.Value, desired: UnsafeMutablePointer<Pointee>.AtomicOptionalRepresentation.Value, at: UnsafeMutablePointer<UnsafeMutablePointer<Pointee>.AtomicOptionalRepresentation>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: UnsafeMutablePointer<Pointee>.AtomicOptionalRepresentation.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsafemutablepointer\/atomicoptionalrepresentation\/atomicexchange(_:at:ordering:)","title":"static func atomicExchange(UnsafeMutablePointer<Pointee>.AtomicOptionalRepresentation.Value, at: UnsafeMutablePointer<UnsafeMutablePointer<Pointee>.AtomicOptionalRepresentation>, ordering: AtomicUpdateOrdering) -> UnsafeMutablePointer<Pointee>.AtomicOptionalRepresentation.Value","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsafemutablepointer\/atomicoptionalrepresentation\/atomicload(at:ordering:)","title":"static func atomicLoad(at: UnsafeMutablePointer<UnsafeMutablePointer<Pointee>.AtomicOptionalRepresentation>, ordering: AtomicLoadOrdering) -> UnsafeMutablePointer<Pointee>.AtomicOptionalRepresentation.Value","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsafemutablepointer\/atomicoptionalrepresentation\/atomicstore(_:at:ordering:)","title":"static func atomicStore(UnsafeMutablePointer<Pointee>.AtomicOptionalRepresentation.Value, at: UnsafeMutablePointer<UnsafeMutablePointer<Pointee>.AtomicOptionalRepresentation>, ordering: AtomicStoreOrdering)","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsafemutablepointer\/atomicoptionalrepresentation\/atomicweakcompareexchange(expected:desired:at:ordering:)","title":"static func atomicWeakCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsafemutablepointer\/atomicoptionalrepresentation\/atomicweakcompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicWeakCompareExchange(expected: UnsafeMutablePointer<Pointee>.AtomicOptionalRepresentation.Value, desired: UnsafeMutablePointer<Pointee>.AtomicOptionalRepresentation.Value, at: UnsafeMutablePointer<UnsafeMutablePointer<Pointee>.AtomicOptionalRepresentation>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: UnsafeMutablePointer<Pointee>.AtomicOptionalRepresentation.Value)","type":"method"}],"path":"\/documentation\/atomics\/swift\/unsafemutablepointer\/atomicoptionalrepresentation\/atomicstorage-implementations","title":"AtomicStorage Implementations","type":"symbol"}],"path":"\/documentation\/atomics\/swift\/unsafemutablepointer\/atomicoptionalrepresentation","title":"UnsafeMutablePointer.AtomicOptionalRepresentation","type":"struct"}],"path":"\/documentation\/atomics\/swift\/unsafemutablepointer\/atomicoptionalwrappable-implementations","title":"AtomicOptionalWrappable Implementations","type":"symbol"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/unsafemutablepointer\/atomicrepresentation\/init(_:)","title":"init(UnsafeMutablePointer<Pointee>.AtomicRepresentation.Value)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/unsafemutablepointer\/atomicrepresentation\/dispose()","title":"func dispose() -> UnsafeMutablePointer<Pointee>.AtomicRepresentation.Value","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/unsafemutablepointer\/atomicrepresentation\/value","title":"UnsafeMutablePointer.AtomicRepresentation.Value","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/unsafemutablepointer\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:ordering:)-3byu","title":"static func atomicCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsafemutablepointer\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:ordering:)-7bhbp","title":"static func atomicCompareExchange(expected: UnsafeMutablePointer<Pointee>.AtomicRepresentation.Value, desired: UnsafeMutablePointer<Pointee>.AtomicRepresentation.Value, at: UnsafeMutablePointer<UnsafeMutablePointer<Pointee>.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: UnsafeMutablePointer<Pointee>.AtomicRepresentation.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsafemutablepointer\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicCompareExchange(expected: UnsafeMutablePointer<Pointee>.AtomicRepresentation.Value, desired: UnsafeMutablePointer<Pointee>.AtomicRepresentation.Value, at: UnsafeMutablePointer<UnsafeMutablePointer<Pointee>.AtomicRepresentation>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: UnsafeMutablePointer<Pointee>.AtomicRepresentation.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsafemutablepointer\/atomicrepresentation\/atomicexchange(_:at:ordering:)","title":"static func atomicExchange(UnsafeMutablePointer<Pointee>.AtomicRepresentation.Value, at: UnsafeMutablePointer<UnsafeMutablePointer<Pointee>.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> UnsafeMutablePointer<Pointee>.AtomicRepresentation.Value","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsafemutablepointer\/atomicrepresentation\/atomicload(at:ordering:)","title":"static func atomicLoad(at: UnsafeMutablePointer<UnsafeMutablePointer<Pointee>.AtomicRepresentation>, ordering: AtomicLoadOrdering) -> UnsafeMutablePointer<Pointee>.AtomicRepresentation.Value","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsafemutablepointer\/atomicrepresentation\/atomicstore(_:at:ordering:)","title":"static func atomicStore(UnsafeMutablePointer<Pointee>.AtomicRepresentation.Value, at: UnsafeMutablePointer<UnsafeMutablePointer<Pointee>.AtomicRepresentation>, ordering: AtomicStoreOrdering)","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsafemutablepointer\/atomicrepresentation\/atomicweakcompareexchange(expected:desired:at:ordering:)","title":"static func atomicWeakCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsafemutablepointer\/atomicrepresentation\/atomicweakcompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicWeakCompareExchange(expected: UnsafeMutablePointer<Pointee>.AtomicRepresentation.Value, desired: UnsafeMutablePointer<Pointee>.AtomicRepresentation.Value, at: UnsafeMutablePointer<UnsafeMutablePointer<Pointee>.AtomicRepresentation>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: UnsafeMutablePointer<Pointee>.AtomicRepresentation.Value)","type":"method"}],"path":"\/documentation\/atomics\/swift\/unsafemutablepointer\/atomicrepresentation\/atomicstorage-implementations","title":"AtomicStorage Implementations","type":"symbol"}],"path":"\/documentation\/atomics\/swift\/unsafemutablepointer\/atomicrepresentation","title":"UnsafeMutablePointer.AtomicRepresentation","type":"struct"}],"path":"\/documentation\/atomics\/swift\/unsafemutablepointer\/atomicvalue-implementations","title":"AtomicValue Implementations","type":"symbol"}],"path":"\/documentation\/atomics\/swift\/unsafemutablepointer","title":"UnsafeMutablePointer","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/unsafemutablerawpointer\/atomicoptionalrepresentation\/init(_:)","title":"init(UnsafeMutableRawPointer.AtomicOptionalRepresentation.Value)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/unsafemutablerawpointer\/atomicoptionalrepresentation\/dispose()","title":"func dispose() -> UnsafeMutableRawPointer.AtomicOptionalRepresentation.Value","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/unsafemutablerawpointer\/atomicoptionalrepresentation\/value","title":"UnsafeMutableRawPointer.AtomicOptionalRepresentation.Value","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/unsafemutablerawpointer\/atomicoptionalrepresentation\/atomiccompareexchange(expected:desired:at:ordering:)-5c0gf","title":"static func atomicCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsafemutablerawpointer\/atomicoptionalrepresentation\/atomiccompareexchange(expected:desired:at:ordering:)-7lc8s","title":"static func atomicCompareExchange(expected: UnsafeMutableRawPointer.AtomicOptionalRepresentation.Value, desired: UnsafeMutableRawPointer.AtomicOptionalRepresentation.Value, at: UnsafeMutablePointer<UnsafeMutableRawPointer.AtomicOptionalRepresentation>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: UnsafeMutableRawPointer.AtomicOptionalRepresentation.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsafemutablerawpointer\/atomicoptionalrepresentation\/atomiccompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicCompareExchange(expected: UnsafeMutableRawPointer.AtomicOptionalRepresentation.Value, desired: UnsafeMutableRawPointer.AtomicOptionalRepresentation.Value, at: UnsafeMutablePointer<UnsafeMutableRawPointer.AtomicOptionalRepresentation>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: UnsafeMutableRawPointer.AtomicOptionalRepresentation.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsafemutablerawpointer\/atomicoptionalrepresentation\/atomicexchange(_:at:ordering:)","title":"static func atomicExchange(UnsafeMutableRawPointer.AtomicOptionalRepresentation.Value, at: UnsafeMutablePointer<UnsafeMutableRawPointer.AtomicOptionalRepresentation>, ordering: AtomicUpdateOrdering) -> UnsafeMutableRawPointer.AtomicOptionalRepresentation.Value","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsafemutablerawpointer\/atomicoptionalrepresentation\/atomicload(at:ordering:)","title":"static func atomicLoad(at: UnsafeMutablePointer<UnsafeMutableRawPointer.AtomicOptionalRepresentation>, ordering: AtomicLoadOrdering) -> UnsafeMutableRawPointer.AtomicOptionalRepresentation.Value","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsafemutablerawpointer\/atomicoptionalrepresentation\/atomicstore(_:at:ordering:)","title":"static func atomicStore(UnsafeMutableRawPointer.AtomicOptionalRepresentation.Value, at: UnsafeMutablePointer<UnsafeMutableRawPointer.AtomicOptionalRepresentation>, ordering: AtomicStoreOrdering)","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsafemutablerawpointer\/atomicoptionalrepresentation\/atomicweakcompareexchange(expected:desired:at:ordering:)","title":"static func atomicWeakCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsafemutablerawpointer\/atomicoptionalrepresentation\/atomicweakcompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicWeakCompareExchange(expected: UnsafeMutableRawPointer.AtomicOptionalRepresentation.Value, desired: UnsafeMutableRawPointer.AtomicOptionalRepresentation.Value, at: UnsafeMutablePointer<UnsafeMutableRawPointer.AtomicOptionalRepresentation>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: UnsafeMutableRawPointer.AtomicOptionalRepresentation.Value)","type":"method"}],"path":"\/documentation\/atomics\/swift\/unsafemutablerawpointer\/atomicoptionalrepresentation\/atomicstorage-implementations","title":"AtomicStorage Implementations","type":"symbol"}],"path":"\/documentation\/atomics\/swift\/unsafemutablerawpointer\/atomicoptionalrepresentation","title":"UnsafeMutableRawPointer.AtomicOptionalRepresentation","type":"struct"}],"path":"\/documentation\/atomics\/swift\/unsafemutablerawpointer\/atomicoptionalwrappable-implementations","title":"AtomicOptionalWrappable Implementations","type":"symbol"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/unsafemutablerawpointer\/atomicrepresentation\/init(_:)","title":"init(UnsafeMutableRawPointer.AtomicRepresentation.Value)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/unsafemutablerawpointer\/atomicrepresentation\/dispose()","title":"func dispose() -> UnsafeMutableRawPointer.AtomicRepresentation.Value","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/unsafemutablerawpointer\/atomicrepresentation\/value","title":"UnsafeMutableRawPointer.AtomicRepresentation.Value","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/unsafemutablerawpointer\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:ordering:)-3gib8","title":"static func atomicCompareExchange(expected: UnsafeMutableRawPointer.AtomicRepresentation.Value, desired: UnsafeMutableRawPointer.AtomicRepresentation.Value, at: UnsafeMutablePointer<UnsafeMutableRawPointer.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: UnsafeMutableRawPointer.AtomicRepresentation.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsafemutablerawpointer\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:ordering:)-6fabx","title":"static func atomicCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsafemutablerawpointer\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicCompareExchange(expected: UnsafeMutableRawPointer.AtomicRepresentation.Value, desired: UnsafeMutableRawPointer.AtomicRepresentation.Value, at: UnsafeMutablePointer<UnsafeMutableRawPointer.AtomicRepresentation>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: UnsafeMutableRawPointer.AtomicRepresentation.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsafemutablerawpointer\/atomicrepresentation\/atomicexchange(_:at:ordering:)","title":"static func atomicExchange(UnsafeMutableRawPointer.AtomicRepresentation.Value, at: UnsafeMutablePointer<UnsafeMutableRawPointer.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> UnsafeMutableRawPointer.AtomicRepresentation.Value","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsafemutablerawpointer\/atomicrepresentation\/atomicload(at:ordering:)","title":"static func atomicLoad(at: UnsafeMutablePointer<UnsafeMutableRawPointer.AtomicRepresentation>, ordering: AtomicLoadOrdering) -> UnsafeMutableRawPointer.AtomicRepresentation.Value","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsafemutablerawpointer\/atomicrepresentation\/atomicstore(_:at:ordering:)","title":"static func atomicStore(UnsafeMutableRawPointer.AtomicRepresentation.Value, at: UnsafeMutablePointer<UnsafeMutableRawPointer.AtomicRepresentation>, ordering: AtomicStoreOrdering)","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsafemutablerawpointer\/atomicrepresentation\/atomicweakcompareexchange(expected:desired:at:ordering:)","title":"static func atomicWeakCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsafemutablerawpointer\/atomicrepresentation\/atomicweakcompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicWeakCompareExchange(expected: UnsafeMutableRawPointer.AtomicRepresentation.Value, desired: UnsafeMutableRawPointer.AtomicRepresentation.Value, at: UnsafeMutablePointer<UnsafeMutableRawPointer.AtomicRepresentation>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: UnsafeMutableRawPointer.AtomicRepresentation.Value)","type":"method"}],"path":"\/documentation\/atomics\/swift\/unsafemutablerawpointer\/atomicrepresentation\/atomicstorage-implementations","title":"AtomicStorage Implementations","type":"symbol"}],"path":"\/documentation\/atomics\/swift\/unsafemutablerawpointer\/atomicrepresentation","title":"UnsafeMutableRawPointer.AtomicRepresentation","type":"struct"}],"path":"\/documentation\/atomics\/swift\/unsafemutablerawpointer\/atomicvalue-implementations","title":"AtomicValue Implementations","type":"symbol"}],"path":"\/documentation\/atomics\/swift\/unsafemutablerawpointer","title":"UnsafeMutableRawPointer","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/unsafepointer\/atomicoptionalrepresentation\/init(_:)","title":"init(UnsafePointer<Pointee>.AtomicOptionalRepresentation.Value)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/unsafepointer\/atomicoptionalrepresentation\/dispose()","title":"func dispose() -> UnsafePointer<Pointee>.AtomicOptionalRepresentation.Value","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/unsafepointer\/atomicoptionalrepresentation\/value","title":"UnsafePointer.AtomicOptionalRepresentation.Value","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/unsafepointer\/atomicoptionalrepresentation\/atomiccompareexchange(expected:desired:at:ordering:)-7xpar","title":"static func atomicCompareExchange(expected: UnsafePointer<Pointee>.AtomicOptionalRepresentation.Value, desired: UnsafePointer<Pointee>.AtomicOptionalRepresentation.Value, at: UnsafeMutablePointer<UnsafePointer<Pointee>.AtomicOptionalRepresentation>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: UnsafePointer<Pointee>.AtomicOptionalRepresentation.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsafepointer\/atomicoptionalrepresentation\/atomiccompareexchange(expected:desired:at:ordering:)-ze37","title":"static func atomicCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsafepointer\/atomicoptionalrepresentation\/atomiccompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicCompareExchange(expected: UnsafePointer<Pointee>.AtomicOptionalRepresentation.Value, desired: UnsafePointer<Pointee>.AtomicOptionalRepresentation.Value, at: UnsafeMutablePointer<UnsafePointer<Pointee>.AtomicOptionalRepresentation>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: UnsafePointer<Pointee>.AtomicOptionalRepresentation.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsafepointer\/atomicoptionalrepresentation\/atomicexchange(_:at:ordering:)","title":"static func atomicExchange(UnsafePointer<Pointee>.AtomicOptionalRepresentation.Value, at: UnsafeMutablePointer<UnsafePointer<Pointee>.AtomicOptionalRepresentation>, ordering: AtomicUpdateOrdering) -> UnsafePointer<Pointee>.AtomicOptionalRepresentation.Value","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsafepointer\/atomicoptionalrepresentation\/atomicload(at:ordering:)","title":"static func atomicLoad(at: UnsafeMutablePointer<UnsafePointer<Pointee>.AtomicOptionalRepresentation>, ordering: AtomicLoadOrdering) -> UnsafePointer<Pointee>.AtomicOptionalRepresentation.Value","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsafepointer\/atomicoptionalrepresentation\/atomicstore(_:at:ordering:)","title":"static func atomicStore(UnsafePointer<Pointee>.AtomicOptionalRepresentation.Value, at: UnsafeMutablePointer<UnsafePointer<Pointee>.AtomicOptionalRepresentation>, ordering: AtomicStoreOrdering)","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsafepointer\/atomicoptionalrepresentation\/atomicweakcompareexchange(expected:desired:at:ordering:)","title":"static func atomicWeakCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsafepointer\/atomicoptionalrepresentation\/atomicweakcompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicWeakCompareExchange(expected: UnsafePointer<Pointee>.AtomicOptionalRepresentation.Value, desired: UnsafePointer<Pointee>.AtomicOptionalRepresentation.Value, at: UnsafeMutablePointer<UnsafePointer<Pointee>.AtomicOptionalRepresentation>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: UnsafePointer<Pointee>.AtomicOptionalRepresentation.Value)","type":"method"}],"path":"\/documentation\/atomics\/swift\/unsafepointer\/atomicoptionalrepresentation\/atomicstorage-implementations","title":"AtomicStorage Implementations","type":"symbol"}],"path":"\/documentation\/atomics\/swift\/unsafepointer\/atomicoptionalrepresentation","title":"UnsafePointer.AtomicOptionalRepresentation","type":"struct"}],"path":"\/documentation\/atomics\/swift\/unsafepointer\/atomicoptionalwrappable-implementations","title":"AtomicOptionalWrappable Implementations","type":"symbol"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/unsafepointer\/atomicrepresentation\/init(_:)","title":"init(UnsafePointer<Pointee>.AtomicRepresentation.Value)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/unsafepointer\/atomicrepresentation\/dispose()","title":"func dispose() -> UnsafePointer<Pointee>.AtomicRepresentation.Value","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/unsafepointer\/atomicrepresentation\/value","title":"UnsafePointer.AtomicRepresentation.Value","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/unsafepointer\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:ordering:)-1u0qg","title":"static func atomicCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsafepointer\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:ordering:)-wwj3","title":"static func atomicCompareExchange(expected: UnsafePointer<Pointee>.AtomicRepresentation.Value, desired: UnsafePointer<Pointee>.AtomicRepresentation.Value, at: UnsafeMutablePointer<UnsafePointer<Pointee>.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: UnsafePointer<Pointee>.AtomicRepresentation.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsafepointer\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicCompareExchange(expected: UnsafePointer<Pointee>.AtomicRepresentation.Value, desired: UnsafePointer<Pointee>.AtomicRepresentation.Value, at: UnsafeMutablePointer<UnsafePointer<Pointee>.AtomicRepresentation>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: UnsafePointer<Pointee>.AtomicRepresentation.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsafepointer\/atomicrepresentation\/atomicexchange(_:at:ordering:)","title":"static func atomicExchange(UnsafePointer<Pointee>.AtomicRepresentation.Value, at: UnsafeMutablePointer<UnsafePointer<Pointee>.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> UnsafePointer<Pointee>.AtomicRepresentation.Value","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsafepointer\/atomicrepresentation\/atomicload(at:ordering:)","title":"static func atomicLoad(at: UnsafeMutablePointer<UnsafePointer<Pointee>.AtomicRepresentation>, ordering: AtomicLoadOrdering) -> UnsafePointer<Pointee>.AtomicRepresentation.Value","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsafepointer\/atomicrepresentation\/atomicstore(_:at:ordering:)","title":"static func atomicStore(UnsafePointer<Pointee>.AtomicRepresentation.Value, at: UnsafeMutablePointer<UnsafePointer<Pointee>.AtomicRepresentation>, ordering: AtomicStoreOrdering)","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsafepointer\/atomicrepresentation\/atomicweakcompareexchange(expected:desired:at:ordering:)","title":"static func atomicWeakCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsafepointer\/atomicrepresentation\/atomicweakcompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicWeakCompareExchange(expected: UnsafePointer<Pointee>.AtomicRepresentation.Value, desired: UnsafePointer<Pointee>.AtomicRepresentation.Value, at: UnsafeMutablePointer<UnsafePointer<Pointee>.AtomicRepresentation>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: UnsafePointer<Pointee>.AtomicRepresentation.Value)","type":"method"}],"path":"\/documentation\/atomics\/swift\/unsafepointer\/atomicrepresentation\/atomicstorage-implementations","title":"AtomicStorage Implementations","type":"symbol"}],"path":"\/documentation\/atomics\/swift\/unsafepointer\/atomicrepresentation","title":"UnsafePointer.AtomicRepresentation","type":"struct"}],"path":"\/documentation\/atomics\/swift\/unsafepointer\/atomicvalue-implementations","title":"AtomicValue Implementations","type":"symbol"}],"path":"\/documentation\/atomics\/swift\/unsafepointer","title":"UnsafePointer","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/unsaferawpointer\/atomicoptionalrepresentation\/init(_:)","title":"init(UnsafeRawPointer.AtomicOptionalRepresentation.Value)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/unsaferawpointer\/atomicoptionalrepresentation\/dispose()","title":"func dispose() -> UnsafeRawPointer.AtomicOptionalRepresentation.Value","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/unsaferawpointer\/atomicoptionalrepresentation\/value","title":"UnsafeRawPointer.AtomicOptionalRepresentation.Value","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/unsaferawpointer\/atomicoptionalrepresentation\/atomiccompareexchange(expected:desired:at:ordering:)-5xhxz","title":"static func atomicCompareExchange(expected: UnsafeRawPointer.AtomicOptionalRepresentation.Value, desired: UnsafeRawPointer.AtomicOptionalRepresentation.Value, at: UnsafeMutablePointer<UnsafeRawPointer.AtomicOptionalRepresentation>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: UnsafeRawPointer.AtomicOptionalRepresentation.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsaferawpointer\/atomicoptionalrepresentation\/atomiccompareexchange(expected:desired:at:ordering:)-8gyqd","title":"static func atomicCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsaferawpointer\/atomicoptionalrepresentation\/atomiccompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicCompareExchange(expected: UnsafeRawPointer.AtomicOptionalRepresentation.Value, desired: UnsafeRawPointer.AtomicOptionalRepresentation.Value, at: UnsafeMutablePointer<UnsafeRawPointer.AtomicOptionalRepresentation>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: UnsafeRawPointer.AtomicOptionalRepresentation.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsaferawpointer\/atomicoptionalrepresentation\/atomicexchange(_:at:ordering:)","title":"static func atomicExchange(UnsafeRawPointer.AtomicOptionalRepresentation.Value, at: UnsafeMutablePointer<UnsafeRawPointer.AtomicOptionalRepresentation>, ordering: AtomicUpdateOrdering) -> UnsafeRawPointer.AtomicOptionalRepresentation.Value","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsaferawpointer\/atomicoptionalrepresentation\/atomicload(at:ordering:)","title":"static func atomicLoad(at: UnsafeMutablePointer<UnsafeRawPointer.AtomicOptionalRepresentation>, ordering: AtomicLoadOrdering) -> UnsafeRawPointer.AtomicOptionalRepresentation.Value","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsaferawpointer\/atomicoptionalrepresentation\/atomicstore(_:at:ordering:)","title":"static func atomicStore(UnsafeRawPointer.AtomicOptionalRepresentation.Value, at: UnsafeMutablePointer<UnsafeRawPointer.AtomicOptionalRepresentation>, ordering: AtomicStoreOrdering)","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsaferawpointer\/atomicoptionalrepresentation\/atomicweakcompareexchange(expected:desired:at:ordering:)","title":"static func atomicWeakCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsaferawpointer\/atomicoptionalrepresentation\/atomicweakcompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicWeakCompareExchange(expected: UnsafeRawPointer.AtomicOptionalRepresentation.Value, desired: UnsafeRawPointer.AtomicOptionalRepresentation.Value, at: UnsafeMutablePointer<UnsafeRawPointer.AtomicOptionalRepresentation>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: UnsafeRawPointer.AtomicOptionalRepresentation.Value)","type":"method"}],"path":"\/documentation\/atomics\/swift\/unsaferawpointer\/atomicoptionalrepresentation\/atomicstorage-implementations","title":"AtomicStorage Implementations","type":"symbol"}],"path":"\/documentation\/atomics\/swift\/unsaferawpointer\/atomicoptionalrepresentation","title":"UnsafeRawPointer.AtomicOptionalRepresentation","type":"struct"}],"path":"\/documentation\/atomics\/swift\/unsaferawpointer\/atomicoptionalwrappable-implementations","title":"AtomicOptionalWrappable Implementations","type":"symbol"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/unsaferawpointer\/atomicrepresentation\/init(_:)","title":"init(UnsafeRawPointer.AtomicRepresentation.Value)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/unsaferawpointer\/atomicrepresentation\/dispose()","title":"func dispose() -> UnsafeRawPointer.AtomicRepresentation.Value","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/unsaferawpointer\/atomicrepresentation\/value","title":"UnsafeRawPointer.AtomicRepresentation.Value","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/unsaferawpointer\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:ordering:)-4tmo7","title":"static func atomicCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsaferawpointer\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:ordering:)-9lsf7","title":"static func atomicCompareExchange(expected: UnsafeRawPointer.AtomicRepresentation.Value, desired: UnsafeRawPointer.AtomicRepresentation.Value, at: UnsafeMutablePointer<UnsafeRawPointer.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: UnsafeRawPointer.AtomicRepresentation.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsaferawpointer\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicCompareExchange(expected: UnsafeRawPointer.AtomicRepresentation.Value, desired: UnsafeRawPointer.AtomicRepresentation.Value, at: UnsafeMutablePointer<UnsafeRawPointer.AtomicRepresentation>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: UnsafeRawPointer.AtomicRepresentation.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsaferawpointer\/atomicrepresentation\/atomicexchange(_:at:ordering:)","title":"static func atomicExchange(UnsafeRawPointer.AtomicRepresentation.Value, at: UnsafeMutablePointer<UnsafeRawPointer.AtomicRepresentation>, ordering: AtomicUpdateOrdering) -> UnsafeRawPointer.AtomicRepresentation.Value","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsaferawpointer\/atomicrepresentation\/atomicload(at:ordering:)","title":"static func atomicLoad(at: UnsafeMutablePointer<UnsafeRawPointer.AtomicRepresentation>, ordering: AtomicLoadOrdering) -> UnsafeRawPointer.AtomicRepresentation.Value","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsaferawpointer\/atomicrepresentation\/atomicstore(_:at:ordering:)","title":"static func atomicStore(UnsafeRawPointer.AtomicRepresentation.Value, at: UnsafeMutablePointer<UnsafeRawPointer.AtomicRepresentation>, ordering: AtomicStoreOrdering)","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsaferawpointer\/atomicrepresentation\/atomicweakcompareexchange(expected:desired:at:ordering:)","title":"static func atomicWeakCompareExchange(expected: Self.Value, desired: Self.Value, at: UnsafeMutablePointer<Self>, ordering: AtomicUpdateOrdering) -> (exchanged: Bool, original: Self.Value)","type":"method"},{"path":"\/documentation\/atomics\/swift\/unsaferawpointer\/atomicrepresentation\/atomicweakcompareexchange(expected:desired:at:successordering:failureordering:)","title":"static func atomicWeakCompareExchange(expected: UnsafeRawPointer.AtomicRepresentation.Value, desired: UnsafeRawPointer.AtomicRepresentation.Value, at: UnsafeMutablePointer<UnsafeRawPointer.AtomicRepresentation>, successOrdering: AtomicUpdateOrdering, failureOrdering: AtomicLoadOrdering) -> (exchanged: Bool, original: UnsafeRawPointer.AtomicRepresentation.Value)","type":"method"}],"path":"\/documentation\/atomics\/swift\/unsaferawpointer\/atomicrepresentation\/atomicstorage-implementations","title":"AtomicStorage Implementations","type":"symbol"}],"path":"\/documentation\/atomics\/swift\/unsaferawpointer\/atomicrepresentation","title":"UnsafeRawPointer.AtomicRepresentation","type":"struct"}],"path":"\/documentation\/atomics\/swift\/unsaferawpointer\/atomicvalue-implementations","title":"AtomicValue Implementations","type":"symbol"}],"path":"\/documentation\/atomics\/swift\/unsaferawpointer","title":"UnsafeRawPointer","type":"extension"},{"title":"Extended Enumerations","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/atomics\/swift\/optional\/atomicrepresentation","title":"Optional.AtomicRepresentation","type":"typealias"}],"path":"\/documentation\/atomics\/swift\/optional\/atomicvalue-implementations","title":"AtomicValue Implementations","type":"symbol"}],"path":"\/documentation\/atomics\/swift\/optional","title":"Optional","type":"extension"}],"path":"\/documentation\/atomics\/swift","title":"Swift","type":"extension"}],"path":"\/documentation\/atomics","title":"Atomics","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":2}}