{"includedArchiveIdentifiers":["Clocks"],"interfaceLanguages":{"swift":[{"children":[{"title":"Implementations","type":"groupMarker"},{"children":[{"title":"Creating immediate clocks","type":"groupMarker"},{"path":"\/documentation\/clocks\/immediateclock\/init(now:)","title":"init(now: ImmediateClock<Duration>.Instant)","type":"init"},{"path":"\/documentation\/clocks\/immediateclock\/init()","title":"convenience init()","type":"init"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/clocks\/immediateclock\/instant\/_(_:_:)-1tei9","title":"static func < (ImmediateClock<Duration>.Instant, ImmediateClock<Duration>.Instant) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/clocks\/immediateclock\/instant\/init(offset:)","title":"init(offset: Duration)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/clocks\/immediateclock\/instant\/advanced(by:)","title":"func advanced(by: Duration) -> ImmediateClock<Duration>.Instant","type":"method"},{"path":"\/documentation\/clocks\/immediateclock\/instant\/duration(to:)","title":"func duration(to: ImmediateClock<Duration>.Instant) -> Duration","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/clocks\/immediateclock\/instant\/'...(_:)-2zj78","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/clocks\/immediateclock\/instant\/'...(_:)-6hm64","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/clocks\/immediateclock\/instant\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/clocks\/immediateclock\/instant\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/clocks\/immediateclock\/instant\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/clocks\/immediateclock\/instant\/_(_:_:)-82qlj","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/clocks\/immediateclock\/instant\/_=(_:_:)-2wozt","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/clocks\/immediateclock\/instant\/_=(_:_:)-30bh1","title":"static func <= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/clocks\/immediateclock\/instant\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/clocks\/immediateclock\/instant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/clocks\/immediateclock\/instant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/clocks\/immediateclock\/instant","title":"ImmediateClock.Instant","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/clocks\/immediateclock\/minimumresolution","title":"var minimumResolution: Duration","type":"property"},{"path":"\/documentation\/clocks\/immediateclock\/now","title":"var now: ImmediateClock<Duration>.Instant","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/clocks\/immediateclock\/sleep(until:tolerance:)","title":"func sleep(until: ImmediateClock<Duration>.Instant, tolerance: Duration?) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/clocks\/immediateclock\/measure(_:)","title":"func measure(() throws -> Void) rethrows -> Self.Instant.Duration","type":"method"},{"path":"\/documentation\/clocks\/immediateclock\/measure(isolation:_:)","title":"func measure(isolation: isolated (any Actor)?, () async throws -> Void) async rethrows -> Self.Instant.Duration","type":"method"},{"path":"\/documentation\/clocks\/immediateclock\/sleep(for:tolerance:)","title":"func sleep(for: Self.Instant.Duration, tolerance: Self.Instant.Duration?) async throws","type":"method"},{"path":"\/documentation\/clocks\/immediateclock\/timer(interval:tolerance:)","title":"func timer(interval: Self.Duration, tolerance: Self.Duration?) -> _AsyncTimerSequence<AnyClock<Self.Duration>>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/clocks\/immediateclock\/immediate","title":"static var immediate: ImmediateClock<Duration>","type":"property"}],"path":"\/documentation\/clocks\/immediateclock\/clock-implementations","title":"Clock Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/clocks\/immediateclock\/measure(_:)","title":"func measure(() throws -> Void) rethrows -> Self.Instant.Duration","type":"method"},{"path":"\/documentation\/clocks\/immediateclock\/measure(isolation:_:)","title":"func measure(isolation: isolated (any Actor)?, () async throws -> Void) async rethrows -> Self.Instant.Duration","type":"method"},{"path":"\/documentation\/clocks\/immediateclock\/sleep(for:tolerance:)","title":"func sleep(for: Self.Instant.Duration, tolerance: Self.Instant.Duration?) async throws","type":"method"},{"path":"\/documentation\/clocks\/immediateclock\/timer(interval:tolerance:)","title":"func timer(interval: Self.Duration, tolerance: Self.Duration?) -> _AsyncTimerSequence<AnyClock<Self.Duration>>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/clocks\/immediateclock\/immediate","title":"static var immediate: ImmediateClock<Duration>","type":"property"}],"path":"\/documentation\/clocks\/immediateclock\/clock-implementations","title":"Clock Implementations","type":"symbol"}],"path":"\/documentation\/clocks\/immediateclock","title":"ImmediateClock","type":"class"},{"children":[{"title":"Creating test clocks","type":"groupMarker"},{"path":"\/documentation\/clocks\/testclock\/init(now:)","title":"init(now: TestClock<Duration>.Instant)","type":"init"},{"path":"\/documentation\/clocks\/testclock\/init()","title":"convenience init()","type":"init"},{"title":"Controlling time","type":"groupMarker"},{"path":"\/documentation\/clocks\/testclock\/advance(by:)","title":"func advance(by: Duration) async","type":"method"},{"path":"\/documentation\/clocks\/testclock\/advance(to:)","title":"func advance(to: TestClock<Duration>.Instant) async","type":"method"},{"title":"Checking for suspension","type":"groupMarker"},{"path":"\/documentation\/clocks\/testclock\/checksuspension()","title":"func checkSuspension() async throws","type":"method"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/clocks\/suspensionerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/clocks\/suspensionerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/clocks\/suspensionerror","title":"SuspensionError","type":"struct"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/clocks\/testclock\/instant\/_(_:_:)-924tb","title":"static func < (TestClock<Duration>.Instant, TestClock<Duration>.Instant) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/clocks\/testclock\/instant\/init(offset:)","title":"init(offset: Duration)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/clocks\/testclock\/instant\/advanced(by:)","title":"func advanced(by: Duration) -> TestClock<Duration>.Instant","type":"method"},{"path":"\/documentation\/clocks\/testclock\/instant\/duration(to:)","title":"func duration(to: TestClock<Duration>.Instant) -> Duration","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/clocks\/testclock\/instant\/'...(_:)-5ekw7","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/clocks\/testclock\/instant\/'...(_:)-5hcs3","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/clocks\/testclock\/instant\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/clocks\/testclock\/instant\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/clocks\/testclock\/instant\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/clocks\/testclock\/instant\/_(_:_:)-8c0yz","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/clocks\/testclock\/instant\/_=(_:_:)-4slqo","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/clocks\/testclock\/instant\/_=(_:_:)-7uxc8","title":"static func <= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/clocks\/testclock\/instant\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/clocks\/testclock\/instant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/clocks\/testclock\/instant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/clocks\/testclock\/instant","title":"TestClock.Instant","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/clocks\/testclock\/minimumresolution","title":"var minimumResolution: Duration","type":"property"},{"path":"\/documentation\/clocks\/testclock\/now","title":"var now: TestClock<Duration>.Instant","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/clocks\/testclock\/run(timeout:fileid:filepath:line:column:)","title":"func run(timeout: Duration, fileID: StaticString, filePath: StaticString, line: UInt, column: UInt) async","type":"method"},{"path":"\/documentation\/clocks\/testclock\/sleep(until:tolerance:)","title":"func sleep(until: TestClock<Duration>.Instant, tolerance: Duration?) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/clocks\/testclock\/measure(_:)","title":"func measure(() throws -> Void) rethrows -> Self.Instant.Duration","type":"method"},{"path":"\/documentation\/clocks\/testclock\/measure(isolation:_:)","title":"func measure(isolation: isolated (any Actor)?, () async throws -> Void) async rethrows -> Self.Instant.Duration","type":"method"},{"path":"\/documentation\/clocks\/testclock\/sleep(for:tolerance:)","title":"func sleep(for: Self.Instant.Duration, tolerance: Self.Instant.Duration?) async throws","type":"method"},{"path":"\/documentation\/clocks\/testclock\/timer(interval:tolerance:)","title":"func timer(interval: Self.Duration, tolerance: Self.Duration?) -> _AsyncTimerSequence<AnyClock<Self.Duration>>","type":"method"}],"path":"\/documentation\/clocks\/testclock\/clock-implementations","title":"Clock Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/clocks\/testclock\/measure(_:)","title":"func measure(() throws -> Void) rethrows -> Self.Instant.Duration","type":"method"},{"path":"\/documentation\/clocks\/testclock\/measure(isolation:_:)","title":"func measure(isolation: isolated (any Actor)?, () async throws -> Void) async rethrows -> Self.Instant.Duration","type":"method"},{"path":"\/documentation\/clocks\/testclock\/sleep(for:tolerance:)","title":"func sleep(for: Self.Instant.Duration, tolerance: Self.Instant.Duration?) async throws","type":"method"},{"path":"\/documentation\/clocks\/testclock\/timer(interval:tolerance:)","title":"func timer(interval: Self.Duration, tolerance: Self.Duration?) -> _AsyncTimerSequence<AnyClock<Self.Duration>>","type":"method"}],"path":"\/documentation\/clocks\/testclock\/clock-implementations","title":"Clock Implementations","type":"symbol"}],"path":"\/documentation\/clocks\/testclock","title":"TestClock","type":"class"},{"children":[{"title":"Creating unimplemented clocks","type":"groupMarker"},{"path":"\/documentation\/clocks\/unimplementedclock\/init(name:)","title":"init(name: String)","type":"init"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/clocks\/unimplementedclock\/instant\/_(_:_:)-5fer7","title":"static func < (UnimplementedClock<Duration>.Instant, UnimplementedClock<Duration>.Instant) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/clocks\/unimplementedclock\/instant\/advanced(by:)","title":"func advanced(by: Duration) -> UnimplementedClock<Duration>.Instant","type":"method"},{"path":"\/documentation\/clocks\/unimplementedclock\/instant\/duration(to:)","title":"func duration(to: UnimplementedClock<Duration>.Instant) -> Duration","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/clocks\/unimplementedclock\/instant\/'...(_:)-1toqy","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/clocks\/unimplementedclock\/instant\/'...(_:)-93oir","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/clocks\/unimplementedclock\/instant\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/clocks\/unimplementedclock\/instant\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/clocks\/unimplementedclock\/instant\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/clocks\/unimplementedclock\/instant\/_(_:_:)-9rlyq","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/clocks\/unimplementedclock\/instant\/_=(_:_:)-6r3ui","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/clocks\/unimplementedclock\/instant\/_=(_:_:)-6tck4","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/clocks\/unimplementedclock\/instant\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/clocks\/unimplementedclock\/instant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/clocks\/unimplementedclock\/instant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/clocks\/unimplementedclock\/instant","title":"UnimplementedClock.Instant","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/clocks\/unimplementedclock\/init(_:name:fileid:filepath:line:column:)","title":"init<C>(C, name: String, fileID: StaticString, filePath: StaticString, line: UInt, column: UInt)","type":"init"},{"path":"\/documentation\/clocks\/unimplementedclock\/init(name:now:fileid:filepath:line:column:)","title":"init(name: String, now: ImmediateClock<Duration>.Instant, fileID: StaticString, filePath: StaticString, line: UInt, column: UInt)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/clocks\/unimplementedclock\/minimumresolution","title":"var minimumResolution: Duration","type":"property"},{"path":"\/documentation\/clocks\/unimplementedclock\/now","title":"var now: UnimplementedClock<Duration>.Instant","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/clocks\/unimplementedclock\/sleep(until:tolerance:)","title":"func sleep(until: UnimplementedClock<Duration>.Instant, tolerance: Duration?) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/clocks\/unimplementedclock\/measure(_:)","title":"func measure(() throws -> Void) rethrows -> Self.Instant.Duration","type":"method"},{"path":"\/documentation\/clocks\/unimplementedclock\/measure(isolation:_:)","title":"func measure(isolation: isolated (any Actor)?, () async throws -> Void) async rethrows -> Self.Instant.Duration","type":"method"},{"path":"\/documentation\/clocks\/unimplementedclock\/sleep(for:tolerance:)","title":"func sleep(for: Self.Instant.Duration, tolerance: Self.Instant.Duration?) async throws","type":"method"},{"path":"\/documentation\/clocks\/unimplementedclock\/timer(interval:tolerance:)","title":"func timer(interval: Self.Duration, tolerance: Self.Duration?) -> _AsyncTimerSequence<AnyClock<Self.Duration>>","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/clocks\/unimplementedclock\/unimplemented(fileid:filepath:line:column:)","title":"static func unimplemented(fileID: StaticString, filePath: StaticString, line: UInt, column: UInt) -> Self","type":"method"}],"path":"\/documentation\/clocks\/unimplementedclock\/clock-implementations","title":"Clock Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/clocks\/unimplementedclock\/measure(_:)","title":"func measure(() throws -> Void) rethrows -> Self.Instant.Duration","type":"method"},{"path":"\/documentation\/clocks\/unimplementedclock\/measure(isolation:_:)","title":"func measure(isolation: isolated (any Actor)?, () async throws -> Void) async rethrows -> Self.Instant.Duration","type":"method"},{"path":"\/documentation\/clocks\/unimplementedclock\/sleep(for:tolerance:)","title":"func sleep(for: Self.Instant.Duration, tolerance: Self.Instant.Duration?) async throws","type":"method"},{"path":"\/documentation\/clocks\/unimplementedclock\/timer(interval:tolerance:)","title":"func timer(interval: Self.Duration, tolerance: Self.Duration?) -> _AsyncTimerSequence<AnyClock<Self.Duration>>","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/clocks\/unimplementedclock\/unimplemented(fileid:filepath:line:column:)","title":"static func unimplemented(fileID: StaticString, filePath: StaticString, line: UInt, column: UInt) -> Self","type":"method"}],"path":"\/documentation\/clocks\/unimplementedclock\/clock-implementations","title":"Clock Implementations","type":"symbol"}],"path":"\/documentation\/clocks\/unimplementedclock","title":"UnimplementedClock","type":"struct"},{"title":"Concrete erasure","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/clocks\/anyclock\/instant\/_(_:_:)-8j2kb","title":"static func < (AnyClock<Duration>.Instant, AnyClock<Duration>.Instant) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/clocks\/anyclock\/instant\/advanced(by:)","title":"func advanced(by: Duration) -> AnyClock<Duration>.Instant","type":"method"},{"path":"\/documentation\/clocks\/anyclock\/instant\/duration(to:)","title":"func duration(to: AnyClock<Duration>.Instant) -> Duration","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/clocks\/anyclock\/instant\/'...(_:)-5rn97","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/clocks\/anyclock\/instant\/'...(_:)-90mx6","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/clocks\/anyclock\/instant\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/clocks\/anyclock\/instant\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/clocks\/anyclock\/instant\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/clocks\/anyclock\/instant\/_(_:_:)-1w35t","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/clocks\/anyclock\/instant\/_=(_:_:)-2jns5","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/clocks\/anyclock\/instant\/_=(_:_:)-3lhau","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/clocks\/anyclock\/instant\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/clocks\/anyclock\/instant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/clocks\/anyclock\/instant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/clocks\/anyclock\/instant","title":"AnyClock.Instant","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/clocks\/anyclock\/init(_:)","title":"init<C>(C)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/clocks\/anyclock\/minimumresolution","title":"var minimumResolution: Duration","type":"property"},{"path":"\/documentation\/clocks\/anyclock\/now","title":"var now: AnyClock<Duration>.Instant","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/clocks\/anyclock\/sleep(until:tolerance:)","title":"func sleep(until: AnyClock<Duration>.Instant, tolerance: Duration?) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/clocks\/anyclock\/measure(_:)","title":"func measure(() throws -> Void) rethrows -> Self.Instant.Duration","type":"method"},{"path":"\/documentation\/clocks\/anyclock\/measure(isolation:_:)","title":"func measure(isolation: isolated (any Actor)?, () async throws -> Void) async rethrows -> Self.Instant.Duration","type":"method"},{"path":"\/documentation\/clocks\/anyclock\/sleep(for:tolerance:)","title":"func sleep(for: Self.Instant.Duration, tolerance: Self.Instant.Duration?) async throws","type":"method"},{"path":"\/documentation\/clocks\/anyclock\/timer(interval:tolerance:)","title":"func timer(interval: Self.Duration, tolerance: Self.Duration?) -> _AsyncTimerSequence<AnyClock<Self.Duration>>","type":"method"}],"path":"\/documentation\/clocks\/anyclock\/clock-implementations","title":"Clock Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/clocks\/anyclock\/measure(_:)","title":"func measure(() throws -> Void) rethrows -> Self.Instant.Duration","type":"method"},{"path":"\/documentation\/clocks\/anyclock\/measure(isolation:_:)","title":"func measure(isolation: isolated (any Actor)?, () async throws -> Void) async rethrows -> Self.Instant.Duration","type":"method"},{"path":"\/documentation\/clocks\/anyclock\/sleep(for:tolerance:)","title":"func sleep(for: Self.Instant.Duration, tolerance: Self.Instant.Duration?) async throws","type":"method"},{"path":"\/documentation\/clocks\/anyclock\/timer(interval:tolerance:)","title":"func timer(interval: Self.Duration, tolerance: Self.Duration?) -> _AsyncTimerSequence<AnyClock<Self.Duration>>","type":"method"}],"path":"\/documentation\/clocks\/anyclock\/clock-implementations","title":"Clock Implementations","type":"symbol"}],"path":"\/documentation\/clocks\/anyclock","title":"AnyClock","type":"class"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/clocks\/swiftuicore\/environmentvalues\/continuousclock","title":"var continuousClock: any Clock<Duration>","type":"property"},{"path":"\/documentation\/clocks\/swiftuicore\/environmentvalues\/suspendingclock","title":"var suspendingClock: any Clock<Duration>","type":"property"}],"path":"\/documentation\/clocks\/swiftuicore\/environmentvalues","title":"EnvironmentValues","type":"extension"}],"path":"\/documentation\/clocks\/swiftuicore","title":"SwiftUICore","type":"extension"},{"children":[{"title":"Extended Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/clocks\/_concurrency\/clock\/timer(interval:tolerance:)","title":"func timer(interval: Self.Duration, tolerance: Self.Duration?) -> _AsyncTimerSequence<AnyClock<Self.Duration>>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/clocks\/_concurrency\/clock\/immediate","title":"static var immediate: ImmediateClock<Duration>","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/clocks\/_concurrency\/clock\/unimplemented(fileid:filepath:line:column:)","title":"static func unimplemented(fileID: StaticString, filePath: StaticString, line: UInt, column: UInt) -> Self","type":"method"}],"path":"\/documentation\/clocks\/_concurrency\/clock","title":"Clock","type":"extension"}],"path":"\/documentation\/clocks\/_concurrency","title":"_Concurrency","type":"extension"}],"path":"\/documentation\/clocks","title":"Clocks","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":2}}