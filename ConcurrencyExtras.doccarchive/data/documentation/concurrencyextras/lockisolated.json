{"hierarchy":{"paths":[["doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras"]]},"sections":[],"variants":[{"paths":["\/documentation\/concurrencyextras\/lockisolated"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"topicSections":[{"identifiers":["doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/LockIsolated\/init(_:)"],"anchor":"Initializers","title":"Initializers","generated":true},{"anchor":"Instance-Properties","generated":true,"title":"Instance Properties","identifiers":["doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/LockIsolated\/value"]},{"generated":true,"title":"Instance Methods","identifiers":["doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/LockIsolated\/setValue(_:)","doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/LockIsolated\/withValue(_:)"],"anchor":"Instance-Methods"},{"title":"Subscripts","generated":true,"identifiers":["doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/LockIsolated\/subscript(dynamicMember:)"],"anchor":"Subscripts"}],"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/ConcurrencyExtras\/s8SendableP"],"kind":"relationships"}],"seeAlsoSections":[{"title":"Data races","anchor":"Data-races","identifiers":["doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/AnyHashableSendable"],"generated":true}],"identifier":{"url":"doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/LockIsolated","interfaceLanguage":"swift"},"metadata":{"symbolKind":"class","externalID":"s:17ConcurrencyExtras12LockIsolatedC","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"LockIsolated"}],"roleHeading":"Class","remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/.build\/checkouts\/swift-concurrency-extras\/Sources\/ConcurrencyExtras\/LockIsolated.swift#L8","fileName":"LockIsolated.swift"},"title":"LockIsolated","modules":[{"name":"ConcurrencyExtras"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"LockIsolated","kind":"identifier"}]},"kind":"symbol","abstract":[{"text":"A generic wrapper for isolating a mutable value with a lock.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"@dynamicMemberLookup","kind":"attribute"},{"kind":"text","text":" "},{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"LockIsolated","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Value"},{"text":">","kind":"text"}]}]},{"content":[{"text":"Overview","anchor":"overview","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"If you trust the sendability of the underlying value, consider using "},{"identifier":"doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/UncheckedSendable","type":"reference","isActive":true},{"type":"text","text":","},{"text":" ","type":"text"},{"text":"instead.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"references":{"doc://ConcurrencyExtras/documentation/ConcurrencyExtras/AnyHashableSendable":{"url":"\/documentation\/concurrencyextras\/anyhashablesendable","type":"topic","abstract":[{"text":"A type-erased hashable, sendable value.","type":"text"}],"title":"AnyHashableSendable","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyHashableSendable","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnyHashableSendable"}],"identifier":"doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/AnyHashableSendable","role":"symbol"},"doc://ConcurrencyExtras/documentation/ConcurrencyExtras/LockIsolated":{"identifier":"doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/LockIsolated","type":"topic","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockIsolated"}],"abstract":[{"text":"A generic wrapper for isolating a mutable value with a lock.","type":"text"}],"url":"\/documentation\/concurrencyextras\/lockisolated","title":"LockIsolated","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"LockIsolated"}]},"doc://ConcurrencyExtras/documentation/ConcurrencyExtras/LockIsolated/init(_:)":{"url":"\/documentation\/concurrencyextras\/lockisolated\/init(_:)","kind":"symbol","title":"init(_:)","abstract":[{"text":"Initializes lock-isolated state around a value.","type":"text"}],"type":"topic","identifier":"doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/LockIsolated\/init(_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"@autoclosure ","kind":"attribute"},{"text":"() ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"}],"role":"symbol"},"doc://ConcurrencyExtras/documentation/ConcurrencyExtras":{"url":"\/documentation\/concurrencyextras","abstract":[{"type":"text","text":"Useful, testable Swift concurrency."}],"role":"collection","type":"topic","title":"ConcurrencyExtras","identifier":"doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras","kind":"symbol"},"doc://ConcurrencyExtras/documentation/ConcurrencyExtras/UncheckedSendable":{"title":"UncheckedSendable","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UncheckedSendable"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/UncheckedSendable","navigatorTitle":[{"kind":"identifier","text":"UncheckedSendable"}],"url":"\/documentation\/concurrencyextras\/uncheckedsendable","deprecated":true,"abstract":[{"type":"text","text":"A generic wrapper for turning any non-"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" type into a "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" one, in an unchecked"},{"text":" ","type":"text"},{"text":"manner.","type":"text"}]},"doc://ConcurrencyExtras/documentation/ConcurrencyExtras/LockIsolated/subscript(dynamicMember:)":{"role":"symbol","title":"subscript(dynamicMember:)","type":"topic","identifier":"doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/LockIsolated\/subscript(dynamicMember:)","abstract":[],"url":"\/documentation\/concurrencyextras\/lockisolated\/subscript(dynamicmember:)","fragments":[{"kind":"keyword","text":"subscript"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Subject"},{"text":">(","kind":"text"},{"text":"dynamicMember","kind":"externalParam"},{"text":" _: ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Subject"},{"text":">) -> ","kind":"text"},{"text":"Subject","kind":"typeIdentifier"}],"kind":"symbol"},"doc://ConcurrencyExtras/documentation/ConcurrencyExtras/LockIsolated/setValue(_:)":{"identifier":"doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/LockIsolated\/setValue(_:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"setValue"},{"kind":"text","text":"("},{"kind":"attribute","text":"@autoclosure "},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"}],"title":"setValue(_:)","kind":"symbol","abstract":[{"text":"Overwrite the isolated value with a new value.","type":"text"}],"url":"\/documentation\/concurrencyextras\/lockisolated\/setvalue(_:)","role":"symbol"},"doc://ConcurrencyExtras/documentation/ConcurrencyExtras/LockIsolated/value":{"title":"value","type":"topic","role":"symbol","abstract":[{"text":"The lock-isolated value.","type":"text"}],"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"value","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}]},"identifier":"doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/LockIsolated\/value","url":"\/documentation\/concurrencyextras\/lockisolated\/value"},"doc://ConcurrencyExtras/documentation/ConcurrencyExtras/LockIsolated/withValue(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"withValue","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">(("},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"}],"url":"\/documentation\/concurrencyextras\/lockisolated\/withvalue(_:)","kind":"symbol","title":"withValue(_:)","role":"symbol","identifier":"doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/LockIsolated\/withValue(_:)","type":"topic","abstract":[{"text":"Perform an operation with isolated access to the underlying value.","type":"text"}]},"doc://ConcurrencyExtras/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/ConcurrencyExtras\/s8SendableP"}}}