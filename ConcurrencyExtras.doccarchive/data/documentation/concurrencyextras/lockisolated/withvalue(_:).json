{"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"metadata":{"externalID":"s:17ConcurrencyExtras12LockIsolatedC9withValueyqd__qd__xzYbKXEKs8SendableRd__lF","roleHeading":"Instance Method","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"withValue","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">((","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"}],"remoteSource":{"fileName":"LockIsolated.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/.build\/checkouts\/swift-concurrency-extras\/Sources\/ConcurrencyExtras\/LockIsolated.swift#L41"},"title":"withValue(_:)","symbolKind":"method","modules":[{"name":"ConcurrencyExtras"}]},"abstract":[{"text":"Perform an operation with isolated access to the underlying value.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withValue","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"operation"},{"text":": (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"T","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"content":[{"inlineContent":[{"text":"An operation to be performed on the the underlying value with a lock.","type":"text"}],"type":"paragraph"}],"name":"operation"}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"inlineContent":[{"text":"The result of the operation.","type":"text"}],"type":"paragraph"}]},{"content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"Useful for modifying a value in a single transaction."}],"type":"paragraph"},{"syntax":"swift","code":["\/\/ Isolate an integer for concurrent read\/write access:","var count = LockIsolated(0)","","func increment() {","  \/\/ Safely increment it:","  self.count.withValue { $0 += 1 }","}"],"type":"codeListing"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras","doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/LockIsolated"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/concurrencyextras\/lockisolated\/withvalue(_:)"]}],"identifier":{"url":"doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/LockIsolated\/withValue(_:)","interfaceLanguage":"swift"},"kind":"symbol","references":{"doc://ConcurrencyExtras/documentation/ConcurrencyExtras":{"url":"\/documentation\/concurrencyextras","abstract":[{"type":"text","text":"Useful, testable Swift concurrency."}],"role":"collection","type":"topic","title":"ConcurrencyExtras","identifier":"doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras","kind":"symbol"},"doc://ConcurrencyExtras/documentation/ConcurrencyExtras/LockIsolated":{"identifier":"doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/LockIsolated","type":"topic","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockIsolated"}],"abstract":[{"text":"A generic wrapper for isolating a mutable value with a lock.","type":"text"}],"url":"\/documentation\/concurrencyextras\/lockisolated","title":"LockIsolated","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"LockIsolated"}]},"doc://ConcurrencyExtras/documentation/ConcurrencyExtras/LockIsolated/withValue(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"withValue","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">(("},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"}],"url":"\/documentation\/concurrencyextras\/lockisolated\/withvalue(_:)","kind":"symbol","title":"withValue(_:)","role":"symbol","identifier":"doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/LockIsolated\/withValue(_:)","type":"topic","abstract":[{"text":"Perform an operation with isolated access to the underlying value.","type":"text"}]}}}