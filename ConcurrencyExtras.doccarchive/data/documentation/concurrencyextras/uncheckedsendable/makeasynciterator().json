{"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"makeAsyncIterator"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:17ConcurrencyExtras17UncheckedSendableV","kind":"typeIdentifier","text":"UncheckedSendable"},{"kind":"text","text":"<"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":">."},{"text":"AsyncIterator","kind":"typeIdentifier"}],"symbolKind":"method","externalID":"s:17ConcurrencyExtras17UncheckedSendableVAASciRzlE17makeAsyncIterator0fG0QzyF","role":"symbol","roleHeading":"Instance Method","remoteSource":{"fileName":"UncheckedSendable.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/.build\/checkouts\/swift-concurrency-extras\/Sources\/ConcurrencyExtras\/UncheckedSendable.swift#L62"},"title":"makeAsyncIterator()","modules":[{"name":"ConcurrencyExtras"}],"extendedModule":"ConcurrencyExtras","conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}},"hierarchy":{"paths":[["doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras","doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/UncheckedSendable","doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/UncheckedSendable\/AsyncSequence-Implementations"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/UncheckedSendable\/makeAsyncIterator()"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/concurrencyextras\/uncheckedsendable\/makeasynciterator()"]}],"abstract":[{"type":"text","text":"Inherited from "},{"code":"AsyncSequence.makeAsyncIterator()","type":"codeVoice"},{"text":".","type":"text"}],"sections":[],"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"makeAsyncIterator"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:17ConcurrencyExtras17UncheckedSendableV","kind":"typeIdentifier","identifier":"doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/UncheckedSendable","text":"UncheckedSendable"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">."},{"text":"AsyncIterator","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"references":{"doc://ConcurrencyExtras/documentation/ConcurrencyExtras/UncheckedSendable/makeAsyncIterator()":{"identifier":"doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/UncheckedSendable\/makeAsyncIterator()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"makeAsyncIterator","kind":"identifier"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:17ConcurrencyExtras17UncheckedSendableV","kind":"typeIdentifier","text":"UncheckedSendable"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":">."},{"text":"AsyncIterator","kind":"typeIdentifier"}],"abstract":[],"kind":"symbol","role":"symbol","url":"\/documentation\/concurrencyextras\/uncheckedsendable\/makeasynciterator()","type":"topic","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AsyncSequence"},{"text":".","type":"text"}]},"title":"makeAsyncIterator()"},"doc://ConcurrencyExtras/documentation/ConcurrencyExtras":{"url":"\/documentation\/concurrencyextras","abstract":[{"type":"text","text":"Useful, testable Swift concurrency."}],"role":"collection","type":"topic","title":"ConcurrencyExtras","identifier":"doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras","kind":"symbol"},"doc://ConcurrencyExtras/documentation/ConcurrencyExtras/UncheckedSendable/AsyncSequence-Implementations":{"identifier":"doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/UncheckedSendable\/AsyncSequence-Implementations","kind":"article","url":"\/documentation\/concurrencyextras\/uncheckedsendable\/asyncsequence-implementations","abstract":[],"role":"collectionGroup","type":"topic","title":"AsyncSequence Implementations"},"doc://ConcurrencyExtras/documentation/ConcurrencyExtras/UncheckedSendable":{"title":"UncheckedSendable","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UncheckedSendable"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/UncheckedSendable","navigatorTitle":[{"kind":"identifier","text":"UncheckedSendable"}],"url":"\/documentation\/concurrencyextras\/uncheckedsendable","deprecated":true,"abstract":[{"type":"text","text":"A generic wrapper for turning any non-"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" type into a "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" one, in an unchecked"},{"text":" ","type":"text"},{"text":"manner.","type":"text"}]}}}