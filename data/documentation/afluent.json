{"topicSections":[{"title":"Classes","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AnyCancellable","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousOperation","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/RetryByCountStrategy","doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueSubject","doc:\/\/Afluent\/documentation\/Afluent\/TaskState"]},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","doc:\/\/Afluent\/documentation\/Afluent\/TopLevelDecoder","doc:\/\/Afluent\/documentation\/Afluent\/TopLevelEncoder"],"title":"Protocols"},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence"],"title":"Structures"},{"title":"Functions","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/Race(cancelAllOnWin:_:against:)"]},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","doc:\/\/Afluent\/documentation\/Afluent\/AnyAsyncSequence","doc:\/\/Afluent\/documentation\/Afluent\/ClockDurationUnit","doc:\/\/Afluent\/documentation\/Afluent\/Deferred","doc:\/\/Afluent\/documentation\/Afluent\/Just"],"title":"Type Aliases"},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/SubscriptionDemand","doc:\/\/Afluent\/documentation\/Afluent\/UnretainedError","doc:\/\/Afluent\/documentation\/Afluent\/Workers"],"title":"Enumerations"},{"title":"Extended Modules","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/Foundation","doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency"]}],"sections":[],"hierarchy":{"paths":[[]]},"metadata":{"modules":[{"name":"Afluent"}],"title":"Afluent","externalID":"Afluent","symbolKind":"module","roleHeading":"Framework","role":"collection"},"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"paths":["\/documentation\/afluent"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","references":{"doc://Afluent/documentation/Afluent/TopLevelDecoder":{"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TopLevelDecoder","title":"TopLevelDecoder","url":"\/documentation\/afluent\/topleveldecoder","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TopLevelDecoder"}],"navigatorTitle":[{"text":"TopLevelDecoder","kind":"identifier"}],"kind":"symbol","abstract":[],"role":"symbol"},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork":{"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","title":"AnyAsynchronousUnitOfWork","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnyAsynchronousUnitOfWork"}],"type":"topic","navigatorTitle":[{"text":"AnyAsynchronousUnitOfWork","kind":"identifier"}],"role":"symbol","url":"\/documentation\/afluent\/anyasynchronousunitofwork","abstract":[{"text":"A unit of work that performs type erasure by wrapping another unit of work.","type":"text"}]},"doc://Afluent/documentation/Afluent/SingleValueChannel":{"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel","title":"SingleValueChannel","url":"\/documentation\/afluent\/singlevaluechannel","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"SingleValueChannel","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SingleValueChannel"}],"kind":"symbol","abstract":[{"type":"text","text":"A channel that emits a single value or an error."}],"role":"symbol"},"doc://Afluent/documentation/Afluent/DeferredTask":{"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","title":"DeferredTask","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"DeferredTask","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"DeferredTask","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"A structure representing a deferred asynchronous unit of work."}],"url":"\/documentation\/afluent\/deferredtask"},"doc://Afluent/documentation/Afluent/AUOWCache":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AUOWCache","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","title":"AUOWCache","kind":"symbol","navigatorTitle":[{"text":"AUOWCache","kind":"identifier"}],"type":"topic","url":"\/documentation\/afluent\/auowcache","abstract":[],"role":"symbol"},"doc://Afluent/documentation/Afluent/RetryStrategy":{"title":"RetryStrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","type":"topic","abstract":[{"type":"text","text":"A strategy for handling errors and determining whether to retry an operation."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"RetryStrategy","kind":"identifier"}],"url":"\/documentation\/afluent\/retrystrategy","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RetryStrategy"}],"role":"symbol"},"doc://Afluent/documentation/Afluent/RetryByCountStrategy":{"title":"RetryByCountStrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByCountStrategy","type":"topic","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"RetryStrategy"},{"text":" that limits the number of retry attempts.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RetryByCountStrategy"}],"kind":"symbol","url":"\/documentation\/afluent\/retrybycountstrategy","navigatorTitle":[{"kind":"identifier","text":"RetryByCountStrategy"}],"role":"symbol"},"doc://Afluent/documentation/Afluent/SerialTaskQueue":{"navigatorTitle":[{"text":"SerialTaskQueue","kind":"identifier"}],"title":"SerialTaskQueue","type":"topic","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","abstract":[{"type":"text","text":"A serial task queue that ensures tasks are executed one at a time."}],"url":"\/documentation\/afluent\/serialtaskqueue","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SerialTaskQueue"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/SingleValueSubject":{"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueSubject","title":"SingleValueSubject","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"SingleValueSubject","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"SingleValueSubject","kind":"identifier"}],"role":"symbol","abstract":[{"text":"A subject that emits a single value or an error.","type":"text"}],"url":"\/documentation\/afluent\/singlevaluesubject"},"doc://Afluent/documentation/Afluent/TopLevelEncoder":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"TopLevelEncoder"}],"url":"\/documentation\/afluent\/toplevelencoder","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TopLevelEncoder","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"TopLevelEncoder"}],"role":"symbol","title":"TopLevelEncoder","kind":"symbol","type":"topic"},"doc://Afluent/documentation/Afluent/AnyCancellable":{"navigatorTitle":[{"kind":"identifier","text":"AnyCancellable"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyCancellable","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"AnyCancellable","kind":"identifier"}],"title":"AnyCancellable","type":"topic","abstract":[{"text":"Stores an erased unit of work and provides a mechanism to cancel it","type":"text"}],"url":"\/documentation\/afluent\/anycancellable","role":"symbol"},"doc://Afluent/documentation/Afluent/SubscriptionDemand":{"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SubscriptionDemand","title":"SubscriptionDemand","url":"\/documentation\/afluent\/subscriptiondemand","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SubscriptionDemand","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SubscriptionDemand"}],"kind":"symbol","abstract":[],"role":"symbol"},"doc://Afluent/documentation/Afluent/_Concurrency":{"kind":"symbol","title":"_Concurrency","url":"\/documentation\/afluent\/_concurrency","type":"topic","abstract":[],"role":"collection","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency"},"doc://Afluent/documentation/Afluent/Foundation":{"role":"collection","url":"\/documentation\/afluent\/foundation","type":"topic","title":"Foundation","abstract":[],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Foundation"},"doc://Afluent/documentation/Afluent/Workers":{"abstract":[{"type":"text","text":"A namespace for grouping related asynchronous work operations."}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Workers"}],"kind":"symbol","title":"Workers","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Workers","navigatorTitle":[{"kind":"identifier","text":"Workers"}],"url":"\/documentation\/afluent\/workers","role":"symbol"},"doc://Afluent/documentation/Afluent/AsynchronousOperation":{"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousOperation","title":"AsynchronousOperation","role":"symbol","url":"\/documentation\/afluent\/asynchronousoperation","abstract":[{"text":"Reference to an operation that an operator would execute","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"AsynchronousOperation","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"AsynchronousOperation","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy":{"abstract":[{"text":"An exponential backoff strategy for retrying operations.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ExponentialBackoffStrategy"}],"title":"ExponentialBackoffStrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ExponentialBackoffStrategy"}],"type":"topic","url":"\/documentation\/afluent\/exponentialbackoffstrategy"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","abstract":[{"type":"text","text":"Represents an asynchronous unit of work."}],"role":"symbol","url":"\/documentation\/afluent\/asynchronousunitofwork","type":"topic","title":"AsynchronousUnitOfWork","navigatorTitle":[{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsynchronousUnitOfWork"}]},"doc://Afluent/documentation/Afluent/ClockDurationUnit":{"abstract":[],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"ClockDurationUnit"}],"kind":"symbol","title":"ClockDurationUnit","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ClockDurationUnit","navigatorTitle":[{"text":"ClockDurationUnit","kind":"identifier"}],"url":"\/documentation\/afluent\/clockdurationunit","role":"symbol"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence","url":"\/documentation\/afluent\/asynchronousunitofworksequence","title":"AsynchronousUnitOfWorkSequence","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A sequence that represents a single execution of an asynchronous unit of work."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/BackoffStrategy":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"BackoffStrategy","kind":"identifier"}],"abstract":[{"type":"text","text":"A protocol for implementing custom backoff strategies in retry mechanisms."}],"url":"\/documentation\/afluent\/backoffstrategy","navigatorTitle":[{"text":"BackoffStrategy","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","kind":"symbol","title":"BackoffStrategy","role":"symbol"},"doc://Afluent/documentation/Afluent/TaskState":{"title":"TaskState","kind":"symbol","role":"symbol","type":"topic","abstract":[],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"TaskState","kind":"identifier"}],"url":"\/documentation\/afluent\/taskstate","navigatorTitle":[{"text":"TaskState","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TaskState"},"doc://Afluent/documentation/Afluent/UnretainedError":{"abstract":[],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnretainedError"}],"kind":"symbol","title":"UnretainedError","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/UnretainedError","navigatorTitle":[{"kind":"identifier","text":"UnretainedError"}],"url":"\/documentation\/afluent\/unretainederror","role":"symbol"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","title":"RetryByBackoffStrategy","url":"\/documentation\/afluent\/retrybybackoffstrategy","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RetryByBackoffStrategy"}],"type":"topic","abstract":[{"text":"A retry strategy using a specified backoff strategy and clock.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RetryByBackoffStrategy"}]},"doc://Afluent/documentation/Afluent/AsyncSequences":{"type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"AsyncSequences","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences","navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","role":"symbol","title":"AsyncSequences","abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent":{"url":"\/documentation\/afluent","role":"collection","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol","title":"Afluent","abstract":[]},"doc://Afluent/documentation/Afluent/Race(cancelAllOnWin:_:against:)":{"kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Race"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"cancelAllOnWin"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", () ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"against"},{"kind":"text","text":": (() "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"text":")...) ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"T","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Executes two asynchronous tasks concurrently and returns the result of the first one that completes."}],"title":"Race(cancelAllOnWin:_:against:)","url":"\/documentation\/afluent\/race(cancelallonwin:_:against:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Race(cancelAllOnWin:_:against:)","type":"topic"},"doc://Afluent/documentation/Afluent/AnyAsyncSequence":{"abstract":[],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyAsyncSequence"}],"kind":"symbol","title":"AnyAsyncSequence","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsyncSequence","navigatorTitle":[{"text":"AnyAsyncSequence","kind":"identifier"}],"url":"\/documentation\/afluent\/anyasyncsequence","role":"symbol"},"doc://Afluent/documentation/Afluent/Just":{"abstract":[],"fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Just"}],"kind":"symbol","title":"Just","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Just","navigatorTitle":[{"kind":"identifier","text":"Just"}],"url":"\/documentation\/afluent\/just","role":"symbol"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache":{"abstract":[],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsynchronousUnitOfWorkCache"}],"kind":"symbol","title":"AsynchronousUnitOfWorkCache","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","navigatorTitle":[{"text":"AsynchronousUnitOfWorkCache","kind":"identifier"}],"url":"\/documentation\/afluent\/asynchronousunitofworkcache","role":"symbol"},"doc://Afluent/documentation/Afluent/Deferred":{"title":"Deferred","abstract":[],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Deferred"}],"kind":"symbol","url":"\/documentation\/afluent\/deferred","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Deferred","navigatorTitle":[{"kind":"identifier","text":"Deferred"}]}}}