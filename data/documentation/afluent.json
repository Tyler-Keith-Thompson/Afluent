{"metadata":{"role":"collection","externalID":"Afluent","roleHeading":"Framework","title":"Afluent","symbolKind":"module","modules":[{"name":"Afluent"}]},"hierarchy":{"paths":[[]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"topicSections":[{"title":"Classes","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AnyCancellable","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousOperation","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/RetryByCountStrategy","doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueSubject","doc:\/\/Afluent\/documentation\/Afluent\/TaskState"]},{"title":"Protocols","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","doc:\/\/Afluent\/documentation\/Afluent\/TopLevelDecoder","doc:\/\/Afluent\/documentation\/Afluent\/TopLevelEncoder"]},{"title":"Structures","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence"]},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/Race(cancelAllOnWin:_:against:)"],"title":"Functions"},{"title":"Type Aliases","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","doc:\/\/Afluent\/documentation\/Afluent\/AnyAsyncSequence","doc:\/\/Afluent\/documentation\/Afluent\/ClockDurationUnit","doc:\/\/Afluent\/documentation\/Afluent\/Deferred","doc:\/\/Afluent\/documentation\/Afluent\/Just"]},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/SubscriptionDemand","doc:\/\/Afluent\/documentation\/Afluent\/UnretainedError","doc:\/\/Afluent\/documentation\/Afluent\/Workers"],"title":"Enumerations"},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/Foundation","doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency"],"title":"Extended Modules"}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent"]}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent","interfaceLanguage":"swift"},"references":{"doc://Afluent/documentation/Afluent/AnyAsyncSequence":{"title":"AnyAsyncSequence","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsyncSequence","abstract":[],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"AnyAsyncSequence"}],"url":"\/documentation\/afluent\/anyasyncsequence","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyAsyncSequence","kind":"identifier"}],"role":"symbol","kind":"symbol"},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork":{"abstract":[{"type":"text","text":"A unit of work that performs type erasure by wrapping another unit of work."}],"type":"topic","kind":"symbol","role":"symbol","title":"AnyAsynchronousUnitOfWork","navigatorTitle":[{"text":"AnyAsynchronousUnitOfWork","kind":"identifier"}],"url":"\/documentation\/afluent\/anyasynchronousunitofwork","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnyAsynchronousUnitOfWork"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork"},"doc://Afluent/documentation/Afluent/_Concurrency":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency","kind":"symbol","title":"_Concurrency","abstract":[],"url":"\/documentation\/afluent\/_concurrency","role":"collection","type":"topic"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy":{"url":"\/documentation\/afluent\/retrybybackoffstrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RetryByBackoffStrategy"}],"navigatorTitle":[{"text":"RetryByBackoffStrategy","kind":"identifier"}],"abstract":[{"type":"text","text":"A retry strategy using a specified backoff strategy and clock."}],"kind":"symbol","role":"symbol","title":"RetryByBackoffStrategy","type":"topic"},"doc://Afluent/documentation/Afluent/UnretainedError":{"abstract":[],"role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"UnretainedError","kind":"identifier"}],"title":"UnretainedError","type":"topic","url":"\/documentation\/afluent\/unretainederror","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/UnretainedError","navigatorTitle":[{"text":"UnretainedError","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence":{"role":"symbol","title":"AsynchronousUnitOfWorkSequence","url":"\/documentation\/afluent\/asynchronousunitofworksequence","abstract":[{"type":"text","text":"A sequence that represents a single execution of an asynchronous unit of work."}],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWorkSequence"}]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache":{"url":"\/documentation\/afluent\/asynchronousunitofworkcache","abstract":[],"navigatorTitle":[{"text":"AsynchronousUnitOfWorkCache","kind":"identifier"}],"role":"symbol","kind":"symbol","title":"AsynchronousUnitOfWorkCache","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsynchronousUnitOfWorkCache"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache"},"doc://Afluent/documentation/Afluent/ClockDurationUnit":{"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ClockDurationUnit","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"ClockDurationUnit","kind":"identifier"}],"navigatorTitle":[{"text":"ClockDurationUnit","kind":"identifier"}],"abstract":[],"title":"ClockDurationUnit","type":"topic","url":"\/documentation\/afluent\/clockdurationunit","kind":"symbol"},"doc://Afluent/documentation/Afluent/SerialTaskQueue":{"role":"symbol","url":"\/documentation\/afluent\/serialtaskqueue","title":"SerialTaskQueue","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SerialTaskQueue"}],"abstract":[{"text":"A serial task queue that ensures tasks are executed one at a time.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","navigatorTitle":[{"text":"SerialTaskQueue","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","url":"\/documentation\/afluent\/asynchronousunitofwork","navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWork"}],"title":"AsynchronousUnitOfWork","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"role":"symbol","kind":"symbol","abstract":[{"text":"Represents an asynchronous unit of work.","type":"text"}]},"doc://Afluent/documentation/Afluent/TopLevelEncoder":{"kind":"symbol","url":"\/documentation\/afluent\/toplevelencoder","abstract":[],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"TopLevelEncoder","kind":"identifier"}],"navigatorTitle":[{"text":"TopLevelEncoder","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TopLevelEncoder","title":"TopLevelEncoder"},"doc://Afluent/documentation/Afluent/AUOWCache":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/afluent\/auowcache","abstract":[],"title":"AUOWCache","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"AUOWCache"}],"navigatorTitle":[{"kind":"identifier","text":"AUOWCache"}]},"doc://Afluent/documentation/Afluent/Workers":{"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Workers","navigatorTitle":[{"text":"Workers","kind":"identifier"}],"abstract":[{"type":"text","text":"A namespace for grouping related asynchronous work operations."}],"url":"\/documentation\/afluent\/workers","kind":"symbol","title":"Workers","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"Workers","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/RetryByCountStrategy":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByCountStrategy","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"RetryStrategy"},{"text":" that limits the number of retry attempts.","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RetryByCountStrategy"}],"navigatorTitle":[{"text":"RetryByCountStrategy","kind":"identifier"}],"url":"\/documentation\/afluent\/retrybycountstrategy","title":"RetryByCountStrategy","type":"topic"},"doc://Afluent/documentation/Afluent/DeferredTask":{"type":"topic","url":"\/documentation\/afluent\/deferredtask","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DeferredTask","kind":"identifier"}],"title":"DeferredTask","navigatorTitle":[{"text":"DeferredTask","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","abstract":[{"type":"text","text":"A structure representing a deferred asynchronous unit of work."}],"kind":"symbol","role":"symbol"},"doc://Afluent/documentation/Afluent/TaskState":{"url":"\/documentation\/afluent\/taskstate","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"TaskState"}],"role":"symbol","kind":"symbol","title":"TaskState","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TaskState","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TaskState"},"doc://Afluent/documentation/Afluent/Deferred":{"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Deferred","navigatorTitle":[{"kind":"identifier","text":"Deferred"}],"abstract":[],"url":"\/documentation\/afluent\/deferred","title":"Deferred","kind":"symbol","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Deferred"}]},"doc://Afluent/documentation/Afluent":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent","role":"collection","kind":"symbol","type":"topic","url":"\/documentation\/afluent","abstract":[],"title":"Afluent"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy":{"navigatorTitle":[{"text":"ExponentialBackoffStrategy","kind":"identifier"}],"url":"\/documentation\/afluent\/exponentialbackoffstrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","title":"ExponentialBackoffStrategy","kind":"symbol","role":"symbol","type":"topic","abstract":[{"type":"text","text":"An exponential backoff strategy for retrying operations."}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"ExponentialBackoffStrategy","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsynchronousOperation":{"url":"\/documentation\/afluent\/asynchronousoperation","abstract":[{"type":"text","text":"Reference to an operation that an operator would execute"}],"navigatorTitle":[{"kind":"identifier","text":"AsynchronousOperation"}],"role":"symbol","kind":"symbol","title":"AsynchronousOperation","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsynchronousOperation"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousOperation"},"doc://Afluent/documentation/Afluent/RetryStrategy":{"role":"symbol","title":"RetryStrategy","url":"\/documentation\/afluent\/retrystrategy","abstract":[{"text":"A strategy for handling errors and determining whether to retry an operation.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RetryStrategy"}],"navigatorTitle":[{"text":"RetryStrategy","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/Just":{"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Just","navigatorTitle":[{"kind":"identifier","text":"Just"}],"abstract":[],"url":"\/documentation\/afluent\/just","kind":"symbol","title":"Just","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"Just","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/TopLevelDecoder":{"url":"\/documentation\/afluent\/topleveldecoder","navigatorTitle":[{"text":"TopLevelDecoder","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TopLevelDecoder","type":"topic","kind":"symbol","title":"TopLevelDecoder","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"TopLevelDecoder","kind":"identifier"}],"abstract":[]},"doc://Afluent/documentation/Afluent/BackoffStrategy":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BackoffStrategy"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A protocol for implementing custom backoff strategies in retry mechanisms."}],"navigatorTitle":[{"kind":"identifier","text":"BackoffStrategy"}],"url":"\/documentation\/afluent\/backoffstrategy","title":"BackoffStrategy","type":"topic"},"doc://Afluent/documentation/Afluent/Foundation":{"kind":"symbol","role":"collection","abstract":[],"url":"\/documentation\/afluent\/foundation","title":"Foundation","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Foundation","type":"topic"},"doc://Afluent/documentation/Afluent/Race(cancelAllOnWin:_:against:)":{"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Race(cancelAllOnWin:_:against:)","abstract":[{"type":"text","text":"Executes two asynchronous tasks concurrently and returns the result of the first one that completes."}],"url":"\/documentation\/afluent\/race(cancelallonwin:_:against:)","title":"Race(cancelAllOnWin:_:against:)","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Race"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"cancelAllOnWin"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":", () "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"text":"against","kind":"externalParam"},{"text":": (() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":")...) ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}]},"doc://Afluent/documentation/Afluent/SubscriptionDemand":{"abstract":[],"kind":"symbol","url":"\/documentation\/afluent\/subscriptiondemand","navigatorTitle":[{"text":"SubscriptionDemand","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"SubscriptionDemand","kind":"identifier"}],"type":"topic","title":"SubscriptionDemand","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SubscriptionDemand","role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/afluent\/asyncsequences","abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"title":"AsyncSequences","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"AsyncSequences","kind":"identifier"}],"navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/SingleValueSubject":{"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"SingleValueSubject","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SingleValueSubject"}],"url":"\/documentation\/afluent\/singlevaluesubject","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueSubject","role":"symbol","abstract":[{"text":"A subject that emits a single value or an error.","type":"text"}],"title":"SingleValueSubject"},"doc://Afluent/documentation/Afluent/AnyCancellable":{"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"AnyCancellable","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyCancellable","kind":"symbol","role":"symbol","abstract":[{"text":"Stores an erased unit of work and provides a mechanism to cancel it","type":"text"}],"navigatorTitle":[{"text":"AnyCancellable","kind":"identifier"}],"title":"AnyCancellable","type":"topic","url":"\/documentation\/afluent\/anycancellable"},"doc://Afluent/documentation/Afluent/SingleValueChannel":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SingleValueChannel","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A channel that emits a single value or an error."}],"navigatorTitle":[{"kind":"identifier","text":"SingleValueChannel"}],"url":"\/documentation\/afluent\/singlevaluechannel","title":"SingleValueChannel","type":"topic"}}}