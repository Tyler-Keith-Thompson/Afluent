{"hierarchy":{"paths":[[]]},"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AnyCancellable","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousOperation","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/RetryByCountStrategy","doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueSubject","doc:\/\/Afluent\/documentation\/Afluent\/TaskState"],"title":"Classes"},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","doc:\/\/Afluent\/documentation\/Afluent\/TopLevelDecoder","doc:\/\/Afluent\/documentation\/Afluent\/TopLevelEncoder"],"title":"Protocols"},{"title":"Structures","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence"]},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/Race(cancelAllOnWin:_:against:)"],"title":"Functions"},{"title":"Type Aliases","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","doc:\/\/Afluent\/documentation\/Afluent\/AnyAsyncSequence","doc:\/\/Afluent\/documentation\/Afluent\/ClockDurationUnit","doc:\/\/Afluent\/documentation\/Afluent\/Deferred","doc:\/\/Afluent\/documentation\/Afluent\/Just"]},{"title":"Enumerations","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/SubscriptionDemand","doc:\/\/Afluent\/documentation\/Afluent\/UnretainedError","doc:\/\/Afluent\/documentation\/Afluent\/Workers"]},{"title":"Extended Modules","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/Foundation","doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency"]}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/afluent"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"modules":[{"name":"Afluent"}],"externalID":"Afluent","roleHeading":"Framework","symbolKind":"module","title":"Afluent","role":"collection"},"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://Afluent/documentation/Afluent/Just":{"type":"topic","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Just","abstract":[],"title":"Just","kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Just"}],"url":"\/documentation\/afluent\/just","navigatorTitle":[{"kind":"identifier","text":"Just"}]},"doc://Afluent/documentation/Afluent/SingleValueChannel":{"kind":"symbol","type":"topic","title":"SingleValueChannel","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel","url":"\/documentation\/afluent\/singlevaluechannel","abstract":[{"type":"text","text":"A channel that emits a single value or an error."}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"SingleValueChannel","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SingleValueChannel"}]},"doc://Afluent/documentation/Afluent/AsynchronousOperation":{"navigatorTitle":[{"text":"AsynchronousOperation","kind":"identifier"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousOperation","role":"symbol","title":"AsynchronousOperation","abstract":[{"text":"Reference to an operation that an operator would execute","type":"text"}],"url":"\/documentation\/afluent\/asynchronousoperation","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsynchronousOperation"}]},"doc://Afluent/documentation/Afluent/AsyncSequences":{"title":"AsyncSequences","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","url":"\/documentation\/afluent\/asyncsequences","abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"AsyncSequences","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/Deferred":{"type":"topic","kind":"symbol","title":"Deferred","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Deferred"}],"role":"symbol","navigatorTitle":[{"text":"Deferred","kind":"identifier"}],"url":"\/documentation\/afluent\/deferred","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Deferred","abstract":[]},"doc://Afluent/documentation/Afluent/Foundation":{"title":"Foundation","abstract":[],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Foundation","url":"\/documentation\/afluent\/foundation","role":"collection","kind":"symbol"},"doc://Afluent/documentation/Afluent/BackoffStrategy":{"abstract":[{"text":"A protocol for implementing custom backoff strategies in retry mechanisms.","type":"text"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","url":"\/documentation\/afluent\/backoffstrategy","navigatorTitle":[{"text":"BackoffStrategy","kind":"identifier"}],"kind":"symbol","title":"BackoffStrategy","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BackoffStrategy"}]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence","url":"\/documentation\/afluent\/asynchronousunitofworksequence","title":"AsynchronousUnitOfWorkSequence","abstract":[{"text":"A sequence that represents a single execution of an asynchronous unit of work.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWorkSequence"}],"kind":"symbol","type":"topic"},"doc://Afluent/documentation/Afluent/Workers":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A namespace for grouping related asynchronous work operations."}],"navigatorTitle":[{"kind":"identifier","text":"Workers"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Workers","kind":"identifier"}],"url":"\/documentation\/afluent\/workers","title":"Workers","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Workers","role":"symbol"},"doc://Afluent/documentation/Afluent/_Concurrency":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency","title":"_Concurrency","url":"\/documentation\/afluent\/_concurrency","type":"topic","kind":"symbol","abstract":[],"role":"collection"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","title":"RetryByBackoffStrategy","url":"\/documentation\/afluent\/retrybybackoffstrategy","role":"symbol","abstract":[{"text":"A retry strategy using a specified backoff strategy and clock.","type":"text"}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RetryByBackoffStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"RetryByBackoffStrategy","kind":"identifier"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/RetryStrategy":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RetryStrategy","kind":"identifier"}],"abstract":[{"type":"text","text":"A strategy for handling errors and determining whether to retry an operation."}],"navigatorTitle":[{"text":"RetryStrategy","kind":"identifier"}],"type":"topic","title":"RetryStrategy","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","role":"symbol","url":"\/documentation\/afluent\/retrystrategy"},"doc://Afluent/documentation/Afluent/DeferredTask":{"navigatorTitle":[{"kind":"identifier","text":"DeferredTask"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"DeferredTask","kind":"identifier"}],"url":"\/documentation\/afluent\/deferredtask","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A structure representing a deferred asynchronous unit of work."}],"title":"DeferredTask"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"kind":"symbol","type":"topic","title":"AsynchronousUnitOfWork","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","url":"\/documentation\/afluent\/asynchronousunitofwork","abstract":[{"type":"text","text":"Represents an asynchronous unit of work."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWork"}]},"doc://Afluent/documentation/Afluent/TopLevelDecoder":{"navigatorTitle":[{"kind":"identifier","text":"TopLevelDecoder"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TopLevelDecoder","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"TopLevelDecoder","kind":"identifier"}],"url":"\/documentation\/afluent\/topleveldecoder","kind":"symbol","role":"symbol","abstract":[],"title":"TopLevelDecoder"},"doc://Afluent/documentation/Afluent/Race(cancelAllOnWin:_:against:)":{"kind":"symbol","title":"Race(cancelAllOnWin:_:against:)","role":"symbol","url":"\/documentation\/afluent\/race(cancelallonwin:_:against:)","abstract":[{"type":"text","text":"Executes two asynchronous tasks concurrently and returns the result of the first one that completes."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Race(cancelAllOnWin:_:against:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"Race"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"cancelAllOnWin"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":", () ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":", ","kind":"text"},{"text":"against","kind":"externalParam"},{"kind":"text","text":": (() "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")...) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"T","kind":"typeIdentifier"}],"type":"topic"},"doc://Afluent/documentation/Afluent/AnyAsyncSequence":{"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsyncSequence","type":"topic","url":"\/documentation\/afluent\/anyasyncsequence","navigatorTitle":[{"text":"AnyAsyncSequence","kind":"identifier"}],"kind":"symbol","title":"AnyAsyncSequence","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"AnyAsyncSequence","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AUOWCache":{"kind":"symbol","type":"topic","title":"AUOWCache","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","url":"\/documentation\/afluent\/auowcache","abstract":[],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"AUOWCache"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AUOWCache"}]},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy":{"abstract":[{"text":"An exponential backoff strategy for retrying operations.","type":"text"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","url":"\/documentation\/afluent\/exponentialbackoffstrategy","navigatorTitle":[{"text":"ExponentialBackoffStrategy","kind":"identifier"}],"kind":"symbol","title":"ExponentialBackoffStrategy","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ExponentialBackoffStrategy","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","abstract":[{"type":"text","text":"A unit of work that performs type erasure by wrapping another unit of work."}],"url":"\/documentation\/afluent\/anyasynchronousunitofwork","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnyAsynchronousUnitOfWork"}],"navigatorTitle":[{"kind":"identifier","text":"AnyAsynchronousUnitOfWork"}],"type":"topic","kind":"symbol","title":"AnyAsynchronousUnitOfWork","role":"symbol"},"doc://Afluent/documentation/Afluent/TaskState":{"role":"symbol","type":"topic","url":"\/documentation\/afluent\/taskstate","abstract":[],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"TaskState"}],"navigatorTitle":[{"kind":"identifier","text":"TaskState"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TaskState","title":"TaskState","kind":"symbol"},"doc://Afluent/documentation/Afluent":{"title":"Afluent","type":"topic","kind":"symbol","url":"\/documentation\/afluent","abstract":[],"role":"collection","identifier":"doc:\/\/Afluent\/documentation\/Afluent"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache":{"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWorkCache","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWorkCache"}],"url":"\/documentation\/afluent\/asynchronousunitofworkcache","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","title":"AsynchronousUnitOfWorkCache","abstract":[],"kind":"symbol","type":"topic"},"doc://Afluent/documentation/Afluent/SerialTaskQueue":{"navigatorTitle":[{"text":"SerialTaskQueue","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","role":"symbol","title":"SerialTaskQueue","abstract":[{"type":"text","text":"A serial task queue that ensures tasks are executed one at a time."}],"url":"\/documentation\/afluent\/serialtaskqueue","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"SerialTaskQueue","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/SubscriptionDemand":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SubscriptionDemand","navigatorTitle":[{"kind":"identifier","text":"SubscriptionDemand"}],"abstract":[],"kind":"symbol","url":"\/documentation\/afluent\/subscriptiondemand","title":"SubscriptionDemand","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SubscriptionDemand","kind":"identifier"}],"type":"topic"},"doc://Afluent/documentation/Afluent/AnyCancellable":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyCancellable"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnyCancellable"}],"url":"\/documentation\/afluent\/anycancellable","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyCancellable","title":"AnyCancellable","abstract":[{"text":"Stores an erased unit of work and provides a mechanism to cancel it","type":"text"}],"kind":"symbol","type":"topic"},"doc://Afluent/documentation/Afluent/UnretainedError":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/UnretainedError","navigatorTitle":[{"text":"UnretainedError","kind":"identifier"}],"abstract":[],"type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"UnretainedError","kind":"identifier"}],"title":"UnretainedError","url":"\/documentation\/afluent\/unretainederror","kind":"symbol","role":"symbol"},"doc://Afluent/documentation/Afluent/TopLevelEncoder":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TopLevelEncoder","type":"topic","title":"TopLevelEncoder","kind":"symbol","navigatorTitle":[{"text":"TopLevelEncoder","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"TopLevelEncoder","kind":"identifier"}],"url":"\/documentation\/afluent\/toplevelencoder","abstract":[],"role":"symbol"},"doc://Afluent/documentation/Afluent/SingleValueSubject":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueSubject","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"SingleValueSubject","kind":"identifier"}],"abstract":[{"text":"A subject that emits a single value or an error.","type":"text"}],"role":"symbol","type":"topic","url":"\/documentation\/afluent\/singlevaluesubject","navigatorTitle":[{"kind":"identifier","text":"SingleValueSubject"}],"title":"SingleValueSubject","kind":"symbol"},"doc://Afluent/documentation/Afluent/ClockDurationUnit":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ClockDurationUnit","title":"ClockDurationUnit","url":"\/documentation\/afluent\/clockdurationunit","role":"symbol","abstract":[],"type":"topic","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ClockDurationUnit"}],"navigatorTitle":[{"kind":"identifier","text":"ClockDurationUnit"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/RetryByCountStrategy":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByCountStrategy","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"RetryStrategy"},{"type":"text","text":" that limits the number of retry attempts."}],"title":"RetryByCountStrategy","type":"topic","url":"\/documentation\/afluent\/retrybycountstrategy","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RetryByCountStrategy","kind":"identifier"}],"role":"symbol","kind":"symbol","navigatorTitle":[{"text":"RetryByCountStrategy","kind":"identifier"}]}}}