{"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent"},"metadata":{"role":"collection","modules":[{"name":"Afluent"}],"roleHeading":"Framework","symbolKind":"module","title":"Afluent","externalID":"Afluent"},"hierarchy":{"paths":[[]]},"variants":[{"paths":["\/documentation\/afluent"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"topicSections":[{"generated":true,"title":"Classes","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AnyCancellable","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousOperation","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/QueueExecutor","doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/RetryByCountStrategy","doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueSubject","doc:\/\/Afluent\/documentation\/Afluent\/TaskState"],"anchor":"Classes"},{"anchor":"Protocols","title":"Protocols","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","doc:\/\/Afluent\/documentation\/Afluent\/TopLevelDecoder","doc:\/\/Afluent\/documentation\/Afluent\/TopLevelEncoder"]},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence"],"title":"Structures","generated":true,"anchor":"Structures"},{"title":"Functions","generated":true,"anchor":"Functions","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/Race(cancelAllOnWin:_:against:)"]},{"anchor":"Type-Aliases","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","doc:\/\/Afluent\/documentation\/Afluent\/AnyAsyncSequence","doc:\/\/Afluent\/documentation\/Afluent\/ClockDurationUnit","doc:\/\/Afluent\/documentation\/Afluent\/Deferred","doc:\/\/Afluent\/documentation\/Afluent\/Just","doc:\/\/Afluent\/documentation\/Afluent\/TimerSequence"],"title":"Type Aliases","generated":true},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/SubscriptionDemand","doc:\/\/Afluent\/documentation\/Afluent\/TimeoutError","doc:\/\/Afluent\/documentation\/Afluent\/UnretainedError","doc:\/\/Afluent\/documentation\/Afluent\/Workers"],"anchor":"Enumerations","title":"Enumerations","generated":true},{"anchor":"Extended-Modules","title":"Extended Modules","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/Foundation","doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency"]}],"kind":"symbol","references":{"doc://Afluent/documentation/Afluent/TimerSequence":{"role":"symbol","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TimerSequence","url":"\/documentation\/afluent\/timersequence","title":"TimerSequence","kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TimerSequence","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"TimerSequence"}],"abstract":[]},"doc://Afluent/documentation/Afluent/RetryStrategy":{"abstract":[{"type":"text","text":"A strategy for handling errors and determining whether to retry an operation."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RetryStrategy"}],"navigatorTitle":[{"text":"RetryStrategy","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","kind":"symbol","url":"\/documentation\/afluent\/retrystrategy","role":"symbol","title":"RetryStrategy","type":"topic"},"doc://Afluent/documentation/Afluent/RetryByCountStrategy":{"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RetryByCountStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"RetryByCountStrategy"}],"url":"\/documentation\/afluent\/retrybycountstrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByCountStrategy","kind":"symbol","title":"RetryByCountStrategy","abstract":[{"text":"A ","type":"text"},{"code":"RetryStrategy","type":"codeVoice"},{"text":" that limits the number of retry attempts.","type":"text"}]},"doc://Afluent/documentation/Afluent/UnretainedError":{"abstract":[],"kind":"symbol","role":"symbol","title":"UnretainedError","navigatorTitle":[{"kind":"identifier","text":"UnretainedError"}],"type":"topic","url":"\/documentation\/afluent\/unretainederror","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/UnretainedError","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnretainedError","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/DeferredTask":{"navigatorTitle":[{"text":"DeferredTask","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DeferredTask","kind":"identifier"}],"url":"\/documentation\/afluent\/deferredtask","title":"DeferredTask","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","kind":"symbol","abstract":[{"type":"text","text":"A structure representing a deferred asynchronous unit of work."}],"type":"topic"},"doc://Afluent/documentation/Afluent/Race(cancelAllOnWin:_:against:)":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Race(cancelAllOnWin:_:against:)","kind":"symbol","title":"Race(cancelAllOnWin:_:against:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Race"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"cancelAllOnWin"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":", () "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"against"},{"text":": (() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"T","kind":"typeIdentifier"},{"text":")...) ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/afluent\/race(cancelallonwin:_:against:)","abstract":[{"type":"text","text":"Executes two asynchronous tasks concurrently and returns the result of the first one that completes."}]},"doc://Afluent/documentation/Afluent/SerialTaskQueue":{"navigatorTitle":[{"kind":"identifier","text":"SerialTaskQueue"}],"title":"SerialTaskQueue","abstract":[{"text":"A serial task queue that ensures tasks are executed one at a time.","type":"text"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","role":"symbol","url":"\/documentation\/afluent\/serialtaskqueue","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"SerialTaskQueue","kind":"identifier"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"abstract":[{"type":"text","text":"Represents an asynchronous unit of work."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWork"}],"type":"topic","url":"\/documentation\/afluent\/asynchronousunitofwork","title":"AsynchronousUnitOfWork","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/Foundation":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Foundation","type":"topic","kind":"symbol","url":"\/documentation\/afluent\/foundation","title":"Foundation","abstract":[],"role":"collection"},"doc://Afluent/documentation/Afluent/TopLevelDecoder":{"title":"TopLevelDecoder","role":"symbol","url":"\/documentation\/afluent\/topleveldecoder","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TopLevelDecoder"}],"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TopLevelDecoder","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TopLevelDecoder","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AnyAsyncSequence":{"navigatorTitle":[{"kind":"identifier","text":"AnyAsyncSequence"}],"title":"AnyAsyncSequence","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsyncSequence","abstract":[],"role":"symbol","url":"\/documentation\/afluent\/anyasyncsequence","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"AnyAsyncSequence","kind":"identifier"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/AUOWCache":{"kind":"symbol","type":"topic","url":"\/documentation\/afluent\/auowcache","navigatorTitle":[{"kind":"identifier","text":"AUOWCache"}],"title":"AUOWCache","role":"symbol","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"AUOWCache","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/ClockDurationUnit":{"url":"\/documentation\/afluent\/clockdurationunit","navigatorTitle":[{"kind":"identifier","text":"ClockDurationUnit"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ClockDurationUnit","abstract":[],"role":"symbol","type":"topic","title":"ClockDurationUnit","kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ClockDurationUnit","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/TaskState":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"TaskState"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TaskState"}],"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TaskState","title":"TaskState","type":"topic","kind":"symbol","url":"\/documentation\/afluent\/taskstate"},"doc://Afluent/documentation/Afluent/AnyCancellable":{"role":"symbol","navigatorTitle":[{"text":"AnyCancellable","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"AnyCancellable","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyCancellable","abstract":[{"text":"Stores an erased unit of work and provides a mechanism to cancel it","type":"text"}],"title":"AnyCancellable","kind":"symbol","type":"topic","url":"\/documentation\/afluent\/anycancellable"},"doc://Afluent/documentation/Afluent/TopLevelEncoder":{"kind":"symbol","type":"topic","abstract":[],"url":"\/documentation\/afluent\/toplevelencoder","title":"TopLevelEncoder","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"TopLevelEncoder"}],"navigatorTitle":[{"kind":"identifier","text":"TopLevelEncoder"}],"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TopLevelEncoder"},"doc://Afluent/documentation/Afluent/BackoffStrategy":{"abstract":[{"type":"text","text":"A protocol for implementing custom backoff strategies in retry mechanisms."}],"kind":"symbol","role":"symbol","title":"BackoffStrategy","navigatorTitle":[{"kind":"identifier","text":"BackoffStrategy"}],"type":"topic","url":"\/documentation\/afluent\/backoffstrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BackoffStrategy","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"AnyAsynchronousUnitOfWork","kind":"identifier"}],"type":"topic","url":"\/documentation\/afluent\/anyasynchronousunitofwork","title":"AnyAsynchronousUnitOfWork","abstract":[{"text":"A unit of work that performs type erasure by wrapping another unit of work.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"AnyAsynchronousUnitOfWork"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache":{"url":"\/documentation\/afluent\/asynchronousunitofworkcache","title":"AsynchronousUnitOfWorkCache","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","type":"topic","role":"symbol","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsynchronousUnitOfWorkCache","kind":"identifier"}],"abstract":[],"navigatorTitle":[{"text":"AsynchronousUnitOfWorkCache","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy":{"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","navigatorTitle":[{"kind":"identifier","text":"ExponentialBackoffStrategy"}],"type":"topic","title":"ExponentialBackoffStrategy","kind":"symbol","url":"\/documentation\/afluent\/exponentialbackoffstrategy","abstract":[{"type":"text","text":"An exponential backoff strategy for retrying operations."}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"ExponentialBackoffStrategy","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsynchronousOperation":{"abstract":[{"type":"text","text":"Reference to an operation that an operator would execute"}],"kind":"symbol","role":"symbol","title":"AsynchronousOperation","navigatorTitle":[{"text":"AsynchronousOperation","kind":"identifier"}],"type":"topic","url":"\/documentation\/afluent\/asynchronousoperation","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousOperation","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"AsynchronousOperation","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/SubscriptionDemand":{"type":"topic","abstract":[],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SubscriptionDemand"}],"url":"\/documentation\/afluent\/subscriptiondemand","kind":"symbol","navigatorTitle":[{"text":"SubscriptionDemand","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SubscriptionDemand","role":"symbol","title":"SubscriptionDemand"},"doc://Afluent/documentation/Afluent":{"kind":"symbol","title":"Afluent","abstract":[],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent","role":"collection","url":"\/documentation\/afluent"},"doc://Afluent/documentation/Afluent/TimeoutError":{"abstract":[{"type":"text","text":"An error indicating a timeout has occurred."}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TimeoutError","kind":"identifier"}],"url":"\/documentation\/afluent\/timeouterror","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TimeoutError"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TimeoutError","role":"symbol","title":"TimeoutError","kind":"symbol"},"doc://Afluent/documentation/Afluent/Deferred":{"type":"topic","kind":"symbol","role":"symbol","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Deferred","navigatorTitle":[{"kind":"identifier","text":"Deferred"}],"url":"\/documentation\/afluent\/deferred","title":"Deferred","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Deferred"}]},"doc://Afluent/documentation/Afluent/AsyncSequences":{"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","title":"AsyncSequences","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncSequences"}],"role":"symbol","navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}],"type":"topic","url":"\/documentation\/afluent\/asyncsequences","abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}]},"doc://Afluent/documentation/Afluent/Workers":{"title":"Workers","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Workers"}],"url":"\/documentation\/afluent\/workers","role":"symbol","navigatorTitle":[{"text":"Workers","kind":"identifier"}],"abstract":[{"text":"A namespace for grouping related asynchronous work operations.","type":"text"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Workers"},"doc://Afluent/documentation/Afluent/QueueExecutor":{"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"QueueExecutor","kind":"identifier"}],"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/QueueExecutor","title":"QueueExecutor","navigatorTitle":[{"kind":"identifier","text":"QueueExecutor"}],"url":"\/documentation\/afluent\/queueexecutor","kind":"symbol","type":"topic"},"doc://Afluent/documentation/Afluent/_Concurrency":{"abstract":[],"kind":"symbol","role":"collection","title":"_Concurrency","type":"topic","url":"\/documentation\/afluent\/_concurrency","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency"},"doc://Afluent/documentation/Afluent/SingleValueChannel":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel","kind":"symbol","title":"SingleValueChannel","navigatorTitle":[{"text":"SingleValueChannel","kind":"identifier"}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SingleValueChannel","kind":"identifier"}],"abstract":[{"type":"text","text":"A channel that emits a single value or an error."}],"role":"symbol","url":"\/documentation\/afluent\/singlevaluechannel"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy":{"navigatorTitle":[{"kind":"identifier","text":"RetryByBackoffStrategy"}],"kind":"symbol","type":"topic","title":"RetryByBackoffStrategy","url":"\/documentation\/afluent\/retrybybackoffstrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"RetryByBackoffStrategy","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"A retry strategy using a specified backoff strategy and clock."}]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence","url":"\/documentation\/afluent\/asynchronousunitofworksequence","role":"symbol","title":"AsynchronousUnitOfWorkSequence","navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWorkSequence"}],"abstract":[{"type":"text","text":"A sequence that represents a single execution of an asynchronous unit of work."}]},"doc://Afluent/documentation/Afluent/Just":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Just","navigatorTitle":[{"text":"Just","kind":"identifier"}],"title":"Just","abstract":[],"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"Just","kind":"identifier"}],"url":"\/documentation\/afluent\/just","role":"symbol"},"doc://Afluent/documentation/Afluent/SingleValueSubject":{"type":"topic","abstract":[{"text":"A subject that emits a single value or an error.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"SingleValueSubject","kind":"identifier"}],"url":"\/documentation\/afluent\/singlevaluesubject","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SingleValueSubject"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueSubject","role":"symbol","title":"SingleValueSubject"}}}