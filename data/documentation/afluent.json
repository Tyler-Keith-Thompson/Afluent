{"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent"},"kind":"symbol","sections":[],"hierarchy":{"paths":[[]]},"variants":[{"paths":["\/documentation\/afluent"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"title":"Classes","anchor":"Classes","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AnyCancellable","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousOperation","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/QueueExecutor","doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/RetryByCountStrategy","doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueSubject","doc:\/\/Afluent\/documentation\/Afluent\/TaskState"]},{"anchor":"Protocols","title":"Protocols","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","doc:\/\/Afluent\/documentation\/Afluent\/TopLevelDecoder","doc:\/\/Afluent\/documentation\/Afluent\/TopLevelEncoder"]},{"title":"Structures","generated":true,"anchor":"Structures","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence"]},{"anchor":"Functions","generated":true,"title":"Functions","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/Race(cancelAllOnWin:_:against:)"]},{"title":"Type Aliases","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","doc:\/\/Afluent\/documentation\/Afluent\/AnyAsyncSequence","doc:\/\/Afluent\/documentation\/Afluent\/ClockDurationUnit","doc:\/\/Afluent\/documentation\/Afluent\/Deferred","doc:\/\/Afluent\/documentation\/Afluent\/Just","doc:\/\/Afluent\/documentation\/Afluent\/TimerSequence"],"anchor":"Type-Aliases"},{"anchor":"Enumerations","title":"Enumerations","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/SubscriptionDemand","doc:\/\/Afluent\/documentation\/Afluent\/TimeoutError","doc:\/\/Afluent\/documentation\/Afluent\/UnretainedError","doc:\/\/Afluent\/documentation\/Afluent\/Workers"],"generated":true},{"title":"Extended Modules","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/Foundation","doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency"],"anchor":"Extended-Modules"}],"metadata":{"symbolKind":"module","externalID":"Afluent","roleHeading":"Framework","role":"collection","title":"Afluent","modules":[{"name":"Afluent"}]},"references":{"doc://Afluent/documentation/Afluent/SubscriptionDemand":{"title":"SubscriptionDemand","role":"symbol","navigatorTitle":[{"text":"SubscriptionDemand","kind":"identifier"}],"url":"\/documentation\/afluent\/subscriptiondemand","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SubscriptionDemand","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"SubscriptionDemand","kind":"identifier"}],"type":"topic","kind":"symbol","abstract":[]},"doc://Afluent/documentation/Afluent/AnyCancellable":{"role":"symbol","type":"topic","title":"AnyCancellable","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnyCancellable"}],"url":"\/documentation\/afluent\/anycancellable","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyCancellable","navigatorTitle":[{"kind":"identifier","text":"AnyCancellable"}],"abstract":[{"text":"Stores an erased unit of work and provides a mechanism to cancel it","type":"text"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/RetryStrategy":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RetryStrategy","kind":"identifier"}],"title":"RetryStrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","role":"symbol","type":"topic","navigatorTitle":[{"text":"RetryStrategy","kind":"identifier"}],"url":"\/documentation\/afluent\/retrystrategy","kind":"symbol","abstract":[{"text":"A strategy for handling errors and determining whether to retry an operation.","type":"text"}]},"doc://Afluent/documentation/Afluent/TimerSequence":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TimerSequence","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"TimerSequence","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/afluent\/timersequence","abstract":[],"navigatorTitle":[{"text":"TimerSequence","kind":"identifier"}],"type":"topic","title":"TimerSequence","role":"symbol"},"doc://Afluent/documentation/Afluent/Just":{"role":"symbol","navigatorTitle":[{"text":"Just","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Just","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Just","kind":"identifier"}],"title":"Just","type":"topic","kind":"symbol","abstract":[],"url":"\/documentation\/afluent\/just"},"doc://Afluent/documentation/Afluent/TaskState":{"abstract":[],"url":"\/documentation\/afluent\/taskstate","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"TaskState"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TaskState","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"TaskState","kind":"identifier"}],"kind":"symbol","title":"TaskState"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy":{"title":"ExponentialBackoffStrategy","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","navigatorTitle":[{"kind":"identifier","text":"ExponentialBackoffStrategy"}],"url":"\/documentation\/afluent\/exponentialbackoffstrategy","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"ExponentialBackoffStrategy","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"An exponential backoff strategy for retrying operations."}]},"doc://Afluent/documentation/Afluent/RetryByCountStrategy":{"kind":"symbol","title":"RetryByCountStrategy","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RetryByCountStrategy"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByCountStrategy","url":"\/documentation\/afluent\/retrybycountstrategy","abstract":[{"type":"text","text":"A "},{"code":"RetryStrategy","type":"codeVoice"},{"type":"text","text":" that limits the number of retry attempts."}],"navigatorTitle":[{"text":"RetryByCountStrategy","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/Workers":{"url":"\/documentation\/afluent\/workers","title":"Workers","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Workers"}],"kind":"symbol","navigatorTitle":[{"text":"Workers","kind":"identifier"}],"role":"symbol","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Workers","abstract":[{"type":"text","text":"A namespace for grouping related asynchronous work operations."}]},"doc://Afluent/documentation/Afluent/BackoffStrategy":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"BackoffStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"BackoffStrategy","kind":"identifier"}],"url":"\/documentation\/afluent\/backoffstrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","title":"BackoffStrategy","abstract":[{"type":"text","text":"A protocol for implementing custom backoff strategies in retry mechanisms."}],"type":"topic","role":"symbol","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsynchronousOperation":{"kind":"symbol","url":"\/documentation\/afluent\/asynchronousoperation","abstract":[{"text":"Reference to an operation that an operator would execute","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"AsynchronousOperation","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AsynchronousOperation"}],"type":"topic","role":"symbol","title":"AsynchronousOperation","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousOperation"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache":{"type":"topic","abstract":[],"kind":"symbol","url":"\/documentation\/afluent\/asynchronousunitofworkcache","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","role":"symbol","navigatorTitle":[{"text":"AsynchronousUnitOfWorkCache","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsynchronousUnitOfWorkCache"}],"title":"AsynchronousUnitOfWorkCache"},"doc://Afluent/documentation/Afluent/_Concurrency":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency","title":"_Concurrency","type":"topic","kind":"symbol","role":"collection","url":"\/documentation\/afluent\/_concurrency","abstract":[]},"doc://Afluent/documentation/Afluent/DeferredTask":{"abstract":[{"text":"A structure representing a deferred asynchronous unit of work.","type":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/afluent\/deferredtask","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"DeferredTask","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"DeferredTask","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","title":"DeferredTask"},"doc://Afluent/documentation/Afluent/Deferred":{"role":"symbol","url":"\/documentation\/afluent\/deferred","navigatorTitle":[{"text":"Deferred","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Deferred","title":"Deferred","kind":"symbol","abstract":[],"fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"Deferred","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence":{"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence","role":"symbol","url":"\/documentation\/afluent\/asynchronousunitofworksequence","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}],"abstract":[{"text":"A sequence that represents a single execution of an asynchronous unit of work.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWorkSequence"}],"title":"AsynchronousUnitOfWorkSequence"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"url":"\/documentation\/afluent\/asyncsequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","kind":"symbol","role":"symbol","title":"AsyncSequences","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncSequences"}],"abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}],"type":"topic"},"doc://Afluent/documentation/Afluent/TimeoutError":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TimeoutError","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"An error indicating a timeout has occurred."}],"type":"topic","title":"TimeoutError","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"TimeoutError","kind":"identifier"}],"url":"\/documentation\/afluent\/timeouterror","navigatorTitle":[{"text":"TimeoutError","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/TopLevelDecoder":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TopLevelDecoder","url":"\/documentation\/afluent\/topleveldecoder","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TopLevelDecoder"}],"role":"symbol","type":"topic","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"TopLevelDecoder"}],"kind":"symbol","title":"TopLevelDecoder"},"doc://Afluent/documentation/Afluent/ClockDurationUnit":{"abstract":[],"type":"topic","role":"symbol","title":"ClockDurationUnit","kind":"symbol","url":"\/documentation\/afluent\/clockdurationunit","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"ClockDurationUnit"}],"navigatorTitle":[{"text":"ClockDurationUnit","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ClockDurationUnit"},"doc://Afluent/documentation/Afluent/AnyAsyncSequence":{"url":"\/documentation\/afluent\/anyasyncsequence","navigatorTitle":[{"text":"AnyAsyncSequence","kind":"identifier"}],"role":"symbol","title":"AnyAsyncSequence","kind":"symbol","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsyncSequence","type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnyAsyncSequence"}]},"doc://Afluent/documentation/Afluent/SerialTaskQueue":{"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SerialTaskQueue"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","role":"symbol","url":"\/documentation\/afluent\/serialtaskqueue","kind":"symbol","title":"SerialTaskQueue","navigatorTitle":[{"kind":"identifier","text":"SerialTaskQueue"}],"abstract":[{"type":"text","text":"A serial task queue that ensures tasks are executed one at a time."}]},"doc://Afluent/documentation/Afluent/TopLevelEncoder":{"type":"topic","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TopLevelEncoder","kind":"symbol","abstract":[],"navigatorTitle":[{"text":"TopLevelEncoder","kind":"identifier"}],"url":"\/documentation\/afluent\/toplevelencoder","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"TopLevelEncoder","kind":"identifier"}],"title":"TopLevelEncoder"},"doc://Afluent/documentation/Afluent":{"url":"\/documentation\/afluent","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent","role":"collection","title":"Afluent","abstract":[],"type":"topic"},"doc://Afluent/documentation/Afluent/QueueExecutor":{"url":"\/documentation\/afluent\/queueexecutor","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/QueueExecutor","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"QueueExecutor"}],"type":"topic","role":"symbol","title":"QueueExecutor","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"QueueExecutor"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork":{"role":"symbol","kind":"symbol","navigatorTitle":[{"text":"AnyAsynchronousUnitOfWork","kind":"identifier"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AnyAsynchronousUnitOfWork","kind":"identifier"}],"abstract":[{"text":"A unit of work that performs type erasure by wrapping another unit of work.","type":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","title":"AnyAsynchronousUnitOfWork","url":"\/documentation\/afluent\/anyasynchronousunitofwork"},"doc://Afluent/documentation/Afluent/SingleValueSubject":{"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueSubject","role":"symbol","type":"topic","url":"\/documentation\/afluent\/singlevaluesubject","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SingleValueSubject"}],"abstract":[{"type":"text","text":"A subject that emits a single value or an error."}],"navigatorTitle":[{"kind":"identifier","text":"SingleValueSubject"}],"title":"SingleValueSubject"},"doc://Afluent/documentation/Afluent/Foundation":{"url":"\/documentation\/afluent\/foundation","title":"Foundation","role":"collection","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Foundation","abstract":[],"type":"topic","kind":"symbol"},"doc://Afluent/documentation/Afluent/UnretainedError":{"kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"UnretainedError","kind":"identifier"}],"navigatorTitle":[{"text":"UnretainedError","kind":"identifier"}],"type":"topic","url":"\/documentation\/afluent\/unretainederror","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/UnretainedError","title":"UnretainedError","role":"symbol"},"doc://Afluent/documentation/Afluent/SingleValueChannel":{"abstract":[{"type":"text","text":"A channel that emits a single value or an error."}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel","navigatorTitle":[{"text":"SingleValueChannel","kind":"identifier"}],"kind":"symbol","title":"SingleValueChannel","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SingleValueChannel","kind":"identifier"}],"url":"\/documentation\/afluent\/singlevaluechannel"},"doc://Afluent/documentation/Afluent/Race(cancelAllOnWin:_:against:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Race","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"cancelAllOnWin"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":", () "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"against"},{"text":": (() ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"T","kind":"typeIdentifier"},{"text":")...) ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"}],"title":"Race(cancelAllOnWin:_:against:)","role":"symbol","url":"\/documentation\/afluent\/race(cancelallonwin:_:against:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Race(cancelAllOnWin:_:against:)","kind":"symbol","type":"topic","abstract":[{"text":"Executes two asynchronous tasks concurrently and returns the result of the first one that completes.","type":"text"}]},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy":{"url":"\/documentation\/afluent\/retrybybackoffstrategy","kind":"symbol","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","title":"RetryByBackoffStrategy","navigatorTitle":[{"kind":"identifier","text":"RetryByBackoffStrategy"}],"abstract":[{"type":"text","text":"A retry strategy using a specified backoff strategy and clock."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RetryByBackoffStrategy","kind":"identifier"}],"role":"symbol"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","abstract":[{"text":"Represents an asynchronous unit of work.","type":"text"}],"role":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"title":"AsynchronousUnitOfWork","url":"\/documentation\/afluent\/asynchronousunitofwork"},"doc://Afluent/documentation/Afluent/AUOWCache":{"navigatorTitle":[{"kind":"identifier","text":"AUOWCache"}],"url":"\/documentation\/afluent\/auowcache","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","abstract":[],"title":"AUOWCache","role":"symbol","kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"AUOWCache","kind":"identifier"}]}}}