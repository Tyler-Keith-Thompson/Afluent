{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[[]]},"sections":[],"topicSections":[{"title":"Classes","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AnyCancellable","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousOperation","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/RetryByCountStrategy","doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueSubject","doc:\/\/Afluent\/documentation\/Afluent\/TaskState"]},{"title":"Protocols","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","doc:\/\/Afluent\/documentation\/Afluent\/TopLevelDecoder","doc:\/\/Afluent\/documentation\/Afluent\/TopLevelEncoder"]},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence"],"title":"Structures"},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/Race(cancelAllOnWin:_:against:)"],"title":"Functions"},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","doc:\/\/Afluent\/documentation\/Afluent\/AnyAsyncSequence","doc:\/\/Afluent\/documentation\/Afluent\/ClockDurationUnit","doc:\/\/Afluent\/documentation\/Afluent\/Deferred","doc:\/\/Afluent\/documentation\/Afluent\/Just","doc:\/\/Afluent\/documentation\/Afluent\/TimerSequence"],"title":"Type Aliases"},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/SubscriptionDemand","doc:\/\/Afluent\/documentation\/Afluent\/TimeoutError","doc:\/\/Afluent\/documentation\/Afluent\/UnretainedError","doc:\/\/Afluent\/documentation\/Afluent\/Workers"],"title":"Enumerations"},{"title":"Extended Modules","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/Foundation","doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency"]}],"kind":"symbol","metadata":{"roleHeading":"Framework","title":"Afluent","externalID":"Afluent","role":"collection","symbolKind":"module","modules":[{"name":"Afluent"}]},"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent","interfaceLanguage":"swift"},"references":{"doc://Afluent/documentation/Afluent/TopLevelDecoder":{"role":"symbol","abstract":[],"type":"topic","title":"TopLevelDecoder","kind":"symbol","url":"\/documentation\/afluent\/topleveldecoder","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"TopLevelDecoder"}],"navigatorTitle":[{"kind":"identifier","text":"TopLevelDecoder"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TopLevelDecoder"},"doc://Afluent/documentation/Afluent":{"type":"topic","abstract":[],"url":"\/documentation\/afluent","role":"collection","kind":"symbol","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent"},"doc://Afluent/documentation/Afluent/SubscriptionDemand":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SubscriptionDemand","abstract":[],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SubscriptionDemand"}],"type":"topic","navigatorTitle":[{"text":"SubscriptionDemand","kind":"identifier"}],"title":"SubscriptionDemand","url":"\/documentation\/afluent\/subscriptiondemand"},"doc://Afluent/documentation/Afluent/AUOWCache":{"role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"AUOWCache","kind":"identifier"}],"kind":"symbol","type":"topic","navigatorTitle":[{"text":"AUOWCache","kind":"identifier"}],"url":"\/documentation\/afluent\/auowcache","title":"AUOWCache","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","abstract":[]},"doc://Afluent/documentation/Afluent/SingleValueChannel":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"SingleValueChannel","kind":"identifier"}],"abstract":[{"text":"A channel that emits a single value or an error.","type":"text"}],"role":"symbol","url":"\/documentation\/afluent\/singlevaluechannel","title":"SingleValueChannel","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SingleValueChannel"}],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel"},"doc://Afluent/documentation/Afluent/SerialTaskQueue":{"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SerialTaskQueue"}],"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SerialTaskQueue"}],"url":"\/documentation\/afluent\/serialtaskqueue","title":"SerialTaskQueue","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","abstract":[{"text":"A serial task queue that ensures tasks are executed one at a time.","type":"text"}]},"doc://Afluent/documentation/Afluent/Foundation":{"type":"topic","role":"collection","title":"Foundation","url":"\/documentation\/afluent\/foundation","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Foundation","abstract":[],"kind":"symbol"},"doc://Afluent/documentation/Afluent/AnyCancellable":{"url":"\/documentation\/afluent\/anycancellable","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyCancellable","role":"symbol","abstract":[{"type":"text","text":"Stores an erased unit of work and provides a mechanism to cancel it"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"AnyCancellable","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AnyCancellable"}],"kind":"symbol","title":"AnyCancellable"},"doc://Afluent/documentation/Afluent/_Concurrency":{"abstract":[],"title":"_Concurrency","url":"\/documentation\/afluent\/_concurrency","kind":"symbol","role":"collection","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency","type":"topic"},"doc://Afluent/documentation/Afluent/SingleValueSubject":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SingleValueSubject","kind":"identifier"}],"navigatorTitle":[{"text":"SingleValueSubject","kind":"identifier"}],"title":"SingleValueSubject","url":"\/documentation\/afluent\/singlevaluesubject","kind":"symbol","role":"symbol","type":"topic","abstract":[{"type":"text","text":"A subject that emits a single value or an error."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueSubject"},"doc://Afluent/documentation/Afluent/RetryStrategy":{"url":"\/documentation\/afluent\/retrystrategy","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RetryStrategy"}],"title":"RetryStrategy","abstract":[{"type":"text","text":"A strategy for handling errors and determining whether to retry an operation."}],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","type":"topic","role":"symbol","navigatorTitle":[{"text":"RetryStrategy","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork":{"navigatorTitle":[{"kind":"identifier","text":"AnyAsynchronousUnitOfWork"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnyAsynchronousUnitOfWork"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","role":"symbol","kind":"symbol","title":"AnyAsynchronousUnitOfWork","url":"\/documentation\/afluent\/anyasynchronousunitofwork","abstract":[{"type":"text","text":"A unit of work that performs type erasure by wrapping another unit of work."}],"type":"topic"},"doc://Afluent/documentation/Afluent/Race(cancelAllOnWin:_:against:)":{"title":"Race(cancelAllOnWin:_:against:)","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"Race","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"cancelAllOnWin","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":", () ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"against","kind":"externalParam"},{"kind":"text","text":": (() "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"text":")...) ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"}],"abstract":[{"type":"text","text":"Executes two asynchronous tasks concurrently and returns the result of the first one that completes."}],"url":"\/documentation\/afluent\/race(cancelallonwin:_:against:)","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Race(cancelAllOnWin:_:against:)"},"doc://Afluent/documentation/Afluent/TopLevelEncoder":{"navigatorTitle":[{"text":"TopLevelEncoder","kind":"identifier"}],"url":"\/documentation\/afluent\/toplevelencoder","kind":"symbol","type":"topic","title":"TopLevelEncoder","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TopLevelEncoder","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"TopLevelEncoder","kind":"identifier"}],"role":"symbol"},"doc://Afluent/documentation/Afluent/Just":{"title":"Just","type":"topic","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Just"}],"navigatorTitle":[{"kind":"identifier","text":"Just"}],"abstract":[],"url":"\/documentation\/afluent\/just","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Just"},"doc://Afluent/documentation/Afluent/AsynchronousOperation":{"navigatorTitle":[{"kind":"identifier","text":"AsynchronousOperation"}],"title":"AsynchronousOperation","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousOperation","url":"\/documentation\/afluent\/asynchronousoperation","kind":"symbol","abstract":[{"text":"Reference to an operation that an operator would execute","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"AsynchronousOperation","kind":"identifier"}],"type":"topic"},"doc://Afluent/documentation/Afluent/UnretainedError":{"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UnretainedError"}],"type":"topic","kind":"symbol","navigatorTitle":[{"text":"UnretainedError","kind":"identifier"}],"url":"\/documentation\/afluent\/unretainederror","title":"UnretainedError","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/UnretainedError","abstract":[]},"doc://Afluent/documentation/Afluent/TimeoutError":{"title":"TimeoutError","type":"topic","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"TimeoutError"}],"navigatorTitle":[{"kind":"identifier","text":"TimeoutError"}],"abstract":[{"type":"text","text":"An error indicating a timeout has occurred."}],"url":"\/documentation\/afluent\/timeouterror","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TimeoutError"},"doc://Afluent/documentation/Afluent/Workers":{"title":"Workers","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"Workers","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Workers"}],"abstract":[{"type":"text","text":"A namespace for grouping related asynchronous work operations."}],"url":"\/documentation\/afluent\/workers","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Workers"},"doc://Afluent/documentation/Afluent/TimerSequence":{"title":"TimerSequence","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"TimerSequence","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"TimerSequence"}],"abstract":[],"url":"\/documentation\/afluent\/timersequence","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TimerSequence"},"doc://Afluent/documentation/Afluent/AnyAsyncSequence":{"title":"AnyAsyncSequence","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnyAsyncSequence"}],"navigatorTitle":[{"kind":"identifier","text":"AnyAsyncSequence"}],"abstract":[],"url":"\/documentation\/afluent\/anyasyncsequence","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsyncSequence"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","url":"\/documentation\/afluent\/asynchronousunitofworkcache","abstract":[],"title":"AsynchronousUnitOfWorkCache","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"AsynchronousUnitOfWorkCache","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"AsynchronousUnitOfWorkCache","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/DeferredTask":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"DeferredTask","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"DeferredTask"}],"title":"DeferredTask","url":"\/documentation\/afluent\/deferredtask","kind":"symbol","role":"symbol","type":"topic","abstract":[{"text":"A structure representing a deferred asynchronous unit of work.","type":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask"},"doc://Afluent/documentation/Afluent/BackoffStrategy":{"abstract":[{"text":"A protocol for implementing custom backoff strategies in retry mechanisms.","type":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"BackoffStrategy","kind":"identifier"}],"url":"\/documentation\/afluent\/backoffstrategy","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"BackoffStrategy","kind":"identifier"}],"title":"BackoffStrategy"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"url":"\/documentation\/afluent\/asyncsequences","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"AsyncSequences","kind":"identifier"}],"kind":"symbol","title":"AsyncSequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ExponentialBackoffStrategy","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ExponentialBackoffStrategy"}],"title":"ExponentialBackoffStrategy","kind":"symbol","url":"\/documentation\/afluent\/exponentialbackoffstrategy","role":"symbol","type":"topic","abstract":[{"type":"text","text":"An exponential backoff strategy for retrying operations."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy":{"abstract":[{"text":"A retry strategy using a specified backoff strategy and clock.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RetryByBackoffStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"RetryByBackoffStrategy"}],"url":"\/documentation\/afluent\/retrybybackoffstrategy","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","title":"RetryByBackoffStrategy"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsynchronousUnitOfWorkSequence"}],"type":"topic","kind":"symbol","navigatorTitle":[{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}],"url":"\/documentation\/afluent\/asynchronousunitofworksequence","title":"AsynchronousUnitOfWorkSequence","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence","abstract":[{"type":"text","text":"A sequence that represents a single execution of an asynchronous unit of work."}]},"doc://Afluent/documentation/Afluent/Deferred":{"title":"Deferred","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"Deferred","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Deferred"}],"abstract":[],"url":"\/documentation\/afluent\/deferred","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Deferred"},"doc://Afluent/documentation/Afluent/ClockDurationUnit":{"title":"ClockDurationUnit","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ClockDurationUnit"}],"navigatorTitle":[{"kind":"identifier","text":"ClockDurationUnit"}],"abstract":[],"url":"\/documentation\/afluent\/clockdurationunit","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ClockDurationUnit"},"doc://Afluent/documentation/Afluent/RetryByCountStrategy":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RetryByCountStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"RetryByCountStrategy"}],"title":"RetryByCountStrategy","url":"\/documentation\/afluent\/retrybycountstrategy","kind":"symbol","role":"symbol","type":"topic","abstract":[{"text":"A ","type":"text"},{"code":"RetryStrategy","type":"codeVoice"},{"type":"text","text":" that limits the number of retry attempts."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByCountStrategy"},"doc://Afluent/documentation/Afluent/TaskState":{"type":"topic","role":"symbol","title":"TaskState","url":"\/documentation\/afluent\/taskstate","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TaskState","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TaskState"}],"abstract":[],"navigatorTitle":[{"kind":"identifier","text":"TaskState"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWork"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsynchronousUnitOfWork"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","role":"symbol","kind":"symbol","title":"AsynchronousUnitOfWork","url":"\/documentation\/afluent\/asynchronousunitofwork","abstract":[{"type":"text","text":"Represents an asynchronous unit of work."}],"type":"topic"}}}