{"hierarchy":{"paths":[[]]},"metadata":{"modules":[{"name":"Afluent"}],"title":"Afluent","externalID":"Afluent","role":"collection","symbolKind":"module","roleHeading":"Framework"},"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent"},"kind":"symbol","sections":[],"topicSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AnyCancellable","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousOperation","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/RetryByCountStrategy","doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueSubject","doc:\/\/Afluent\/documentation\/Afluent\/TaskState"],"title":"Classes"},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","doc:\/\/Afluent\/documentation\/Afluent\/TopLevelDecoder","doc:\/\/Afluent\/documentation\/Afluent\/TopLevelEncoder"],"title":"Protocols"},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence"],"title":"Structures"},{"title":"Functions","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/Race(cancelAllOnWin:_:against:)"]},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","doc:\/\/Afluent\/documentation\/Afluent\/AnyAsyncSequence","doc:\/\/Afluent\/documentation\/Afluent\/ClockDurationUnit","doc:\/\/Afluent\/documentation\/Afluent\/Deferred","doc:\/\/Afluent\/documentation\/Afluent\/Just"],"title":"Type Aliases"},{"title":"Enumerations","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/SubscriptionDemand","doc:\/\/Afluent\/documentation\/Afluent\/UnretainedError","doc:\/\/Afluent\/documentation\/Afluent\/Workers"]},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/Foundation","doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency"],"title":"Extended Modules"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent"]}],"references":{"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"url":"\/documentation\/afluent\/asynchronousunitofwork","type":"topic","abstract":[{"text":"Represents an asynchronous unit of work.","type":"text"}],"title":"AsynchronousUnitOfWork","navigatorTitle":[{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/UnretainedError":{"role":"symbol","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/UnretainedError","abstract":[],"kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"UnretainedError","kind":"identifier"}],"title":"UnretainedError","navigatorTitle":[{"kind":"identifier","text":"UnretainedError"}],"url":"\/documentation\/afluent\/unretainederror"},"doc://Afluent/documentation/Afluent/SingleValueChannel":{"kind":"symbol","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SingleValueChannel"}],"navigatorTitle":[{"kind":"identifier","text":"SingleValueChannel"}],"title":"SingleValueChannel","abstract":[{"type":"text","text":"A channel that emits a single value or an error."}],"url":"\/documentation\/afluent\/singlevaluechannel","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel"},"doc://Afluent/documentation/Afluent/Foundation":{"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Foundation","kind":"symbol","url":"\/documentation\/afluent\/foundation","type":"topic","title":"Foundation","role":"collection"},"doc://Afluent/documentation/Afluent/TopLevelDecoder":{"url":"\/documentation\/afluent\/topleveldecoder","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TopLevelDecoder","kind":"identifier"}],"title":"TopLevelDecoder","abstract":[],"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TopLevelDecoder","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"TopLevelDecoder"}],"type":"topic"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence":{"abstract":[{"type":"text","text":"A sequence that represents a single execution of an asynchronous unit of work."}],"type":"topic","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}],"title":"AsynchronousUnitOfWorkSequence","url":"\/documentation\/afluent\/asynchronousunitofworksequence","navigatorTitle":[{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/Workers":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Workers","kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"text":"Workers","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Workers"}],"title":"Workers","url":"\/documentation\/afluent\/workers","abstract":[{"text":"A namespace for grouping related asynchronous work operations.","type":"text"}]},"doc://Afluent/documentation/Afluent/AUOWCache":{"role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AUOWCache"}],"kind":"symbol","title":"AUOWCache","navigatorTitle":[{"text":"AUOWCache","kind":"identifier"}],"url":"\/documentation\/afluent\/auowcache","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","type":"topic","abstract":[]},"doc://Afluent/documentation/Afluent/SubscriptionDemand":{"url":"\/documentation\/afluent\/subscriptiondemand","kind":"symbol","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SubscriptionDemand","navigatorTitle":[{"kind":"identifier","text":"SubscriptionDemand"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"SubscriptionDemand","kind":"identifier"}],"title":"SubscriptionDemand","role":"symbol","type":"topic"},"doc://Afluent/documentation/Afluent/Just":{"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Just","abstract":[],"type":"topic","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Just"}],"navigatorTitle":[{"kind":"identifier","text":"Just"}],"kind":"symbol","url":"\/documentation\/afluent\/just","title":"Just"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"kind":"symbol","abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"title":"AsyncSequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"url":"\/documentation\/afluent\/asyncsequences","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncSequences","kind":"identifier"}],"type":"topic"},"doc://Afluent/documentation/Afluent/RetryStrategy":{"title":"RetryStrategy","navigatorTitle":[{"text":"RetryStrategy","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/afluent\/retrystrategy","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","type":"topic","abstract":[{"type":"text","text":"A strategy for handling errors and determining whether to retry an operation."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"RetryStrategy","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/DeferredTask":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DeferredTask"}],"title":"DeferredTask","navigatorTitle":[{"text":"DeferredTask","kind":"identifier"}],"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A structure representing a deferred asynchronous unit of work."}],"url":"\/documentation\/afluent\/deferredtask","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","type":"topic"},"doc://Afluent/documentation/Afluent/SerialTaskQueue":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","title":"SerialTaskQueue","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SerialTaskQueue"}],"kind":"symbol","abstract":[{"type":"text","text":"A serial task queue that ensures tasks are executed one at a time."}],"navigatorTitle":[{"kind":"identifier","text":"SerialTaskQueue"}],"url":"\/documentation\/afluent\/serialtaskqueue"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy":{"type":"topic","kind":"symbol","title":"ExponentialBackoffStrategy","navigatorTitle":[{"kind":"identifier","text":"ExponentialBackoffStrategy"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ExponentialBackoffStrategy"}],"abstract":[{"text":"An exponential backoff strategy for retrying operations.","type":"text"}],"url":"\/documentation\/afluent\/exponentialbackoffstrategy","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy"},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork":{"url":"\/documentation\/afluent\/anyasynchronousunitofwork","type":"topic","abstract":[{"text":"A unit of work that performs type erasure by wrapping another unit of work.","type":"text"}],"title":"AnyAsynchronousUnitOfWork","navigatorTitle":[{"kind":"identifier","text":"AnyAsynchronousUnitOfWork"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AnyAsynchronousUnitOfWork","kind":"identifier"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/RetryByCountStrategy":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByCountStrategy","title":"RetryByCountStrategy","url":"\/documentation\/afluent\/retrybycountstrategy","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RetryByCountStrategy"}],"role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RetryByCountStrategy"}],"abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"RetryStrategy"},{"type":"text","text":" that limits the number of retry attempts."}]},"doc://Afluent/documentation/Afluent/AsynchronousOperation":{"navigatorTitle":[{"text":"AsynchronousOperation","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousOperation","kind":"symbol","type":"topic","url":"\/documentation\/afluent\/asynchronousoperation","title":"AsynchronousOperation","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"AsynchronousOperation","kind":"identifier"}],"abstract":[{"text":"Reference to an operation that an operator would execute","type":"text"}]},"doc://Afluent/documentation/Afluent/AnyCancellable":{"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnyCancellable"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyCancellable","type":"topic","navigatorTitle":[{"text":"AnyCancellable","kind":"identifier"}],"title":"AnyCancellable","url":"\/documentation\/afluent\/anycancellable","role":"symbol","abstract":[{"type":"text","text":"Stores an erased unit of work and provides a mechanism to cancel it"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/ClockDurationUnit":{"fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"ClockDurationUnit","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ClockDurationUnit","url":"\/documentation\/afluent\/clockdurationunit","role":"symbol","abstract":[],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"ClockDurationUnit"}],"title":"ClockDurationUnit","kind":"symbol"},"doc://Afluent/documentation/Afluent/_Concurrency":{"role":"collection","abstract":[],"kind":"symbol","title":"_Concurrency","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency","url":"\/documentation\/afluent\/_concurrency","type":"topic"},"doc://Afluent/documentation/Afluent/TaskState":{"url":"\/documentation\/afluent\/taskstate","role":"symbol","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TaskState","navigatorTitle":[{"text":"TaskState","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"TaskState","kind":"identifier"}],"abstract":[],"title":"TaskState","kind":"symbol"},"doc://Afluent/documentation/Afluent/SingleValueSubject":{"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A subject that emits a single value or an error."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueSubject","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SingleValueSubject","kind":"identifier"}],"title":"SingleValueSubject","url":"\/documentation\/afluent\/singlevaluesubject","navigatorTitle":[{"kind":"identifier","text":"SingleValueSubject"}]},"doc://Afluent/documentation/Afluent/TopLevelEncoder":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TopLevelEncoder","title":"TopLevelEncoder","type":"topic","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TopLevelEncoder"}],"kind":"symbol","abstract":[],"navigatorTitle":[{"text":"TopLevelEncoder","kind":"identifier"}],"url":"\/documentation\/afluent\/toplevelencoder"},"doc://Afluent/documentation/Afluent":{"title":"Afluent","abstract":[],"type":"topic","url":"\/documentation\/afluent","role":"collection","identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol"},"doc://Afluent/documentation/Afluent/Deferred":{"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Deferred","type":"topic","abstract":[],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"Deferred","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Deferred"}],"kind":"symbol","url":"\/documentation\/afluent\/deferred","title":"Deferred"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache":{"kind":"symbol","navigatorTitle":[{"text":"AsynchronousUnitOfWorkCache","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsynchronousUnitOfWorkCache","kind":"identifier"}],"abstract":[],"url":"\/documentation\/afluent\/asynchronousunitofworkcache","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","title":"AsynchronousUnitOfWorkCache","type":"topic"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy":{"type":"topic","navigatorTitle":[{"text":"RetryByBackoffStrategy","kind":"identifier"}],"url":"\/documentation\/afluent\/retrybybackoffstrategy","abstract":[{"type":"text","text":"A retry strategy using a specified backoff strategy and clock."}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"RetryByBackoffStrategy","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","role":"symbol","kind":"symbol","title":"RetryByBackoffStrategy"},"doc://Afluent/documentation/Afluent/BackoffStrategy":{"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"BackoffStrategy","kind":"identifier"}],"title":"BackoffStrategy","abstract":[{"type":"text","text":"A protocol for implementing custom backoff strategies in retry mechanisms."}],"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"BackoffStrategy"}],"url":"\/documentation\/afluent\/backoffstrategy"},"doc://Afluent/documentation/Afluent/Race(cancelAllOnWin:_:against:)":{"type":"topic","title":"Race(cancelAllOnWin:_:against:)","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Race(cancelAllOnWin:_:against:)","abstract":[{"type":"text","text":"Executes two asynchronous tasks concurrently and returns the result of the first one that completes."}],"role":"symbol","url":"\/documentation\/afluent\/race(cancelallonwin:_:against:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"Race","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"cancelAllOnWin","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", () ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"against","kind":"externalParam"},{"text":": (() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")...) "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}]},"doc://Afluent/documentation/Afluent/AnyAsyncSequence":{"fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnyAsyncSequence"}],"type":"topic","role":"symbol","title":"AnyAsyncSequence","kind":"symbol","url":"\/documentation\/afluent\/anyasyncsequence","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsyncSequence","abstract":[],"navigatorTitle":[{"text":"AnyAsyncSequence","kind":"identifier"}]}}}