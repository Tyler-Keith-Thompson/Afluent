{"kind":"symbol","variants":[{"paths":["\/documentation\/afluent"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"metadata":{"title":"Afluent","externalID":"Afluent","roleHeading":"Framework","symbolKind":"module","role":"collection","modules":[{"name":"Afluent"}]},"schemaVersion":{"patch":0,"major":0,"minor":3},"topicSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AnyCancellable","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousOperation","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/RetryByCountStrategy","doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueSubject","doc:\/\/Afluent\/documentation\/Afluent\/TaskState"],"title":"Classes"},{"title":"Protocols","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","doc:\/\/Afluent\/documentation\/Afluent\/TopLevelDecoder","doc:\/\/Afluent\/documentation\/Afluent\/TopLevelEncoder"]},{"title":"Structures","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence"]},{"title":"Functions","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/Race(cancelAllOnWin:_:against:)"]},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","doc:\/\/Afluent\/documentation\/Afluent\/AnyAsyncSequence","doc:\/\/Afluent\/documentation\/Afluent\/ClockDurationUnit","doc:\/\/Afluent\/documentation\/Afluent\/Deferred","doc:\/\/Afluent\/documentation\/Afluent\/Just"],"title":"Type Aliases"},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/SubscriptionDemand","doc:\/\/Afluent\/documentation\/Afluent\/UnretainedError","doc:\/\/Afluent\/documentation\/Afluent\/Workers"],"title":"Enumerations"},{"title":"Extended Modules","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/Foundation","doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency"]}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent","interfaceLanguage":"swift"},"hierarchy":{"paths":[[]]},"references":{"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy":{"abstract":[{"text":"An exponential backoff strategy for retrying operations.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"ExponentialBackoffStrategy","kind":"identifier"}],"role":"symbol","type":"topic","title":"ExponentialBackoffStrategy","navigatorTitle":[{"text":"ExponentialBackoffStrategy","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","url":"\/documentation\/afluent\/exponentialbackoffstrategy"},"doc://Afluent/documentation/Afluent/_Concurrency":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency","kind":"symbol","type":"topic","url":"\/documentation\/afluent\/_concurrency","abstract":[],"title":"_Concurrency","role":"collection"},"doc://Afluent/documentation/Afluent/DeferredTask":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"text":"DeferredTask","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DeferredTask"}],"url":"\/documentation\/afluent\/deferredtask","title":"DeferredTask","abstract":[{"type":"text","text":"A structure representing a deferred asynchronous unit of work."}]},"doc://Afluent/documentation/Afluent/TaskState":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TaskState","navigatorTitle":[{"text":"TaskState","kind":"identifier"}],"url":"\/documentation\/afluent\/taskstate","type":"topic","kind":"symbol","abstract":[],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TaskState","kind":"identifier"}],"title":"TaskState"},"doc://Afluent/documentation/Afluent/Race(cancelAllOnWin:_:against:)":{"title":"Race(cancelAllOnWin:_:against:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Race(cancelAllOnWin:_:against:)","kind":"symbol","type":"topic","abstract":[{"text":"Executes two asynchronous tasks concurrently and returns the result of the first one that completes.","type":"text"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Race","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"cancelAllOnWin","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":", () ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"text":"against","kind":"externalParam"},{"kind":"text","text":": (() "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":")...) "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"}],"url":"\/documentation\/afluent\/race(cancelallonwin:_:against:)"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"url":"\/documentation\/afluent\/asynchronousunitofwork","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWork"}],"role":"symbol","title":"AsynchronousUnitOfWork","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","abstract":[{"text":"Represents an asynchronous unit of work.","type":"text"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/AUOWCache":{"url":"\/documentation\/afluent\/auowcache","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AUOWCache","kind":"identifier"}],"navigatorTitle":[{"text":"AUOWCache","kind":"identifier"}],"role":"symbol","title":"AUOWCache","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","abstract":[],"kind":"symbol"},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork":{"title":"AnyAsynchronousUnitOfWork","kind":"symbol","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","url":"\/documentation\/afluent\/anyasynchronousunitofwork","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyAsynchronousUnitOfWork"}],"abstract":[{"type":"text","text":"A unit of work that performs type erasure by wrapping another unit of work."}],"navigatorTitle":[{"text":"AnyAsynchronousUnitOfWork","kind":"identifier"}],"type":"topic"},"doc://Afluent/documentation/Afluent/ClockDurationUnit":{"navigatorTitle":[{"kind":"identifier","text":"ClockDurationUnit"}],"kind":"symbol","title":"ClockDurationUnit","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ClockDurationUnit","type":"topic","abstract":[],"role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ClockDurationUnit"}],"url":"\/documentation\/afluent\/clockdurationunit"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","type":"topic","title":"RetryByBackoffStrategy","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"RetryByBackoffStrategy","kind":"identifier"}],"url":"\/documentation\/afluent\/retrybybackoffstrategy","kind":"symbol","abstract":[{"type":"text","text":"A retry strategy using a specified backoff strategy and clock."}],"role":"symbol","navigatorTitle":[{"text":"RetryByBackoffStrategy","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache":{"abstract":[],"navigatorTitle":[{"text":"AsynchronousUnitOfWorkCache","kind":"identifier"}],"title":"AsynchronousUnitOfWorkCache","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsynchronousUnitOfWorkCache","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","role":"symbol","url":"\/documentation\/afluent\/asynchronousunitofworkcache","type":"topic","kind":"symbol"},"doc://Afluent/documentation/Afluent/UnretainedError":{"kind":"symbol","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"UnretainedError","kind":"identifier"}],"title":"UnretainedError","url":"\/documentation\/afluent\/unretainederror","navigatorTitle":[{"text":"UnretainedError","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/UnretainedError","abstract":[],"type":"topic"},"doc://Afluent/documentation/Afluent/Deferred":{"navigatorTitle":[{"kind":"identifier","text":"Deferred"}],"title":"Deferred","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Deferred","kind":"symbol","type":"topic","abstract":[],"role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Deferred"}],"url":"\/documentation\/afluent\/deferred"},"doc://Afluent/documentation/Afluent/AnyCancellable":{"abstract":[{"type":"text","text":"Stores an erased unit of work and provides a mechanism to cancel it"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"AnyCancellable","kind":"identifier"}],"role":"symbol","type":"topic","title":"AnyCancellable","navigatorTitle":[{"kind":"identifier","text":"AnyCancellable"}],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyCancellable","url":"\/documentation\/afluent\/anycancellable"},"doc://Afluent/documentation/Afluent/AsynchronousOperation":{"navigatorTitle":[{"text":"AsynchronousOperation","kind":"identifier"}],"kind":"symbol","title":"AsynchronousOperation","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousOperation","type":"topic","abstract":[{"text":"Reference to an operation that an operator would execute","type":"text"}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsynchronousOperation"}],"url":"\/documentation\/afluent\/asynchronousoperation"},"doc://Afluent/documentation/Afluent/RetryStrategy":{"type":"topic","abstract":[{"type":"text","text":"A strategy for handling errors and determining whether to retry an operation."}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RetryStrategy"}],"url":"\/documentation\/afluent\/retrystrategy","navigatorTitle":[{"kind":"identifier","text":"RetryStrategy"}],"title":"RetryStrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}],"title":"AsyncSequences","type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"AsyncSequences","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/afluent\/asyncsequences","abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","role":"symbol"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence":{"navigatorTitle":[{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/afluent\/asynchronousunitofworksequence","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence","title":"AsynchronousUnitOfWorkSequence","abstract":[{"type":"text","text":"A sequence that represents a single execution of an asynchronous unit of work."}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}],"type":"topic"},"doc://Afluent/documentation/Afluent/TopLevelDecoder":{"navigatorTitle":[{"text":"TopLevelDecoder","kind":"identifier"}],"title":"TopLevelDecoder","abstract":[],"kind":"symbol","type":"topic","url":"\/documentation\/afluent\/topleveldecoder","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TopLevelDecoder","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TopLevelDecoder"}],"role":"symbol"},"doc://Afluent/documentation/Afluent/BackoffStrategy":{"type":"topic","url":"\/documentation\/afluent\/backoffstrategy","abstract":[{"type":"text","text":"A protocol for implementing custom backoff strategies in retry mechanisms."}],"navigatorTitle":[{"kind":"identifier","text":"BackoffStrategy"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","kind":"symbol","role":"symbol","title":"BackoffStrategy","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BackoffStrategy","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/SubscriptionDemand":{"type":"topic","abstract":[],"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"SubscriptionDemand","kind":"identifier"}],"url":"\/documentation\/afluent\/subscriptiondemand","navigatorTitle":[{"text":"SubscriptionDemand","kind":"identifier"}],"title":"SubscriptionDemand","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SubscriptionDemand","kind":"symbol"},"doc://Afluent/documentation/Afluent/Just":{"navigatorTitle":[{"kind":"identifier","text":"Just"}],"title":"Just","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Just","kind":"symbol","type":"topic","abstract":[],"role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"Just","kind":"identifier"}],"url":"\/documentation\/afluent\/just"},"doc://Afluent/documentation/Afluent/Foundation":{"abstract":[],"url":"\/documentation\/afluent\/foundation","type":"topic","title":"Foundation","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Foundation","role":"collection"},"doc://Afluent/documentation/Afluent/RetryByCountStrategy":{"type":"topic","title":"RetryByCountStrategy","navigatorTitle":[{"text":"RetryByCountStrategy","kind":"identifier"}],"kind":"symbol","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RetryByCountStrategy"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"RetryStrategy"},{"text":" that limits the number of retry attempts.","type":"text"}],"url":"\/documentation\/afluent\/retrybycountstrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByCountStrategy"},"doc://Afluent/documentation/Afluent/SingleValueChannel":{"type":"topic","abstract":[{"text":"A channel that emits a single value or an error.","type":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel","url":"\/documentation\/afluent\/singlevaluechannel","role":"symbol","title":"SingleValueChannel","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"SingleValueChannel","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"SingleValueChannel","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/Workers":{"url":"\/documentation\/afluent\/workers","title":"Workers","navigatorTitle":[{"text":"Workers","kind":"identifier"}],"abstract":[{"text":"A namespace for grouping related asynchronous work operations.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Workers"}],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Workers","type":"topic"},"doc://Afluent/documentation/Afluent/AnyAsyncSequence":{"kind":"symbol","title":"AnyAsyncSequence","url":"\/documentation\/afluent\/anyasyncsequence","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsyncSequence","type":"topic","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"AnyAsyncSequence","kind":"identifier"}],"abstract":[],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnyAsyncSequence"}]},"doc://Afluent/documentation/Afluent/SingleValueSubject":{"abstract":[{"type":"text","text":"A subject that emits a single value or an error."}],"navigatorTitle":[{"kind":"identifier","text":"SingleValueSubject"}],"title":"SingleValueSubject","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"SingleValueSubject","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueSubject","role":"symbol","url":"\/documentation\/afluent\/singlevaluesubject","type":"topic","kind":"symbol"},"doc://Afluent/documentation/Afluent/SerialTaskQueue":{"abstract":[{"text":"A serial task queue that ensures tasks are executed one at a time.","type":"text"}],"navigatorTitle":[{"text":"SerialTaskQueue","kind":"identifier"}],"url":"\/documentation\/afluent\/serialtaskqueue","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"SerialTaskQueue","kind":"identifier"}],"title":"SerialTaskQueue","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","role":"symbol"},"doc://Afluent/documentation/Afluent/TopLevelEncoder":{"type":"topic","role":"symbol","title":"TopLevelEncoder","navigatorTitle":[{"kind":"identifier","text":"TopLevelEncoder"}],"url":"\/documentation\/afluent\/toplevelencoder","abstract":[],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TopLevelEncoder","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TopLevelEncoder"}]},"doc://Afluent/documentation/Afluent":{"url":"\/documentation\/afluent","role":"collection","title":"Afluent","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent","abstract":[],"kind":"symbol"}}}