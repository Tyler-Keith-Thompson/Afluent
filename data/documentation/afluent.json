{"kind":"symbol","hierarchy":{"paths":[[]]},"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent","interfaceLanguage":"swift"},"topicSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AnyCancellable","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousOperation","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueSubject","doc:\/\/Afluent\/documentation\/Afluent\/TaskState"],"title":"Classes"},{"title":"Protocols","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/TopLevelDecoder","doc:\/\/Afluent\/documentation\/Afluent\/TopLevelEncoder"]},{"title":"Structures","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence"]},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/Race(cancelAllOnWin:_:against:)"],"title":"Functions"},{"title":"Type Aliases","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","doc:\/\/Afluent\/documentation\/Afluent\/AnyAsyncSequence","doc:\/\/Afluent\/documentation\/Afluent\/Deferred","doc:\/\/Afluent\/documentation\/Afluent\/Just"]},{"title":"Enumerations","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/SubscriptionDemand","doc:\/\/Afluent\/documentation\/Afluent\/UnretainedError","doc:\/\/Afluent\/documentation\/Afluent\/Workers"]},{"title":"Extended Modules","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/Foundation","doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency"]}],"variants":[{"paths":["\/documentation\/afluent"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"role":"collection","externalID":"Afluent","symbolKind":"module","modules":[{"name":"Afluent"}],"roleHeading":"Framework","title":"Afluent"},"references":{"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"title":"AsynchronousUnitOfWork","kind":"symbol","url":"\/documentation\/afluent\/asynchronousunitofwork","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWork"}],"abstract":[{"type":"text","text":"Represents an asynchronous unit of work."}]},"doc://Afluent/documentation/Afluent/DeferredTask":{"abstract":[{"type":"text","text":"A structure representing a deferred asynchronous unit of work."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DeferredTask"}],"url":"\/documentation\/afluent\/deferredtask","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","kind":"symbol","type":"topic","title":"DeferredTask","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DeferredTask"}]},"doc://Afluent/documentation/Afluent/SingleValueSubject":{"navigatorTitle":[{"text":"SingleValueSubject","kind":"identifier"}],"title":"SingleValueSubject","url":"\/documentation\/afluent\/singlevaluesubject","type":"topic","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueSubject","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SingleValueSubject"}],"abstract":[{"type":"text","text":"A subject that emits a single value or an error."}],"role":"symbol"},"doc://Afluent/documentation/Afluent/Deferred":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Deferred","navigatorTitle":[{"text":"Deferred","kind":"identifier"}],"abstract":[],"kind":"symbol","title":"Deferred","type":"topic","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Deferred"}],"role":"symbol","url":"\/documentation\/afluent\/deferred"},"doc://Afluent/documentation/Afluent/AUOWCache":{"navigatorTitle":[{"kind":"identifier","text":"AUOWCache"}],"title":"AUOWCache","url":"\/documentation\/afluent\/auowcache","type":"topic","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"AUOWCache","kind":"identifier"}],"abstract":[],"role":"symbol"},"doc://Afluent/documentation/Afluent/TaskState":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TaskState","navigatorTitle":[{"kind":"identifier","text":"TaskState"}],"abstract":[],"kind":"symbol","title":"TaskState","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"TaskState","kind":"identifier"}],"role":"symbol","url":"\/documentation\/afluent\/taskstate"},"doc://Afluent/documentation/Afluent/AsynchronousOperation":{"url":"\/documentation\/afluent\/asynchronousoperation","navigatorTitle":[{"kind":"identifier","text":"AsynchronousOperation"}],"role":"symbol","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsynchronousOperation"}],"abstract":[{"type":"text","text":"Reference to an operation that an operator would execute"}],"title":"AsynchronousOperation","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousOperation","type":"topic"},"doc://Afluent/documentation/Afluent/SerialTaskQueue":{"abstract":[{"type":"text","text":"A serial task queue that ensures tasks are executed one at a time."}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SerialTaskQueue"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SerialTaskQueue"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","url":"\/documentation\/afluent\/serialtaskqueue","title":"SerialTaskQueue","type":"topic"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache":{"type":"topic","url":"\/documentation\/afluent\/asynchronousunitofworkcache","kind":"symbol","abstract":[],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsynchronousUnitOfWorkCache"}],"navigatorTitle":[{"text":"AsynchronousUnitOfWorkCache","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","title":"AsynchronousUnitOfWorkCache"},"doc://Afluent/documentation/Afluent/TopLevelDecoder":{"url":"\/documentation\/afluent\/topleveldecoder","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TopLevelDecoder","navigatorTitle":[{"text":"TopLevelDecoder","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol","title":"TopLevelDecoder","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TopLevelDecoder"}]},"doc://Afluent/documentation/Afluent/UnretainedError":{"navigatorTitle":[{"text":"UnretainedError","kind":"identifier"}],"abstract":[],"role":"symbol","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/UnretainedError","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnretainedError"}],"title":"UnretainedError","url":"\/documentation\/afluent\/unretainederror"},"doc://Afluent/documentation/Afluent/AnyAsyncSequence":{"title":"AnyAsyncSequence","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsyncSequence","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"AnyAsyncSequence","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AnyAsyncSequence"}],"url":"\/documentation\/afluent\/anyasyncsequence","kind":"symbol","type":"topic","abstract":[],"role":"symbol"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence":{"navigatorTitle":[{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence","abstract":[{"type":"text","text":"A sequence that represents a single execution of an asynchronous unit of work."}],"type":"topic","url":"\/documentation\/afluent\/asynchronousunitofworksequence","role":"symbol","title":"AsynchronousUnitOfWorkSequence","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/SingleValueChannel":{"title":"SingleValueChannel","kind":"symbol","url":"\/documentation\/afluent\/singlevaluechannel","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"SingleValueChannel","kind":"identifier"}],"navigatorTitle":[{"text":"SingleValueChannel","kind":"identifier"}],"abstract":[{"type":"text","text":"A channel that emits a single value or an error."}]},"doc://Afluent/documentation/Afluent":{"url":"\/documentation\/afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol","abstract":[],"title":"Afluent","type":"topic","role":"collection"},"doc://Afluent/documentation/Afluent/Workers":{"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"Workers","kind":"identifier"}],"url":"\/documentation\/afluent\/workers","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Workers"}],"abstract":[{"type":"text","text":"A namespace for grouping related asynchronous work operations."}],"title":"Workers","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Workers","type":"topic"},"doc://Afluent/documentation/Afluent/AnyCancellable":{"role":"symbol","navigatorTitle":[{"text":"AnyCancellable","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyCancellable","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnyCancellable"}],"abstract":[{"type":"text","text":"Stores an erased unit of work and provides a mechanism to cancel it"}],"kind":"symbol","title":"AnyCancellable","type":"topic","url":"\/documentation\/afluent\/anycancellable"},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork":{"title":"AnyAsynchronousUnitOfWork","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnyAsynchronousUnitOfWork"}],"navigatorTitle":[{"text":"AnyAsynchronousUnitOfWork","kind":"identifier"}],"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A unit of work that performs type erasure by wrapping another unit of work."}],"role":"symbol","url":"\/documentation\/afluent\/anyasynchronousunitofwork","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork"},"doc://Afluent/documentation/Afluent/TopLevelEncoder":{"title":"TopLevelEncoder","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TopLevelEncoder"}],"url":"\/documentation\/afluent\/toplevelencoder","kind":"symbol","type":"topic","role":"symbol","abstract":[],"navigatorTitle":[{"text":"TopLevelEncoder","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TopLevelEncoder"},"doc://Afluent/documentation/Afluent/Foundation":{"title":"Foundation","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Foundation","url":"\/documentation\/afluent\/foundation","role":"collection","kind":"symbol","abstract":[],"type":"topic"},"doc://Afluent/documentation/Afluent/SubscriptionDemand":{"role":"symbol","navigatorTitle":[{"text":"SubscriptionDemand","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SubscriptionDemand","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"SubscriptionDemand","kind":"identifier"}],"abstract":[],"kind":"symbol","url":"\/documentation\/afluent\/subscriptiondemand","type":"topic","title":"SubscriptionDemand"},"doc://Afluent/documentation/Afluent/Race(cancelAllOnWin:_:against:)":{"abstract":[{"type":"text","text":"Executes two asynchronous tasks concurrently and returns the result of the first one that completes."}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"Race","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"cancelAllOnWin","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", () "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"text":"against","kind":"externalParam"},{"text":": (() ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")...) ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"}],"kind":"symbol","url":"\/documentation\/afluent\/race(cancelallonwin:_:against:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Race(cancelAllOnWin:_:against:)","title":"Race(cancelAllOnWin:_:against:)","type":"topic"},"doc://Afluent/documentation/Afluent/Just":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Just","abstract":[],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/afluent\/just","title":"Just","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Just"}],"navigatorTitle":[{"kind":"identifier","text":"Just"}]},"doc://Afluent/documentation/Afluent/_Concurrency":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency","kind":"symbol","abstract":[],"title":"_Concurrency","type":"topic","role":"collection","url":"\/documentation\/afluent\/_concurrency"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequences"}],"type":"topic","abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"kind":"symbol","title":"AsyncSequences","role":"symbol","url":"\/documentation\/afluent\/asyncsequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences"}}}