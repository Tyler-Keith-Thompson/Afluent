{"hierarchy":{"paths":[[]]},"metadata":{"title":"Afluent","externalID":"Afluent","role":"collection","symbolKind":"module","roleHeading":"Framework","modules":[{"name":"Afluent"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent"},"sections":[],"variants":[{"paths":["\/documentation\/afluent"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"title":"Classes","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AnyCancellable","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousOperation","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/RetryByCountStrategy","doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueSubject","doc:\/\/Afluent\/documentation\/Afluent\/TaskState"]},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","doc:\/\/Afluent\/documentation\/Afluent\/TopLevelDecoder","doc:\/\/Afluent\/documentation\/Afluent\/TopLevelEncoder"],"title":"Protocols"},{"title":"Structures","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence"]},{"title":"Functions","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/Race(cancelAllOnWin:_:against:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","doc:\/\/Afluent\/documentation\/Afluent\/AnyAsyncSequence","doc:\/\/Afluent\/documentation\/Afluent\/ClockDurationUnit","doc:\/\/Afluent\/documentation\/Afluent\/Deferred","doc:\/\/Afluent\/documentation\/Afluent\/Just"]},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/SubscriptionDemand","doc:\/\/Afluent\/documentation\/Afluent\/UnretainedError","doc:\/\/Afluent\/documentation\/Afluent\/Workers"],"title":"Enumerations"},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/Foundation","doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency"],"title":"Extended Modules"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","references":{"doc://Afluent/documentation/Afluent/SerialTaskQueue":{"url":"\/documentation\/afluent\/serialtaskqueue","title":"SerialTaskQueue","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","kind":"symbol","role":"symbol","abstract":[{"text":"A serial task queue that ensures tasks are executed one at a time.","type":"text"}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"SerialTaskQueue","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SerialTaskQueue"}]},"doc://Afluent/documentation/Afluent/SubscriptionDemand":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SubscriptionDemand","navigatorTitle":[{"text":"SubscriptionDemand","kind":"identifier"}],"abstract":[],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SubscriptionDemand"}],"url":"\/documentation\/afluent\/subscriptiondemand","type":"topic","title":"SubscriptionDemand"},"doc://Afluent/documentation/Afluent/SingleValueChannel":{"abstract":[{"text":"A channel that emits a single value or an error.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SingleValueChannel","kind":"identifier"}],"role":"symbol","url":"\/documentation\/afluent\/singlevaluechannel","title":"SingleValueChannel","navigatorTitle":[{"text":"SingleValueChannel","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/RetryByCountStrategy":{"abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"RetryStrategy"},{"type":"text","text":" that limits the number of retry attempts."}],"title":"RetryByCountStrategy","type":"topic","role":"symbol","url":"\/documentation\/afluent\/retrybycountstrategy","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByCountStrategy","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RetryByCountStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"RetryByCountStrategy"}]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}],"abstract":[{"text":"A sequence that represents a single execution of an asynchronous unit of work.","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence","title":"AsynchronousUnitOfWorkSequence","url":"\/documentation\/afluent\/asynchronousunitofworksequence","type":"topic","navigatorTitle":[{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy":{"navigatorTitle":[{"kind":"identifier","text":"ExponentialBackoffStrategy"}],"type":"topic","url":"\/documentation\/afluent\/exponentialbackoffstrategy","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"ExponentialBackoffStrategy","kind":"identifier"}],"title":"ExponentialBackoffStrategy","abstract":[{"text":"An exponential backoff strategy for retrying operations.","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy"},"doc://Afluent/documentation/Afluent/DeferredTask":{"navigatorTitle":[{"text":"DeferredTask","kind":"identifier"}],"type":"topic","url":"\/documentation\/afluent\/deferredtask","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"DeferredTask","kind":"identifier"}],"title":"DeferredTask","abstract":[{"text":"A structure representing a deferred asynchronous unit of work.","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask"},"doc://Afluent/documentation/Afluent/RetryStrategy":{"abstract":[{"text":"A strategy for handling errors and determining whether to retry an operation.","type":"text"}],"title":"RetryStrategy","type":"topic","role":"symbol","url":"\/documentation\/afluent\/retrystrategy","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"RetryStrategy","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"RetryStrategy"}]},"doc://Afluent/documentation/Afluent/UnretainedError":{"type":"topic","kind":"symbol","url":"\/documentation\/afluent\/unretainederror","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"UnretainedError","kind":"identifier"}],"abstract":[],"title":"UnretainedError","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/UnretainedError","navigatorTitle":[{"text":"UnretainedError","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AUOWCache":{"fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AUOWCache"}],"role":"symbol","url":"\/documentation\/afluent\/auowcache","navigatorTitle":[{"kind":"identifier","text":"AUOWCache"}],"type":"topic","title":"AUOWCache","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","kind":"symbol"},"doc://Afluent/documentation/Afluent/BackoffStrategy":{"title":"BackoffStrategy","navigatorTitle":[{"kind":"identifier","text":"BackoffStrategy"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","url":"\/documentation\/afluent\/backoffstrategy","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"BackoffStrategy"}],"kind":"symbol","role":"symbol","abstract":[{"text":"A protocol for implementing custom backoff strategies in retry mechanisms.","type":"text"}]},"doc://Afluent/documentation/Afluent/AnyAsyncSequence":{"title":"AnyAsyncSequence","role":"symbol","url":"\/documentation\/afluent\/anyasyncsequence","navigatorTitle":[{"kind":"identifier","text":"AnyAsyncSequence"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsyncSequence","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnyAsyncSequence"}],"abstract":[],"kind":"symbol"},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyAsynchronousUnitOfWork"}],"role":"symbol","url":"\/documentation\/afluent\/anyasynchronousunitofwork","navigatorTitle":[{"text":"AnyAsynchronousUnitOfWork","kind":"identifier"}],"type":"topic","title":"AnyAsynchronousUnitOfWork","abstract":[{"text":"A unit of work that performs type erasure by wrapping another unit of work.","type":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","kind":"symbol"},"doc://Afluent/documentation/Afluent/Workers":{"url":"\/documentation\/afluent\/workers","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Workers","title":"Workers","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Workers"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"Workers","kind":"identifier"}],"kind":"symbol","type":"topic","abstract":[{"text":"A namespace for grouping related asynchronous work operations.","type":"text"}]},"doc://Afluent/documentation/Afluent/TopLevelEncoder":{"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TopLevelEncoder"}],"url":"\/documentation\/afluent\/toplevelencoder","role":"symbol","title":"TopLevelEncoder","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"TopLevelEncoder","kind":"identifier"}],"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TopLevelEncoder"},"doc://Afluent/documentation/Afluent/Just":{"title":"Just","role":"symbol","url":"\/documentation\/afluent\/just","navigatorTitle":[{"kind":"identifier","text":"Just"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Just","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"Just","kind":"identifier"}],"abstract":[],"kind":"symbol"},"doc://Afluent/documentation/Afluent/Race(cancelAllOnWin:_:against:)":{"title":"Race(cancelAllOnWin:_:against:)","role":"symbol","url":"\/documentation\/afluent\/race(cancelallonwin:_:against:)","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Race(cancelAllOnWin:_:against:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Race"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"cancelAllOnWin","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", () "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":", ","kind":"text"},{"text":"against","kind":"externalParam"},{"kind":"text","text":": (() "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")...) "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"T","kind":"typeIdentifier"}],"abstract":[{"text":"Executes two asynchronous tasks concurrently and returns the result of the first one that completes.","type":"text"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/_Concurrency":{"type":"topic","url":"\/documentation\/afluent\/_concurrency","title":"_Concurrency","abstract":[],"kind":"symbol","role":"collection","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency"},"doc://Afluent/documentation/Afluent/ClockDurationUnit":{"navigatorTitle":[{"text":"ClockDurationUnit","kind":"identifier"}],"role":"symbol","abstract":[],"title":"ClockDurationUnit","kind":"symbol","url":"\/documentation\/afluent\/clockdurationunit","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ClockDurationUnit","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"ClockDurationUnit"}]},"doc://Afluent/documentation/Afluent/AsynchronousOperation":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousOperation","type":"topic","kind":"symbol","title":"AsynchronousOperation","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"AsynchronousOperation","kind":"identifier"}],"url":"\/documentation\/afluent\/asynchronousoperation","abstract":[{"text":"Reference to an operation that an operator would execute","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"AsynchronousOperation"}]},"doc://Afluent/documentation/Afluent/TaskState":{"navigatorTitle":[{"text":"TaskState","kind":"identifier"}],"type":"topic","url":"\/documentation\/afluent\/taskstate","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TaskState"}],"title":"TaskState","abstract":[],"kind":"symbol","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TaskState"},"doc://Afluent/documentation/Afluent/Foundation":{"url":"\/documentation\/afluent\/foundation","role":"collection","kind":"symbol","title":"Foundation","type":"topic","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Foundation"},"doc://Afluent/documentation/Afluent/Deferred":{"navigatorTitle":[{"text":"Deferred","kind":"identifier"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"Deferred","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/Deferred","abstract":[],"url":"\/documentation\/afluent\/deferred","title":"Deferred","role":"symbol"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"title":"AsynchronousUnitOfWork","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsynchronousUnitOfWork"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","url":"\/documentation\/afluent\/asynchronousunitofwork","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWork"}],"abstract":[{"type":"text","text":"Represents an asynchronous unit of work."}]},"doc://Afluent/documentation/Afluent/SingleValueSubject":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SingleValueSubject"}],"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueSubject","navigatorTitle":[{"kind":"identifier","text":"SingleValueSubject"}],"abstract":[{"type":"text","text":"A subject that emits a single value or an error."}],"url":"\/documentation\/afluent\/singlevaluesubject","title":"SingleValueSubject"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","title":"AsyncSequences","url":"\/documentation\/afluent\/asyncsequences","role":"symbol","navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncSequences"}],"type":"topic"},"doc://Afluent/documentation/Afluent/TopLevelDecoder":{"url":"\/documentation\/afluent\/topleveldecoder","kind":"symbol","title":"TopLevelDecoder","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/TopLevelDecoder","type":"topic","abstract":[],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"TopLevelDecoder","kind":"identifier"}],"navigatorTitle":[{"text":"TopLevelDecoder","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy":{"title":"RetryByBackoffStrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","url":"\/documentation\/afluent\/retrybybackoffstrategy","navigatorTitle":[{"text":"RetryByBackoffStrategy","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RetryByBackoffStrategy"}],"role":"symbol","type":"topic","abstract":[{"text":"A retry strategy using a specified backoff strategy and clock.","type":"text"}]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsynchronousUnitOfWorkCache"}],"kind":"symbol","abstract":[],"title":"AsynchronousUnitOfWorkCache","type":"topic","url":"\/documentation\/afluent\/asynchronousunitofworkcache","navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWorkCache"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","role":"symbol"},"doc://Afluent/documentation/Afluent/AnyCancellable":{"title":"AnyCancellable","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyCancellable","kind":"identifier"}],"type":"topic","url":"\/documentation\/afluent\/anycancellable","role":"symbol","navigatorTitle":[{"text":"AnyCancellable","kind":"identifier"}],"abstract":[{"type":"text","text":"Stores an erased unit of work and provides a mechanism to cancel it"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyCancellable"},"doc://Afluent/documentation/Afluent":{"type":"topic","kind":"symbol","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent","role":"collection","title":"Afluent","url":"\/documentation\/afluent"}}}