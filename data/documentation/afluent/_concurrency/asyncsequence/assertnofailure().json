{"abstract":[{"type":"text","text":"Raises a fatal error when its upstream sequence fails, and otherwise republishes all received input."}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"assertNoFailure","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO15AssertNoFailureV","text":"AssertNoFailure","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"metadata":{"externalID":"s:Sci7Afluents8SendableRzrlE15assertNoFailureAA14AsyncSequencesO06AssertdE0Vy_xGyF","role":"symbol","modules":[{"name":"Afluent","relatedModules":["_Concurrency"]}],"symbolKind":"method","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"assertNoFailure","kind":"identifier"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier","text":"AsyncSequences"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO15AssertNoFailureV","text":"AssertNoFailure"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}]},"extendedModule":"_Concurrency","title":"assertNoFailure()","remoteSource":{"fileName":"AssertNoFailureSequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/AssertNoFailureSequence.swift#L38"}},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency","doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency\/AsyncSequence"]]},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency\/AsyncSequence\/assertNoFailure()"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/_concurrency\/asyncsequence\/assertnofailure()"]}],"references":{"doc://Afluent/documentation/Afluent":{"type":"topic","abstract":[],"url":"\/documentation\/afluent","role":"collection","kind":"symbol","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent"},"doc://Afluent/documentation/Afluent/_Concurrency":{"abstract":[],"title":"_Concurrency","url":"\/documentation\/afluent\/_concurrency","kind":"symbol","role":"collection","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency","type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"AssertNoFailure"}],"abstract":[],"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AssertNoFailure"}],"kind":"symbol","title":"AsyncSequences.AssertNoFailure","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure"},"doc://Afluent/documentation/Afluent/_Concurrency/AsyncSequence/assertNoFailure()":{"url":"\/documentation\/afluent\/_concurrency\/asyncsequence\/assertnofailure()","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency\/AsyncSequence\/assertNoFailure()","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}]},"title":"assertNoFailure()","type":"topic","abstract":[{"text":"Raises a fatal error when its upstream sequence fails, and otherwise republishes all received input.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"assertNoFailure"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO15AssertNoFailureV","text":"AssertNoFailure","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"kind":"symbol","role":"symbol"},"doc://Afluent/documentation/Afluent/_Concurrency/AsyncSequence":{"abstract":[],"title":"AsyncSequence","url":"\/documentation\/afluent\/_concurrency\/asyncsequence","navigatorTitle":[{"text":"AsyncSequence","kind":"identifier"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency\/AsyncSequence","type":"topic","fragments":[{"text":"extension","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncSequence","preciseIdentifier":"s:Sci","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsyncSequences":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"url":"\/documentation\/afluent\/asyncsequences","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"AsyncSequences","kind":"identifier"}],"kind":"symbol","title":"AsyncSequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences"}}}