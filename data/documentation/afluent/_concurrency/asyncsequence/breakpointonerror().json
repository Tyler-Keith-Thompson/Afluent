{"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency","doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency\/AsyncSequence"]]},"abstract":[{"type":"text","text":"Introduces a breakpoint into the async sequence when an error occurs."}],"variants":[{"paths":["\/documentation\/afluent\/_concurrency\/asyncsequence\/breakpointonerror()"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"breakpointOnError"},{"kind":"text","text":"() -> "},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","kind":"typeIdentifier","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents","preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV","kind":"typeIdentifier","text":"HandleEvents"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Return Value","level":2,"anchor":"return-value","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"An ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"text":" with the breakpoint-on-error condition applied.","type":"text"}]}],"kind":"content"},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"inlineContent":[{"text":"This function triggers a ","type":"text"},{"code":"SIGTRAP","type":"codeVoice"},{"type":"text","text":" signal, pausing execution in a debugger, whenever the async sequence produces an error."}],"type":"paragraph"}],"kind":"content"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency\/AsyncSequence\/breakpointOnError()"},"kind":"symbol","metadata":{"role":"symbol","extendedModule":"_Concurrency","modules":[{"relatedModules":["_Concurrency"],"name":"Afluent"}],"title":"breakpointOnError()","externalID":"s:Sci7Afluents8SendableRzrlE17breakpointOnErrorAA14AsyncSequencesO12HandleEventsVy_xGyF","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"breakpointOnError"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV","kind":"typeIdentifier","text":"HandleEvents"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"remoteSource":{"fileName":"BreakpointSequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/BreakpointSequence.swift#L38"},"conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"symbolKind":"method"},"references":{"doc://Afluent/documentation/Afluent/_Concurrency/AsyncSequence":{"url":"\/documentation\/afluent\/_concurrency\/asyncsequence","kind":"symbol","abstract":[],"title":"AsyncSequence","navigatorTitle":[{"kind":"identifier","text":"AsyncSequence"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency\/AsyncSequence","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"extension"},{"kind":"text","text":" "},{"preciseIdentifier":"s:Sci","text":"AsyncSequence","kind":"identifier"}]},"doc://Afluent/documentation/Afluent":{"url":"\/documentation\/afluent","type":"topic","title":"Afluent","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol","role":"collection"},"doc://Afluent/documentation/Afluent/_Concurrency":{"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency","title":"_Concurrency","type":"topic","abstract":[],"url":"\/documentation\/afluent\/_concurrency","role":"collection"},"doc://Afluent/documentation/Afluent/_Concurrency/AsyncSequence/breakpointOnError()":{"type":"topic","url":"\/documentation\/afluent\/_concurrency\/asyncsequence\/breakpointonerror()","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}]},"abstract":[{"type":"text","text":"Introduces a breakpoint into the async sequence when an error occurs."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency\/AsyncSequence\/breakpointOnError()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"breakpointOnError","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"text":"HandleEvents","preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"role":"symbol","kind":"symbol","title":"breakpointOnError()"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"url":"\/documentation\/afluent\/asyncsequences","kind":"symbol","title":"AsyncSequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncSequences","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/HandleEvents":{"title":"AsyncSequences.HandleEvents","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents","url":"\/documentation\/afluent\/asyncsequences\/handleevents","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HandleEvents"}],"type":"topic","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"HandleEvents"}]}}}