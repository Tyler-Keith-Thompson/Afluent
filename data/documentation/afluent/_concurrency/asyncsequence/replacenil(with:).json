{"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency\/AsyncSequence\/replaceNil(with:)","interfaceLanguage":"swift"},"sections":[],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency","doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency\/AsyncSequence"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"replaceNil","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"E"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"with"},{"kind":"text","text":" "},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","kind":"typeIdentifier","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"text":"ReplaceNil","preciseIdentifier":"s:7Afluent14AsyncSequencesO10ReplaceNilV","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/ReplaceNil","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"E"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"Sendable","preciseIdentifier":"s:s8SendableP"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sci7ElementQa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":" == "},{"text":"E","kind":"typeIdentifier"},{"kind":"text","text":"?"}]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The value to emit when the upstream emits "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"name":"value"}]},{"content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"inlineContent":[{"text":"An ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" that emits the specified value instead of "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" when the upstream emits "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"kind":"content"}],"metadata":{"modules":[{"name":"Afluent","relatedModules":["_Concurrency"]}],"externalID":"s:Sci7Afluents8SendableRzrlE10replaceNil4withAA14AsyncSequencesO07ReplaceD0Vy_xqd__Gqd___tsABRd__qd__Sg7ElementRtzlF","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"replaceNil"},{"kind":"text","text":"<"},{"text":"E","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"with","kind":"externalParam"},{"kind":"text","text":": "},{"text":"E","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO10ReplaceNilV","text":"ReplaceNil","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"replaceNil(with:)","roleHeading":"Instance Method","extendedModule":"_Concurrency","role":"symbol","symbolKind":"method","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}]},"remoteSource":{"fileName":"ReplaceNilSequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/ReplaceNilSequence.swift#L46"}},"abstract":[{"type":"text","text":"Replaces any "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" values from the upstream "},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" with the provided non-nil value."}],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","variants":[{"paths":["\/documentation\/afluent\/_concurrency\/asyncsequence\/replacenil(with:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Afluent/documentation/Afluent/AsyncSequences":{"role":"symbol","title":"AsyncSequences","abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"type":"topic","url":"\/documentation\/afluent\/asyncsequences","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"AsyncSequences","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences"},"doc://Afluent/documentation/Afluent/_Concurrency/AsyncSequence":{"kind":"symbol","fragments":[{"kind":"keyword","text":"extension"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequence","preciseIdentifier":"s:Sci"}],"abstract":[],"url":"\/documentation\/afluent\/_concurrency\/asyncsequence","role":"symbol","navigatorTitle":[{"text":"AsyncSequence","kind":"identifier"}],"type":"topic","title":"AsyncSequence","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency\/AsyncSequence"},"doc://Afluent/documentation/Afluent/AsyncSequences/ReplaceNil":{"role":"symbol","type":"topic","abstract":[],"title":"AsyncSequences.ReplaceNil","kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/replacenil","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReplaceNil"}],"navigatorTitle":[{"text":"ReplaceNil","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/ReplaceNil"},"doc://Afluent/documentation/Afluent/_Concurrency/AsyncSequence/replaceNil(with:)":{"abstract":[{"type":"text","text":"Replaces any "},{"type":"codeVoice","code":"nil"},{"text":" values from the upstream ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"text":" with the provided non-nil value.","type":"text"}],"url":"\/documentation\/afluent\/_concurrency\/asyncsequence\/replacenil(with:)","title":"replaceNil(with:)","role":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency\/AsyncSequence\/replaceNil(with:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"replaceNil"},{"text":"<","kind":"text"},{"text":"E","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO10ReplaceNilV","text":"ReplaceNil","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"E","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","kind":"symbol"},"doc://Afluent/documentation/Afluent":{"type":"topic","url":"\/documentation\/afluent","kind":"symbol","role":"collection","title":"Afluent","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent"},"doc://Afluent/documentation/Afluent/_Concurrency":{"abstract":[],"url":"\/documentation\/afluent\/_concurrency","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/_Concurrency","type":"topic","kind":"symbol","role":"collection","title":"_Concurrency"}}}