{"variants":[{"paths":["\/documentation\/afluent\/anyasynchronousunitofwork\/assertnofailure()"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"text":"Adds a behavior to the unit of work that asserts no failures are emitted.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/assertNoFailure()"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"assertNoFailure"},{"text":"() -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"text":"AsynchronousUnitOfWork","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Success","kind":"typeIdentifier"},{"text":">\n","kind":"text"}]}],"kind":"declarations"},{"content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"A new ","type":"text"},{"code":"AsynchronousUnitOfWork","type":"codeVoice"},{"text":" that will assert if any failures are emitted from the upstream unit of work.","type":"text"}]}],"kind":"content"},{"kind":"content","content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"inlineContent":[{"type":"text","text":"This is often useful for debugging or in scenarios where you are certain"},{"text":" ","type":"text"},{"text":"that the upstream ","type":"text"},{"code":"AsynchronousUnitOfWork","type":"codeVoice"},{"text":" should not emit any errors.","type":"text"}],"type":"paragraph"}]}],"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/AsynchronousUnitOfWork-Implementations"]]},"metadata":{"title":"assertNoFailure()","role":"symbol","remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/Workers\/AssertNoFailure.swift#L37","fileName":"AssertNoFailure.swift"},"externalID":"s:7Afluent22AsynchronousUnitOfWorkPAAE15assertNoFailureQryF::SYNTHESIZED::s:7Afluent25AnyAsynchronousUnitOfWorkV","modules":[{"name":"Afluent"}],"symbolKind":"method","roleHeading":"Instance Method","extendedModule":"Afluent","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"assertNoFailure"},{"text":"() -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsynchronousUnitOfWork","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Success"},{"text":">\n","kind":"text"}]},"references":{"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork/assertNoFailure()":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/assertNoFailure()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"assertNoFailure","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWork","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Success"},{"text":">\n","kind":"text"}],"role":"symbol","url":"\/documentation\/afluent\/anyasynchronousunitofwork\/assertnofailure()","abstract":[{"text":"Adds a behavior to the unit of work that asserts no failures are emitted.","type":"text"}],"title":"assertNoFailure()","kind":"symbol","type":"topic"},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","role":"symbol","abstract":[{"text":"A unit of work that performs type erasure by wrapping another unit of work.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnyAsynchronousUnitOfWork"}],"navigatorTitle":[{"kind":"identifier","text":"AnyAsynchronousUnitOfWork"}],"type":"topic","kind":"symbol","title":"AnyAsynchronousUnitOfWork","url":"\/documentation\/afluent\/anyasynchronousunitofwork"},"doc://Afluent/documentation/Afluent":{"kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/Afluent\/documentation\/Afluent","abstract":[],"title":"Afluent","url":"\/documentation\/afluent"},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork/AsynchronousUnitOfWork-Implementations":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/AsynchronousUnitOfWork-Implementations","role":"collectionGroup","abstract":[],"type":"topic","kind":"article","title":"AsynchronousUnitOfWork Implementations","url":"\/documentation\/afluent\/anyasynchronousunitofwork\/asynchronousunitofwork-implementations"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"role":"symbol","url":"\/documentation\/afluent\/asynchronousunitofwork","navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWork"}],"type":"topic","title":"AsynchronousUnitOfWork","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsynchronousUnitOfWork"}],"abstract":[{"type":"text","text":"Represents an asynchronous unit of work."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork"}}}