{"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"dematerialize","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">() -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","text":"AsynchronousUnitOfWork","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP","text":"Sendable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Success"},{"kind":"text","text":" == "},{"text":"Result","preciseIdentifier":"s:s6ResultO","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":", ","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"kind":"text","text":">\n"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"type":"heading","anchor":"return-value","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"An ","type":"text"},{"type":"codeVoice","code":"AsynchronousUnitOfWork"},{"text":" that emits the success value or throws the error contained within the ","type":"text"},{"type":"codeVoice","code":"Result"},{"type":"text","text":"."}]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"This operator is the inverse of ","type":"text"},{"type":"codeVoice","code":"materialize"},{"type":"text","text":". It expects the "},{"code":"AsynchronousUnitOfWork","type":"codeVoice"},{"type":"text","text":" to emit a "},{"type":"codeVoice","code":"Result"},{"type":"text","text":" value and will either"},{"text":" ","type":"text"},{"text":"propagate the success value or throw the error contained within the ","type":"text"},{"code":"Result","type":"codeVoice"},{"text":".","type":"text"}]},{"inlineContent":[{"text":"Example:","type":"text"}],"type":"paragraph"},{"code":["let task = DeferredTask<Result<String, Error>> { ... }","let dematerializedTask = task.dematerialize()","do {","    let value: String = try await dematerializedTask.execute()","    \/\/ Handle success value","} catch {","    \/\/ Handle error","}"],"type":"codeListing","syntax":"swift"},{"style":"note","name":"Throws","content":[{"inlineContent":[{"type":"text","text":"The error contained within the "},{"type":"codeVoice","code":"Result"},{"text":" if itâ€™s a failure.","type":"text"}],"type":"paragraph"}],"type":"aside"}]}],"abstract":[{"type":"text","text":"Transforms a "},{"code":"Result","type":"codeVoice"},{"text":" value emitted by the current ","type":"text"},{"type":"codeVoice","code":"AsynchronousUnitOfWork"},{"text":" into its underlying success or failure.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/AsynchronousUnitOfWork-Implementations"]]},"variants":[{"paths":["\/documentation\/afluent\/anyasynchronousunitofwork\/dematerialize()"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","metadata":{"symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"dematerialize"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">() -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","kind":"typeIdentifier","text":"AsynchronousUnitOfWork"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">\n"}],"title":"dematerialize()","remoteSource":{"fileName":"Dematerialize.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/Workers\/Dematerialize.swift#L30"},"extendedModule":"Afluent","modules":[{"name":"Afluent"}],"externalID":"s:7Afluent22AsynchronousUnitOfWorkPAAE13dematerializeQrys8SendableRd__s6ResultOyqd__s5Error_pG7SuccessRtzlF::SYNTHESIZED::s:7Afluent25AnyAsynchronousUnitOfWorkV","roleHeading":"Instance Method","role":"symbol"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/dematerialize()"},"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"kind":"symbol","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","title":"AsynchronousUnitOfWork","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"url":"\/documentation\/afluent\/asynchronousunitofwork","role":"symbol","abstract":[{"type":"text","text":"Represents an asynchronous unit of work."}],"navigatorTitle":[{"text":"AsynchronousUnitOfWork","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork/dematerialize()":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"dematerialize","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">() -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWork","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"text":">\n","kind":"text"}],"type":"topic","url":"\/documentation\/afluent\/anyasynchronousunitofwork\/dematerialize()","role":"symbol","title":"dematerialize()","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/dematerialize()","kind":"symbol","abstract":[{"text":"Transforms a ","type":"text"},{"type":"codeVoice","code":"Result"},{"text":" value emitted by the current ","type":"text"},{"type":"codeVoice","code":"AsynchronousUnitOfWork"},{"text":" into its underlying success or failure.","type":"text"}]},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork":{"title":"AnyAsynchronousUnitOfWork","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AnyAsynchronousUnitOfWork","kind":"identifier"}],"abstract":[{"text":"A unit of work that performs type erasure by wrapping another unit of work.","type":"text"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","kind":"symbol","url":"\/documentation\/afluent\/anyasynchronousunitofwork","role":"symbol","navigatorTitle":[{"text":"AnyAsynchronousUnitOfWork","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork/AsynchronousUnitOfWork-Implementations":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/AsynchronousUnitOfWork-Implementations","url":"\/documentation\/afluent\/anyasynchronousunitofwork\/asynchronousunitofwork-implementations","title":"AsynchronousUnitOfWork Implementations","role":"collectionGroup","type":"topic","kind":"article","abstract":[]},"doc://Afluent/documentation/Afluent":{"kind":"symbol","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","type":"topic","url":"\/documentation\/afluent","role":"collection","abstract":[]}}}