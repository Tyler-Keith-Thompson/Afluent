{"sections":[],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/AsynchronousUnitOfWork-Implementations"]]},"kind":"symbol","abstract":[{"type":"text","text":"Transforms a "},{"type":"codeVoice","code":"Result"},{"text":" value emitted by the current ","type":"text"},{"code":"AsynchronousUnitOfWork","type":"codeVoice"},{"text":" into its underlying success or failure.","type":"text"}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"dematerialize"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">() -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","text":"AsynchronousUnitOfWork","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Sendable","preciseIdentifier":"s:s8SendableP"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/Success","text":"Success","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa"},{"kind":"text","text":" == "},{"text":"Result","kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":", any ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"text":">\n","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"type":"codeVoice","code":"AsynchronousUnitOfWork"},{"text":" that emits the success value or throws the error contained within the ","type":"text"},{"code":"Result","type":"codeVoice"},{"text":".","type":"text"}]}],"kind":"content"},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"inlineContent":[{"text":"This operator is the inverse of ","type":"text"},{"type":"codeVoice","code":"materialize"},{"text":". It expects the ","type":"text"},{"type":"codeVoice","code":"AsynchronousUnitOfWork"},{"text":" to emit a ","type":"text"},{"type":"codeVoice","code":"Result"},{"text":" value and will either","type":"text"},{"type":"text","text":" "},{"type":"text","text":"propagate the success value or throw the error contained within the "},{"type":"codeVoice","code":"Result"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"text":"Example:","type":"text"}],"type":"paragraph"},{"code":["let task = DeferredTask<Result<String, Error>> { ... }","let dematerializedTask = task.dematerialize()","do {","    let value: String = try await dematerializedTask.execute()","    \/\/ Handle success value","} catch {","    \/\/ Handle error","}"],"syntax":"swift","type":"codeListing"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The error contained within the "},{"type":"codeVoice","code":"Result"},{"type":"text","text":" if itâ€™s a failure."}]}],"style":"note","name":"Throws","type":"aside"}]}],"variants":[{"paths":["\/documentation\/afluent\/anyasynchronousunitofwork\/dematerialize()"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"title":"dematerialize()","externalID":"s:7Afluent22AsynchronousUnitOfWorkPAAE13dematerializeQrys8SendableRd__s6ResultOyqd__s5Error_pG7SuccessRtzlF::SYNTHESIZED::s:7Afluent25AnyAsynchronousUnitOfWorkV","symbolKind":"method","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"dematerialize"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">() -> ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"AsynchronousUnitOfWork","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"text":">\n","kind":"text"}],"modules":[{"name":"Afluent"}],"extendedModule":"Afluent","role":"symbol","remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/Workers\/Dematerialize.swift#L30","fileName":"Dematerialize.swift"}},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/dematerialize()"},"references":{"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork/dematerialize()":{"title":"dematerialize()","abstract":[{"text":"Transforms a ","type":"text"},{"code":"Result","type":"codeVoice"},{"type":"text","text":" value emitted by the current "},{"type":"codeVoice","code":"AsynchronousUnitOfWork"},{"text":" into its underlying success or failure.","type":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/dematerialize()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"dematerialize","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">() -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"AsynchronousUnitOfWork","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">\n"}],"kind":"symbol","type":"topic","url":"\/documentation\/afluent\/anyasynchronousunitofwork\/dematerialize()","role":"symbol"},"doc://Afluent/documentation/Afluent":{"title":"Afluent","type":"topic","kind":"symbol","url":"\/documentation\/afluent","abstract":[],"role":"collection","identifier":"doc:\/\/Afluent\/documentation\/Afluent"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"kind":"symbol","type":"topic","title":"AsynchronousUnitOfWork","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","url":"\/documentation\/afluent\/asynchronousunitofwork","abstract":[{"type":"text","text":"Represents an asynchronous unit of work."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWork"}]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork/Success":{"kind":"symbol","type":"topic","title":"Success","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/Success","url":"\/documentation\/afluent\/asynchronousunitofwork\/success","required":true,"abstract":[{"type":"text","text":"The type of data the unit of work will produce if it succeeds."}],"fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"text":"Success","kind":"identifier"},{"kind":"text","text":" : "},{"text":"Sendable","preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier"}],"role":"symbol"},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","abstract":[{"type":"text","text":"A unit of work that performs type erasure by wrapping another unit of work."}],"url":"\/documentation\/afluent\/anyasynchronousunitofwork","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnyAsynchronousUnitOfWork"}],"navigatorTitle":[{"kind":"identifier","text":"AnyAsynchronousUnitOfWork"}],"type":"topic","kind":"symbol","title":"AnyAsynchronousUnitOfWork","role":"symbol"},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork/AsynchronousUnitOfWork-Implementations":{"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/AsynchronousUnitOfWork-Implementations","url":"\/documentation\/afluent\/anyasynchronousunitofwork\/asynchronousunitofwork-implementations","kind":"article","role":"collectionGroup","abstract":[],"title":"AsynchronousUnitOfWork Implementations"}}}