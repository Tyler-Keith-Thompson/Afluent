{"kind":"symbol","variants":[{"paths":["\/documentation\/afluent\/anyasynchronousunitofwork\/flatmap(_:)-59de"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Transforms the successful output values from the upstream ","type":"text"},{"code":"AsynchronousUnitOfWork","type":"codeVoice"},{"text":" using the provided asynchronous transformation closure.","type":"text"},{"text":" ","type":"text"},{"text":"This overload is specialized for ","type":"text"},{"code":"AsynchronousUnitOfWork","type":"codeVoice"},{"text":" types that have ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":" as their ","type":"text"},{"code":"Success","type":"codeVoice"},{"type":"text","text":" type."}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/AsynchronousUnitOfWork-Implementations"]]},"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/flatMap(_:)-59de","interfaceLanguage":"swift"},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"modules":[{"name":"Afluent"}],"symbolKind":"method","roleHeading":"Instance Method","extendedModule":"Afluent","title":"flatMap(_:)","externalID":"s:7Afluent22AsynchronousUnitOfWorkPAAE7flatMapyQrqd__yYaYbKcAaBRd__yt7SuccessRtzlF::SYNTHESIZED::s:7Afluent25AnyAsynchronousUnitOfWorkV","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"flatMap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"D"},{"text":">(() ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","text":"AsynchronousUnitOfWork"},{"kind":"text","text":"<"},{"text":"D","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Success","kind":"typeIdentifier"},{"text":">\n","kind":"text"}],"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/Workers\/FlatMap.swift#L49","fileName":"FlatMap.swift"},"role":"symbol"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatMap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"D"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"transform","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" () ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"D"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","text":"AsynchronousUnitOfWork","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP"},{"text":"<","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Success","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"D","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","kind":"typeIdentifier","text":"AsynchronousUnitOfWork"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Success"},{"kind":"text","text":" == ()\n"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An asynchronous closure that returns another "},{"code":"AsynchronousUnitOfWork","type":"codeVoice"},{"type":"text","text":"."}]}],"name":"transform"}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"inlineContent":[{"text":"An ","type":"text"},{"code":"AsynchronousUnitOfWork","type":"codeVoice"},{"type":"text","text":" emitting the successful output values from the new "},{"code":"AsynchronousUnitOfWork","type":"codeVoice"},{"text":" created by the transformation.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"The returned ","type":"text"},{"type":"codeVoice","code":"AsynchronousUnitOfWork"},{"type":"text","text":" will fail if either the upstream unit of work or the transformation closure fails."}]}],"name":"Note","type":"aside"}]}],"references":{"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"kind":"symbol","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","title":"AsynchronousUnitOfWork","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"url":"\/documentation\/afluent\/asynchronousunitofwork","role":"symbol","abstract":[{"type":"text","text":"Represents an asynchronous unit of work."}],"navigatorTitle":[{"text":"AsynchronousUnitOfWork","kind":"identifier"}]},"doc://Afluent/documentation/Afluent":{"kind":"symbol","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","type":"topic","url":"\/documentation\/afluent","role":"collection","abstract":[]},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork/AsynchronousUnitOfWork-Implementations":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/AsynchronousUnitOfWork-Implementations","url":"\/documentation\/afluent\/anyasynchronousunitofwork\/asynchronousunitofwork-implementations","title":"AsynchronousUnitOfWork Implementations","role":"collectionGroup","type":"topic","kind":"article","abstract":[]},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork/flatMap(_:)-59de":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"flatMap","kind":"identifier"},{"text":"<","kind":"text"},{"text":"D","kind":"genericParameter"},{"kind":"text","text":">(() "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"D","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","text":"AsynchronousUnitOfWork","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Success"},{"text":">\n","kind":"text"}],"type":"topic","url":"\/documentation\/afluent\/anyasynchronousunitofwork\/flatmap(_:)-59de","role":"symbol","title":"flatMap(_:)","abstract":[{"type":"text","text":"Transforms the successful output values from the upstream "},{"code":"AsynchronousUnitOfWork","type":"codeVoice"},{"type":"text","text":" using the provided asynchronous transformation closure."},{"text":" ","type":"text"},{"text":"This overload is specialized for ","type":"text"},{"code":"AsynchronousUnitOfWork","type":"codeVoice"},{"text":" types that have ","type":"text"},{"code":"Void","type":"codeVoice"},{"type":"text","text":" as their "},{"type":"codeVoice","code":"Success"},{"type":"text","text":" type."}],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/flatMap(_:)-59de"},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork":{"title":"AnyAsynchronousUnitOfWork","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AnyAsynchronousUnitOfWork","kind":"identifier"}],"abstract":[{"text":"A unit of work that performs type erasure by wrapping another unit of work.","type":"text"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","kind":"symbol","url":"\/documentation\/afluent\/anyasynchronousunitofwork","role":"symbol","navigatorTitle":[{"text":"AnyAsynchronousUnitOfWork","kind":"identifier"}]}}}