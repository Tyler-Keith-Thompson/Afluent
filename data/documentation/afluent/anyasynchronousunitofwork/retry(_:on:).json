{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/retry(_:on:)"},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/AsynchronousUnitOfWork-Implementations"]]},"variants":[{"paths":["\/documentation\/afluent\/anyasynchronousunitofwork\/retry(_:on:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","abstract":[{"text":"Retries the upstream ","type":"text"},{"type":"codeVoice","code":"AsynchronousUnitOfWork"},{"text":" up to a specified number of times only when a specific error occurs.","type":"text"}],"metadata":{"roleHeading":"Instance Method","extendedModule":"Afluent","externalID":"s:7Afluent22AsynchronousUnitOfWorkPAAE5retry_2onQrSu_qd__tSQRd__s5ErrorRd__lF::SYNTHESIZED::s:7Afluent25AnyAsynchronousUnitOfWorkV","symbolKind":"method","role":"symbol","modules":[{"name":"Afluent"}],"title":"retry(_:on:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"retry"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"E"},{"kind":"text","text":">("},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"on"},{"text":": ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"text":"AsynchronousUnitOfWork","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Success","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa","kind":"typeIdentifier"},{"kind":"text","text":">\n"}],"remoteSource":{"fileName":"Retry.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/Workers\/Retry.swift#L109"}},"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"retry"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"E"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"retries","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":" = 1, ","kind":"text"},{"text":"on","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"error"},{"text":": ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","text":"AsynchronousUnitOfWork","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa","kind":"typeIdentifier","text":"Success","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/Success"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"E"},{"text":" : ","kind":"text"},{"text":"Equatable","kind":"typeIdentifier","preciseIdentifier":"s:SQ"},{"text":", ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":"\n","kind":"text"}],"platforms":["macOS"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The maximum number of times to retry the upstream, defaulting to 1.","type":"text"}]}],"name":"retries"},{"content":[{"inlineContent":[{"type":"text","text":"The specific error that should trigger a retry."}],"type":"paragraph"}],"name":"error"}],"kind":"parameters"},{"content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"type":"codeVoice","code":"AsynchronousUnitOfWork"},{"type":"text","text":" that emits the same output as the upstream but retries on the specified error up to the specified number of times."}]}],"kind":"content"}],"references":{"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"AnyAsynchronousUnitOfWork","kind":"identifier"}],"type":"topic","url":"\/documentation\/afluent\/anyasynchronousunitofwork","title":"AnyAsynchronousUnitOfWork","abstract":[{"text":"A unit of work that performs type erasure by wrapping another unit of work.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"AnyAsynchronousUnitOfWork"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork"},"doc://Afluent/documentation/Afluent":{"kind":"symbol","title":"Afluent","abstract":[],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent","role":"collection","url":"\/documentation\/afluent"},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork/retry(_:on:)":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/retry(_:on:)","title":"retry(_:on:)","abstract":[{"type":"text","text":"Retries the upstream "},{"type":"codeVoice","code":"AsynchronousUnitOfWork"},{"type":"text","text":" up to a specified number of times only when a specific error occurs."}],"kind":"symbol","role":"symbol","url":"\/documentation\/afluent\/anyasynchronousunitofwork\/retry(_:on:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"retry","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"E"},{"kind":"text","text":">("},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"on","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"E"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","text":"AsynchronousUnitOfWork"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Success","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa"},{"text":">\n","kind":"text"}],"type":"topic"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"abstract":[{"type":"text","text":"Represents an asynchronous unit of work."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWork"}],"type":"topic","url":"\/documentation\/afluent\/asynchronousunitofwork","title":"AsynchronousUnitOfWork","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork/Success":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/Success","kind":"symbol","title":"Success","type":"topic","required":true,"fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Success"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier","text":"Sendable"}],"abstract":[{"type":"text","text":"The type of data the unit of work will produce if it succeeds."}],"role":"symbol","url":"\/documentation\/afluent\/asynchronousunitofwork\/success"},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork/AsynchronousUnitOfWork-Implementations":{"abstract":[],"kind":"article","role":"collectionGroup","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/AsynchronousUnitOfWork-Implementations","url":"\/documentation\/afluent\/anyasynchronousunitofwork\/asynchronousunitofwork-implementations","title":"AsynchronousUnitOfWork Implementations","type":"topic"}}}