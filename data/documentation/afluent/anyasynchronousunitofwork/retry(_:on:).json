{"abstract":[{"text":"Retries the upstream ","type":"text"},{"code":"AsynchronousUnitOfWork","type":"codeVoice"},{"type":"text","text":" up to a specified number of times only when a specific error occurs."}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/retry(_:on:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/AsynchronousUnitOfWork-Implementations"]]},"metadata":{"externalID":"s:7Afluent22AsynchronousUnitOfWorkPAAE5retry_2onQrSu_qd__tSQRd__s5ErrorRd__lF::SYNTHESIZED::s:7Afluent25AnyAsynchronousUnitOfWorkV","roleHeading":"Instance Method","extendedModule":"Afluent","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"retry"},{"text":"<","kind":"text"},{"text":"E","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"on","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"AsynchronousUnitOfWork","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Success","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa"},{"kind":"text","text":">\n"}],"remoteSource":{"fileName":"Retry.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/Workers\/Retry.swift#L109"},"modules":[{"name":"Afluent"}],"title":"retry(_:on:)","role":"symbol","symbolKind":"method"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"retry","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"E"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"retries","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"text":" = 1, ","kind":"text"},{"text":"on","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"error"},{"kind":"text","text":": "},{"text":"E","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","text":"AsynchronousUnitOfWork"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Success","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/Success","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Equatable","preciseIdentifier":"s:SQ","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"E"},{"text":" : ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":"\n","kind":"text"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"retries","content":[{"inlineContent":[{"type":"text","text":"The maximum number of times to retry the upstream, defaulting to 1."}],"type":"paragraph"}]},{"name":"error","content":[{"inlineContent":[{"text":"The specific error that should trigger a retry.","type":"text"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"type":"codeVoice","code":"AsynchronousUnitOfWork"},{"type":"text","text":" that emits the same output as the upstream but retries on the specified error up to the specified number of times."}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/anyasynchronousunitofwork\/retry(_:on:)"]}],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"references":{"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork/retry(_:on:)":{"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/retry(_:on:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"retry","kind":"identifier"},{"kind":"text","text":"<"},{"text":"E","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"on","kind":"externalParam"},{"kind":"text","text":": "},{"text":"E","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWork","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa","text":"Success","kind":"typeIdentifier"},{"text":">\n","kind":"text"}],"role":"symbol","title":"retry(_:on:)","abstract":[{"type":"text","text":"Retries the upstream "},{"type":"codeVoice","code":"AsynchronousUnitOfWork"},{"type":"text","text":" up to a specified number of times only when a specific error occurs."}],"kind":"symbol","url":"\/documentation\/afluent\/anyasynchronousunitofwork\/retry(_:on:)"},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork":{"navigatorTitle":[{"text":"AnyAsynchronousUnitOfWork","kind":"identifier"}],"role":"symbol","title":"AnyAsynchronousUnitOfWork","abstract":[{"text":"A unit of work that performs type erasure by wrapping another unit of work.","type":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","type":"topic","url":"\/documentation\/afluent\/anyasynchronousunitofwork","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyAsynchronousUnitOfWork"}]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"title":"AsynchronousUnitOfWork","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","navigatorTitle":[{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsynchronousUnitOfWork"}],"abstract":[{"type":"text","text":"Represents an asynchronous unit of work."}],"url":"\/documentation\/afluent\/asynchronousunitofwork","type":"topic"},"doc://Afluent/documentation/Afluent":{"type":"topic","url":"\/documentation\/afluent","kind":"symbol","role":"collection","title":"Afluent","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork/Success":{"type":"topic","kind":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Success","kind":"identifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP","text":"Sendable"}],"title":"Success","url":"\/documentation\/afluent\/asynchronousunitofwork\/success","required":true,"abstract":[{"type":"text","text":"The type of data the unit of work will produce if it succeeds."}],"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/Success"},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork/AsynchronousUnitOfWork-Implementations":{"role":"collectionGroup","title":"AsynchronousUnitOfWork Implementations","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/AsynchronousUnitOfWork-Implementations","type":"topic","url":"\/documentation\/afluent\/anyasynchronousunitofwork\/asynchronousunitofwork-implementations","kind":"article"}}}