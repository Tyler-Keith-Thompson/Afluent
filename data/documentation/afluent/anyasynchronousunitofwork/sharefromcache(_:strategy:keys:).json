{"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/shareFromCache(_:strategy:keys:)","interfaceLanguage":"swift"},"kind":"symbol","variants":[{"paths":["\/documentation\/afluent\/anyasynchronousunitofwork\/sharefromcache(_:strategy:keys:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"shareFromCache","kind":"identifier"},{"kind":"text","text":"<"},{"text":"H0","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"cache","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Afluent9AUOWCachea","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","text":"AUOWCache"},{"text":", ","kind":"text"},{"text":"strategy","kind":"externalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent9AUOWCachea","text":"AUOWCache"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Afluent27AsynchronousUnitOfWorkCacheC8StrategyO","text":"Strategy","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/Strategy"},{"text":", ","kind":"text"},{"text":"keys","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"k0"},{"kind":"text","text":": "},{"text":"H0","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","text":"AsynchronousUnitOfWork","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Success"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"H0","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SH","text":"Hashable"},{"text":"\n","kind":"text"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"cache","content":[{"type":"paragraph","inlineContent":[{"text":"The cache from which to share data.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"The caching strategy to use.","type":"text"}],"type":"paragraph"}],"name":"strategy"},{"name":"keys","content":[{"type":"paragraph","inlineContent":[{"text":"One or more hashable keys used to look up the data in the cache.","type":"text"}]}]}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"inlineContent":[{"type":"text","text":"An asynchronous unit of work encapsulating the operationâ€™s success or failure."}],"type":"paragraph"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"Shares data from the given cache based on a specified caching strategy and hashable keys.","type":"text"}],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"shareFromCache"},{"kind":"text","text":"<"},{"text":"H0","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"AUOWCache","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent9AUOWCachea"},{"kind":"text","text":", "},{"text":"strategy","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Afluent9AUOWCachea","kind":"typeIdentifier","text":"AUOWCache"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent27AsynchronousUnitOfWorkCacheC8StrategyO","text":"Strategy"},{"kind":"text","text":", "},{"kind":"externalParam","text":"keys"},{"kind":"text","text":": "},{"text":"H0","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","text":"AsynchronousUnitOfWork","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Success"},{"text":">\n","kind":"text"}],"roleHeading":"Instance Method","modules":[{"name":"Afluent"}],"remoteSource":{"fileName":"ShareFromCache.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/Workers\/ShareFromCache.swift#L52"},"extendedModule":"Afluent","externalID":"s:7Afluent22AsynchronousUnitOfWorkPAAE14shareFromCache_8strategy4keysQrAA0bcdeH0C_AH8StrategyOqd__tSHRd__lF::SYNTHESIZED::s:7Afluent25AnyAsynchronousUnitOfWorkV","symbolKind":"method","title":"shareFromCache(_:strategy:keys:)","role":"symbol"},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/AsynchronousUnitOfWork-Implementations"]]},"references":{"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork/shareFromCache(_:strategy:keys:)":{"abstract":[{"type":"text","text":"Shares data from the given cache based on a specified caching strategy and hashable keys."}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"shareFromCache","kind":"identifier"},{"kind":"text","text":"<"},{"text":"H0","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:7Afluent9AUOWCachea","text":"AUOWCache","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"strategy","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent9AUOWCachea","text":"AUOWCache"},{"kind":"text","text":"."},{"text":"Strategy","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent27AsynchronousUnitOfWorkCacheC8StrategyO"},{"kind":"text","text":", "},{"text":"keys","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"H0"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","text":"AsynchronousUnitOfWork"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Success"},{"text":">\n","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/shareFromCache(_:strategy:keys:)","url":"\/documentation\/afluent\/anyasynchronousunitofwork\/sharefromcache(_:strategy:keys:)","title":"shareFromCache(_:strategy:keys:)","type":"topic"},"doc://Afluent/documentation/Afluent":{"url":"\/documentation\/afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol","abstract":[],"title":"Afluent","type":"topic","role":"collection"},"doc://Afluent/documentation/Afluent/AUOWCache":{"navigatorTitle":[{"kind":"identifier","text":"AUOWCache"}],"title":"AUOWCache","url":"\/documentation\/afluent\/auowcache","type":"topic","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"AUOWCache","kind":"identifier"}],"abstract":[],"role":"symbol"},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork/AsynchronousUnitOfWork-Implementations":{"title":"AsynchronousUnitOfWork Implementations","type":"topic","abstract":[],"kind":"article","role":"collectionGroup","url":"\/documentation\/afluent\/anyasynchronousunitofwork\/asynchronousunitofwork-implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/AsynchronousUnitOfWork-Implementations"},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork":{"title":"AnyAsynchronousUnitOfWork","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnyAsynchronousUnitOfWork"}],"navigatorTitle":[{"text":"AnyAsynchronousUnitOfWork","kind":"identifier"}],"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A unit of work that performs type erasure by wrapping another unit of work."}],"role":"symbol","url":"\/documentation\/afluent\/anyasynchronousunitofwork","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"title":"AsynchronousUnitOfWork","kind":"symbol","url":"\/documentation\/afluent\/asynchronousunitofwork","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWork"}],"abstract":[{"type":"text","text":"Represents an asynchronous unit of work."}]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/Strategy":{"navigatorTitle":[{"kind":"identifier","text":"Strategy"}],"title":"AsynchronousUnitOfWorkCache.Strategy","url":"\/documentation\/afluent\/asynchronousunitofworkcache\/strategy","type":"topic","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/Strategy","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Strategy","kind":"identifier"}],"abstract":[{"code":"Strategy","type":"codeVoice"},{"type":"text","text":" represents the available caching strategies for the "},{"code":"PublisherCache","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol"}}}