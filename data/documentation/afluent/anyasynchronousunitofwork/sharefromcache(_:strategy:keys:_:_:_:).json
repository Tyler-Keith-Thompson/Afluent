{"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shareFromCache","kind":"identifier"},{"kind":"text","text":"<"},{"text":"H0","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"H1","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"H2"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H3"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"cache","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent9AUOWCachea","text":"AUOWCache","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"strategy"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Afluent9AUOWCachea","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","kind":"typeIdentifier","text":"AUOWCache"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent27AsynchronousUnitOfWorkCacheC8StrategyO","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/Strategy","text":"Strategy","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"keys","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"k0"},{"kind":"text","text":": "},{"text":"H0","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"k1","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"H1"},{"text":", ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"k2"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"H2"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"k3"},{"text":": ","kind":"text"},{"text":"H3","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","kind":"typeIdentifier","text":"AsynchronousUnitOfWork"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/Success","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa","text":"Success"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"H0"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"Hashable","preciseIdentifier":"s:SH"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H1"},{"kind":"text","text":" : "},{"text":"Hashable","preciseIdentifier":"s:SH","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"H2","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"Hashable","kind":"typeIdentifier","preciseIdentifier":"s:SH"},{"kind":"text","text":", "},{"text":"H3","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SH","text":"Hashable"},{"text":"\n","kind":"text"}]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The cache from which to share data."}],"type":"paragraph"}],"name":"cache"},{"content":[{"inlineContent":[{"type":"text","text":"The caching strategy to use."}],"type":"paragraph"}],"name":"strategy"},{"name":"keys","content":[{"type":"paragraph","inlineContent":[{"text":"One or more hashable keys used to look up the data in the cache.","type":"text"}]}]}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An asynchronous unit of work encapsulating the operationâ€™s success or failure."}]}]}],"metadata":{"role":"symbol","title":"shareFromCache(_:strategy:keys:_:_:_:)","extendedModule":"Afluent","modules":[{"name":"Afluent"}],"externalID":"s:7Afluent22AsynchronousUnitOfWorkPAAE14shareFromCache_8strategy4keys___QrAA0bcdeH0C_AH8StrategyOqd__qd_0_qd_1_qd_2_tSHRd__SHRd_0_SHRd_1_SHRd_2_r2_lF::SYNTHESIZED::s:7Afluent25AnyAsynchronousUnitOfWorkV","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"shareFromCache","kind":"identifier"},{"kind":"text","text":"<"},{"text":"H0","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"H1"},{"text":", ","kind":"text"},{"text":"H2","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"H3","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent9AUOWCachea","text":"AUOWCache"},{"kind":"text","text":", "},{"kind":"externalParam","text":"strategy"},{"text":": ","kind":"text"},{"text":"AUOWCache","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent9AUOWCachea"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent27AsynchronousUnitOfWorkCacheC8StrategyO","kind":"typeIdentifier","text":"Strategy"},{"text":", ","kind":"text"},{"text":"keys","kind":"externalParam"},{"kind":"text","text":": "},{"text":"H0","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H1"},{"kind":"text","text":", "},{"text":"H2","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"H3","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"AsynchronousUnitOfWork","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa","kind":"typeIdentifier","text":"Success"},{"text":">\n","kind":"text"}],"symbolKind":"method","remoteSource":{"fileName":"ShareFromCache.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/Workers\/ShareFromCache.swift#L94"}},"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/anyasynchronousunitofwork\/sharefromcache(_:strategy:keys:_:_:_:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/shareFromCache(_:strategy:keys:_:_:_:)"},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/AsynchronousUnitOfWork-Implementations"]]},"abstract":[{"text":"Shares data from the given cache based on a specified caching strategy and hashable keys.","type":"text"}],"references":{"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"title":"AsynchronousUnitOfWork","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsynchronousUnitOfWork"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","url":"\/documentation\/afluent\/asynchronousunitofwork","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWork"}],"abstract":[{"type":"text","text":"Represents an asynchronous unit of work."}]},"doc://Afluent/documentation/Afluent/AUOWCache":{"fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AUOWCache"}],"role":"symbol","url":"\/documentation\/afluent\/auowcache","navigatorTitle":[{"kind":"identifier","text":"AUOWCache"}],"type":"topic","title":"AUOWCache","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AUOWCache","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork/Success":{"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/Success","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Success"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"}],"required":true,"url":"\/documentation\/afluent\/asynchronousunitofwork\/success","abstract":[{"type":"text","text":"The type of data the unit of work will produce if it succeeds."}],"title":"Success"},"doc://Afluent/documentation/Afluent":{"type":"topic","kind":"symbol","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent","role":"collection","title":"Afluent","url":"\/documentation\/afluent"},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork/shareFromCache(_:strategy:keys:_:_:_:)":{"title":"shareFromCache(_:strategy:keys:_:_:_:)","role":"symbol","url":"\/documentation\/afluent\/anyasynchronousunitofwork\/sharefromcache(_:strategy:keys:_:_:_:)","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/shareFromCache(_:strategy:keys:_:_:_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shareFromCache","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"H0"},{"text":", ","kind":"text"},{"text":"H1","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"H2","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"H3"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"AUOWCache","preciseIdentifier":"s:7Afluent9AUOWCachea"},{"text":", ","kind":"text"},{"text":"strategy","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Afluent9AUOWCachea","text":"AUOWCache","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent27AsynchronousUnitOfWorkCacheC8StrategyO","text":"Strategy"},{"kind":"text","text":", "},{"text":"keys","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"H0"},{"kind":"text","text":", "},{"text":"H1","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H2"},{"kind":"text","text":", "},{"text":"H3","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","text":"AsynchronousUnitOfWork","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Success","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa"},{"text":">\n","kind":"text"}],"abstract":[{"type":"text","text":"Shares data from the given cache based on a specified caching strategy and hashable keys."}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/Strategy":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Strategy"}],"role":"symbol","url":"\/documentation\/afluent\/asynchronousunitofworkcache\/strategy","navigatorTitle":[{"kind":"identifier","text":"Strategy"}],"type":"topic","title":"AsynchronousUnitOfWorkCache.Strategy","abstract":[{"type":"codeVoice","code":"Strategy"},{"type":"text","text":" represents the available caching strategies for the "},{"code":"PublisherCache","type":"codeVoice"},{"type":"text","text":"."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/Strategy","kind":"symbol"},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork/AsynchronousUnitOfWork-Implementations":{"role":"collectionGroup","url":"\/documentation\/afluent\/anyasynchronousunitofwork\/asynchronousunitofwork-implementations","type":"topic","title":"AsynchronousUnitOfWork Implementations","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/AsynchronousUnitOfWork-Implementations","kind":"article"},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyAsynchronousUnitOfWork"}],"role":"symbol","url":"\/documentation\/afluent\/anyasynchronousunitofwork","navigatorTitle":[{"text":"AnyAsynchronousUnitOfWork","kind":"identifier"}],"type":"topic","title":"AnyAsynchronousUnitOfWork","abstract":[{"text":"A unit of work that performs type erasure by wrapping another unit of work.","type":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","kind":"symbol"}}}