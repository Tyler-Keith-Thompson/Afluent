{"deprecationSummary":[{"type":"paragraph","inlineContent":[{"text":"This stream was replaced with a custom AsyncSequence which behaves better","type":"text"}]}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/toStream()","interfaceLanguage":"swift"},"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/AsynchronousUnitOfWork-Implementations"]]},"abstract":[{"type":"text","text":"Converts the asynchronous unit of work into an "},{"type":"codeVoice","code":"AsyncThrowingStream"},{"type":"text","text":"."}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"toStream"},{"text":"() -> ","kind":"text"},{"text":"AsyncThrowingStream","kind":"typeIdentifier","preciseIdentifier":"s:Scs"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Success"},{"kind":"text","text":", "},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":">","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"items":[{"content":[{"inlineContent":[{"text":"Deprecated: This stream was replaced with a custom ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"text":" which behaves better.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/anyasynchronousunitofwork\/tostream()"]}],"metadata":{"externalID":"s:7Afluent22AsynchronousUnitOfWorkPAAE8toStreamScsy7SuccessQzs5Error_pGyF::SYNTHESIZED::s:7Afluent25AnyAsynchronousUnitOfWorkV","platforms":[],"title":"toStream()","symbolKind":"method","role":"symbol","modules":[{"name":"Afluent"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"toStream"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:Scs","text":"AsyncThrowingStream","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Success","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"text":">","kind":"text"}],"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/Workers\/ToAsyncSequence.swift#L43","fileName":"ToAsyncSequence.swift"},"extendedModule":"Afluent","roleHeading":"Instance Method"},"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork/toStream()":{"type":"topic","url":"\/documentation\/afluent\/anyasynchronousunitofwork\/tostream()","role":"symbol","kind":"symbol","title":"toStream()","abstract":[{"type":"text","text":"Converts the asynchronous unit of work into an "},{"type":"codeVoice","code":"AsyncThrowingStream"},{"type":"text","text":"."}],"deprecated":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"toStream"},{"text":"() -> ","kind":"text"},{"text":"AsyncThrowingStream","kind":"typeIdentifier","preciseIdentifier":"s:Scs"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Success"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":">"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/toStream()"},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork/AsynchronousUnitOfWork-Implementations":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/AsynchronousUnitOfWork-Implementations","role":"collectionGroup","abstract":[],"type":"topic","kind":"article","title":"AsynchronousUnitOfWork Implementations","url":"\/documentation\/afluent\/anyasynchronousunitofwork\/asynchronousunitofwork-implementations"},"doc://Afluent/documentation/Afluent":{"kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/Afluent\/documentation\/Afluent","abstract":[],"title":"Afluent","url":"\/documentation\/afluent"},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","role":"symbol","abstract":[{"text":"A unit of work that performs type erasure by wrapping another unit of work.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnyAsynchronousUnitOfWork"}],"navigatorTitle":[{"kind":"identifier","text":"AnyAsynchronousUnitOfWork"}],"type":"topic","kind":"symbol","title":"AnyAsynchronousUnitOfWork","url":"\/documentation\/afluent\/anyasynchronousunitofwork"}}}