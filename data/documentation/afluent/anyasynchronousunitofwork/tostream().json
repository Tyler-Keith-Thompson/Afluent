{"kind":"symbol","abstract":[{"type":"text","text":"Converts the asynchronous unit of work into an "},{"type":"codeVoice","code":"AsyncThrowingStream"},{"text":".","type":"text"}],"deprecationSummary":[{"type":"paragraph","inlineContent":[{"text":"This stream was replaced with a custom AsyncSequence which behaves better","type":"text"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/AsynchronousUnitOfWork-Implementations"]]},"sections":[],"metadata":{"platforms":[],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"toStream","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"AsyncThrowingStream","preciseIdentifier":"s:Scs"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Success","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"kind":"text","text":">"}],"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/Workers\/ToAsyncSequence.swift#L43","fileName":"ToAsyncSequence.swift"},"role":"symbol","modules":[{"name":"Afluent"}],"externalID":"s:7Afluent22AsynchronousUnitOfWorkPAAE8toStreamScsy7SuccessQzs5Error_pGyF::SYNTHESIZED::s:7Afluent25AnyAsynchronousUnitOfWorkV","symbolKind":"method","title":"toStream()","roleHeading":"Instance Method","extendedModule":"Afluent"},"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/toStream()","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/anyasynchronousunitofwork\/tostream()"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"toStream","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Scs","text":"AsyncThrowingStream"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Success"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Deprecated: This stream was replaced with a custom ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" which behaves better."}]}]}],"type":"unorderedList"}]}],"references":{"doc://Afluent/documentation/Afluent":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent","type":"topic","url":"\/documentation\/afluent","title":"Afluent","role":"collection","abstract":[],"kind":"symbol"},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork/toStream()":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"toStream"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Scs","text":"AsyncThrowingStream"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Success"},{"kind":"text","text":", "},{"preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"kind":"text","text":">"}],"url":"\/documentation\/afluent\/anyasynchronousunitofwork\/tostream()","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/toStream()","role":"symbol","type":"topic","deprecated":true,"title":"toStream()","abstract":[{"text":"Converts the asynchronous unit of work into an ","type":"text"},{"code":"AsyncThrowingStream","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork/AsynchronousUnitOfWork-Implementations":{"title":"AsynchronousUnitOfWork Implementations","kind":"article","url":"\/documentation\/afluent\/anyasynchronousunitofwork\/asynchronousunitofwork-implementations","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/AsynchronousUnitOfWork-Implementations","role":"collectionGroup","abstract":[]},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork":{"abstract":[{"type":"text","text":"A unit of work that performs type erasure by wrapping another unit of work."}],"navigatorTitle":[{"text":"AnyAsynchronousUnitOfWork","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/afluent\/anyasynchronousunitofwork","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnyAsynchronousUnitOfWork"}],"role":"symbol","title":"AnyAsynchronousUnitOfWork"}}}