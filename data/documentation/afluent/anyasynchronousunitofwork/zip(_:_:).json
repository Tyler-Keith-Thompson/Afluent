{"metadata":{"title":"zip(_:_:)","symbolKind":"method","extendedModule":"Afluent","modules":[{"name":"Afluent"}],"roleHeading":"Instance Method","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"zip"},{"text":"<","kind":"text"},{"text":"D0","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"D1"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"D0"},{"text":", ","kind":"text"},{"text":"D1","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","text":"AsynchronousUnitOfWork"},{"kind":"text","text":"<("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Success","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa"},{"text":", ","kind":"text"},{"text":"D0","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa","text":"Success","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"D1"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa","text":"Success"},{"text":")>\n","kind":"text"}],"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/Workers\/Zip.swift#L113","fileName":"Zip.swift"},"externalID":"s:7Afluent22AsynchronousUnitOfWorkPAAE3zipyQrqd___qd_0_tAaBRd__AaBRd_0_r0_lF::SYNTHESIZED::s:7Afluent25AnyAsynchronousUnitOfWorkV"},"variants":[{"paths":["\/documentation\/afluent\/anyasynchronousunitofwork\/zip(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"zip"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"D0"},{"text":", ","kind":"text"},{"text":"D1","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"d0"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"D0"},{"kind":"text","text":", "},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"d1","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"D1"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","text":"AsynchronousUnitOfWork","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP"},{"text":"<(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/Success","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa","text":"Success","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"D0","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/Success","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa","text":"Success"},{"text":", ","kind":"text"},{"text":"D1","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Success","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/Success"},{"kind":"text","text":")> "},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"D0"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","text":"AsynchronousUnitOfWork","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"D1","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","text":"AsynchronousUnitOfWork","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP"},{"text":"\n","kind":"text"}]}]},{"kind":"parameters","parameters":[{"name":"d0","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The first additional asynchronous unit of work to zip with."}]}]},{"name":"d1","content":[{"inlineContent":[{"type":"text","text":"The second additional asynchronous unit of work to zip with."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"level":2,"anchor":"return-value","text":"Return Value","type":"heading"},{"inlineContent":[{"text":"A new asynchronous unit of work that produces a tuple containing results from the upstream and both downstreams when completed.","type":"text"}],"type":"paragraph"}]}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/AsynchronousUnitOfWork-Implementations"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Zips the result of the current unit of work with two other asynchronous units of work."}],"sections":[],"kind":"symbol","identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/zip(_:_:)","interfaceLanguage":"swift"},"references":{"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork/AsynchronousUnitOfWork-Implementations":{"type":"topic","url":"\/documentation\/afluent\/anyasynchronousunitofwork\/asynchronousunitofwork-implementations","abstract":[],"kind":"article","role":"collectionGroup","title":"AsynchronousUnitOfWork Implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/AsynchronousUnitOfWork-Implementations"},"doc://Afluent/documentation/Afluent":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol","role":"collection","url":"\/documentation\/afluent","abstract":[],"type":"topic","title":"Afluent"},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyAsynchronousUnitOfWork","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"A unit of work that performs type erasure by wrapping another unit of work.","type":"text"}],"url":"\/documentation\/afluent\/anyasynchronousunitofwork","role":"symbol","title":"AnyAsynchronousUnitOfWork","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork","navigatorTitle":[{"kind":"identifier","text":"AnyAsynchronousUnitOfWork"}]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWork"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsynchronousUnitOfWork"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","abstract":[{"type":"text","text":"Represents an asynchronous unit of work."}],"kind":"symbol","url":"\/documentation\/afluent\/asynchronousunitofwork","title":"AsynchronousUnitOfWork","role":"symbol"},"doc://Afluent/documentation/Afluent/AnyAsynchronousUnitOfWork/zip(_:_:)":{"kind":"symbol","title":"zip(_:_:)","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyAsynchronousUnitOfWork\/zip(_:_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"zip"},{"kind":"text","text":"<"},{"text":"D0","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"D1"},{"text":">(","kind":"text"},{"text":"D0","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"D1","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","text":"AsynchronousUnitOfWork","kind":"typeIdentifier"},{"text":"<(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Success","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"D0","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Success","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa"},{"text":", ","kind":"text"},{"text":"D1","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa","text":"Success","kind":"typeIdentifier"},{"text":")>\n","kind":"text"}],"url":"\/documentation\/afluent\/anyasynchronousunitofwork\/zip(_:_:)","abstract":[{"type":"text","text":"Zips the result of the current unit of work with two other asynchronous units of work."}]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork/Success":{"type":"topic","fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"text":"Success","kind":"identifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier","text":"Sendable"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/Success","kind":"symbol","abstract":[{"type":"text","text":"The type of data the unit of work will produce if it succeeds."}],"url":"\/documentation\/afluent\/asynchronousunitofwork\/success","title":"Success","required":true,"role":"symbol"}}}