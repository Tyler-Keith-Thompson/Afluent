{"sections":[],"kind":"symbol","topicSections":[{"title":"Enumeration Cases","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/Strategy\/cacheUntilCompletionOrCancellation"]},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/Strategy\/Equatable-Implementations"],"title":"Default Implementations","generated":true}],"variants":[{"paths":["\/documentation\/afluent\/asynchronousunitofworkcache\/strategy"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"modules":[{"name":"Afluent"}],"externalID":"s:7Afluent27AsynchronousUnitOfWorkCacheC8StrategyO","remoteSource":{"fileName":"AsynchronousUnitOfWorkCache.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/AsynchronousUnitOfWorkCache.swift#L47"},"symbolKind":"enum","extendedModule":"Afluent","navigatorTitle":[{"kind":"identifier","text":"Strategy"}],"roleHeading":"Enumeration","role":"symbol","title":"AsynchronousUnitOfWorkCache.Strategy","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Strategy","kind":"identifier"}]},"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/Strategy"},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache"]]},"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/Afluent\/SQ","doc:\/\/Afluent\/SH"],"type":"conformsTo","title":"Conforms To"}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Strategy"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"abstract":[{"code":"Strategy","type":"codeVoice"},{"type":"text","text":" represents the available caching strategies for the "},{"code":"PublisherCache","type":"codeVoice"},{"type":"text","text":"."}],"references":{"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache":{"url":"\/documentation\/afluent\/asynchronousunitofworkcache","abstract":[],"navigatorTitle":[{"text":"AsynchronousUnitOfWorkCache","kind":"identifier"}],"role":"symbol","kind":"symbol","title":"AsynchronousUnitOfWorkCache","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsynchronousUnitOfWorkCache"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/Strategy/Equatable-Implementations":{"url":"\/documentation\/afluent\/asynchronousunitofworkcache\/strategy\/equatable-implementations","abstract":[],"role":"collectionGroup","kind":"article","title":"Equatable Implementations","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/Strategy\/Equatable-Implementations"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/Strategy":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/Strategy","role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/afluent\/asynchronousunitofworkcache\/strategy","abstract":[{"code":"Strategy","type":"codeVoice"},{"type":"text","text":" represents the available caching strategies for the "},{"type":"codeVoice","code":"PublisherCache"},{"text":".","type":"text"}],"title":"AsynchronousUnitOfWorkCache.Strategy","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Strategy"}],"navigatorTitle":[{"text":"Strategy","kind":"identifier"}]},"doc://Afluent/SH":{"type":"unresolvable","title":"Swift.Hashable","identifier":"doc:\/\/Afluent\/SH"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/Strategy/cacheUntilCompletionOrCancellation":{"url":"\/documentation\/afluent\/asynchronousunitofworkcache\/strategy\/cacheuntilcompletionorcancellation","abstract":[{"type":"text","text":"With the "},{"code":".cacheUntilCompletionOrCancellation","type":"codeVoice"},{"type":"text","text":" strategy, the publisher cache"},{"text":" ","type":"text"},{"text":"retains the result until the publisher completes or the subscribers cancel","type":"text"},{"type":"text","text":" "},{"text":"their subscriptions.","type":"text"}],"role":"symbol","kind":"symbol","title":"AsynchronousUnitOfWorkCache.Strategy.cacheUntilCompletionOrCancellation","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"cacheUntilCompletionOrCancellation"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/Strategy\/cacheUntilCompletionOrCancellation"},"doc://Afluent/documentation/Afluent":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent","role":"collection","kind":"symbol","type":"topic","url":"\/documentation\/afluent","abstract":[],"title":"Afluent"},"doc://Afluent/SQ":{"identifier":"doc:\/\/Afluent\/SQ","title":"Swift.Equatable","type":"unresolvable"}}}