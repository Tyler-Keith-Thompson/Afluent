{"sections":[],"metadata":{"modules":[{"name":"Afluent"}],"navigatorTitle":[{"kind":"identifier","text":"Strategy"}],"externalID":"s:7Afluent27AsynchronousUnitOfWorkCacheC8StrategyO","roleHeading":"Enumeration","remoteSource":{"fileName":"AsynchronousUnitOfWorkCache.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/AsynchronousUnitOfWorkCache.swift#L49"},"title":"AsynchronousUnitOfWorkCache.Strategy","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"Strategy","kind":"identifier"}],"role":"symbol","symbolKind":"enum","extendedModule":"Afluent"},"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/Strategy","interfaceLanguage":"swift"},"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/Afluent\/SQ","doc:\/\/Afluent\/SH"],"title":"Conforms To","type":"conformsTo"}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asynchronousunitofworkcache\/strategy"]}],"kind":"symbol","abstract":[{"code":"Strategy","type":"codeVoice"},{"text":" represents the available caching strategies for the ","type":"text"},{"code":"AsynchronousUnitOfWorkCache","type":"codeVoice"},{"text":".","type":"text"}],"topicSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/Strategy\/cacheUntilCompletionOrCancellation"],"title":"Enumeration Cases"},{"title":"Default Implementations","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/Strategy\/Equatable-Implementations"],"generated":true}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Strategy"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"}],"references":{"doc://Afluent/documentation/Afluent":{"abstract":[],"title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","role":"collection","kind":"symbol","url":"\/documentation\/afluent","type":"topic"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/Strategy":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Strategy"}],"title":"AsynchronousUnitOfWorkCache.Strategy","abstract":[{"type":"codeVoice","code":"Strategy"},{"text":" represents the available caching strategies for the ","type":"text"},{"type":"codeVoice","code":"AsynchronousUnitOfWorkCache"},{"type":"text","text":"."}],"kind":"symbol","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/Strategy","url":"\/documentation\/afluent\/asynchronousunitofworkcache\/strategy","role":"symbol","navigatorTitle":[{"text":"Strategy","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache":{"abstract":[],"title":"AsynchronousUnitOfWorkCache","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsynchronousUnitOfWorkCache"}],"navigatorTitle":[{"text":"AsynchronousUnitOfWorkCache","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache","url":"\/documentation\/afluent\/asynchronousunitofworkcache","type":"topic"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/Strategy/Equatable-Implementations":{"kind":"article","url":"\/documentation\/afluent\/asynchronousunitofworkcache\/strategy\/equatable-implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/Strategy\/Equatable-Implementations","type":"topic","abstract":[],"title":"Equatable Implementations","role":"collectionGroup"},"doc://Afluent/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/Afluent\/SQ"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkCache/Strategy/cacheUntilCompletionOrCancellation":{"abstract":[{"type":"text","text":"With the "},{"code":".cacheUntilCompletionOrCancellation","type":"codeVoice"},{"type":"text","text":" strategy, the cache"},{"type":"text","text":" "},{"type":"text","text":"retains the result until the unit of work completes or is cancelled."}],"title":"AsynchronousUnitOfWorkCache.Strategy.cacheUntilCompletionOrCancellation","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cacheUntilCompletionOrCancellation","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkCache\/Strategy\/cacheUntilCompletionOrCancellation","url":"\/documentation\/afluent\/asynchronousunitofworkcache\/strategy\/cacheuntilcompletionorcancellation","type":"topic"},"doc://Afluent/SH":{"type":"unresolvable","title":"Swift.Hashable","identifier":"doc:\/\/Afluent\/SH"}}}