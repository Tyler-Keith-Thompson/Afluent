{"primaryContentSections":[{"declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsynchronousUnitOfWorkSequence"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"UnitOfWork"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnitOfWork","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","text":"AsynchronousUnitOfWork"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"inlineContent":[{"type":"codeVoice","code":"AsynchronousUnitOfWorkSequence"},{"text":" is an ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" that wraps an "},{"type":"codeVoice","code":"AsynchronousUnitOfWork"},{"type":"text","text":". It provides a way to use asynchronous units of work in contexts where an "},{"type":"codeVoice","code":"AsyncSequence"},{"text":" is expected. This sequence emits a single value and then completes.","type":"text"}],"type":"paragraph"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The sequence will only execute the unit of work once. Subsequent iterations will receive ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":", indicating the end of the sequence.","type":"text"}]}],"type":"aside","style":"note","name":"Note"}]}],"metadata":{"modules":[{"name":"Afluent"}],"title":"AsynchronousUnitOfWorkSequence","remoteSource":{"fileName":"ToAsyncSequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/Workers\/ToAsyncSequence.swift#L15"},"symbolKind":"struct","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}],"navigatorTitle":[{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}],"externalID":"s:7Afluent30AsynchronousUnitOfWorkSequenceV","roleHeading":"Structure","role":"symbol"},"schemaVersion":{"major":0,"minor":3,"patch":0},"topicSections":[{"title":"Structures","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/AsyncIterator"]},{"title":"Instance Methods","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/makeAsyncIterator()"]},{"title":"Type Aliases","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/Element"]},{"title":"Default Implementations","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/AsyncSequence-Implementations","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/AsyncSequence-Implementations"],"generated":true}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asynchronousunitofworksequence"]}],"abstract":[{"type":"text","text":"A sequence that represents a single execution of an asynchronous unit of work."}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence","interfaceLanguage":"swift"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"sections":[],"relationshipsSections":[{"identifiers":["doc:\/\/Afluent\/Sci"],"kind":"relationships","type":"conformsTo","title":"Conforms To"}],"references":{"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence/AsyncSequence-Implementations":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/AsyncSequence-Implementations","url":"\/documentation\/afluent\/asynchronousunitofworksequence\/asyncsequence-implementations","abstract":[],"title":"AsyncSequence Implementations","kind":"article","type":"topic","role":"collectionGroup"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"kind":"symbol","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","title":"AsynchronousUnitOfWork","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"url":"\/documentation\/afluent\/asynchronousunitofwork","role":"symbol","abstract":[{"type":"text","text":"Represents an asynchronous unit of work."}],"navigatorTitle":[{"text":"AsynchronousUnitOfWork","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence":{"title":"AsynchronousUnitOfWorkSequence","abstract":[{"text":"A sequence that represents a single execution of an asynchronous unit of work.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}],"url":"\/documentation\/afluent\/asynchronousunitofworksequence","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence","kind":"symbol","type":"topic"},"doc://Afluent/Sci":{"type":"unresolvable","identifier":"doc:\/\/Afluent\/Sci","title":"_Concurrency.AsyncSequence"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence/makeAsyncIterator()":{"role":"symbol","abstract":[],"url":"\/documentation\/afluent\/asynchronousunitofworksequence\/makeasynciterator()","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/makeAsyncIterator()","kind":"symbol","title":"makeAsyncIterator()","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeAsyncIterator"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"AsynchronousUnitOfWorkSequence","preciseIdentifier":"s:7Afluent30AsynchronousUnitOfWorkSequenceV"},{"text":"<","kind":"text"},{"text":"UnitOfWork","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"preciseIdentifier":"s:7Afluent30AsynchronousUnitOfWorkSequenceV13AsyncIteratorV","kind":"typeIdentifier","text":"AsyncIterator"}]},"doc://Afluent/documentation/Afluent":{"kind":"symbol","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","type":"topic","url":"\/documentation\/afluent","role":"collection","abstract":[]},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence/AsyncIterator":{"title":"AsynchronousUnitOfWorkSequence.AsyncIterator","abstract":[],"role":"symbol","navigatorTitle":[{"text":"AsyncIterator","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncIterator","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/AsyncIterator","url":"\/documentation\/afluent\/asynchronousunitofworksequence\/asynciterator","kind":"symbol","type":"topic"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence/Element":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/Element","url":"\/documentation\/afluent\/asynchronousunitofworksequence\/element","kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}],"type":"topic","abstract":[],"role":"symbol","title":"AsynchronousUnitOfWorkSequence.Element","navigatorTitle":[{"text":"Element","kind":"identifier"}]}}}