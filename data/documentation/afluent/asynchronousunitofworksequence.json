{"kind":"symbol","metadata":{"remoteSource":{"fileName":"ToAsyncSequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/Workers\/ToAsyncSequence.swift#L15"},"modules":[{"name":"Afluent"}],"externalID":"s:7Afluent30AsynchronousUnitOfWorkSequenceV","roleHeading":"Structure","symbolKind":"struct","role":"symbol","title":"AsynchronousUnitOfWorkSequence","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsynchronousUnitOfWorkSequence"}],"navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWorkSequence"}]},"abstract":[{"type":"text","text":"A sequence that represents a single execution of an asynchronous unit of work."}],"sections":[],"topicSections":[{"anchor":"Structures","title":"Structures","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/AsyncIterator"],"generated":true},{"anchor":"Instance-Methods","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/makeAsyncIterator()"],"title":"Instance Methods"},{"generated":true,"title":"Type Aliases","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/Element"],"anchor":"Type-Aliases"},{"anchor":"Default-Implementations","title":"Default Implementations","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/AsyncSequence-Implementations","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/AsyncSequence-Implementations"]}],"relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/Afluent\/s8SendableP","doc:\/\/Afluent\/Sci"],"title":"Conforms To","kind":"relationships"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsynchronousUnitOfWorkSequence"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"UnitOfWork"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"UnitOfWork"},{"text":" : ","kind":"text"},{"text":"AsynchronousUnitOfWork","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork"}],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"AsynchronousUnitOfWorkSequence"},{"type":"text","text":" is an "},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" that wraps an "},{"type":"codeVoice","code":"AsynchronousUnitOfWork"},{"type":"text","text":". It provides a way to use asynchronous units of work in contexts where an "},{"type":"codeVoice","code":"AsyncSequence"},{"text":" is expected. This sequence emits a single value and then completes.","type":"text"}]},{"style":"note","type":"aside","name":"Note","content":[{"inlineContent":[{"text":"The sequence will only execute the unit of work once. Subsequent iterations will receive ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":", indicating the end of the sequence."}],"type":"paragraph"}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/afluent\/asynchronousunitofworksequence"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"references":{"doc://Afluent/Sci":{"type":"unresolvable","identifier":"doc:\/\/Afluent\/Sci","title":"_Concurrency.AsyncSequence"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence/AsyncIterator":{"url":"\/documentation\/afluent\/asynchronousunitofworksequence\/asynciterator","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/AsyncIterator","abstract":[],"title":"AsynchronousUnitOfWorkSequence.AsyncIterator","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncIterator"}],"navigatorTitle":[{"text":"AsyncIterator","kind":"identifier"}],"type":"topic"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence/Element":{"abstract":[],"kind":"symbol","url":"\/documentation\/afluent\/asynchronousunitofworksequence\/element","title":"AsynchronousUnitOfWorkSequence.Element","role":"symbol","navigatorTitle":[{"text":"Element","kind":"identifier"}],"fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"Element","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/Element"},"doc://Afluent/documentation/Afluent":{"kind":"symbol","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent","url":"\/documentation\/afluent","type":"topic","title":"Afluent","role":"collection"},"doc://Afluent/s8SendableP":{"identifier":"doc:\/\/Afluent\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence/makeAsyncIterator()":{"abstract":[],"kind":"symbol","url":"\/documentation\/afluent\/asynchronousunitofworksequence\/makeasynciterator()","title":"makeAsyncIterator()","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"makeAsyncIterator","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent30AsynchronousUnitOfWorkSequenceV","text":"AsynchronousUnitOfWorkSequence","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"UnitOfWork"},{"text":">.","kind":"text"},{"text":"AsyncIterator","preciseIdentifier":"s:7Afluent30AsynchronousUnitOfWorkSequenceV13AsyncIteratorV","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/makeAsyncIterator()"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence":{"kind":"symbol","abstract":[{"type":"text","text":"A sequence that represents a single execution of an asynchronous unit of work."}],"url":"\/documentation\/afluent\/asynchronousunitofworksequence","type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}],"navigatorTitle":[{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}],"title":"AsynchronousUnitOfWorkSequence","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence/AsyncSequence-Implementations":{"kind":"article","abstract":[],"url":"\/documentation\/afluent\/asynchronousunitofworksequence\/asyncsequence-implementations","type":"topic","role":"collectionGroup","title":"AsyncSequence Implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/AsyncSequence-Implementations"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"url":"\/documentation\/afluent\/asynchronousunitofwork","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsynchronousUnitOfWork"}],"navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWork"}],"title":"AsynchronousUnitOfWork","role":"symbol","abstract":[{"text":"Represents an asynchronous unit of work.","type":"text"}]}}}