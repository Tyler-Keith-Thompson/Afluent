{"topicSections":[{"anchor":"Structures","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/AsyncIterator"],"title":"Structures"},{"title":"Instance Methods","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/makeAsyncIterator()"],"generated":true,"anchor":"Instance-Methods"},{"anchor":"Type-Aliases","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/Element"],"title":"Type Aliases","generated":true},{"title":"Default Implementations","generated":true,"anchor":"Default-Implementations","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/AsyncSequence-Implementations","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/AsyncSequence-Implementations"]}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence","interfaceLanguage":"swift"},"abstract":[{"text":"A sequence that represents a single execution of an asynchronous unit of work.","type":"text"}],"kind":"symbol","sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"variants":[{"paths":["\/documentation\/afluent\/asynchronousunitofworksequence"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"externalID":"s:7Afluent30AsynchronousUnitOfWorkSequenceV","role":"symbol","title":"AsynchronousUnitOfWorkSequence","navigatorTitle":[{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}],"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/Workers\/ToAsyncSequence.swift#L15","fileName":"ToAsyncSequence.swift"},"modules":[{"name":"Afluent"}],"roleHeading":"Structure","symbolKind":"struct"},"relationshipsSections":[{"identifiers":["doc:\/\/Afluent\/s8SendableP","doc:\/\/Afluent\/Sci"],"kind":"relationships","type":"conformsTo","title":"Conforms To"}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"},{"text":"<","kind":"text"},{"text":"UnitOfWork","kind":"genericParameter"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"UnitOfWork","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","text":"AsynchronousUnitOfWork"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"anchor":"overview","text":"Overview","level":2,"type":"heading"},{"inlineContent":[{"type":"codeVoice","code":"AsynchronousUnitOfWorkSequence"},{"text":" is an ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" that wraps an "},{"type":"codeVoice","code":"AsynchronousUnitOfWork"},{"text":". It provides a way to use asynchronous units of work in contexts where an ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"text":" is expected. This sequence emits a single value and then completes.","type":"text"}],"type":"paragraph"},{"style":"note","name":"Note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"The sequence will only execute the unit of work once. Subsequent iterations will receive ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":", indicating the end of the sequence."}]}]}],"kind":"content"}],"references":{"doc://Afluent/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/Afluent\/s8SendableP","title":"Swift.Sendable"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence/Element":{"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/Element","url":"\/documentation\/afluent\/asynchronousunitofworksequence\/element","navigatorTitle":[{"text":"Element","kind":"identifier"}],"role":"symbol","title":"AsynchronousUnitOfWorkSequence.Element","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}],"type":"topic","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence/AsyncIterator":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/AsyncIterator","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncIterator"}],"abstract":[],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncIterator"}],"title":"AsynchronousUnitOfWorkSequence.AsyncIterator","url":"\/documentation\/afluent\/asynchronousunitofworksequence\/asynciterator"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence/makeAsyncIterator()":{"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/makeAsyncIterator()","abstract":[],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"makeAsyncIterator"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"AsynchronousUnitOfWorkSequence","preciseIdentifier":"s:7Afluent30AsynchronousUnitOfWorkSequenceV"},{"text":"<","kind":"text"},{"text":"UnitOfWork","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent30AsynchronousUnitOfWorkSequenceV13AsyncIteratorV","text":"AsyncIterator"}],"title":"makeAsyncIterator()","url":"\/documentation\/afluent\/asynchronousunitofworksequence\/makeasynciterator()","type":"topic"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence":{"type":"topic","role":"symbol","abstract":[{"type":"text","text":"A sequence that represents a single execution of an asynchronous unit of work."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence","kind":"symbol","title":"AsynchronousUnitOfWorkSequence","navigatorTitle":[{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}],"url":"\/documentation\/afluent\/asynchronousunitofworksequence"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence/AsyncSequence-Implementations":{"kind":"article","url":"\/documentation\/afluent\/asynchronousunitofworksequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"topic","role":"collectionGroup","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/AsyncSequence-Implementations","abstract":[]},"doc://Afluent/Sci":{"identifier":"doc:\/\/Afluent\/Sci","type":"unresolvable","title":"_Concurrency.AsyncSequence"},"doc://Afluent/documentation/Afluent":{"kind":"symbol","url":"\/documentation\/afluent","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent","title":"Afluent","type":"topic","role":"collection"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"abstract":[{"text":"Represents an asynchronous unit of work.","type":"text"}],"title":"AsynchronousUnitOfWork","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsynchronousUnitOfWork"}],"url":"\/documentation\/afluent\/asynchronousunitofwork","role":"symbol","navigatorTitle":[{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork"}}}