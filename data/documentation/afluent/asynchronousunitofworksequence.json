{"metadata":{"roleHeading":"Structure","role":"symbol","symbolKind":"struct","navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWorkSequence"}],"modules":[{"name":"Afluent"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}],"externalID":"s:7Afluent30AsynchronousUnitOfWorkSequenceV","title":"AsynchronousUnitOfWorkSequence","remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/Workers\/ToAsyncSequence.swift#L15","fileName":"ToAsyncSequence.swift"}},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asynchronousunitofworksequence"]}],"abstract":[{"text":"A sequence that represents a single execution of an asynchronous unit of work.","type":"text"}],"topicSections":[{"generated":true,"title":"Structures","anchor":"Structures","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/AsyncIterator"]},{"generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/makeAsyncIterator()"],"title":"Instance Methods","anchor":"Instance-Methods"},{"anchor":"Type-Aliases","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/Element"],"title":"Type Aliases","generated":true},{"title":"Default Implementations","anchor":"Default-Implementations","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/AsyncSequence-Implementations","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/AsyncSequence-Implementations"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"relationshipsSections":[{"type":"conformsTo","kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/Afluent\/s8SendableP","doc:\/\/Afluent\/Sci"]}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsynchronousUnitOfWorkSequence"},{"kind":"text","text":"<"},{"text":"UnitOfWork","kind":"genericParameter"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnitOfWork","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","text":"AsynchronousUnitOfWork","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork"}],"platforms":["macOS"]}]},{"content":[{"text":"Overview","anchor":"overview","level":2,"type":"heading"},{"inlineContent":[{"code":"AsynchronousUnitOfWorkSequence","type":"codeVoice"},{"text":" is an ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" that wraps an "},{"type":"codeVoice","code":"AsynchronousUnitOfWork"},{"text":". It provides a way to use asynchronous units of work in contexts where an ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" is expected. This sequence emits a single value and then completes."}],"type":"paragraph"},{"type":"aside","name":"Note","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"The sequence will only execute the unit of work once. Subsequent iterations will receive ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":", indicating the end of the sequence."}]}]}],"kind":"content"}],"references":{"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence":{"kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWorkSequence"}],"abstract":[{"text":"A sequence that represents a single execution of an asynchronous unit of work.","type":"text"}],"title":"AsynchronousUnitOfWorkSequence","url":"\/documentation\/afluent\/asynchronousunitofworksequence","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence"},"doc://Afluent/documentation/Afluent":{"kind":"symbol","url":"\/documentation\/afluent","role":"collection","abstract":[],"title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","type":"topic"},"doc://Afluent/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/Afluent\/s8SendableP"},"doc://Afluent/Sci":{"title":"_Concurrency.AsyncSequence","type":"unresolvable","identifier":"doc:\/\/Afluent\/Sci"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence/Element":{"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/Element","abstract":[],"url":"\/documentation\/afluent\/asynchronousunitofworksequence\/element","title":"AsynchronousUnitOfWorkSequence.Element","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"Element","kind":"identifier"}],"type":"topic"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence/makeAsyncIterator()":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/makeAsyncIterator()","url":"\/documentation\/afluent\/asynchronousunitofworksequence\/makeasynciterator()","role":"symbol","type":"topic","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeAsyncIterator","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"AsynchronousUnitOfWorkSequence","preciseIdentifier":"s:7Afluent30AsynchronousUnitOfWorkSequenceV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"UnitOfWork","kind":"typeIdentifier"},{"kind":"text","text":">."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent30AsynchronousUnitOfWorkSequenceV13AsyncIteratorV","text":"AsyncIterator"}],"title":"makeAsyncIterator()","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWork"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","role":"symbol","title":"AsynchronousUnitOfWork","url":"\/documentation\/afluent\/asynchronousunitofwork","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"abstract":[{"type":"text","text":"Represents an asynchronous unit of work."}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence/AsyncSequence-Implementations":{"kind":"article","type":"topic","role":"collectionGroup","abstract":[],"title":"AsyncSequence Implementations","url":"\/documentation\/afluent\/asynchronousunitofworksequence\/asyncsequence-implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/AsyncSequence-Implementations"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence/AsyncIterator":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/AsyncIterator","title":"AsynchronousUnitOfWorkSequence.AsyncIterator","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncIterator"}],"url":"\/documentation\/afluent\/asynchronousunitofworksequence\/asynciterator","abstract":[],"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncIterator"}]}}}