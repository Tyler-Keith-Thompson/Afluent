{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/AsyncIterator"},"kind":"symbol","sections":[],"topicSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/AsyncIterator\/next()"],"title":"Instance Methods"}],"variants":[{"paths":["\/documentation\/afluent\/asynchronousunitofworksequence\/asynciterator"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncIterator"}],"languages":["swift"]}]}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence"]]},"metadata":{"roleHeading":"Structure","role":"symbol","symbolKind":"struct","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AsyncIterator","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AsyncIterator"}],"externalID":"s:7Afluent30AsynchronousUnitOfWorkSequenceV13AsyncIteratorV","title":"AsynchronousUnitOfWorkSequence.AsyncIterator","remoteSource":{"fileName":"ToAsyncSequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/Workers\/ToAsyncSequence.swift#L19"},"modules":[{"name":"Afluent"}]},"abstract":[{"type":"text","text":"Inherited from "},{"code":"AsyncSequence.AsyncIterator","type":"codeVoice"},{"type":"text","text":"."}],"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/Afluent\/ScI"],"title":"Conforms To","type":"conformsTo"}],"references":{"doc://Afluent/documentation/Afluent":{"url":"\/documentation\/afluent","type":"topic","title":"Afluent","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol","role":"collection"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence/AsyncIterator":{"navigatorTitle":[{"kind":"identifier","text":"AsyncIterator"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/AsyncIterator","abstract":[],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AsyncIterator","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/afluent\/asynchronousunitofworksequence\/asynciterator","title":"AsynchronousUnitOfWorkSequence.AsyncIterator"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence/AsyncIterator/next()":{"role":"symbol","type":"topic","title":"next()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"next"},{"text":"() ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"UnitOfWork"},{"text":".","kind":"text"},{"text":"Success","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"abstract":[],"url":"\/documentation\/afluent\/asynchronousunitofworksequence\/asynciterator\/next()","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/AsyncIterator\/next()","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}],"navigatorTitle":[{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}],"role":"symbol","title":"AsynchronousUnitOfWorkSequence","abstract":[{"type":"text","text":"A sequence that represents a single execution of an asynchronous unit of work."}],"type":"topic","kind":"symbol","url":"\/documentation\/afluent\/asynchronousunitofworksequence"},"doc://Afluent/ScI":{"title":"_Concurrency.AsyncIteratorProtocol","identifier":"doc:\/\/Afluent\/ScI","type":"unresolvable"}}}