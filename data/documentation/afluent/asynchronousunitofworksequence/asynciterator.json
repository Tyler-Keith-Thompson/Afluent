{"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence"]]},"sections":[],"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"AsyncSequence.AsyncIterator"},{"text":".","type":"text"}],"metadata":{"title":"AsynchronousUnitOfWorkSequence.AsyncIterator","navigatorTitle":[{"kind":"identifier","text":"AsyncIterator"}],"symbolKind":"struct","roleHeading":"Structure","modules":[{"name":"Afluent"}],"externalID":"s:7Afluent30AsynchronousUnitOfWorkSequenceV13AsyncIteratorV","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncIterator","kind":"identifier"}],"role":"symbol","remoteSource":{"fileName":"ToAsyncSequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/Workers\/ToAsyncSequence.swift#L19"}},"relationshipsSections":[{"identifiers":["doc:\/\/Afluent\/ScI"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"variants":[{"paths":["\/documentation\/afluent\/asynchronousunitofworksequence\/asynciterator"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/AsyncIterator"},"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AsyncIterator","kind":"identifier"}],"languages":["swift"]}]}],"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/AsyncIterator\/next()"]}],"kind":"symbol","references":{"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence":{"title":"AsynchronousUnitOfWorkSequence","abstract":[{"text":"A sequence that represents a single execution of an asynchronous unit of work.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}],"url":"\/documentation\/afluent\/asynchronousunitofworksequence","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence","kind":"symbol","type":"topic"},"doc://Afluent/ScI":{"type":"unresolvable","identifier":"doc:\/\/Afluent\/ScI","title":"_Concurrency.AsyncIteratorProtocol"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence/AsyncIterator":{"title":"AsynchronousUnitOfWorkSequence.AsyncIterator","abstract":[],"role":"symbol","navigatorTitle":[{"text":"AsyncIterator","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncIterator","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/AsyncIterator","url":"\/documentation\/afluent\/asynchronousunitofworksequence\/asynciterator","kind":"symbol","type":"topic"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence/AsyncIterator/next()":{"title":"next()","abstract":[],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"next","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"UnitOfWork"},{"text":".","kind":"text"},{"text":"Success","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/AsyncIterator\/next()","url":"\/documentation\/afluent\/asynchronousunitofworksequence\/asynciterator\/next()","kind":"symbol","type":"topic"},"doc://Afluent/documentation/Afluent":{"kind":"symbol","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","type":"topic","url":"\/documentation\/afluent","role":"collection","abstract":[]}}}