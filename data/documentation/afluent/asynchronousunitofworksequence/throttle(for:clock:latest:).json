{"kind":"symbol","sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"type":"text","text":"Emits either the first or latest element received during a specified amount of time."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"throttle","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">("},{"text":"for","kind":"externalParam"},{"kind":"text","text":" "},{"text":"interval","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Duration","preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa"},{"kind":"text","text":", "},{"kind":"externalParam","text":"clock"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"C"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"latest"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"text":"Throttle","preciseIdentifier":"s:7Afluent14AsyncSequencesO8ThrottleV","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Throttle"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"C","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"C"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency5ClockP","text":"Clock"}]}]},{"kind":"parameters","parameters":[{"name":"interval","content":[{"inlineContent":[{"type":"text","text":"The interval of time in which to observe and emit either the first or latest element."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"If ","type":"text"},{"code":"true","type":"codeVoice"},{"type":"text","text":", emits the latest element in the time interval.  If "},{"code":"false","type":"codeVoice"},{"type":"text","text":", emits the first element in the time interval."}],"type":"paragraph"}],"name":"latest"}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"type":"aside","style":"note","name":"Note","content":[{"inlineContent":[{"text":"The first element in upstream will always be returned immediately.  Once a second element is received, then the clock will begin for the given time interval and return the first or latest element once completed.","type":"text"}],"type":"paragraph"}]}]}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence","doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/AsyncSequence-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/throttle(for:clock:latest:)"},"metadata":{"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/ThrottleSequence.swift#L114","fileName":"ThrottleSequence.swift"},"modules":[{"name":"Afluent","relatedModules":["_Concurrency"]}],"title":"throttle(for:clock:latest:)","symbolKind":"method","platforms":[{"name":"iOS","deprecated":false,"unavailable":false,"introducedAt":"16.0","beta":false},{"introducedAt":"13.0","deprecated":false,"name":"macOS","beta":false,"unavailable":false},{"deprecated":false,"unavailable":false,"introducedAt":"16.0","name":"tvOS","beta":false},{"introducedAt":"1.0","name":"visionOS","deprecated":false,"unavailable":false,"beta":false},{"unavailable":false,"beta":false,"name":"watchOS","introducedAt":"9.0","deprecated":false}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" and "},{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"throttle"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"for","kind":"externalParam"},{"kind":"text","text":": "},{"text":"C","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Duration","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa"},{"kind":"text","text":", "},{"kind":"externalParam","text":"clock"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"latest","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Throttle","preciseIdentifier":"s:7Afluent14AsyncSequencesO8ThrottleV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":">"}],"roleHeading":"Instance Method","extendedModule":"_Concurrency","externalID":"s:Sci7Afluents8SendableRzsAB7ElementRpzrlE8throttle3for5clock6latestAA14AsyncSequencesO8ThrottleVy_xqd__G8DurationQyd___qd__Sbt12_Concurrency5ClockRd__lF::SYNTHESIZED::s:7Afluent30AsynchronousUnitOfWorkSequenceV"},"variants":[{"paths":["\/documentation\/afluent\/asynchronousunitofworksequence\/throttle(for:clock:latest:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence/throttle(for:clock:latest:)":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/throttle(for:clock:latest:)","title":"throttle(for:clock:latest:)","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"url":"\/documentation\/afluent\/asynchronousunitofworksequence\/throttle(for:clock:latest:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"throttle","kind":"identifier"},{"kind":"text","text":"<"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"for","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"C"},{"text":".","kind":"text"},{"text":"Duration","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa"},{"kind":"text","text":", "},{"kind":"externalParam","text":"clock"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"C"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"latest"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO8ThrottleV","text":"Throttle"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Emits either the first or latest element received during a specified amount of time."}]},"doc://Afluent/documentation/Afluent/AsyncSequences/Throttle":{"type":"topic","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Throttle","title":"AsyncSequences.Throttle","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Throttle"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Throttle","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/throttle"},"doc://Afluent/documentation/Afluent":{"kind":"symbol","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent","url":"\/documentation\/afluent","type":"topic","title":"Afluent","role":"collection"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence":{"kind":"symbol","abstract":[{"type":"text","text":"A sequence that represents a single execution of an asynchronous unit of work."}],"url":"\/documentation\/afluent\/asynchronousunitofworksequence","type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}],"navigatorTitle":[{"text":"AsynchronousUnitOfWorkSequence","kind":"identifier"}],"title":"AsynchronousUnitOfWorkSequence","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWorkSequence/AsyncSequence-Implementations":{"kind":"article","abstract":[],"url":"\/documentation\/afluent\/asynchronousunitofworksequence\/asyncsequence-implementations","type":"topic","role":"collectionGroup","title":"AsyncSequence Implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWorkSequence\/AsyncSequence-Implementations"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"title":"AsyncSequences","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","url":"\/documentation\/afluent\/asyncsequences","abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequences"}]}}}