{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequences"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"AsyncSequences"},{"type":"text","text":" enum itself doesnâ€™t contain values, serving solely as a container for nested types and functionalities to keep them organized."},{"type":"text","text":" "},{"type":"text","text":"For example, it might contain static methods, nested types, or enums that deal with specific aspects of asynchronous work."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/afluent\/asyncsequences"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequences"}],"title":"AsyncSequences","roleHeading":"Enumeration","role":"symbol","remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/AsyncSequences.swift#L14","fileName":"AsyncSequences.swift"},"symbolKind":"enum","externalID":"s:7Afluent14AsyncSequencesO","modules":[{"name":"Afluent"}],"navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}]},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"topicSections":[{"title":"Classes","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Retry","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryAfterFlatMapping","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOn","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOnAfterFlatMapping"]},{"title":"Structures","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AnyAsyncIterator","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AnyAsyncSequence","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Catch","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Collect","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Decode","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Deferred","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Delay","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Dematerialize","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Encode","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/FlatMap","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/GroupBy","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/MapError","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Materialize","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/ReplaceError","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/ReplaceNil","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Throttle"]},{"title":"Enumerations","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Completion","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Event"]}],"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/Decode":{"role":"symbol","title":"AsyncSequences.Decode","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Decode"}],"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Decode","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Decode"}],"url":"\/documentation\/afluent\/asyncsequences\/decode"},"doc://Afluent/documentation/Afluent/AsyncSequences/ReplaceNil":{"role":"symbol","title":"AsyncSequences.ReplaceNil","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReplaceNil"}],"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/ReplaceNil","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ReplaceNil"}],"url":"\/documentation\/afluent\/asyncsequences\/replacenil"},"doc://Afluent/documentation/Afluent/AsyncSequences/Collect":{"role":"symbol","title":"AsyncSequences.Collect","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Collect"}],"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Collect","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Collect"}],"url":"\/documentation\/afluent\/asyncsequences\/collect"},"doc://Afluent/documentation/Afluent/AsyncSequences/HandleEvents":{"role":"symbol","title":"AsyncSequences.HandleEvents","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HandleEvents"}],"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HandleEvents"}],"url":"\/documentation\/afluent\/asyncsequences\/handleevents"},"doc://Afluent/documentation/Afluent/AsyncSequences/Delay":{"role":"symbol","title":"AsyncSequences.Delay","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Delay"}],"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Delay","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Delay"}],"url":"\/documentation\/afluent\/asyncsequences\/delay"},"doc://Afluent/documentation/Afluent/AsyncSequences/Just":{"role":"symbol","title":"AsyncSequences.Just","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Just"}],"abstract":[{"type":"text","text":"An "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" that emits a single specified element and then completes."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Just"}],"url":"\/documentation\/afluent\/asyncsequences\/just"},"doc://Afluent/documentation/Afluent/AsyncSequences/RetryOn":{"role":"symbol","title":"AsyncSequences.RetryOn","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RetryOn"}],"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOn","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RetryOn"}],"url":"\/documentation\/afluent\/asyncsequences\/retryon"},"doc://Afluent/documentation/Afluent/AsyncSequences/Materialize":{"role":"symbol","title":"AsyncSequences.Materialize","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Materialize"}],"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Materialize","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Materialize"}],"url":"\/documentation\/afluent\/asyncsequences\/materialize"},"doc://Afluent/documentation/Afluent/AsyncSequences/Event":{"role":"symbol","title":"AsyncSequences.Event","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Event"}],"abstract":[{"type":"text","text":"Represents the different kinds of events that can be emitted by "},{"type":"codeVoice","code":"Materialize"},{"type":"text","text":"."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Event","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Event"}],"url":"\/documentation\/afluent\/asyncsequences\/event"},"doc://Afluent/documentation/Afluent/AsyncSequences/ReplaceError":{"role":"symbol","title":"AsyncSequences.ReplaceError","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReplaceError"}],"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/ReplaceError","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ReplaceError"}],"url":"\/documentation\/afluent\/asyncsequences\/replaceerror"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure":{"role":"symbol","title":"AsyncSequences.AssertNoFailure","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AssertNoFailure"}],"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AssertNoFailure"}],"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure"},"doc://Afluent/documentation/Afluent":{"role":"collection","title":"Afluent","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol","type":"topic","url":"\/documentation\/afluent"},"doc://Afluent/documentation/Afluent/AsyncSequences/AnyAsyncSequence":{"role":"symbol","title":"AsyncSequences.AnyAsyncSequence","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyAsyncSequence"}],"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AnyAsyncSequence","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AnyAsyncSequence"}],"url":"\/documentation\/afluent\/asyncsequences\/anyasyncsequence"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"role":"symbol","title":"AsyncSequences","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequences"}],"abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"url":"\/documentation\/afluent\/asyncsequences"},"doc://Afluent/documentation/Afluent/AsyncSequences/RetryAfterFlatMapping":{"role":"symbol","title":"AsyncSequences.RetryAfterFlatMapping","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RetryAfterFlatMapping"}],"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryAfterFlatMapping","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RetryAfterFlatMapping"}],"url":"\/documentation\/afluent\/asyncsequences\/retryafterflatmapping"},"doc://Afluent/documentation/Afluent/AsyncSequences/Retry":{"role":"symbol","title":"AsyncSequences.Retry","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Retry"}],"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Retry","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Retry"}],"url":"\/documentation\/afluent\/asyncsequences\/retry"},"doc://Afluent/documentation/Afluent/AsyncSequences/GroupBy":{"role":"symbol","title":"AsyncSequences.GroupBy","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"GroupBy"}],"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/GroupBy","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"GroupBy"}],"url":"\/documentation\/afluent\/asyncsequences\/groupby"},"doc://Afluent/documentation/Afluent/AsyncSequences/Deferred":{"role":"symbol","title":"AsyncSequences.Deferred","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Deferred"}],"abstract":[{"type":"text","text":"An asynchronous sequence that defers the execution of another asynchronous sequence until iteration."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Deferred","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Deferred"}],"url":"\/documentation\/afluent\/asyncsequences\/deferred"},"doc://Afluent/documentation/Afluent/AsyncSequences/MapError":{"role":"symbol","title":"AsyncSequences.MapError","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MapError"}],"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/MapError","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MapError"}],"url":"\/documentation\/afluent\/asyncsequences\/maperror"},"doc://Afluent/documentation/Afluent/AsyncSequences/Completion":{"role":"symbol","title":"AsyncSequences.Completion","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Completion"}],"abstract":[{"type":"text","text":"A type that represents the completion of a sequence, either due to a normal completion with "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" or an error."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Completion","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Completion"}],"url":"\/documentation\/afluent\/asyncsequences\/completion"},"doc://Afluent/documentation/Afluent/AsyncSequences/AnyAsyncIterator":{"role":"symbol","title":"AsyncSequences.AnyAsyncIterator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyAsyncIterator"}],"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AnyAsyncIterator","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AnyAsyncIterator"}],"url":"\/documentation\/afluent\/asyncsequences\/anyasynciterator"},"doc://Afluent/documentation/Afluent/AsyncSequences/Encode":{"role":"symbol","title":"AsyncSequences.Encode","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Encode"}],"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Encode","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Encode"}],"url":"\/documentation\/afluent\/asyncsequences\/encode"},"doc://Afluent/documentation/Afluent/AsyncSequences/RetryOnAfterFlatMapping":{"role":"symbol","title":"AsyncSequences.RetryOnAfterFlatMapping","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RetryOnAfterFlatMapping"}],"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOnAfterFlatMapping","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RetryOnAfterFlatMapping"}],"url":"\/documentation\/afluent\/asyncsequences\/retryonafterflatmapping"},"doc://Afluent/documentation/Afluent/AsyncSequences/Catch":{"role":"symbol","title":"AsyncSequences.Catch","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Catch"}],"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Catch","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Catch"}],"url":"\/documentation\/afluent\/asyncsequences\/catch"},"doc://Afluent/documentation/Afluent/AsyncSequences/Throttle":{"role":"symbol","title":"AsyncSequences.Throttle","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Throttle"}],"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Throttle","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Throttle"}],"url":"\/documentation\/afluent\/asyncsequences\/throttle"},"doc://Afluent/documentation/Afluent/AsyncSequences/FlatMap":{"role":"symbol","title":"AsyncSequences.FlatMap","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlatMap"}],"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/FlatMap","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FlatMap"}],"url":"\/documentation\/afluent\/asyncsequences\/flatmap"},"doc://Afluent/documentation/Afluent/AsyncSequences/Dematerialize":{"role":"symbol","title":"AsyncSequences.Dematerialize","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Dematerialize"}],"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Dematerialize","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Dematerialize"}],"url":"\/documentation\/afluent\/asyncsequences\/dematerialize"}}}