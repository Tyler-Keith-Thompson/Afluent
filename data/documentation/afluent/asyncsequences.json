{"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"metadata":{"roleHeading":"Enumeration","role":"symbol","symbolKind":"enum","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncSequences","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"title":"AsyncSequences","externalID":"s:7Afluent14AsyncSequencesO","remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/AsyncSequences.swift#L14","fileName":"AsyncSequences.swift"},"modules":[{"name":"Afluent"}]},"abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"topicSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Retry","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryAfterFlatMapping","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOn","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOnAfterFlatMapping"],"title":"Classes"},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AnyAsyncIterator","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AnyAsyncSequence","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Catch","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Collect","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Decode","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Deferred","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Delay","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Dematerialize","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Encode","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/FlatMap","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/GroupBy","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/MapError","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Materialize","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/ReplaceError","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/ReplaceNil","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Throttle"],"title":"Structures"},{"title":"Enumerations","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Completion","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Event"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncSequences","kind":"identifier"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"text":"Overview","type":"heading","level":2,"anchor":"overview"},{"inlineContent":[{"text":"The ","type":"text"},{"code":"AsyncSequences","type":"codeVoice"},{"text":" enum itself doesnâ€™t contain values, serving solely as a container for nested types and functionalities to keep them organized.","type":"text"},{"type":"text","text":" "},{"text":"For example, it might contain static methods, nested types, or enums that deal with specific aspects of asynchronous work.","type":"text"}],"type":"paragraph"}]}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asyncsequences"]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences"},"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/Dematerialize":{"title":"AsyncSequences.Dematerialize","kind":"symbol","role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/dematerialize","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Dematerialize","kind":"identifier"}],"navigatorTitle":[{"text":"Dematerialize","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Dematerialize"},"doc://Afluent/documentation/Afluent/AsyncSequences/Collect":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Collect"}],"type":"topic","role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/collect","navigatorTitle":[{"text":"Collect","kind":"identifier"}],"title":"AsyncSequences.Collect","kind":"symbol","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Collect"},"doc://Afluent/documentation/Afluent/AsyncSequences/Throttle":{"role":"symbol","abstract":[],"url":"\/documentation\/afluent\/asyncsequences\/throttle","navigatorTitle":[{"kind":"identifier","text":"Throttle"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Throttle","type":"topic","title":"AsyncSequences.Throttle","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Throttle","kind":"identifier"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"url":"\/documentation\/afluent\/asyncsequences","kind":"symbol","title":"AsyncSequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncSequences","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}]},"doc://Afluent/documentation/Afluent":{"url":"\/documentation\/afluent","type":"topic","title":"Afluent","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol","role":"collection"},"doc://Afluent/documentation/Afluent/AsyncSequences/MapError":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MapError"}],"url":"\/documentation\/afluent\/asyncsequences\/maperror","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/MapError","type":"topic","title":"AsyncSequences.MapError","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"MapError"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure":{"navigatorTitle":[{"text":"AssertNoFailure","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AssertNoFailure"}],"title":"AsyncSequences.AssertNoFailure","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure","kind":"symbol","role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/AnyAsyncIterator":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnyAsyncIterator"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AnyAsyncIterator","navigatorTitle":[{"kind":"identifier","text":"AnyAsyncIterator"}],"role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/anyasynciterator","abstract":[],"title":"AsyncSequences.AnyAsyncIterator","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/Encode":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Encode","type":"topic","abstract":[],"url":"\/documentation\/afluent\/asyncsequences\/encode","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Encode","kind":"identifier"}],"navigatorTitle":[{"text":"Encode","kind":"identifier"}],"kind":"symbol","title":"AsyncSequences.Encode"},"doc://Afluent/documentation/Afluent/AsyncSequences/RetryOnAfterFlatMapping":{"type":"topic","abstract":[],"role":"symbol","kind":"symbol","title":"AsyncSequences.RetryOnAfterFlatMapping","url":"\/documentation\/afluent\/asyncsequences\/retryonafterflatmapping","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RetryOnAfterFlatMapping","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"RetryOnAfterFlatMapping"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOnAfterFlatMapping"},"doc://Afluent/documentation/Afluent/AsyncSequences/Just":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just","url":"\/documentation\/afluent\/asyncsequences\/just","kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Just","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Just"}],"abstract":[{"type":"text","text":"An "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" that emits a single specified element and then completes."}],"title":"AsyncSequences.Just"},"doc://Afluent/documentation/Afluent/AsyncSequences/ReplaceNil":{"role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/ReplaceNil","navigatorTitle":[{"text":"ReplaceNil","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReplaceNil"}],"title":"AsyncSequences.ReplaceNil","abstract":[],"url":"\/documentation\/afluent\/asyncsequences\/replacenil"},"doc://Afluent/documentation/Afluent/AsyncSequences/Materialize":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Materialize","url":"\/documentation\/afluent\/asyncsequences\/materialize","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Materialize"}],"kind":"symbol","abstract":[],"role":"symbol","title":"AsyncSequences.Materialize","navigatorTitle":[{"text":"Materialize","kind":"identifier"}],"type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/Deferred":{"type":"topic","kind":"symbol","title":"AsyncSequences.Deferred","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Deferred","url":"\/documentation\/afluent\/asyncsequences\/deferred","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Deferred"}],"navigatorTitle":[{"text":"Deferred","kind":"identifier"}],"abstract":[{"type":"text","text":"An asynchronous sequence that defers the execution of another asynchronous sequence until iteration."}]},"doc://Afluent/documentation/Afluent/AsyncSequences/Delay":{"url":"\/documentation\/afluent\/asyncsequences\/delay","kind":"symbol","navigatorTitle":[{"text":"Delay","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Delay","kind":"identifier"}],"title":"AsyncSequences.Delay","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Delay","abstract":[],"type":"topic","role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/FlatMap":{"role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/FlatMap","navigatorTitle":[{"text":"FlatMap","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlatMap"}],"title":"AsyncSequences.FlatMap","abstract":[],"url":"\/documentation\/afluent\/asyncsequences\/flatmap"},"doc://Afluent/documentation/Afluent/AsyncSequences/RetryOn":{"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOn","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RetryOn"}],"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RetryOn"}],"title":"AsyncSequences.RetryOn","abstract":[],"url":"\/documentation\/afluent\/asyncsequences\/retryon"},"doc://Afluent/documentation/Afluent/AsyncSequences/AnyAsyncSequence":{"type":"topic","kind":"symbol","title":"AsyncSequences.AnyAsyncSequence","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AnyAsyncSequence","url":"\/documentation\/afluent\/asyncsequences\/anyasyncsequence","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnyAsyncSequence"}],"navigatorTitle":[{"text":"AnyAsyncSequence","kind":"identifier"}],"abstract":[]},"doc://Afluent/documentation/Afluent/AsyncSequences/Retry":{"navigatorTitle":[{"text":"Retry","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Retry","type":"topic","url":"\/documentation\/afluent\/asyncsequences\/retry","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Retry"}],"role":"symbol","kind":"symbol","title":"AsyncSequences.Retry","abstract":[]},"doc://Afluent/documentation/Afluent/AsyncSequences/Decode":{"abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Decode","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Decode"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Decode","title":"AsyncSequences.Decode","type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/decode"},"doc://Afluent/documentation/Afluent/AsyncSequences/Event":{"navigatorTitle":[{"kind":"identifier","text":"Event"}],"url":"\/documentation\/afluent\/asyncsequences\/event","type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"Event","kind":"identifier"}],"title":"AsyncSequences.Event","abstract":[{"type":"text","text":"Represents the different kinds of events that can be emitted by "},{"code":"Materialize","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Event","kind":"symbol","role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/ReplaceError":{"navigatorTitle":[{"kind":"identifier","text":"ReplaceError"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/ReplaceError","kind":"symbol","title":"AsyncSequences.ReplaceError","role":"symbol","type":"topic","abstract":[],"url":"\/documentation\/afluent\/asyncsequences\/replaceerror","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReplaceError"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/Completion":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Completion","url":"\/documentation\/afluent\/asyncsequences\/completion","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"Completion","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A type that represents the completion of a sequence, either due to a normal completion with "},{"type":"codeVoice","code":"nil"},{"text":" or an error.","type":"text"}],"role":"symbol","title":"AsyncSequences.Completion","navigatorTitle":[{"kind":"identifier","text":"Completion"}],"type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/Catch":{"url":"\/documentation\/afluent\/asyncsequences\/catch","abstract":[],"role":"symbol","title":"AsyncSequences.Catch","type":"topic","navigatorTitle":[{"text":"Catch","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Catch","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Catch"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/GroupBy":{"navigatorTitle":[{"text":"GroupBy","kind":"identifier"}],"kind":"symbol","type":"topic","title":"AsyncSequences.GroupBy","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/GroupBy","url":"\/documentation\/afluent\/asyncsequences\/groupby","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"GroupBy"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/HandleEvents":{"title":"AsyncSequences.HandleEvents","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents","url":"\/documentation\/afluent\/asyncsequences\/handleevents","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HandleEvents"}],"type":"topic","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"HandleEvents"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/RetryAfterFlatMapping":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryAfterFlatMapping","kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/retryafterflatmapping","abstract":[],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RetryAfterFlatMapping"}],"navigatorTitle":[{"text":"RetryAfterFlatMapping","kind":"identifier"}],"type":"topic","title":"AsyncSequences.RetryAfterFlatMapping"}}}