{"abstract":[{"type":"text","text":"Introduces a breakpoint into the async sequence when an error occurs."}],"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"metadata":{"symbolKind":"method","roleHeading":"Instance Method","modules":[{"relatedModules":["_Concurrency"],"name":"Afluent"}],"externalID":"s:Sci7Afluents8SendableRzrlE17breakpointOnErrorAA14AsyncSequencesO12HandleEventsVy_xGyF::SYNTHESIZED::s:7Afluent14AsyncSequencesO03AnyB8SequenceV","remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/BreakpointSequence.swift#L43","fileName":"BreakpointSequence.swift"},"extendedModule":"_Concurrency","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"breakpointOnError","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV","text":"HandleEvents"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"breakpointOnError()","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}]},"role":"symbol"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"breakpointOnError"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents","text":"HandleEvents"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}]}]},{"content":[{"type":"heading","text":"Return Value","anchor":"return-value","level":2},{"inlineContent":[{"text":"An ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" with the breakpoint-on-error condition applied."}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This function triggers a "},{"type":"codeVoice","code":"SIGTRAP"},{"type":"text","text":" signal, pausing execution in a debugger, whenever the async sequence produces an error."}]}]}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AnyAsyncSequence","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AnyAsyncSequence\/AsyncSequence-Implementations"]]},"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AnyAsyncSequence\/breakpointOnError()","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asyncsequences\/anyasyncsequence\/breakpointonerror()"]}],"references":{"doc://Afluent/documentation/Afluent/AsyncSequences":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncSequences"}],"navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}],"title":"AsyncSequences","role":"symbol","kind":"symbol","url":"\/documentation\/afluent\/asyncsequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/AnyAsyncSequence":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AnyAsyncSequence","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AnyAsyncSequence","title":"AsyncSequences.AnyAsyncSequence","url":"\/documentation\/afluent\/asyncsequences\/anyasyncsequence","abstract":[],"type":"topic","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnyAsyncSequence"}]},"doc://Afluent/documentation/Afluent":{"kind":"symbol","url":"\/documentation\/afluent","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent","title":"Afluent","type":"topic","role":"collection"},"doc://Afluent/documentation/Afluent/AsyncSequences/AnyAsyncSequence/AsyncSequence-Implementations":{"kind":"article","role":"collectionGroup","title":"AsyncSequence Implementations","type":"topic","url":"\/documentation\/afluent\/asyncsequences\/anyasyncsequence\/asyncsequence-implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AnyAsyncSequence\/AsyncSequence-Implementations","abstract":[]},"doc://Afluent/documentation/Afluent/AsyncSequences/HandleEvents":{"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HandleEvents"}],"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents","navigatorTitle":[{"text":"HandleEvents","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences\/handleevents","title":"AsyncSequences.HandleEvents","role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/AnyAsyncSequence/breakpointOnError()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"breakpointOnError","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV","text":"HandleEvents"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"type":"topic","conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AnyAsyncSequence\/breakpointOnError()","abstract":[{"text":"Introduces a breakpoint into the async sequence when an error occurs.","type":"text"}],"title":"breakpointOnError()","kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/anyasyncsequence\/breakpointonerror()","role":"symbol"}}}