{"variants":[{"paths":["\/documentation\/afluent\/asyncsequences\/anyasyncsequence\/collect()"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"role":"symbol","title":"collect()","externalID":"s:Sci7Afluents8SendableRzrlE7collectAA14AsyncSequencesO7CollectVy_xGyF::SYNTHESIZED::s:7Afluent14AsyncSequencesO03AnyB8SequenceV","modules":[{"name":"Afluent","relatedModules":["_Concurrency"]}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"roleHeading":"Instance Method","remoteSource":{"fileName":"CollectSequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/CollectSequence.swift#L44"},"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"collect","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"text":".","kind":"text"},{"text":"Collect","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO7CollectV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"symbolKind":"method","extendedModule":"_Concurrency"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"collect"},{"kind":"text","text":"() -> "},{"text":"AsyncSequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Collect","preciseIdentifier":"s:7Afluent14AsyncSequencesO7CollectV","text":"Collect"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"text":"Discussion:","level":3,"type":"heading","anchor":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"Use ","type":"text"},{"code":"collect()","type":"codeVoice"},{"text":" to gather elements into an array that the operator emits after the upstream sequence finishes.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"If the upstream sequence fails with an error, this sequence forwards the error to the downstream receiver instead of sending its output."}]},{"style":"important","type":"aside","name":"Important","content":[{"inlineContent":[{"type":"text","text":"Be cautious when using "},{"code":"collect","type":"codeVoice"},{"text":" on sequences that can emit a large number of elements or do not complete, as it can lead to high memory usage or even memory exhaustion.","type":"text"}],"type":"paragraph"}]}]}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AnyAsyncSequence","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AnyAsyncSequence\/AsyncSequence-Implementations"]]},"abstract":[{"text":"Collects all received elements, and emits a single array of the collection when the upstream sequence finishes.","type":"text"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AnyAsyncSequence\/collect()"},"kind":"symbol","references":{"doc://Afluent/documentation/Afluent/AsyncSequences/Collect":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Collect","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Collect","kind":"symbol","role":"symbol","abstract":[],"navigatorTitle":[{"text":"Collect","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences\/collect","title":"AsyncSequences.Collect","type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/AnyAsyncSequence/AsyncSequence-Implementations":{"role":"collectionGroup","url":"\/documentation\/afluent\/asyncsequences\/anyasyncsequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"topic","kind":"article","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AnyAsyncSequence\/AsyncSequence-Implementations"},"doc://Afluent/documentation/Afluent":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent","role":"collection","kind":"symbol","type":"topic","url":"\/documentation\/afluent","abstract":[],"title":"Afluent"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/afluent\/asyncsequences","abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"title":"AsyncSequences","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"AsyncSequences","kind":"identifier"}],"navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/AnyAsyncSequence":{"role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/anyasyncsequence","type":"topic","title":"AsyncSequences.AnyAsyncSequence","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AnyAsyncSequence","kind":"identifier"}],"abstract":[],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AnyAsyncSequence","navigatorTitle":[{"text":"AnyAsyncSequence","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/AnyAsyncSequence/collect()":{"title":"collect()","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"collect"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO7CollectV","kind":"typeIdentifier","text":"Collect"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"abstract":[{"text":"Collects all received elements, and emits a single array of the collection when the upstream sequence finishes.","type":"text"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}]},"url":"\/documentation\/afluent\/asyncsequences\/anyasyncsequence\/collect()","kind":"symbol","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AnyAsyncSequence\/collect()"}}}