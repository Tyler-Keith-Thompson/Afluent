{"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"type":"text","text":"Transforms a sequence of "},{"code":"Event","type":"codeVoice"},{"text":" values back into their original form in an ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":"."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asyncsequences\/anyasyncsequence\/dematerialize()"]}],"sections":[],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dematerialize","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">() -> ","kind":"text"},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Dematerialize","preciseIdentifier":"s:7Afluent14AsyncSequencesO13DematerializeV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">"}],"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/DematerializeSequence.swift#L48","fileName":"DematerializeSequence.swift"},"roleHeading":"Instance Method","externalID":"s:Sci7Afluents8SendableRzrlE13dematerializeAA14AsyncSequencesO13DematerializeVy_xqd__GysABRd__AE5EventOy_qd__G7ElementRtzlF::SYNTHESIZED::s:7Afluent14AsyncSequencesO03AnyB8SequenceV","extendedModule":"_Concurrency","conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"title":"dematerialize()","modules":[{"name":"Afluent","relatedModules":["_Concurrency"]}],"symbolKind":"method","role":"symbol"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AnyAsyncSequence","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AnyAsyncSequence\/AsyncSequence-Implementations"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dematerialize","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">() -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","text":"AsyncSequences"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO13DematerializeV","kind":"typeIdentifier","text":"Dematerialize","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Dematerialize"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier","text":"Sendable"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa"},{"kind":"text","text":" == "},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences"},{"text":".","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Event","text":"Event","preciseIdentifier":"s:7Afluent14AsyncSequencesO5EventO","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"code":"AsyncSequences.Dematerialize","type":"codeVoice"},{"type":"text","text":" instance that represents the original "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" with its elements and errors."}]}],"kind":"content"},{"content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"inlineContent":[{"type":"text","text":"This method is the inverse of "},{"type":"codeVoice","code":"materialize"},{"type":"text","text":". It takes an "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" of "},{"type":"codeVoice","code":"Event"},{"type":"text","text":" values and transforms it back into an "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" of the original elements, propagating errors as thrown exceptions."}],"type":"paragraph"},{"style":"note","content":[{"inlineContent":[{"type":"text","text":"The sequence must be of type "},{"code":"AsyncSequences.Event<T>","type":"codeVoice"},{"type":"text","text":". The "},{"code":"dematerialize","type":"codeVoice"},{"type":"text","text":" method will extract the original elements and errors from these events."}],"type":"paragraph"}],"name":"Note","type":"aside"},{"style":"note","type":"aside","name":"Throws","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Re-throws any errors that were encapsulated in the "},{"code":"Event.failure","type":"codeVoice"},{"type":"text","text":" cases."}]}]}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AnyAsyncSequence\/dematerialize()"},"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/AnyAsyncSequence/AsyncSequence-Implementations":{"role":"collectionGroup","abstract":[],"url":"\/documentation\/afluent\/asyncsequences\/anyasyncsequence\/asyncsequence-implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AnyAsyncSequence\/AsyncSequence-Implementations","title":"AsyncSequence Implementations","type":"topic","kind":"article"},"doc://Afluent/documentation/Afluent/AsyncSequences/Dematerialize":{"kind":"symbol","title":"AsyncSequences.Dematerialize","abstract":[],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Dematerialize"}],"navigatorTitle":[{"text":"Dematerialize","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences\/dematerialize","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Dematerialize"},"doc://Afluent/documentation/Afluent/AsyncSequences/AnyAsyncSequence/dematerialize()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dematerialize","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">() -> "},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO13DematerializeV","text":"Dematerialize"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AnyAsyncSequence\/dematerialize()","abstract":[{"text":"Transforms a sequence of ","type":"text"},{"code":"Event","type":"codeVoice"},{"type":"text","text":" values back into their original form in an "},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":"."}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/anyasyncsequence\/dematerialize()","title":"dematerialize()","role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"title":"AsyncSequences","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","url":"\/documentation\/afluent\/asyncsequences","abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequences"}]},"doc://Afluent/documentation/Afluent":{"kind":"symbol","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent","url":"\/documentation\/afluent","type":"topic","title":"Afluent","role":"collection"},"doc://Afluent/documentation/Afluent/AsyncSequences/Event":{"abstract":[{"type":"text","text":"Represents the different kinds of events that can be emitted by "},{"type":"codeVoice","code":"Materialize"},{"type":"text","text":"."}],"type":"topic","url":"\/documentation\/afluent\/asyncsequences\/event","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Event"}],"navigatorTitle":[{"text":"Event","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Event","kind":"symbol","title":"AsyncSequences.Event"},"doc://Afluent/documentation/Afluent/AsyncSequences/AnyAsyncSequence":{"type":"topic","title":"AsyncSequences.AnyAsyncSequence","abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyAsyncSequence"}],"url":"\/documentation\/afluent\/asyncsequences\/anyasyncsequence","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnyAsyncSequence"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AnyAsyncSequence","kind":"symbol"}}}