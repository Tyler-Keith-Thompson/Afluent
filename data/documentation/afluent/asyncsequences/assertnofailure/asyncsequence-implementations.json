{"metadata":{"role":"collectionGroup","title":"AsyncSequence Implementations","modules":[{"name":"Afluent"}]},"kind":"article","topicSections":[{"title":"Instance Properties","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/characters","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/lines","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/unicodeScalars"]},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/allSatisfy(_:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/assertNoFailure()","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/breakpoint(receiveOutput:receiveError:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/breakpointOnError()","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/catch(_:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/catch(_:_:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/collect()","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/compactMap(_:)-9f8zg","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/compactMap(_:)-9pzuh","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/contains(_:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/contains(where:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/decode(type:decoder:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/delay(for:tolerance:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/delay(for:tolerance:clock:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/dematerialize()","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/discardOutput()","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/drop(while:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/dropFirst(_:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/encode(encoder:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/eraseToAnyAsyncSequence()","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/filter(_:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/first()","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/first(where:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/flatMap(_:)-44j4j","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/flatMap(_:)-94qkr","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/flatMap(maxSubscriptions:_:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/groupBy(keySelector:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/handleEvents(receiveMakeIterator:receiveNext:receiveOutput:receiveError:receiveComplete:receiveCancel:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/map(_:)-279ry","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/map(_:)-ghp5","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/mapError(_:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/mapError(_:_:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/materialize()","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/max()","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/max(by:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/min()","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/min(by:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/prefix(_:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/prefix(while:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/print(_:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/reduce(_:_:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/reduce(into:_:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/replaceError(with:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/replaceNil(with:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/retry(_:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/retry(_:_:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/retry(_:on:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/retry(_:on:_:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/sink(receiveCompletion:receiveOutput:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/throttle(for:clock:latest:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/tryCatch(_:)","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/tryCatch(_:_:)"],"generated":true,"title":"Instance Methods"}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/AsyncSequence-Implementations","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asyncsequences\/assertnofailure\/asyncsequence-implementations"]}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure"]]},"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/contains(where:)":{"title":"contains(where:)","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/contains(where:)","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"contains","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"where"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/contains(where:)","type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/print(_:)":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/print(_:)","abstract":[{"text":"Logs events from the upstream ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" to the console."}],"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/print(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV","text":"HandleEvents","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"title":"print(_:)","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"type":"topic","role":"symbol","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/allSatisfy(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"allSatisfy","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/allSatisfy(_:)","kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/allsatisfy(_:)","title":"allSatisfy(_:)","abstract":[],"role":"symbol","type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/eraseToAnyAsyncSequence()":{"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/erasetoanyasyncsequence()","type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"eraseToAnyAsyncSequence","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO03AnyB8SequenceV","text":"AnyAsyncSequence"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"Type erases the current sequence, useful when you need a concrete type that’s easy to predict."}],"title":"eraseToAnyAsyncSequence()","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/eraseToAnyAsyncSequence()","role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/compactMap(_:)-9pzuh":{"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/compactmap(_:)-9pzuh","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/compactMap(_:)-9pzuh","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"compactMap"},{"text":"<","kind":"text"},{"text":"ElementOfResult","kind":"genericParameter"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"ElementOfResult"},{"kind":"text","text":"?) -> "},{"text":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ElementOfResult","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","abstract":[],"title":"compactMap(_:)","role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/tryCatch(_:_:)":{"type":"topic","abstract":[{"text":"Tries to catch a specific type of error emitted by the upstream ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"text":" and handles them using the provided throwing closure.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/tryCatch(_:_:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}]},"role":"symbol","title":"tryCatch(_:_:)","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/trycatch(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"tryCatch"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"D"},{"kind":"text","text":", "},{"text":"E","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":", ("},{"text":"E","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"kind":"text","text":"."},{"text":"Catch","preciseIdentifier":"s:7Afluent14AsyncSequencesO5CatchV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":">"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/replaceError(with:)":{"title":"replaceError(with:)","role":"symbol","abstract":[{"text":"Replaces any errors from the upstream ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" with the provided value."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"replaceError","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"text":") -> ","kind":"text"},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"text":"ReplaceError","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO12ReplaceErrorV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":">"}],"kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/replaceerror(with:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}]},"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/replaceError(with:)","type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/discardOutput()":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"type":"topic","kind":"symbol","title":"discardOutput()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"discardOutput","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">","kind":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/discardOutput()","role":"symbol","abstract":[{"type":"text","text":"Discards the output values from the upstream "},{"code":"AsyncSequence","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/discardoutput()"},"doc://Afluent/documentation/Afluent":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent","type":"topic","url":"\/documentation\/afluent","title":"Afluent","role":"collection","abstract":[],"kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/lines":{"abstract":[],"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/lines","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"lines","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation17AsyncLineSequenceV","text":"AsyncLineSequence"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"type":"topic","title":"lines","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/lines","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"UInt8"},{"text":".","type":"text"}]},"kind":"symbol","role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/map(_:)-279ry":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Transformed"},{"text":">((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Transformed"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV","text":"AsyncThrowingMapSequence"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Transformed","kind":"typeIdentifier"},{"kind":"text","text":">"}],"type":"topic","kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/map(_:)-279ry","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/map(_:)-279ry","title":"map(_:)","role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/unicodeScalars":{"kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/unicodescalars","abstract":[],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"unicodeScalars","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10Foundation26AsyncUnicodeScalarSequenceV","kind":"typeIdentifier","text":"AsyncUnicodeScalarSequence"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"title":"unicodeScalars","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"UInt8"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"type":"topic","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/unicodeScalars"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/replaceNil(with:)":{"role":"symbol","title":"replaceNil(with:)","abstract":[{"type":"text","text":"Replaces any "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" values from the upstream "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" with the provided non-nil value."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/replaceNil(with:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"replaceNil"},{"text":"<","kind":"text"},{"text":"E","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"text":"ReplaceNil","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO10ReplaceNilV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"E"},{"text":">","kind":"text"}],"type":"topic","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/replacenil(with:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/groupBy(keySelector:)":{"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/groupby(keyselector:)","kind":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}]},"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/groupBy(keySelector:)","abstract":[],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"groupBy","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Key"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"keySelector"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Key"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"GroupBy","preciseIdentifier":"s:7Afluent14AsyncSequencesO7GroupByV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"groupBy(keySelector:)","type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/tryCatch(_:)":{"abstract":[{"type":"text","text":"Tries to catch any errors emitted by the upstream "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" and handles them using the provided throwing closure."}],"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/trycatch(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"tryCatch","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"D"},{"text":">((","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"text":".","kind":"text"},{"text":"Catch","preciseIdentifier":"s:7Afluent14AsyncSequencesO5CatchV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","title":"tryCatch(_:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/tryCatch(_:)","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"kind":"symbol","role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/retry(_:on:)":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/retry(_:on:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"retry"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"E"},{"text":">(","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"text":"on","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO7RetryOnC","text":"RetryOn"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"E"},{"text":">","kind":"text"}],"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/retry(_:on:)","title":"retry(_:on:)","abstract":[{"type":"text","text":"Retries the upstream "},{"type":"codeVoice","code":"AsyncSequence"},{"text":" up to a specified number of times only when a specific error occurs.","type":"text"}],"type":"topic","role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/prefix(while:)":{"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/prefix(while:)","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/prefix(while:)","abstract":[],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"prefix"},{"kind":"text","text":"("},{"kind":"externalParam","text":"while"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV","text":"AsyncPrefixWhileSequence"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"title":"prefix(while:)","type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/throttle(for:clock:latest:)":{"role":"symbol","title":"throttle(for:clock:latest:)","abstract":[{"text":"Emits either the first or latest element received during a specified amount of time.","type":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/throttle(for:clock:latest:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"throttle"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"for","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"C"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Duration"},{"text":", ","kind":"text"},{"text":"clock","kind":"externalParam"},{"kind":"text","text":": "},{"text":"C","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"latest","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Throttle","preciseIdentifier":"s:7Afluent14AsyncSequencesO8ThrottleV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/throttle(for:clock:latest:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" and "},{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}]},"kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure":{"abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AssertNoFailure","kind":"identifier"}],"type":"topic","title":"AsyncSequences.AssertNoFailure","kind":"symbol","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure","navigatorTitle":[{"kind":"identifier","text":"AssertNoFailure"}],"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/first()":{"title":"first()","role":"symbol","abstract":[{"type":"text","text":"Returns the first element of the sequence"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"first","kind":"identifier"},{"text":"() ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/first()","conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/first()","type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/drop(while:)":{"abstract":[],"kind":"symbol","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/drop(while:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"drop","kind":"identifier"},{"kind":"text","text":"("},{"text":"while","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"drop(while:)","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/drop(while:)"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/flatMap(maxSubscriptions:_:)":{"kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/flatmap(maxsubscriptions:_:)","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"flatMap","kind":"identifier"},{"kind":"text","text":"<"},{"text":"SegmentOfResult","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"maxSubscriptions"},{"text":": ","kind":"text"},{"text":"SubscriptionDemand","preciseIdentifier":"s:7Afluent18SubscriptionDemandO","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"SegmentOfResult"},{"text":") -> ","kind":"text"},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"text":"FlatMap","preciseIdentifier":"s:7Afluent14AsyncSequencesO7FlatMapV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"SegmentOfResult","kind":"typeIdentifier"},{"kind":"text","text":">"}],"title":"flatMap(maxSubscriptions:_:)","type":"topic","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/flatMap(maxSubscriptions:_:)"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/contains(_:)":{"title":"contains(_:)","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/contains(_:)","conformance":{"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/contains(_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"contains","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"type":"topic","abstract":[],"role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/collect()":{"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/collect()","abstract":[{"text":"Collects all received elements, and emits a single array of the collection when the upstream sequence finishes.","type":"text"}],"type":"topic","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"collect","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Collect","preciseIdentifier":"s:7Afluent14AsyncSequencesO7CollectV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"title":"collect()","role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/collect()"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/delay(for:tolerance:clock:)":{"title":"delay(for:tolerance:clock:)","role":"symbol","abstract":[{"text":"Delays delivery of all output to the downstream receiver by a specified amount of time","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"delay"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"for","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Duration"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"tolerance"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Duration"},{"text":"?, ","kind":"text"},{"text":"clock","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO5DelayV","kind":"typeIdentifier","text":"Delay"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":">"}],"kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/delay(for:tolerance:clock:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}]},"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/delay(for:tolerance:clock:)","type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/first(where:)":{"role":"symbol","title":"first(where:)","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/first(where:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"first"},{"text":"(","kind":"text"},{"text":"where","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"type":"topic","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/first(where:)","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/encode(encoder:)":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/encode(encoder:)","title":"encode(encoder:)","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/encode(encoder:)","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Encodes the output from upstream using a specified encoder."}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"encode"},{"text":"<","kind":"text"},{"text":"E","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"encoder"},{"kind":"text","text":": "},{"text":"E","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO6EncodeV","text":"Encode","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":">"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/flatMap(_:)-94qkr":{"role":"symbol","title":"flatMap(_:)","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/flatMap(_:)-94qkr","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"flatMap"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"SegmentOfResult"},{"kind":"text","text":">(("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"text":"SegmentOfResult","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"AsyncFlatMapSequence","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"SegmentOfResult"},{"kind":"text","text":">"}],"type":"topic","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/flatmap(_:)-94qkr","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/prefix(_:)":{"title":"prefix(_:)","type":"topic","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/prefix(_:)","kind":"symbol","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/prefix(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"prefix","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":") -> ","kind":"text"},{"text":"AsyncPrefixSequence","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/compactMap(_:)-9f8zg":{"role":"symbol","title":"compactMap(_:)","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/compactMap(_:)-9f8zg","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"compactMap"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"ElementOfResult"},{"text":">((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"ElementOfResult"},{"text":"?) -> ","kind":"text"},{"text":"AsyncThrowingCompactMapSequence","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ElementOfResult"},{"text":">","kind":"text"}],"type":"topic","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/compactmap(_:)-9f8zg","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/reduce(into:_:)":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"reduce","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Result","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Result"},{"text":", (","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Result"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/reduce(into:_:)","role":"symbol","title":"reduce(into:_:)","abstract":[],"kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/reduce(into:_:)"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/max(by:)":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"max"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"by"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/max(by:)","role":"symbol","title":"max(by:)","abstract":[],"kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/max(by:)"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/sink(receiveCompletion:receiveOutput:)":{"abstract":[{"type":"text","text":"Executes the current async sequence and returns an AnyCancellable token to cancel the subscription."}],"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/sink(receivecompletion:receiveoutput:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"sink"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"receiveCompletion"},{"text":": ((","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Completion","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO10CompletionO"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"text":">) ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":")?, ","kind":"text"},{"text":"receiveOutput","kind":"externalParam"},{"kind":"text","text":": (("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AnyCancellableC","text":"AnyCancellable"}],"type":"topic","title":"sink(receiveCompletion:receiveOutput:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/sink(receiveCompletion:receiveOutput:)","conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"kind":"symbol","role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/min()":{"type":"topic","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"min","kind":"identifier"},{"kind":"text","text":"() "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/min()","abstract":[],"conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/min()","title":"min()"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/decode(type:decoder:)":{"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/decode(type:decoder:)","kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/decode(type:decoder:)","abstract":[{"type":"text","text":"Decodes the output from the upstream using a specified decoder."}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decode","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"D","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"type"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type, "},{"text":"decoder","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"kind":"text","text":"."},{"text":"Decode","preciseIdentifier":"s:7Afluent14AsyncSequencesO6DecodeV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"D"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"decode(type:decoder:)","type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences","type":"topic","title":"AsyncSequences","role":"symbol","abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"AsyncSequences","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/retry(_:_:)":{"abstract":[{"type":"text","text":"Retries the upstream "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" up to a specified number of times while applying a transformation on error."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/retry(_:_:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"retry","kind":"identifier"},{"text":"<","kind":"text"},{"text":"D","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":", (","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO21RetryAfterFlatMappingC","text":"RetryAfterFlatMapping"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"D","kind":"typeIdentifier"},{"kind":"text","text":">"}],"title":"retry(_:_:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}]},"role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/retry(_:_:)","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/dropFirst(_:)":{"abstract":[],"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/dropfirst(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"dropFirst"},{"kind":"text","text":"("},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"AsyncDropFirstSequence","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"type":"topic","title":"dropFirst(_:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/dropFirst(_:)","kind":"symbol","role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/catch(_:_:)":{"kind":"symbol","abstract":[{"type":"text","text":"Catches a specific type of error emitted by the upstream "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" and handles them using the provided closure."}],"role":"symbol","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/catch(_:_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"`catch`"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"D"},{"kind":"text","text":", "},{"text":"E","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Catch","preciseIdentifier":"s:7Afluent14AsyncSequencesO5CatchV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"D"},{"text":">","kind":"text"}],"conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/catch(_:_:)","title":"catch(_:_:)"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/mapError(_:)":{"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/maperror(_:)","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"mapError","kind":"identifier"},{"text":"((","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"text":"MapError","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO8MapErrorV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"mapError(_:)","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/mapError(_:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}]},"abstract":[{"type":"text","text":"Transforms the error produced by the "},{"code":"AsyncSequence","type":"codeVoice"},{"text":".","type":"text"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/flatMap(_:)-44j4j":{"type":"topic","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/flatmap(_:)-44j4j","role":"symbol","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/flatMap(_:)-44j4j","title":"flatMap(_:)","abstract":[],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"flatMap","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"SegmentOfResult"},{"kind":"text","text":">(("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"SegmentOfResult","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV","text":"AsyncThrowingFlatMapSequence","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"SegmentOfResult"},{"kind":"text","text":">"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/min(by:)":{"abstract":[],"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/min(by:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"min"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"by"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"type":"topic","title":"min(by:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/min(by:)","kind":"symbol","role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/filter(_:)":{"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/filter(_:)","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/filter(_:)","abstract":[],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"filter","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") -> "},{"text":"AsyncFilterSequence","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"title":"filter(_:)","type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/handleEvents(receiveMakeIterator:receiveNext:receiveOutput:receiveError:receiveComplete:receiveCancel:)":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}]},"role":"symbol","title":"handleEvents(receiveMakeIterator:receiveNext:receiveOutput:receiveError:receiveComplete:receiveCancel:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"handleEvents"},{"kind":"text","text":"("},{"text":"receiveMakeIterator","kind":"externalParam"},{"text":": (() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":")?, ","kind":"text"},{"text":"receiveNext","kind":"externalParam"},{"kind":"text","text":": (() "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")?, ","kind":"text"},{"text":"receiveOutput","kind":"externalParam"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")?, ","kind":"text"},{"kind":"externalParam","text":"receiveError"},{"text":": ((","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")?, ","kind":"text"},{"text":"receiveComplete","kind":"externalParam"},{"text":": (() ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?, "},{"kind":"externalParam","text":"receiveCancel"},{"kind":"text","text":": (() "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":")?) -> "},{"text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"HandleEvents","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"abstract":[{"text":"Adds side-effects to the receiving events of the upstream ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":"."}],"type":"topic","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/handleEvents(receiveMakeIterator:receiveNext:receiveOutput:receiveError:receiveComplete:receiveCancel:)","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/handleevents(receivemakeiterator:receivenext:receiveoutput:receiveerror:receivecomplete:receivecancel:)"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/max()":{"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/max()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"max","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/max()","type":"topic","role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"title":"max()","kind":"symbol","abstract":[]},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/map(_:)-ghp5":{"role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/map(_:)-ghp5","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/map(_:)-ghp5","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"map"},{"text":"<","kind":"text"},{"text":"Transformed","kind":"genericParameter"},{"kind":"text","text":">(("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Transformed","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV","kind":"typeIdentifier","text":"AsyncMapSequence"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Transformed","kind":"typeIdentifier"},{"kind":"text","text":">"}],"title":"map(_:)","kind":"symbol","abstract":[]},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/breakpoint(receiveOutput:receiveError:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"breakpoint"},{"kind":"text","text":"("},{"text":"receiveOutput","kind":"externalParam"},{"text":": ((","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":")?, "},{"kind":"externalParam","text":"receiveError"},{"text":": ((","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":")?) -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier","text":"AsyncSequences"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV","text":"HandleEvents","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","abstract":[{"text":"Introduces a breakpoint into the async sequence.","type":"text"}],"title":"breakpoint(receiveOutput:receiveError:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/breakpoint(receiveOutput:receiveError:)","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"type":"topic","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/breakpoint(receiveoutput:receiveerror:)"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/reduce(_:_:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"reduce","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Result"},{"kind":"text","text":">("},{"text":"Result","kind":"typeIdentifier"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Result"}],"kind":"symbol","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/reduce(_:_:)","title":"reduce(_:_:)","type":"topic","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/reduce(_:_:)"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/breakpointOnError()":{"kind":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/breakpointOnError()","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/breakpointonerror()","title":"breakpointOnError()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"breakpointOnError"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV","text":"HandleEvents","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"role":"symbol","abstract":[{"text":"Introduces a breakpoint into the async sequence when an error occurs.","type":"text"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/retry(_:on:_:)":{"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"role":"symbol","title":"retry(_:on:_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"retry"},{"text":"<","kind":"text"},{"text":"D","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"E"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":", "},{"kind":"externalParam","text":"on"},{"kind":"text","text":": "},{"text":"E","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"RetryOnAfterFlatMapping","preciseIdentifier":"s:7Afluent14AsyncSequencesO23RetryOnAfterFlatMappingC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"E"},{"text":", ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"Retries the upstream "},{"code":"AsynchronousUnitOfWork","type":"codeVoice"},{"type":"text","text":" up to a specified number of times only when a specific error occurs, while applying a transformation on error."}],"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/retry(_:on:_:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/retry(_:on:_:)","type":"topic","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/retry(_:)":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" and "},{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol","title":"retry(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"retry","kind":"identifier"},{"kind":"text","text":"("},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":") -> ","kind":"text"},{"text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Retry","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO5RetryC"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"Retries the upstream "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" up to a specified number of times."}],"type":"topic","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/retry(_:)","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/retry(_:)"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/assertNoFailure()":{"conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"abstract":[{"type":"text","text":"Raises a fatal error when its upstream sequence fails, and otherwise republishes all received input."}],"title":"assertNoFailure()","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/assertNoFailure()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"assertNoFailure","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"AssertNoFailure","preciseIdentifier":"s:7Afluent14AsyncSequencesO15AssertNoFailureV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/assertnofailure()"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/mapError(_:_:)":{"title":"mapError(_:_:)","role":"symbol","abstract":[{"type":"text","text":"Transforms the error produced by the "},{"type":"codeVoice","code":"AsyncSequence"},{"text":".","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"mapError"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"E"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"E"},{"text":", (","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO8MapErrorV","text":"MapError"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/maperror(_:_:)","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/mapError(_:_:)","type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/dematerialize()":{"kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/dematerialize()","abstract":[{"type":"text","text":"Transforms a sequence of "},{"type":"codeVoice","code":"Event"},{"text":" values back into their original form in an ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"text":".","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dematerialize","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"kind":"text","text":"."},{"text":"Dematerialize","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO13DematerializeV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">","kind":"text"}],"title":"dematerialize()","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"type":"topic","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/dematerialize()"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/delay(for:tolerance:)":{"abstract":[{"type":"text","text":"Delays delivery of all output to the downstream receiver by a specified amount of time"}],"kind":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/delay(for:tolerance:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"delay"},{"text":"(","kind":"text"},{"text":"for","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s8DurationV","kind":"typeIdentifier","text":"Duration"},{"text":", ","kind":"text"},{"text":"tolerance","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Duration","kind":"typeIdentifier","preciseIdentifier":"s:s8DurationV"},{"text":") -> ","kind":"text"},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"text":"Delay","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO5DelayV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"SuspendingClock","preciseIdentifier":"s:12_Concurrency15SuspendingClockV"},{"kind":"text","text":">"}],"title":"delay(for:tolerance:)","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/delay(for:tolerance:)"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/materialize()":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}]},"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/materialize()","type":"topic","kind":"symbol","title":"materialize()","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/materialize()","abstract":[{"text":"Transforms the elements, completion, and errors of the current ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" into "},{"type":"codeVoice","code":"Event"},{"type":"text","text":" values."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"materialize"},{"text":"() -> ","kind":"text"},{"text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Materialize","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO11MaterializeV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/catch(_:)":{"role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/catch(_:)","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/catch(_:)","conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`catch`"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"D"},{"text":">((","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"D"},{"text":") -> ","kind":"text"},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO5CatchV","text":"Catch"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"kind":"text","text":">"}],"title":"catch(_:)","kind":"symbol","abstract":[{"type":"text","text":"Catches any errors emitted by the upstream "},{"code":"AsyncSequence","type":"codeVoice"},{"text":" and handles them using the provided closure.","type":"text"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/characters":{"abstract":[],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"characters","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation22AsyncCharacterSequenceV","text":"AsyncCharacterSequence"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/characters","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"UInt8"},{"type":"text","text":"."}]},"kind":"symbol","title":"characters","type":"topic","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/characters","role":"symbol"}}}