{"abstract":[{"text":"Collects all received elements, and emits a single array of the collection when the upstream sequence finishes.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"collect"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"text":"Collect","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Collect","preciseIdentifier":"s:7Afluent14AsyncSequencesO7CollectV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}]},{"content":[{"level":3,"anchor":"Discussion","type":"heading","text":"Discussion:"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"type":"codeVoice","code":"collect()"},{"type":"text","text":" to gather elements into an array that the operator emits after the upstream sequence finishes."},{"type":"text","text":" "},{"type":"text","text":"If the upstream sequence fails with an error, this sequence forwards the error to the downstream receiver instead of sending its output."}]},{"name":"Important","type":"aside","style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Be cautious when using "},{"code":"collect","type":"codeVoice"},{"text":" on sequences that can emit a large number of elements or do not complete, as it can lead to high memory usage or even memory exhaustion.","type":"text"}]}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/AsyncSequence-Implementations"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","metadata":{"role":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"collect"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Collect","preciseIdentifier":"s:7Afluent14AsyncSequencesO7CollectV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"symbolKind":"method","remoteSource":{"fileName":"CollectSequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/CollectSequence.swift#L44"},"roleHeading":"Instance Method","externalID":"s:Sci7Afluents8SendableRzrlE7collectAA14AsyncSequencesO7CollectVy_xGyF::SYNTHESIZED::s:7Afluent14AsyncSequencesO15AssertNoFailureV","modules":[{"relatedModules":["_Concurrency"],"name":"Afluent"}],"title":"collect()","extendedModule":"_Concurrency"},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asyncsequences\/assertnofailure\/collect()"]}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/collect()","interfaceLanguage":"swift"},"references":{"doc://Afluent/documentation/Afluent/AsyncSequences":{"type":"topic","url":"\/documentation\/afluent\/asyncsequences","abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"title":"AsyncSequences","kind":"symbol","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncSequences"}],"navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences"},"doc://Afluent/documentation/Afluent/AsyncSequences/Collect":{"type":"topic","url":"\/documentation\/afluent\/asyncsequences\/collect","abstract":[],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Collect"}],"navigatorTitle":[{"kind":"identifier","text":"Collect"}],"kind":"symbol","title":"AsyncSequences.Collect","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Collect"},"doc://Afluent/documentation/Afluent":{"abstract":[],"role":"collection","identifier":"doc:\/\/Afluent\/documentation\/Afluent","title":"Afluent","kind":"symbol","type":"topic","url":"\/documentation\/afluent"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/AsyncSequence-Implementations":{"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/AsyncSequence-Implementations","abstract":[],"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/asyncsequence-implementations","role":"collectionGroup","kind":"article","title":"AsyncSequence Implementations"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/collect()":{"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/collect()","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"collect","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO7CollectV","text":"Collect","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}]},"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/collect()","abstract":[{"text":"Collects all received elements, and emits a single array of the collection when the upstream sequence finishes.","type":"text"}],"title":"collect()","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure":{"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure","type":"topic","abstract":[],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AssertNoFailure"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure","title":"AsyncSequences.AssertNoFailure","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AssertNoFailure"}]}}}