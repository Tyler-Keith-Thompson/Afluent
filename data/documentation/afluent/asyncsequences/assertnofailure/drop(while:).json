{"abstract":[{"type":"text","text":"Inherited from "},{"code":"AsyncSequence.drop(while:)","type":"codeVoice"},{"text":".","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"@preconcurrency","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"drop","kind":"identifier"},{"text":"(","kind":"text"},{"text":"while","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"predicate","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sci7ElementQa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV","text":"AsyncDropWhileSequence","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}]}]}],"metadata":{"platforms":[{"introducedAt":"13.0","name":"iOS","deprecated":false,"beta":false,"unavailable":false},{"beta":false,"name":"macOS","introducedAt":"10.15","deprecated":false,"unavailable":false},{"name":"tvOS","deprecated":false,"unavailable":false,"beta":false,"introducedAt":"13.0"},{"deprecated":false,"introducedAt":"6.0","unavailable":false,"name":"watchOS","beta":false}],"externalID":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF::SYNTHESIZED::s:7Afluent14AsyncSequencesO15AssertNoFailureV","modules":[{"name":"Afluent","relatedModules":["_Concurrency"]}],"title":"drop(while:)","role":"symbol","roleHeading":"Instance Method","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"drop"},{"kind":"text","text":"("},{"text":"while","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sci7ElementQa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV","text":"AsyncDropWhileSequence"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"extendedModule":"_Concurrency"},"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/AsyncSequence-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asyncsequences\/assertnofailure\/drop(while:)"]}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/drop(while:)","interfaceLanguage":"swift"},"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/AsyncSequence-Implementations":{"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/AsyncSequence-Implementations","kind":"article","abstract":[],"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/asyncsequence-implementations","title":"AsyncSequence Implementations","role":"collectionGroup"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/drop(while:)":{"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/drop(while:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/drop(while:)","role":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"drop","kind":"identifier"},{"text":"(","kind":"text"},{"text":"while","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"text":"AsyncDropWhileSequence","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"title":"drop(while:)","type":"topic","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","title":"AsyncSequences","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncSequences","kind":"identifier"}],"role":"symbol","kind":"symbol","navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}],"abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"url":"\/documentation\/afluent\/asyncsequences"},"doc://Afluent/documentation/Afluent":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol","role":"collection","url":"\/documentation\/afluent","abstract":[],"type":"topic","title":"Afluent"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure":{"navigatorTitle":[{"kind":"identifier","text":"AssertNoFailure"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AssertNoFailure","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure","kind":"symbol","abstract":[],"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure","title":"AsyncSequences.AssertNoFailure","role":"symbol"}}}