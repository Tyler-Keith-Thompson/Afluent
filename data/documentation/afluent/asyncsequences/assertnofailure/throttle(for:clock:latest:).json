{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asyncsequences\/assertnofailure\/throttle(for:clock:latest:)"]}],"sections":[],"abstract":[{"type":"text","text":"Emits either the first or latest element received during a specified amount of time."}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throttle","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"for"},{"text":" ","kind":"text"},{"text":"interval","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa","text":"Duration"},{"kind":"text","text":", "},{"text":"clock","kind":"externalParam"},{"kind":"text","text":": "},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"latest","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences"},{"text":".","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Throttle","preciseIdentifier":"s:7Afluent14AsyncSequencesO8ThrottleV","kind":"typeIdentifier","text":"Throttle"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"C"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"C"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:12_Concurrency5ClockP","text":"Clock","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The interval of time in which to observe and emit either the first or latest element.","type":"text"}]}],"name":"interval"},{"name":"latest","content":[{"type":"paragraph","inlineContent":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"true"},{"type":"text","text":", emits the latest element in the time interval.  If "},{"type":"codeVoice","code":"false"},{"text":", emits the first element in the time interval.","type":"text"}]}]}],"kind":"parameters"},{"content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The first element in upstream will always be returned immediately.  Once a second element is received, then the clock will begin for the given time interval and return the first or latest element once completed."}]}],"type":"aside","style":"note"}],"kind":"content"}],"metadata":{"title":"throttle(for:clock:latest:)","role":"symbol","extendedModule":"_Concurrency","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"throttle","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"for","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"C"},{"text":".","kind":"text"},{"text":"Duration","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa"},{"kind":"text","text":", "},{"text":"clock","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"latest","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Throttle","preciseIdentifier":"s:7Afluent14AsyncSequencesO8ThrottleV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":">"}],"remoteSource":{"fileName":"ThrottleSequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/ThrottleSequence.swift#L112"},"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}]},"modules":[{"relatedModules":["_Concurrency"],"name":"Afluent"}],"platforms":[{"introducedAt":"16.0","unavailable":false,"deprecated":false,"name":"iOS","beta":false},{"name":"macOS","unavailable":false,"deprecated":false,"beta":false,"introducedAt":"13.0"},{"name":"tvOS","introducedAt":"16.0","deprecated":false,"beta":false,"unavailable":false},{"introducedAt":"9.0","name":"watchOS","deprecated":false,"beta":false,"unavailable":false},{"beta":false,"deprecated":false,"unavailable":false,"introducedAt":"1.0","name":"visionOS"}],"externalID":"s:Sci7Afluents8SendableRzsAB7ElementRpzrlE8throttle3for5clock6latestAA14AsyncSequencesO8ThrottleVy_xqd__G8DurationQyd___qd__Sbt12_Concurrency5ClockRd__lF::SYNTHESIZED::s:7Afluent14AsyncSequencesO15AssertNoFailureV","roleHeading":"Instance Method","symbolKind":"method"},"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/AsyncSequence-Implementations"]]},"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/throttle(for:clock:latest:)","interfaceLanguage":"swift"},"references":{"doc://Afluent/documentation/Afluent":{"url":"\/documentation\/afluent","role":"collection","title":"Afluent","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent","abstract":[],"kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}],"title":"AsyncSequences","type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"AsyncSequences","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/afluent\/asyncsequences","abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure":{"role":"symbol","abstract":[],"kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure","type":"topic","navigatorTitle":[{"text":"AssertNoFailure","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AssertNoFailure"}],"title":"AsyncSequences.AssertNoFailure"},"doc://Afluent/documentation/Afluent/AsyncSequences/Throttle":{"type":"topic","url":"\/documentation\/afluent\/asyncsequences\/throttle","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Throttle","kind":"symbol","role":"symbol","title":"AsyncSequences.Throttle","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Throttle","kind":"identifier"}],"abstract":[],"navigatorTitle":[{"kind":"identifier","text":"Throttle"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/AsyncSequence-Implementations":{"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/asyncsequence-implementations","abstract":[],"type":"topic","kind":"article","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/AsyncSequence-Implementations","title":"AsyncSequence Implementations","role":"collectionGroup"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure/throttle(for:clock:latest:)":{"kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"throttle"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"C"},{"text":">(","kind":"text"},{"text":"for","kind":"externalParam"},{"kind":"text","text":": "},{"text":"C","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Duration","preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa"},{"text":", ","kind":"text"},{"text":"clock","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"C"},{"text":", ","kind":"text"},{"text":"latest","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") -> ","kind":"text"},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Throttle","preciseIdentifier":"s:7Afluent14AsyncSequencesO8ThrottleV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":">"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"abstract":[{"text":"Emits either the first or latest element received during a specified amount of time.","type":"text"}],"title":"throttle(for:clock:latest:)","type":"topic","url":"\/documentation\/afluent\/asyncsequences\/assertnofailure\/throttle(for:clock:latest:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure\/throttle(for:clock:latest:)"}}}