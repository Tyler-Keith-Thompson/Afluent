{"variants":[{"paths":["\/documentation\/afluent\/asyncsequences\/catch\/breakpointonerror()"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"metadata":{"role":"symbol","remoteSource":{"fileName":"BreakpointSequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/BreakpointSequence.swift#L43"},"externalID":"s:Sci7Afluents8SendableRzrlE17breakpointOnErrorAA14AsyncSequencesO12HandleEventsVy_xGyF::SYNTHESIZED::s:7Afluent14AsyncSequencesO5CatchV","title":"breakpointOnError()","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"breakpointOnError","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV","kind":"typeIdentifier","text":"HandleEvents"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"roleHeading":"Instance Method","symbolKind":"method","modules":[{"name":"Afluent","relatedModules":["_Concurrency"]}],"extendedModule":"_Concurrency"},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Catch","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Catch\/AsyncSequence-Implementations"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Catch\/breakpointOnError()"},"abstract":[{"text":"Introduces a breakpoint into the async sequence when an error occurs.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"breakpointOnError","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"text":"HandleEvents","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"level":2,"anchor":"return-value","text":"Return Value","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"An ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"text":" with the breakpoint-on-error condition applied.","type":"text"}]}]},{"content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This function triggers a "},{"code":"SIGTRAP","type":"codeVoice"},{"text":" signal, pausing execution in a debugger, whenever the async sequence produces an error.","type":"text"}]}],"kind":"content"}],"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/Catch/AsyncSequence-Implementations":{"url":"\/documentation\/afluent\/asyncsequences\/catch\/asyncsequence-implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Catch\/AsyncSequence-Implementations","kind":"article","type":"topic","abstract":[],"role":"collectionGroup","title":"AsyncSequence Implementations"},"doc://Afluent/documentation/Afluent":{"type":"topic","url":"\/documentation\/afluent","kind":"symbol","role":"collection","title":"Afluent","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent"},"doc://Afluent/documentation/Afluent/AsyncSequences/HandleEvents":{"type":"topic","url":"\/documentation\/afluent\/asyncsequences\/handleevents","kind":"symbol","title":"AsyncSequences.HandleEvents","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"HandleEvents","kind":"identifier"}],"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents","navigatorTitle":[{"kind":"identifier","text":"HandleEvents"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/Catch/breakpointOnError()":{"url":"\/documentation\/afluent\/asyncsequences\/catch\/breakpointonerror()","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"breakpointOnError","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"HandleEvents","preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Catch\/breakpointOnError()","title":"breakpointOnError()","abstract":[{"type":"text","text":"Introduces a breakpoint into the async sequence when an error occurs."}],"role":"symbol","type":"topic","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"doc://Afluent/documentation/Afluent/AsyncSequences/Catch":{"role":"symbol","type":"topic","abstract":[],"title":"AsyncSequences.Catch","kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/catch","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Catch"}],"navigatorTitle":[{"text":"Catch","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Catch"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"role":"symbol","title":"AsyncSequences","abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"type":"topic","url":"\/documentation\/afluent\/asyncsequences","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"AsyncSequences","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences"}}}