{"metadata":{"role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"externalID":"s:Sci7Afluents8SendableRzrlE13dematerializeAA14AsyncSequencesO13DematerializeVy_xqd__GysABRd__AE5EventOy_qd__G7ElementRtzlF::SYNTHESIZED::s:7Afluent14AsyncSequencesO7CollectV","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"dematerialize"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">() -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO13DematerializeV","text":"Dematerialize"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">"}],"modules":[{"name":"Afluent","relatedModules":["_Concurrency"]}],"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/DematerializeSequence.swift#L46","fileName":"DematerializeSequence.swift"},"roleHeading":"Instance Method","extendedModule":"_Concurrency","title":"dematerialize()","symbolKind":"method"},"sections":[],"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Collect\/dematerialize()","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/afluent\/asyncsequences\/collect\/dematerialize()"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Collect","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Collect\/AsyncSequence-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"dematerialize"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">() -> "},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","text":"AsyncSequences"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Dematerialize","preciseIdentifier":"s:7Afluent14AsyncSequencesO13DematerializeV","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Dematerialize"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"T"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP","text":"Sendable"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sci7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","text":"AsyncSequences"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO5EventO","text":"Event","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Event"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"inlineContent":[{"type":"text","text":"An "},{"code":"AsyncSequences.Dematerialize","type":"codeVoice"},{"type":"text","text":" instance that represents the original "},{"code":"AsyncSequence","type":"codeVoice"},{"text":" with its elements and errors.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method is the inverse of "},{"code":"materialize","type":"codeVoice"},{"type":"text","text":". It takes an "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" of "},{"code":"Event","type":"codeVoice"},{"type":"text","text":" values and transforms it back into an "},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" of the original elements, propagating errors as thrown exceptions."}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The sequence must be of type ","type":"text"},{"code":"AsyncSequences.Event<T>","type":"codeVoice"},{"text":". The ","type":"text"},{"code":"dematerialize","type":"codeVoice"},{"type":"text","text":" method will extract the original elements and errors from these events."}]}],"style":"note","name":"Note","type":"aside"},{"content":[{"type":"paragraph","inlineContent":[{"text":"Re-throws any errors that were encapsulated in the ","type":"text"},{"code":"Event.failure","type":"codeVoice"},{"type":"text","text":" cases."}]}],"type":"aside","name":"Throws","style":"note"}]}],"abstract":[{"type":"text","text":"Transforms a sequence of "},{"type":"codeVoice","code":"Event"},{"type":"text","text":" values back into their original form in an "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":"."}],"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/Collect/dematerialize()":{"role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"dematerialize","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">() -> "},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Dematerialize","preciseIdentifier":"s:7Afluent14AsyncSequencesO13DematerializeV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"kind":"symbol","abstract":[{"type":"text","text":"Transforms a sequence of "},{"type":"codeVoice","code":"Event"},{"type":"text","text":" values back into their original form in an "},{"code":"AsyncSequence","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Collect\/dematerialize()","url":"\/documentation\/afluent\/asyncsequences\/collect\/dematerialize()","title":"dematerialize()"},"doc://Afluent/documentation/Afluent/AsyncSequences/Dematerialize":{"url":"\/documentation\/afluent\/asyncsequences\/dematerialize","title":"AsyncSequences.Dematerialize","navigatorTitle":[{"text":"Dematerialize","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Dematerialize","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Dematerialize"}],"kind":"symbol","type":"topic","abstract":[]},"doc://Afluent/documentation/Afluent/AsyncSequences":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","title":"AsyncSequences","url":"\/documentation\/afluent\/asyncsequences","role":"symbol","navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncSequences"}],"type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/Collect":{"abstract":[],"navigatorTitle":[{"kind":"identifier","text":"Collect"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Collect","kind":"identifier"}],"kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/collect","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Collect","title":"AsyncSequences.Collect"},"doc://Afluent/documentation/Afluent/AsyncSequences/Collect/AsyncSequence-Implementations":{"abstract":[],"kind":"article","type":"topic","role":"collectionGroup","url":"\/documentation\/afluent\/asyncsequences\/collect\/asyncsequence-implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Collect\/AsyncSequence-Implementations","title":"AsyncSequence Implementations"},"doc://Afluent/documentation/Afluent/AsyncSequences/Event":{"abstract":[{"type":"text","text":"Represents the different kinds of events that can be emitted by "},{"type":"codeVoice","code":"Materialize"},{"type":"text","text":"."}],"kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Event"}],"navigatorTitle":[{"text":"Event","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Event","type":"topic","role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/event","title":"AsyncSequences.Event"},"doc://Afluent/documentation/Afluent":{"type":"topic","kind":"symbol","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent","role":"collection","title":"Afluent","url":"\/documentation\/afluent"}}}