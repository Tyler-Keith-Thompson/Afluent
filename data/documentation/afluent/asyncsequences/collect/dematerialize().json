{"metadata":{"modules":[{"relatedModules":["_Concurrency"],"name":"Afluent"}],"externalID":"s:Sci7Afluents8SendableRzrlE13dematerializeAA14AsyncSequencesO13DematerializeVy_xqd__GysABRd__AE5EventOy_qd__G7ElementRtzlF::SYNTHESIZED::s:7Afluent14AsyncSequencesO7CollectV","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}]},"symbolKind":"method","remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/DematerializeSequence.swift#L46","fileName":"DematerializeSequence.swift"},"roleHeading":"Instance Method","role":"symbol","title":"dematerialize()","extendedModule":"_Concurrency","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"dematerialize","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">() -> "},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Dematerialize","preciseIdentifier":"s:7Afluent14AsyncSequencesO13DematerializeV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">"}]},"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Collect\/dematerialize()","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Transforms a sequence of "},{"type":"codeVoice","code":"Event"},{"type":"text","text":" values back into their original form in an "},{"type":"codeVoice","code":"AsyncSequence"},{"text":".","type":"text"}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Collect","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Collect\/AsyncSequence-Implementations"]]},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"dematerialize"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">() -> ","kind":"text"},{"text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO13DematerializeV","kind":"typeIdentifier","text":"Dematerialize","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Dematerialize"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP","text":"Sendable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":" == "},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Event","text":"Event","preciseIdentifier":"s:7Afluent14AsyncSequencesO5EventO"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"inlineContent":[{"text":"An ","type":"text"},{"type":"codeVoice","code":"AsyncSequences.Dematerialize"},{"type":"text","text":" instance that represents the original "},{"type":"codeVoice","code":"AsyncSequence"},{"text":" with its elements and errors.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"This method is the inverse of "},{"type":"codeVoice","code":"materialize"},{"text":". It takes an ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" of "},{"type":"codeVoice","code":"Event"},{"text":" values and transforms it back into an ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" of the original elements, propagating errors as thrown exceptions."}],"type":"paragraph"},{"style":"note","name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The sequence must be of type "},{"code":"AsyncSequences.Event<T>","type":"codeVoice"},{"text":". The ","type":"text"},{"code":"dematerialize","type":"codeVoice"},{"type":"text","text":" method will extract the original elements and errors from these events."}]}],"type":"aside"},{"type":"aside","name":"Throws","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Re-throws any errors that were encapsulated in the "},{"type":"codeVoice","code":"Event.failure"},{"type":"text","text":" cases."}]}],"style":"note"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/afluent\/asyncsequences\/collect\/dematerialize()"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Afluent/documentation/Afluent":{"type":"topic","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent","url":"\/documentation\/afluent","abstract":[],"role":"collection","title":"Afluent"},"doc://Afluent/documentation/Afluent/AsyncSequences/Collect":{"type":"topic","title":"AsyncSequences.Collect","url":"\/documentation\/afluent\/asyncsequences\/collect","kind":"symbol","navigatorTitle":[{"text":"Collect","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Collect","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Collect"}],"abstract":[],"role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncSequences"}],"title":"AsyncSequences","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","type":"topic","navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/afluent\/asyncsequences","abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/Collect/AsyncSequence-Implementations":{"type":"topic","title":"AsyncSequence Implementations","url":"\/documentation\/afluent\/asyncsequences\/collect\/asyncsequence-implementations","kind":"article","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Collect\/AsyncSequence-Implementations","abstract":[],"role":"collectionGroup"},"doc://Afluent/documentation/Afluent/AsyncSequences/Collect/dematerialize()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dematerialize","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">() -> ","kind":"text"},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"text":"Dematerialize","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO13DematerializeV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/afluent\/asyncsequences\/collect\/dematerialize()","title":"dematerialize()","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}]},"kind":"symbol","type":"topic","role":"symbol","abstract":[{"text":"Transforms a sequence of ","type":"text"},{"type":"codeVoice","code":"Event"},{"type":"text","text":" values back into their original form in an "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":"."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Collect\/dematerialize()"},"doc://Afluent/documentation/Afluent/AsyncSequences/Dematerialize":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Dematerialize","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences\/dematerialize","navigatorTitle":[{"text":"Dematerialize","kind":"identifier"}],"title":"AsyncSequences.Dematerialize","kind":"symbol","type":"topic","role":"symbol","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Dematerialize"},"doc://Afluent/documentation/Afluent/AsyncSequences/Event":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"Event","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"Represents the different kinds of events that can be emitted by "},{"code":"Materialize","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/afluent\/asyncsequences\/event","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Event","navigatorTitle":[{"kind":"identifier","text":"Event"}],"title":"AsyncSequences.Event","kind":"symbol"}}}