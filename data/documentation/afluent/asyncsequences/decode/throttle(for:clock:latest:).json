{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throttle","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"for","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"interval","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Duration","preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa"},{"kind":"text","text":", "},{"text":"clock","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"C"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"latest"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","text":"AsyncSequences"},{"text":".","kind":"text"},{"text":"Throttle","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Throttle","preciseIdentifier":"s:7Afluent14AsyncSequencesO8ThrottleV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"C"},{"text":" : ","kind":"text"},{"text":"Clock","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency5ClockP"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"interval","content":[{"inlineContent":[{"type":"text","text":"The interval of time in which to observe and emit either the first or latest element."}],"type":"paragraph"}]},{"name":"latest","content":[{"inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"true"},{"text":", emits the latest element in the time interval.  If ","type":"text"},{"type":"codeVoice","code":"false"},{"text":", emits the first element in the time interval.","type":"text"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"style":"note","name":"Note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The first element in upstream will always be returned immediately.  Once a second element is received, then the clock will begin for the given time interval and return the first or latest element once completed."}]}]}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"paths":["\/documentation\/afluent\/asyncsequences\/decode\/throttle(for:clock:latest:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"externalID":"s:Sci7Afluents8SendableRzsAB7ElementRpzrlE8throttle3for5clock6latestAA14AsyncSequencesO8ThrottleVy_xqd__G8DurationQyd___qd__Sbt12_Concurrency5ClockRd__lF::SYNTHESIZED::s:7Afluent14AsyncSequencesO6DecodeV","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"remoteSource":{"fileName":"ThrottleSequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/ThrottleSequence.swift#L114"},"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"throttle","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">("},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":"."},{"text":"Duration","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"clock"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":", "},{"kind":"externalParam","text":"latest"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"text":".","kind":"text"},{"text":"Throttle","preciseIdentifier":"s:7Afluent14AsyncSequencesO8ThrottleV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"C","kind":"typeIdentifier"},{"text":">","kind":"text"}],"modules":[{"relatedModules":["_Concurrency"],"name":"Afluent"}],"title":"throttle(for:clock:latest:)","roleHeading":"Instance Method","symbolKind":"method","role":"symbol","platforms":[{"name":"iOS","introducedAt":"16.0","deprecated":false,"beta":false,"unavailable":false},{"beta":false,"name":"macOS","introducedAt":"13.0","unavailable":false,"deprecated":false},{"unavailable":false,"deprecated":false,"introducedAt":"16.0","beta":false,"name":"tvOS"},{"introducedAt":"9.0","deprecated":false,"unavailable":false,"name":"watchOS","beta":false},{"beta":false,"introducedAt":"1.0","deprecated":false,"name":"visionOS","unavailable":false}],"extendedModule":"_Concurrency"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Decode\/throttle(for:clock:latest:)"},"sections":[],"abstract":[{"type":"text","text":"Emits either the first or latest element received during a specified amount of time."}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Decode","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Decode\/AsyncSequence-Implementations"]]},"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/Throttle":{"url":"\/documentation\/afluent\/asyncsequences\/throttle","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Throttle"}],"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Throttle","kind":"symbol","navigatorTitle":[{"text":"Throttle","kind":"identifier"}],"title":"AsyncSequences.Throttle","role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"url":"\/documentation\/afluent\/asyncsequences","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"AsyncSequences","kind":"identifier"}],"kind":"symbol","title":"AsyncSequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences"},"doc://Afluent/documentation/Afluent":{"type":"topic","abstract":[],"url":"\/documentation\/afluent","role":"collection","kind":"symbol","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent"},"doc://Afluent/documentation/Afluent/AsyncSequences/Decode/throttle(for:clock:latest:)":{"title":"throttle(for:clock:latest:)","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"throttle"},{"kind":"text","text":"<"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"for"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":"."},{"preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa","text":"Duration","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"clock","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"C"},{"text":", ","kind":"text"},{"text":"latest","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO8ThrottleV","text":"Throttle","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Emits either the first or latest element received during a specified amount of time."}],"url":"\/documentation\/afluent\/asyncsequences\/decode\/throttle(for:clock:latest:)","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Decode\/throttle(for:clock:latest:)"},"doc://Afluent/documentation/Afluent/AsyncSequences/Decode":{"type":"topic","role":"symbol","title":"AsyncSequences.Decode","url":"\/documentation\/afluent\/asyncsequences\/decode","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Decode","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Decode"}],"abstract":[],"navigatorTitle":[{"text":"Decode","kind":"identifier"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/Decode/AsyncSequence-Implementations":{"abstract":[],"kind":"article","title":"AsyncSequence Implementations","url":"\/documentation\/afluent\/asyncsequences\/decode\/asyncsequence-implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Decode\/AsyncSequence-Implementations","type":"topic","role":"collectionGroup"}}}