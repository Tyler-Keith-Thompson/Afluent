{"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Deferred\/collect()"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asyncsequences\/deferred\/collect()"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Deferred","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Deferred\/AsyncSequence-Implementations"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"modules":[{"name":"Afluent","relatedModules":["_Concurrency"]}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"collect","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Collect","preciseIdentifier":"s:7Afluent14AsyncSequencesO7CollectV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"extendedModule":"_Concurrency","title":"collect()","roleHeading":"Instance Method","remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/CollectSequence.swift#L44","fileName":"CollectSequence.swift"},"role":"symbol","externalID":"s:Sci7Afluents8SendableRzrlE7collectAA14AsyncSequencesO7CollectVy_xGyF::SYNTHESIZED::s:7Afluent14AsyncSequencesO8DeferredV","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}]},"symbolKind":"method"},"abstract":[{"type":"text","text":"Collects all received elements, and emits a single array of the collection when the upstream sequence finishes."}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"collect"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","text":"AsyncSequences"},{"kind":"text","text":"."},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Collect","kind":"typeIdentifier","text":"Collect","preciseIdentifier":"s:7Afluent14AsyncSequencesO7CollectV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}]}],"kind":"declarations"},{"content":[{"text":"Discussion:","anchor":"Discussion","type":"heading","level":3},{"inlineContent":[{"text":"Use ","type":"text"},{"code":"collect()","type":"codeVoice"},{"type":"text","text":" to gather elements into an array that the operator emits after the upstream sequence finishes."},{"type":"text","text":" "},{"text":"If the upstream sequence fails with an error, this sequence forwards the error to the downstream receiver instead of sending its output.","type":"text"}],"type":"paragraph"},{"style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Be cautious when using "},{"code":"collect","type":"codeVoice"},{"type":"text","text":" on sequences that can emit a large number of elements or do not complete, as it can lead to high memory usage or even memory exhaustion."}]}],"name":"Important","type":"aside"}],"kind":"content"}],"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/Deferred/collect()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"collect","kind":"identifier"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier","text":"AsyncSequences"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO7CollectV","text":"Collect","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Collects all received elements, and emits a single array of the collection when the upstream sequence finishes."}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}]},"type":"topic","kind":"symbol","title":"collect()","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Deferred\/collect()","url":"\/documentation\/afluent\/asyncsequences\/deferred\/collect()"},"doc://Afluent/documentation/Afluent/AsyncSequences/Deferred":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Deferred","type":"topic","title":"AsyncSequences.Deferred","abstract":[{"type":"text","text":"An asynchronous sequence that defers the execution of another asynchronous sequence until iteration."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Deferred"}],"url":"\/documentation\/afluent\/asyncsequences\/deferred","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Deferred","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsyncSequences":{"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}],"title":"AsyncSequences","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncSequences"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","url":"\/documentation\/afluent\/asyncsequences"},"doc://Afluent/documentation/Afluent/AsyncSequences/Deferred/AsyncSequence-Implementations":{"kind":"article","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Deferred\/AsyncSequence-Implementations","type":"topic","role":"collectionGroup","url":"\/documentation\/afluent\/asyncsequences\/deferred\/asyncsequence-implementations","title":"AsyncSequence Implementations","abstract":[]},"doc://Afluent/documentation/Afluent/AsyncSequences/Collect":{"title":"AsyncSequences.Collect","abstract":[],"url":"\/documentation\/afluent\/asyncsequences\/collect","navigatorTitle":[{"text":"Collect","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Collect","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Collect","kind":"identifier"}]},"doc://Afluent/documentation/Afluent":{"url":"\/documentation\/afluent","abstract":[],"type":"topic","title":"Afluent","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent","role":"collection"}}}