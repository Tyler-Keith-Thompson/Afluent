{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asyncsequences\/deferred\/init(upstream:)"]}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Deferred\/init(upstream:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Deferred"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"text":"upstream","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (() -> ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"kind":"text","text":"))"}]}],"kind":"declarations"},{"parameters":[{"name":"upstream","content":[{"inlineContent":[{"text":"A closure that returns an asynchronous sequence that will be used later during iteration.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"metadata":{"title":"init(upstream:)","modules":[{"name":"Afluent"}],"externalID":"s:7Afluent14AsyncSequencesO8DeferredV8upstreamAEy_xGxyYbc_tcfc","role":"symbol","roleHeading":"Initializer","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"upstream","kind":"externalParam"},{"kind":"text","text":": (() -> "},{"kind":"typeIdentifier","text":"Upstream"},{"text":"))","kind":"text"}],"remoteSource":{"fileName":"Deferred.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/Deferred.swift#L43"},"symbolKind":"init"},"kind":"symbol","abstract":[{"type":"text","text":"Constructs an asynchronous sequence defining an closure that returns an asynchronous sequence"},{"type":"text","text":" "},{"text":"that will later be called at the time of iteration.","type":"text"}],"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/Deferred/init(upstream:)":{"title":"init(upstream:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Deferred\/init(upstream:)","url":"\/documentation\/afluent\/asyncsequences\/deferred\/init(upstream:)","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"upstream"},{"kind":"text","text":": (() -> "},{"text":"Upstream","kind":"typeIdentifier"},{"kind":"text","text":"))"}],"kind":"symbol","abstract":[{"text":"Constructs an asynchronous sequence defining an closure that returns an asynchronous sequence","type":"text"},{"type":"text","text":" "},{"type":"text","text":"that will later be called at the time of iteration."}],"type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequences"}],"type":"topic","abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"kind":"symbol","title":"AsyncSequences","role":"symbol","url":"\/documentation\/afluent\/asyncsequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences"},"doc://Afluent/documentation/Afluent":{"url":"\/documentation\/afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol","abstract":[],"title":"Afluent","type":"topic","role":"collection"},"doc://Afluent/documentation/Afluent/AsyncSequences/Deferred":{"title":"AsyncSequences.Deferred","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Deferred","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences\/deferred","kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"An asynchronous sequence that defers the execution of another asynchronous sequence until iteration."}],"navigatorTitle":[{"text":"Deferred","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Deferred"}}}