{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"replaceError","kind":"identifier"},{"kind":"text","text":"("},{"text":"with","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:Sci7ElementQa"},{"kind":"text","text":") -> "},{"text":"AsyncSequences","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO12ReplaceErrorV","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/ReplaceError","kind":"typeIdentifier","text":"ReplaceError"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:Sci7ElementQa"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sci7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"Sendable","preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier"}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The value to emit upon encountering an error."}]}],"name":"value"}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"text":"Return Value","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" that emits the specified value instead of failing when the upstream fails."}]}]}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Deferred\/replaceError(with:)"},"metadata":{"title":"replaceError(with:)","symbolKind":"method","remoteSource":{"fileName":"ReplaceErrorSequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/ReplaceErrorSequence.swift#L47"},"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}]},"externalID":"s:Sci7Afluents8SendableRzrlE12replaceError4withAA14AsyncSequencesO07ReplaceD0Vy_x7ElementQzGAJ_tsAbJRQrlF::SYNTHESIZED::s:7Afluent14AsyncSequencesO8DeferredV","roleHeading":"Instance Method","modules":[{"relatedModules":["_Concurrency"],"name":"Afluent"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"replaceError","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"with"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO12ReplaceErrorV","kind":"typeIdentifier","text":"ReplaceError"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sci7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":">"}],"role":"symbol","extendedModule":"_Concurrency"},"sections":[],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Deferred","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Deferred\/AsyncSequence-Implementations"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"paths":["\/documentation\/afluent\/asyncsequences\/deferred\/replaceerror(with:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Replaces any errors from the upstream ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" with the provided value."}],"references":{"doc://Afluent/documentation/Afluent/AsyncSequences":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"url":"\/documentation\/afluent\/asyncsequences","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"AsyncSequences","kind":"identifier"}],"kind":"symbol","title":"AsyncSequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences"},"doc://Afluent/documentation/Afluent/AsyncSequences/ReplaceError":{"abstract":[],"role":"symbol","title":"AsyncSequences.ReplaceError","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/ReplaceError","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReplaceError"}],"type":"topic","kind":"symbol","navigatorTitle":[{"text":"ReplaceError","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences\/replaceerror"},"doc://Afluent/documentation/Afluent/AsyncSequences/Deferred/replaceError(with:)":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Deferred\/replaceError(with:)","title":"replaceError(with:)","abstract":[{"type":"text","text":"Replaces any errors from the upstream "},{"type":"codeVoice","code":"AsyncSequence"},{"text":" with the provided value.","type":"text"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/afluent\/asyncsequences\/deferred\/replaceerror(with:)","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replaceError"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:Sci7ElementQa"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier","text":"AsyncSequences"},{"text":".","kind":"text"},{"text":"ReplaceError","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO12ReplaceErrorV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa"},{"text":">","kind":"text"}],"role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/Deferred/AsyncSequence-Implementations":{"url":"\/documentation\/afluent\/asyncsequences\/deferred\/asyncsequence-implementations","title":"AsyncSequence Implementations","abstract":[],"kind":"article","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Deferred\/AsyncSequence-Implementations","type":"topic","role":"collectionGroup"},"doc://Afluent/documentation/Afluent/AsyncSequences/Deferred":{"url":"\/documentation\/afluent\/asyncsequences\/deferred","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Deferred","kind":"identifier"}],"title":"AsyncSequences.Deferred","abstract":[{"type":"text","text":"An asynchronous sequence that defers the execution of another asynchronous sequence until iteration."}],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Deferred","type":"topic","role":"symbol","navigatorTitle":[{"text":"Deferred","kind":"identifier"}]},"doc://Afluent/documentation/Afluent":{"type":"topic","abstract":[],"url":"\/documentation\/afluent","role":"collection","kind":"symbol","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent"}}}