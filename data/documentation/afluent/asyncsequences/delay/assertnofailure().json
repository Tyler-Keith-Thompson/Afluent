{"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asyncsequences\/delay\/assertnofailure()"]}],"metadata":{"roleHeading":"Instance Method","externalID":"s:Sci7Afluents8SendableRzrlE15assertNoFailureAA14AsyncSequencesO06AssertdE0Vy_xGyF::SYNTHESIZED::s:7Afluent14AsyncSequencesO5DelayV","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"assertNoFailure"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO15AssertNoFailureV","text":"AssertNoFailure","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"remoteSource":{"fileName":"AssertNoFailureSequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/AssertNoFailureSequence.swift#L38"},"modules":[{"name":"Afluent","relatedModules":["_Concurrency"]}],"title":"assertNoFailure()","symbolKind":"method","extendedModule":"_Concurrency","role":"symbol"},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Delay","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Delay\/AsyncSequence-Implementations"]]},"kind":"symbol","abstract":[{"type":"text","text":"Raises a fatal error when its upstream sequence fails, and otherwise republishes all received input."}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"assertNoFailure","kind":"identifier"},{"text":"() -> ","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO15AssertNoFailureV","text":"AssertNoFailure"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Delay\/assertNoFailure()"},"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/Delay/AsyncSequence-Implementations":{"kind":"article","type":"topic","abstract":[],"title":"AsyncSequence Implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Delay\/AsyncSequence-Implementations","role":"collectionGroup","url":"\/documentation\/afluent\/asyncsequences\/delay\/asyncsequence-implementations"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure":{"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure","type":"topic","abstract":[],"title":"AsyncSequences.AssertNoFailure","navigatorTitle":[{"kind":"identifier","text":"AssertNoFailure"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AssertNoFailure"}],"kind":"symbol","role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/Delay":{"kind":"symbol","type":"topic","abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Delay"}],"title":"AsyncSequences.Delay","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Delay","role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/delay","navigatorTitle":[{"text":"Delay","kind":"identifier"}]},"doc://Afluent/documentation/Afluent":{"kind":"symbol","title":"Afluent","abstract":[],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent","role":"collection","url":"\/documentation\/afluent"},"doc://Afluent/documentation/Afluent/AsyncSequences/Delay/assertNoFailure()":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Delay\/assertNoFailure()","type":"topic","title":"assertNoFailure()","abstract":[{"type":"text","text":"Raises a fatal error when its upstream sequence fails, and otherwise republishes all received input."}],"kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/delay\/assertnofailure()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"assertNoFailure","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO15AssertNoFailureV","text":"AssertNoFailure"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","title":"AsyncSequences","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncSequences"}],"role":"symbol","navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}],"type":"topic","url":"\/documentation\/afluent\/asyncsequences","abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}]}}}