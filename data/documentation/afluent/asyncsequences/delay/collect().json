{"variants":[{"paths":["\/documentation\/afluent\/asyncsequences\/delay\/collect()"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"collect","kind":"identifier"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Collect","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO7CollectV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"externalID":"s:Sci7Afluents8SendableRzrlE7collectAA14AsyncSequencesO7CollectVy_xGyF::SYNTHESIZED::s:7Afluent14AsyncSequencesO5DelayV","remoteSource":{"fileName":"CollectSequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/CollectSequence.swift#L44"},"symbolKind":"method","role":"symbol","title":"collect()","modules":[{"name":"Afluent","relatedModules":["_Concurrency"]}],"roleHeading":"Instance Method","extendedModule":"_Concurrency","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}]}},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Delay","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Delay\/AsyncSequence-Implementations"]]},"abstract":[{"type":"text","text":"Collects all received elements, and emits a single array of the collection when the upstream sequence finishes."}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Delay\/collect()"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"collect","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"AsyncSequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO7CollectV","text":"Collect","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Collect"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","anchor":"Discussion","level":3,"text":"Discussion:"},{"inlineContent":[{"type":"text","text":"Use "},{"code":"collect()","type":"codeVoice"},{"text":" to gather elements into an array that the operator emits after the upstream sequence finishes.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"If the upstream sequence fails with an error, this sequence forwards the error to the downstream receiver instead of sending its output."}],"type":"paragraph"},{"name":"Important","type":"aside","style":"important","content":[{"type":"paragraph","inlineContent":[{"text":"Be cautious when using ","type":"text"},{"type":"codeVoice","code":"collect"},{"type":"text","text":" on sequences that can emit a large number of elements or do not complete, as it can lead to high memory usage or even memory exhaustion."}]}]}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://Afluent/documentation/Afluent":{"type":"topic","kind":"symbol","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent","role":"collection","title":"Afluent","url":"\/documentation\/afluent"},"doc://Afluent/documentation/Afluent/AsyncSequences/Delay/AsyncSequence-Implementations":{"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Delay\/AsyncSequence-Implementations","url":"\/documentation\/afluent\/asyncsequences\/delay\/asyncsequence-implementations","title":"AsyncSequence Implementations","abstract":[],"kind":"article","role":"collectionGroup"},"doc://Afluent/documentation/Afluent/AsyncSequences/Delay/collect()":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"collect"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO7CollectV","text":"Collect"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","type":"topic","abstract":[{"text":"Collects all received elements, and emits a single array of the collection when the upstream sequence finishes.","type":"text"}],"title":"collect()","url":"\/documentation\/afluent\/asyncsequences\/delay\/collect()","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Delay\/collect()","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}]}},"doc://Afluent/documentation/Afluent/AsyncSequences":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","title":"AsyncSequences","url":"\/documentation\/afluent\/asyncsequences","role":"symbol","navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncSequences"}],"type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/Delay":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Delay","kind":"identifier"}],"role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/delay","navigatorTitle":[{"kind":"identifier","text":"Delay"}],"type":"topic","title":"AsyncSequences.Delay","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Delay","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/Collect":{"abstract":[],"navigatorTitle":[{"kind":"identifier","text":"Collect"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Collect","kind":"identifier"}],"kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/collect","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Collect","title":"AsyncSequences.Collect"}}}