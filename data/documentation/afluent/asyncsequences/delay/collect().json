{"abstract":[{"type":"text","text":"Collects all received elements, and emits a single array of the collection when the upstream sequence finishes."}],"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"collect","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Collect","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Collect","preciseIdentifier":"s:7Afluent14AsyncSequencesO7CollectV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"platforms":["macOS"],"languages":["swift"]}]},{"content":[{"level":3,"text":"Discussion:","type":"heading","anchor":"Discussion"},{"inlineContent":[{"type":"text","text":"Use "},{"type":"codeVoice","code":"collect()"},{"text":" to gather elements into an array that the operator emits after the upstream sequence finishes.","type":"text"},{"text":" ","type":"text"},{"text":"If the upstream sequence fails with an error, this sequence forwards the error to the downstream receiver instead of sending its output.","type":"text"}],"type":"paragraph"},{"type":"aside","name":"Important","style":"important","content":[{"type":"paragraph","inlineContent":[{"text":"Be cautious when using ","type":"text"},{"type":"codeVoice","code":"collect"},{"text":" on sequences that can emit a large number of elements or do not complete, as it can lead to high memory usage or even memory exhaustion.","type":"text"}]}]}],"kind":"content"}],"kind":"symbol","sections":[],"metadata":{"role":"symbol","title":"collect()","modules":[{"name":"Afluent","relatedModules":["_Concurrency"]}],"roleHeading":"Instance Method","externalID":"s:Sci7Afluents8SendableRzrlE7collectAA14AsyncSequencesO7CollectVy_xGyF::SYNTHESIZED::s:7Afluent14AsyncSequencesO5DelayV","conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"collect","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO7CollectV","text":"Collect"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/CollectSequence.swift#L44","fileName":"CollectSequence.swift"},"extendedModule":"_Concurrency"},"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Delay\/collect()","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/afluent\/asyncsequences\/delay\/collect()"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Delay","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Delay\/AsyncSequence-Implementations"]]},"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/Delay/AsyncSequence-Implementations":{"title":"AsyncSequence Implementations","abstract":[],"type":"topic","kind":"article","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Delay\/AsyncSequence-Implementations","role":"collectionGroup","url":"\/documentation\/afluent\/asyncsequences\/delay\/asyncsequence-implementations"},"doc://Afluent/documentation/Afluent/AsyncSequences/Delay":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Delay"}],"navigatorTitle":[{"kind":"identifier","text":"Delay"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Delay","title":"AsyncSequences.Delay","url":"\/documentation\/afluent\/asyncsequences\/delay","kind":"symbol","abstract":[]},"doc://Afluent/documentation/Afluent/AsyncSequences/Delay/collect()":{"title":"collect()","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"kind":"symbol","abstract":[{"type":"text","text":"Collects all received elements, and emits a single array of the collection when the upstream sequence finishes."}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Delay\/collect()","role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/delay\/collect()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"collect","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"kind":"text","text":"."},{"text":"Collect","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO7CollectV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/Collect":{"navigatorTitle":[{"kind":"identifier","text":"Collect"}],"abstract":[],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Collect","kind":"identifier"}],"title":"AsyncSequences.Collect","kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/collect","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Collect"},"doc://Afluent/documentation/Afluent":{"type":"topic","url":"\/documentation\/afluent","kind":"symbol","role":"collection","title":"Afluent","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"role":"symbol","title":"AsyncSequences","abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"type":"topic","url":"\/documentation\/afluent\/asyncsequences","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"AsyncSequences","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences"}}}