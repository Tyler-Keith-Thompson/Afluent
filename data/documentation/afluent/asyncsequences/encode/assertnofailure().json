{"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asyncsequences\/encode\/assertnofailure()"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"assertNoFailure","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AsyncSequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO15AssertNoFailureV","text":"AssertNoFailure","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"languages":["swift"]}]}],"abstract":[{"type":"text","text":"Raises a fatal error when its upstream sequence fails, and otherwise republishes all received input."}],"metadata":{"extendedModule":"_Concurrency","role":"symbol","externalID":"s:Sci7Afluents8SendableRzrlE15assertNoFailureAA14AsyncSequencesO06AssertdE0Vy_xGyF::SYNTHESIZED::s:7Afluent14AsyncSequencesO6EncodeV","roleHeading":"Instance Method","remoteSource":{"fileName":"AssertNoFailureSequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/AssertNoFailureSequence.swift#L38"},"modules":[{"relatedModules":["_Concurrency"],"name":"Afluent"}],"title":"assertNoFailure()","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}]},"symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"assertNoFailure","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier","text":"AsyncSequences"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"AssertNoFailure","preciseIdentifier":"s:7Afluent14AsyncSequencesO15AssertNoFailureV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}]},"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Encode\/assertNoFailure()","interfaceLanguage":"swift"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Encode","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Encode\/AsyncSequence-Implementations"]]},"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/Encode":{"abstract":[],"title":"AsyncSequences.Encode","url":"\/documentation\/afluent\/asyncsequences\/encode","navigatorTitle":[{"kind":"identifier","text":"Encode"}],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Encode","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Encode","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsyncSequences":{"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}],"title":"AsyncSequences","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncSequences"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","url":"\/documentation\/afluent\/asyncsequences"},"doc://Afluent/documentation/Afluent":{"url":"\/documentation\/afluent","abstract":[],"type":"topic","title":"Afluent","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent","role":"collection"},"doc://Afluent/documentation/Afluent/AsyncSequences/AssertNoFailure":{"type":"topic","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AssertNoFailure"}],"url":"\/documentation\/afluent\/asyncsequences\/assertnofailure","title":"AsyncSequences.AssertNoFailure","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/AssertNoFailure","navigatorTitle":[{"text":"AssertNoFailure","kind":"identifier"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/Encode/assertNoFailure()":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Encode\/assertNoFailure()","abstract":[{"text":"Raises a fatal error when its upstream sequence fails, and otherwise republishes all received input.","type":"text"}],"url":"\/documentation\/afluent\/asyncsequences\/encode\/assertnofailure()","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"assertNoFailure","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO15AssertNoFailureV","text":"AssertNoFailure"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}]},"title":"assertNoFailure()"},"doc://Afluent/documentation/Afluent/AsyncSequences/Encode/AsyncSequence-Implementations":{"role":"collectionGroup","abstract":[],"type":"topic","kind":"article","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Encode\/AsyncSequence-Implementations","title":"AsyncSequence Implementations","url":"\/documentation\/afluent\/asyncsequences\/encode\/asyncsequence-implementations"}}}