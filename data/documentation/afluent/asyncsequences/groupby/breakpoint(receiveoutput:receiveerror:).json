{"kind":"symbol","metadata":{"role":"symbol","remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/BreakpointSequence.swift#L21","fileName":"BreakpointSequence.swift"},"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"breakpoint"},{"kind":"text","text":"("},{"kind":"externalParam","text":"receiveOutput"},{"kind":"text","text":": (("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":")?, ","kind":"text"},{"text":"receiveError","kind":"externalParam"},{"kind":"text","text":": (("},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":")?) -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier","text":"AsyncSequences"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV","text":"HandleEvents","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"externalID":"s:Sci7Afluents8SendableRzrlE10breakpoint13receiveOutput0D5ErrorAA14AsyncSequencesO12HandleEventsVy_xGSb7ElementQzYaYbKcSg_Sbs0F0_pYaYbKcSgtF::SYNTHESIZED::s:7Afluent14AsyncSequencesO7GroupByV","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"modules":[{"name":"Afluent","relatedModules":["_Concurrency"]}],"roleHeading":"Instance Method","title":"breakpoint(receiveOutput:receiveError:)","symbolKind":"method","extendedModule":"_Concurrency"},"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/GroupBy\/breakpoint(receiveOutput:receiveError:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/GroupBy","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/GroupBy\/AsyncSequence-Implementations"]]},"abstract":[{"type":"text","text":"Introduces a breakpoint into the async sequence."}],"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"breakpoint","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"receiveOutput"},{"kind":"text","text":": (("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":")? = nil, ","kind":"text"},{"text":"receiveError","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":")? = nil) -> "},{"text":"AsyncSequences","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"text":"HandleEvents","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents","preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that takes the successful output of the sequence. If this closure returns "},{"code":"true","type":"codeVoice"},{"text":", a breakpoint is triggered. Default is ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"}]}],"name":"receiveOutput"},{"content":[{"type":"paragraph","inlineContent":[{"text":"A closure that takes any error produced by the sequence. If this closure returns ","type":"text"},{"code":"true","type":"codeVoice"},{"text":", a breakpoint is triggered. Default is ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"}]}],"name":"receiveError"}]},{"content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"An asynchronous unit of work with the breakpoint conditions applied."}]}],"kind":"content"},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"inlineContent":[{"text":"This function allows you to introduce conditional breakpoints based on the output or error of the async sequence.","type":"text"},{"type":"text","text":" "},{"text":"If the provided conditions are met, a ","type":"text"},{"type":"codeVoice","code":"SIGTRAP"},{"type":"text","text":" signal is raised, pausing execution in a debugger."}],"type":"paragraph"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/afluent\/asyncsequences\/groupby\/breakpoint(receiveoutput:receiveerror:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Afluent/documentation/Afluent":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent","type":"topic","url":"\/documentation\/afluent","title":"Afluent","role":"collection","abstract":[],"kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/GroupBy/breakpoint(receiveOutput:receiveError:)":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/GroupBy\/breakpoint(receiveOutput:receiveError:)","title":"breakpoint(receiveOutput:receiveError:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"breakpoint","kind":"identifier"},{"kind":"text","text":"("},{"text":"receiveOutput","kind":"externalParam"},{"text":": ((","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":")?, ","kind":"text"},{"kind":"externalParam","text":"receiveError"},{"text":": ((","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":")?) -> ","kind":"text"},{"kind":"typeIdentifier","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"text":"HandleEvents","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"type":"topic","url":"\/documentation\/afluent\/asyncsequences\/groupby\/breakpoint(receiveoutput:receiveerror:)","abstract":[{"type":"text","text":"Introduces a breakpoint into the async sequence."}],"kind":"symbol","role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}]}},"doc://Afluent/documentation/Afluent/AsyncSequences/GroupBy/AsyncSequence-Implementations":{"type":"topic","abstract":[],"role":"collectionGroup","url":"\/documentation\/afluent\/asyncsequences\/groupby\/asyncsequence-implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/GroupBy\/AsyncSequence-Implementations","kind":"article","title":"AsyncSequence Implementations"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences","type":"topic","title":"AsyncSequences","role":"symbol","abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"AsyncSequences","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/HandleEvents":{"navigatorTitle":[{"text":"HandleEvents","kind":"identifier"}],"abstract":[],"title":"AsyncSequences.HandleEvents","kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/handleevents","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"HandleEvents","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/GroupBy":{"title":"AsyncSequences.GroupBy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/GroupBy","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"GroupBy"}],"url":"\/documentation\/afluent\/asyncsequences\/groupby","abstract":[],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"GroupBy"}],"type":"topic"}}}