{"metadata":{"modules":[{"relatedModules":["_Concurrency"],"name":"Afluent"}],"symbolKind":"method","role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"dematerialize","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO13DematerializeV","text":"Dematerialize","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/DematerializeSequence.swift#L46","fileName":"DematerializeSequence.swift"},"roleHeading":"Instance Method","extendedModule":"_Concurrency","externalID":"s:Sci7Afluents8SendableRzrlE13dematerializeAA14AsyncSequencesO13DematerializeVy_xqd__GysABRd__AE5EventOy_qd__G7ElementRtzlF::SYNTHESIZED::s:7Afluent14AsyncSequencesO7GroupByV","title":"dematerialize()"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dematerialize","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">() -> ","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO13DematerializeV","kind":"typeIdentifier","text":"Dematerialize","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Dematerialize"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"T"},{"text":" : ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences"},{"text":".","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Event","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO5EventO","text":"Event"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">"}]}]},{"kind":"content","content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"inlineContent":[{"text":"An ","type":"text"},{"type":"codeVoice","code":"AsyncSequences.Dematerialize"},{"type":"text","text":" instance that represents the original "},{"code":"AsyncSequence","type":"codeVoice"},{"text":" with its elements and errors.","type":"text"}],"type":"paragraph"}]},{"content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"This method is the inverse of ","type":"text"},{"type":"codeVoice","code":"materialize"},{"type":"text","text":". It takes an "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" of "},{"type":"codeVoice","code":"Event"},{"type":"text","text":" values and transforms it back into an "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" of the original elements, propagating errors as thrown exceptions."}],"type":"paragraph"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The sequence must be of type "},{"code":"AsyncSequences.Event<T>","type":"codeVoice"},{"type":"text","text":". The "},{"type":"codeVoice","code":"dematerialize"},{"type":"text","text":" method will extract the original elements and errors from these events."}]}],"style":"note","type":"aside","name":"Note"},{"style":"note","name":"Throws","content":[{"type":"paragraph","inlineContent":[{"text":"Re-throws any errors that were encapsulated in the ","type":"text"},{"code":"Event.failure","type":"codeVoice"},{"type":"text","text":" cases."}]}],"type":"aside"}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/GroupBy\/dematerialize()"},"sections":[],"kind":"symbol","abstract":[{"type":"text","text":"Transforms a sequence of "},{"type":"codeVoice","code":"Event"},{"type":"text","text":" values back into their original form in an "},{"type":"codeVoice","code":"AsyncSequence"},{"text":".","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asyncsequences\/groupby\/dematerialize()"]}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/GroupBy","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/GroupBy\/AsyncSequence-Implementations"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/GroupBy":{"type":"topic","navigatorTitle":[{"text":"GroupBy","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences\/groupby","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/GroupBy","role":"symbol","kind":"symbol","title":"AsyncSequences.GroupBy","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"GroupBy","kind":"identifier"}],"abstract":[]},"doc://Afluent/documentation/Afluent/AsyncSequences/Event":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"Event","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"Represents the different kinds of events that can be emitted by "},{"code":"Materialize","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/afluent\/asyncsequences\/event","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Event","navigatorTitle":[{"kind":"identifier","text":"Event"}],"title":"AsyncSequences.Event","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncSequences"}],"title":"AsyncSequences","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","type":"topic","navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/afluent\/asyncsequences","abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}]},"doc://Afluent/documentation/Afluent":{"type":"topic","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent","url":"\/documentation\/afluent","abstract":[],"role":"collection","title":"Afluent"},"doc://Afluent/documentation/Afluent/AsyncSequences/GroupBy/dematerialize()":{"abstract":[{"type":"text","text":"Transforms a sequence of "},{"code":"Event","type":"codeVoice"},{"text":" values back into their original form in an ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"text":".","type":"text"}],"url":"\/documentation\/afluent\/asyncsequences\/groupby\/dematerialize()","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/GroupBy\/dematerialize()","role":"symbol","title":"dematerialize()","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"dematerialize"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">() -> ","kind":"text"},{"text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Dematerialize","preciseIdentifier":"s:7Afluent14AsyncSequencesO13DematerializeV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">"}],"type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/GroupBy/AsyncSequence-Implementations":{"type":"topic","url":"\/documentation\/afluent\/asyncsequences\/groupby\/asyncsequence-implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/GroupBy\/AsyncSequence-Implementations","role":"collectionGroup","kind":"article","title":"AsyncSequence Implementations","abstract":[]},"doc://Afluent/documentation/Afluent/AsyncSequences/Dematerialize":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Dematerialize","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences\/dematerialize","navigatorTitle":[{"text":"Dematerialize","kind":"identifier"}],"title":"AsyncSequences.Dematerialize","kind":"symbol","type":"topic","role":"symbol","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Dematerialize"}}}