{"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences"]]},"abstract":[{"text":"An ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"text":" that emits a single specified element and then completes.","type":"text"}],"relationshipsSections":[{"type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/Afluent\/s8SendableP","doc:\/\/Afluent\/Sci"],"title":"Conforms To"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Just","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Element"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"text":" : ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"value","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The single element that this sequence will emit."}]}]}]},{"content":[{"anchor":"overview","text":"Overview","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Just"},{"type":"text","text":" is a simple "},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" that emits only one element and then finishes. Itâ€™s useful for creating sequences with a single, known value, often for testing or combining with other asynchronous sequences."}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/afluent\/asyncsequences\/just"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/AsyncIterator"],"title":"Structures"},{"title":"Initializers","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/init(_:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/makeAsyncIterator()"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/AsyncSequence-Implementations","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/AsyncSequence-Implementations"]}],"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just","interfaceLanguage":"swift"},"metadata":{"extendedModule":"Afluent","title":"AsyncSequences.Just","roleHeading":"Structure","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Just"}],"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/JustSequence.swift#L16","fileName":"JustSequence.swift"},"navigatorTitle":[{"text":"Just","kind":"identifier"}],"modules":[{"name":"Afluent"}],"symbolKind":"struct","role":"symbol","externalID":"s:7Afluent14AsyncSequencesO4JustV"},"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/Just/makeAsyncIterator()":{"url":"\/documentation\/afluent\/asyncsequences\/just\/makeasynciterator()","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/makeAsyncIterator()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"makeAsyncIterator","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO4JustV","text":"Just","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":">."},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO4JustV0B8IteratorV","text":"AsyncIterator","kind":"typeIdentifier"}],"role":"symbol","abstract":[],"title":"makeAsyncIterator()","kind":"symbol","type":"topic"},"doc://Afluent/Sci":{"identifier":"doc:\/\/Afluent\/Sci","type":"unresolvable","title":"_Concurrency.AsyncSequence"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"title":"AsyncSequences","navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences","kind":"symbol","abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequences"}],"role":"symbol","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences"},"doc://Afluent/s8SendableP":{"identifier":"doc:\/\/Afluent\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://Afluent/documentation/Afluent/AsyncSequences/Just/AsyncSequence-Implementations":{"role":"collectionGroup","title":"AsyncSequence Implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/AsyncSequence-Implementations","url":"\/documentation\/afluent\/asyncsequences\/just\/asyncsequence-implementations","kind":"article","abstract":[],"type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/Just/init(_:)":{"type":"topic","role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/just\/init(_:)","title":"init(_:)","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/init(_:)","abstract":[{"text":"Creates a ","type":"text"},{"type":"codeVoice","code":"Just"},{"type":"text","text":" sequence with the specified element."}]},"doc://Afluent/documentation/Afluent/AsyncSequences/Just/AsyncIterator":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncIterator"}],"title":"AsyncSequences.Just.AsyncIterator","abstract":[],"kind":"symbol","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/AsyncIterator","url":"\/documentation\/afluent\/asyncsequences\/just\/asynciterator","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncIterator"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/Just":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Just","kind":"identifier"}],"type":"topic","abstract":[{"text":"An ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"text":" that emits a single specified element and then completes.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Just"}],"title":"AsyncSequences.Just","kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/just","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just"},"doc://Afluent/documentation/Afluent":{"abstract":[],"title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","role":"collection","kind":"symbol","url":"\/documentation\/afluent","type":"topic"}}}