{"abstract":[{"type":"text","text":"An "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" that emits a single specified element and then completes."}],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"paths":["\/documentation\/afluent\/asyncsequences\/just"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences"]]},"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/Afluent\/s8SendableP","doc:\/\/Afluent\/Sci"],"kind":"relationships"}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just","interfaceLanguage":"swift"},"topicSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/AsyncIterator"],"generated":true,"anchor":"Structures","title":"Structures"},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/init(_:)"],"generated":true,"title":"Initializers","anchor":"Initializers"},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/makeAsyncIterator()"],"title":"Instance Methods","generated":true,"anchor":"Instance-Methods"},{"title":"Default Implementations","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/AsyncSequence-Implementations","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/AsyncSequence-Implementations"],"generated":true,"anchor":"Default-Implementations"}],"metadata":{"title":"AsyncSequences.Just","externalID":"s:7Afluent14AsyncSequencesO4JustV","symbolKind":"struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Just","kind":"identifier"}],"extendedModule":"Afluent","roleHeading":"Structure","modules":[{"name":"Afluent"}],"navigatorTitle":[{"kind":"identifier","text":"Just"}],"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/JustSequence.swift#L16","fileName":"JustSequence.swift"},"role":"symbol"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Just"},{"text":"<","kind":"text"},{"text":"Element","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"The single element that this sequence will emit.","type":"text"}],"type":"paragraph"}],"name":"value"}]},{"kind":"content","content":[{"level":2,"text":"Overview","anchor":"overview","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Just"},{"text":" is a simple ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" that emits only one element and then finishes. Itâ€™s useful for creating sequences with a single, known value, often for testing or combining with other asynchronous sequences."}]}]}],"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/Just/makeAsyncIterator()":{"type":"topic","title":"makeAsyncIterator()","abstract":[],"kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/just\/makeasynciterator()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"makeAsyncIterator"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Just","preciseIdentifier":"s:7Afluent14AsyncSequencesO4JustV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":">."},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO4JustV0B8IteratorV","kind":"typeIdentifier","text":"AsyncIterator"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/makeAsyncIterator()","role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"url":"\/documentation\/afluent\/asyncsequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","kind":"symbol","role":"symbol","title":"AsyncSequences","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncSequences"}],"abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}],"type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/Just/AsyncIterator":{"kind":"symbol","title":"AsyncSequences.Just.AsyncIterator","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncIterator"}],"url":"\/documentation\/afluent\/asyncsequences\/just\/asynciterator","navigatorTitle":[{"text":"AsyncIterator","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/AsyncIterator","type":"topic","role":"symbol","abstract":[]},"doc://Afluent/s8SendableP":{"identifier":"doc:\/\/Afluent\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://Afluent/Sci":{"identifier":"doc:\/\/Afluent\/Sci","type":"unresolvable","title":"_Concurrency.AsyncSequence"},"doc://Afluent/documentation/Afluent/AsyncSequences/Just":{"abstract":[{"text":"An ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"text":" that emits a single specified element and then completes.","type":"text"}],"navigatorTitle":[{"text":"Just","kind":"identifier"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Just","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just","title":"AsyncSequences.Just","type":"topic","kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/just"},"doc://Afluent/documentation/Afluent/AsyncSequences/Just/AsyncSequence-Implementations":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/AsyncSequence-Implementations","abstract":[],"type":"topic","kind":"article","url":"\/documentation\/afluent\/asyncsequences\/just\/asyncsequence-implementations","title":"AsyncSequence Implementations","role":"collectionGroup"},"doc://Afluent/documentation/Afluent/AsyncSequences/Just/init(_:)":{"abstract":[{"type":"text","text":"Creates a "},{"type":"codeVoice","code":"Just"},{"text":" sequence with the specified element.","type":"text"}],"type":"topic","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"text":")","kind":"text"}],"role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/just\/init(_:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/init(_:)","title":"init(_:)"},"doc://Afluent/documentation/Afluent":{"url":"\/documentation\/afluent","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent","role":"collection","title":"Afluent","abstract":[],"type":"topic"}}}