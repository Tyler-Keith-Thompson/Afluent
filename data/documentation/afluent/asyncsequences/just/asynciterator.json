{"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncIterator"}],"platforms":["macOS"]}],"kind":"declarations"}],"metadata":{"symbolKind":"struct","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncIterator"}],"navigatorTitle":[{"kind":"identifier","text":"AsyncIterator"}],"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/JustSequence.swift#L26","fileName":"JustSequence.swift"},"title":"AsyncSequences.Just.AsyncIterator","role":"symbol","roleHeading":"Structure","externalID":"s:7Afluent14AsyncSequencesO4JustV0B8IteratorV","modules":[{"name":"Afluent"}]},"schemaVersion":{"patch":0,"minor":3,"major":0},"topicSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/AsyncIterator\/next()"],"title":"Instance Methods"}],"sections":[],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/AsyncIterator","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just"]]},"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/Afluent\/ScI"],"kind":"relationships"}],"abstract":[{"type":"text","text":"Inherited from "},{"code":"AsyncSequence.AsyncIterator","type":"codeVoice"},{"text":".","type":"text"}],"variants":[{"paths":["\/documentation\/afluent\/asyncsequences\/just\/asynciterator"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Afluent/ScI":{"identifier":"doc:\/\/Afluent\/ScI","title":"_Concurrency.AsyncIteratorProtocol","type":"unresolvable"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"kind":"symbol","abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"title":"AsyncSequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"url":"\/documentation\/afluent\/asyncsequences","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncSequences","kind":"identifier"}],"type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/Just/AsyncIterator/next()":{"url":"\/documentation\/afluent\/asyncsequences\/just\/asynciterator\/next()","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/AsyncIterator\/next()","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"next"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"?"}],"title":"next()","role":"symbol","abstract":[],"kind":"symbol"},"doc://Afluent/documentation/Afluent":{"title":"Afluent","abstract":[],"type":"topic","url":"\/documentation\/afluent","role":"collection","identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/Just/AsyncIterator":{"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncIterator"}],"navigatorTitle":[{"text":"AsyncIterator","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/AsyncIterator","url":"\/documentation\/afluent\/asyncsequences\/just\/asynciterator","title":"AsyncSequences.Just.AsyncIterator","abstract":[]},"doc://Afluent/documentation/Afluent/AsyncSequences/Just":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just","navigatorTitle":[{"text":"Just","kind":"identifier"}],"title":"AsyncSequences.Just","url":"\/documentation\/afluent\/asyncsequences\/just","abstract":[{"text":"An ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" that emits a single specified element and then completes."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Just","kind":"identifier"}],"kind":"symbol","type":"topic","role":"symbol"}}}