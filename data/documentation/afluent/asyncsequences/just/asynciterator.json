{"sections":[],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/AsyncIterator","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"text":"Inherited from ","type":"text"},{"code":"AsyncSequence.AsyncIterator","type":"codeVoice"},{"text":".","type":"text"}],"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/AsyncIterator\/next()"]}],"variants":[{"paths":["\/documentation\/afluent\/asyncsequences\/just\/asynciterator"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/Afluent\/ScI"],"title":"Conforms To"}],"metadata":{"role":"symbol","symbolKind":"struct","roleHeading":"Structure","navigatorTitle":[{"text":"AsyncIterator","kind":"identifier"}],"externalID":"s:7Afluent14AsyncSequencesO4JustV0B8IteratorV","title":"AsyncSequences.Just.AsyncIterator","modules":[{"name":"Afluent"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncIterator"}],"remoteSource":{"fileName":"JustSequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/JustSequence.swift#L26"}},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncIterator"}],"platforms":["macOS"]}]}],"references":{"doc://Afluent/documentation/Afluent":{"kind":"symbol","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","type":"topic","url":"\/documentation\/afluent","role":"collection","abstract":[]},"doc://Afluent/documentation/Afluent/AsyncSequences":{"abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"title":"AsyncSequences","role":"symbol","navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncSequences","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences","kind":"symbol","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences"},"doc://Afluent/documentation/Afluent/AsyncSequences/Just/AsyncIterator":{"abstract":[],"type":"topic","url":"\/documentation\/afluent\/asyncsequences\/just\/asynciterator","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/AsyncIterator","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncIterator"}],"navigatorTitle":[{"kind":"identifier","text":"AsyncIterator"}],"title":"AsyncSequences.Just.AsyncIterator","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/Just/AsyncIterator/next()":{"type":"topic","title":"next()","kind":"symbol","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"next"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"?"}],"role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/just\/asynciterator\/next()","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/AsyncIterator\/next()"},"doc://Afluent/ScI":{"identifier":"doc:\/\/Afluent\/ScI","type":"unresolvable","title":"_Concurrency.AsyncIteratorProtocol"},"doc://Afluent/documentation/Afluent/AsyncSequences/Just":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Just"}],"url":"\/documentation\/afluent\/asyncsequences\/just","abstract":[{"type":"text","text":"An "},{"type":"codeVoice","code":"AsyncSequence"},{"text":" that emits a single specified element and then completes.","type":"text"}],"kind":"symbol","type":"topic","title":"AsyncSequences.Just","role":"symbol","navigatorTitle":[{"text":"Just","kind":"identifier"}]}}}