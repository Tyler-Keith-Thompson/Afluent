{"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"AsyncIterator","kind":"identifier"}],"languages":["swift"]}],"kind":"declarations"}],"metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncIterator"}],"remoteSource":{"fileName":"JustSequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/JustSequence.swift#L26"},"roleHeading":"Structure","modules":[{"name":"Afluent"}],"symbolKind":"struct","title":"AsyncSequences.Just.AsyncIterator","role":"symbol","externalID":"s:7Afluent14AsyncSequencesO4JustV0B8IteratorV","navigatorTitle":[{"text":"AsyncIterator","kind":"identifier"}]},"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"text":"Inherited from ","type":"text"},{"code":"AsyncSequence.AsyncIterator","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/Afluent\/ScI"],"type":"conformsTo","kind":"relationships"}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just"]]},"sections":[],"variants":[{"paths":["\/documentation\/afluent\/asyncsequences\/just\/asynciterator"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/AsyncIterator","interfaceLanguage":"swift"},"topicSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/AsyncIterator\/next()"],"title":"Instance Methods"}],"references":{"doc://Afluent/ScI":{"title":"_Concurrency.AsyncIteratorProtocol","identifier":"doc:\/\/Afluent\/ScI","type":"unresolvable"},"doc://Afluent/documentation/Afluent":{"abstract":[],"title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","role":"collection","kind":"symbol","url":"\/documentation\/afluent","type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/Just/AsyncIterator":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncIterator"}],"title":"AsyncSequences.Just.AsyncIterator","abstract":[],"kind":"symbol","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/AsyncIterator","url":"\/documentation\/afluent\/asyncsequences\/just\/asynciterator","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncIterator"}]},"doc://Afluent/documentation/Afluent/AsyncSequences":{"title":"AsyncSequences","navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences","kind":"symbol","abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequences"}],"role":"symbol","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences"},"doc://Afluent/documentation/Afluent/AsyncSequences/Just/AsyncIterator/next()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"next"},{"kind":"text","text":"() "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"title":"next()","abstract":[],"kind":"symbol","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/AsyncIterator\/next()","url":"\/documentation\/afluent\/asyncsequences\/just\/asynciterator\/next()","role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/Just":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Just","kind":"identifier"}],"type":"topic","abstract":[{"text":"An ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"text":" that emits a single specified element and then completes.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Just"}],"title":"AsyncSequences.Just","kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/just","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just"}}}