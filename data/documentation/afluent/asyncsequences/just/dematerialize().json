{"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"dematerialize"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">() -> ","kind":"text"},{"text":"AsyncSequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Dematerialize","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Dematerialize","preciseIdentifier":"s:7Afluent14AsyncSequencesO13DematerializeV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":" : ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Event","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Event","preciseIdentifier":"s:7Afluent14AsyncSequencesO5EventO"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">","kind":"text"}],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"type":"codeVoice","code":"AsyncSequences.Dematerialize"},{"text":" instance that represents the original ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"text":" with its elements and errors.","type":"text"}]}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"inlineContent":[{"text":"This method is the inverse of ","type":"text"},{"type":"codeVoice","code":"materialize"},{"type":"text","text":". It takes an "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" of "},{"code":"Event","type":"codeVoice"},{"text":" values and transforms it back into an ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"text":" of the original elements, propagating errors as thrown exceptions.","type":"text"}],"type":"paragraph"},{"name":"Note","type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"The sequence must be of type ","type":"text"},{"code":"AsyncSequences.Event<T>","type":"codeVoice"},{"text":". The ","type":"text"},{"code":"dematerialize","type":"codeVoice"},{"text":" method will extract the original elements and errors from these events.","type":"text"}]}]},{"type":"aside","style":"note","name":"Throws","content":[{"type":"paragraph","inlineContent":[{"text":"Re-throws any errors that were encapsulated in the ","type":"text"},{"code":"Event.failure","type":"codeVoice"},{"text":" cases.","type":"text"}]}]}]}],"variants":[{"paths":["\/documentation\/afluent\/asyncsequences\/just\/dematerialize()"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/AsyncSequence-Implementations"]]},"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/dematerialize()","interfaceLanguage":"swift"},"kind":"symbol","metadata":{"role":"symbol","externalID":"s:Sci7Afluents8SendableRzrlE13dematerializeAA14AsyncSequencesO13DematerializeVy_xqd__GysABRd__AE5EventOy_qd__G7ElementRtzlF::SYNTHESIZED::s:7Afluent14AsyncSequencesO4JustV","symbolKind":"method","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}]},"extendedModule":"_Concurrency","modules":[{"name":"Afluent","relatedModules":["_Concurrency"]}],"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/DematerializeSequence.swift#L48","fileName":"DematerializeSequence.swift"},"title":"dematerialize()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"dematerialize"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">() -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Dematerialize","preciseIdentifier":"s:7Afluent14AsyncSequencesO13DematerializeV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">"}],"roleHeading":"Instance Method"},"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"type":"text","text":"Transforms a sequence of "},{"type":"codeVoice","code":"Event"},{"text":" values back into their original form in an ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":"."}],"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/Event":{"title":"AsyncSequences.Event","url":"\/documentation\/afluent\/asyncsequences\/event","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Event","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"Event","kind":"identifier"}],"role":"symbol","type":"topic","abstract":[{"text":"Represents the different kinds of events that can be emitted by ","type":"text"},{"type":"codeVoice","code":"Materialize"},{"type":"text","text":"."}],"navigatorTitle":[{"text":"Event","kind":"identifier"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent":{"kind":"symbol","title":"Afluent","abstract":[],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent","role":"collection","url":"\/documentation\/afluent"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","title":"AsyncSequences","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncSequences"}],"role":"symbol","navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}],"type":"topic","url":"\/documentation\/afluent\/asyncsequences","abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/Just":{"title":"AsyncSequences.Just","abstract":[{"type":"text","text":"An "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" that emits a single specified element and then completes."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Just"}],"url":"\/documentation\/afluent\/asyncsequences\/just","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Just"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just","role":"symbol","type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/Just/AsyncSequence-Implementations":{"title":"AsyncSequence Implementations","abstract":[],"url":"\/documentation\/afluent\/asyncsequences\/just\/asyncsequence-implementations","kind":"article","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/AsyncSequence-Implementations","role":"collectionGroup","type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/Just/dematerialize()":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Just\/dematerialize()","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"title":"dematerialize()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dematerialize","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">() -> ","kind":"text"},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"text":"Dematerialize","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO13DematerializeV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">","kind":"text"}],"type":"topic","abstract":[{"type":"text","text":"Transforms a sequence of "},{"code":"Event","type":"codeVoice"},{"type":"text","text":" values back into their original form in an "},{"code":"AsyncSequence","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/afluent\/asyncsequences\/just\/dematerialize()","kind":"symbol","role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/Dematerialize":{"type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Dematerialize"}],"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Dematerialize","abstract":[],"title":"AsyncSequences.Dematerialize","url":"\/documentation\/afluent\/asyncsequences\/dematerialize","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Dematerialize"}]}}}