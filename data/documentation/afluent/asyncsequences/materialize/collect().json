{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"collect","kind":"identifier"},{"text":"() -> ","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO7CollectV","text":"Collect","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Collect"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}]}]},{"kind":"content","content":[{"type":"heading","level":3,"anchor":"Discussion","text":"Discussion:"},{"type":"paragraph","inlineContent":[{"text":"Use ","type":"text"},{"type":"codeVoice","code":"collect()"},{"text":" to gather elements into an array that the operator emits after the upstream sequence finishes.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"If the upstream sequence fails with an error, this sequence forwards the error to the downstream receiver instead of sending its output."}]},{"style":"important","content":[{"type":"paragraph","inlineContent":[{"text":"Be cautious when using ","type":"text"},{"type":"codeVoice","code":"collect"},{"text":" on sequences that can emit a large number of elements or do not complete, as it can lead to high memory usage or even memory exhaustion.","type":"text"}]}],"type":"aside","name":"Important"}]}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Materialize\/collect()"},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Materialize","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Materialize\/AsyncSequence-Implementations"]]},"abstract":[{"type":"text","text":"Collects all received elements, and emits a single array of the collection when the upstream sequence finishes."}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"roleHeading":"Instance Method","externalID":"s:Sci7Afluents8SendableRzrlE7collectAA14AsyncSequencesO7CollectVy_xGyF::SYNTHESIZED::s:7Afluent14AsyncSequencesO11MaterializeV","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"collect","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO7CollectV","text":"Collect","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"symbolKind":"method","role":"symbol","extendedModule":"_Concurrency","modules":[{"relatedModules":["_Concurrency"],"name":"Afluent"}],"title":"collect()","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/CollectSequence.swift#L44","fileName":"CollectSequence.swift"}},"variants":[{"paths":["\/documentation\/afluent\/asyncsequences\/materialize\/collect()"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/Materialize/AsyncSequence-Implementations":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Materialize\/AsyncSequence-Implementations","kind":"article","role":"collectionGroup","abstract":[],"title":"AsyncSequence Implementations","type":"topic","url":"\/documentation\/afluent\/asyncsequences\/materialize\/asyncsequence-implementations"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/afluent\/asyncsequences","abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"title":"AsyncSequences","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"AsyncSequences","kind":"identifier"}],"navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}]},"doc://Afluent/documentation/Afluent":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent","role":"collection","kind":"symbol","type":"topic","url":"\/documentation\/afluent","abstract":[],"title":"Afluent"},"doc://Afluent/documentation/Afluent/AsyncSequences/Materialize/collect()":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"collect","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Collect","preciseIdentifier":"s:7Afluent14AsyncSequencesO7CollectV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Materialize\/collect()","kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/materialize\/collect()","type":"topic","abstract":[{"text":"Collects all received elements, and emits a single array of the collection when the upstream sequence finishes.","type":"text"}],"title":"collect()"},"doc://Afluent/documentation/Afluent/AsyncSequences/Materialize":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Materialize"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Materialize","kind":"symbol","role":"symbol","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"Materialize"}],"url":"\/documentation\/afluent\/asyncsequences\/materialize","type":"topic","title":"AsyncSequences.Materialize"},"doc://Afluent/documentation/Afluent/AsyncSequences/Collect":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Collect","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Collect","kind":"symbol","role":"symbol","abstract":[],"navigatorTitle":[{"text":"Collect","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences\/collect","title":"AsyncSequences.Collect","type":"topic"}}}