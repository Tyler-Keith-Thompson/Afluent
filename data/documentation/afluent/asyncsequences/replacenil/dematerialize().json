{"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"dematerialize"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">() -> "},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO13DematerializeV","text":"Dematerialize","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Dematerialize"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier","text":"Sendable"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa","text":"Element"},{"text":" == ","kind":"text"},{"text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO5EventO","text":"Event","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Event"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}]}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"code":"AsyncSequences.Dematerialize","type":"codeVoice"},{"text":" instance that represents the original ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"text":" with its elements and errors.","type":"text"}]}]},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"This method is the inverse of ","type":"text"},{"type":"codeVoice","code":"materialize"},{"text":". It takes an ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" of "},{"type":"codeVoice","code":"Event"},{"type":"text","text":" values and transforms it back into an "},{"code":"AsyncSequence","type":"codeVoice"},{"text":" of the original elements, propagating errors as thrown exceptions.","type":"text"}],"type":"paragraph"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"The sequence must be of type ","type":"text"},{"code":"AsyncSequences.Event<T>","type":"codeVoice"},{"text":". The ","type":"text"},{"type":"codeVoice","code":"dematerialize"},{"type":"text","text":" method will extract the original elements and errors from these events."}]}],"name":"Note","type":"aside"},{"name":"Throws","content":[{"inlineContent":[{"type":"text","text":"Re-throws any errors that were encapsulated in the "},{"type":"codeVoice","code":"Event.failure"},{"type":"text","text":" cases."}],"type":"paragraph"}],"style":"note","type":"aside"}]}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/ReplaceNil\/dematerialize()","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/ReplaceNil","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/ReplaceNil\/AsyncSequence-Implementations"]]},"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"dematerialize"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">() -> "},{"kind":"typeIdentifier","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO13DematerializeV","text":"Dematerialize"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"symbolKind":"method","title":"dematerialize()","remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/DematerializeSequence.swift#L46","fileName":"DematerializeSequence.swift"},"externalID":"s:Sci7Afluents8SendableRzrlE13dematerializeAA14AsyncSequencesO13DematerializeVy_xqd__GysABRd__AE5EventOy_qd__G7ElementRtzlF::SYNTHESIZED::s:7Afluent14AsyncSequencesO10ReplaceNilV","modules":[{"name":"Afluent","relatedModules":["_Concurrency"]}],"roleHeading":"Instance Method","role":"symbol","extendedModule":"_Concurrency"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asyncsequences\/replacenil\/dematerialize()"]}],"abstract":[{"type":"text","text":"Transforms a sequence of "},{"type":"codeVoice","code":"Event"},{"type":"text","text":" values back into their original form in an "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":"."}],"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/ReplaceNil/AsyncSequence-Implementations":{"type":"topic","abstract":[],"url":"\/documentation\/afluent\/asyncsequences\/replacenil\/asyncsequence-implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/ReplaceNil\/AsyncSequence-Implementations","kind":"article","title":"AsyncSequence Implementations","role":"collectionGroup"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","type":"topic","kind":"symbol","abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"title":"AsyncSequences","url":"\/documentation\/afluent\/asyncsequences","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncSequences"}],"role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/Event":{"abstract":[{"type":"text","text":"Represents the different kinds of events that can be emitted by "},{"type":"codeVoice","code":"Materialize"},{"type":"text","text":"."}],"navigatorTitle":[{"kind":"identifier","text":"Event"}],"role":"symbol","title":"AsyncSequences.Event","url":"\/documentation\/afluent\/asyncsequences\/event","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Event"}],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Event","type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/ReplaceNil/dematerialize()":{"abstract":[{"type":"text","text":"Transforms a sequence of "},{"code":"Event","type":"codeVoice"},{"type":"text","text":" values back into their original form in an "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":"."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/ReplaceNil\/dematerialize()","url":"\/documentation\/afluent\/asyncsequences\/replacenil\/dematerialize()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"dematerialize"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">() -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier","text":"AsyncSequences"},{"text":".","kind":"text"},{"text":"Dematerialize","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO13DematerializeV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}]},"title":"dematerialize()","type":"topic","kind":"symbol","role":"symbol"},"doc://Afluent/documentation/Afluent":{"type":"topic","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol","url":"\/documentation\/afluent","title":"Afluent","role":"collection"},"doc://Afluent/documentation/Afluent/AsyncSequences/ReplaceNil":{"type":"topic","abstract":[],"navigatorTitle":[{"text":"ReplaceNil","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences\/replacenil","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/ReplaceNil","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ReplaceNil"}],"title":"AsyncSequences.ReplaceNil","role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/Dematerialize":{"abstract":[],"title":"AsyncSequences.Dematerialize","navigatorTitle":[{"text":"Dematerialize","kind":"identifier"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Dematerialize","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/dematerialize","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Dematerialize"}}}