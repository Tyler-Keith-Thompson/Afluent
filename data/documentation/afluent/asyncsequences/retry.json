{"relationshipsSections":[{"title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/Afluent\/s8SendableP","doc:\/\/Afluent\/ScA","doc:\/\/Afluent\/ScI","doc:\/\/Afluent\/Sci"],"type":"conformsTo"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Retry","interfaceLanguage":"swift"},"topicSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Retry\/makeAsyncIterator()","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Retry\/next()"],"anchor":"Instance-Methods","title":"Instance Methods","generated":true},{"title":"Type Aliases","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Retry\/Element"],"anchor":"Type-Aliases"},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Retry\/Actor-Implementations","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Retry\/AsyncIteratorProtocol-Implementations","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Retry\/AsyncSequence-Implementations","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Retry\/AsyncSequence-Implementations"],"anchor":"Default-Implementations"}],"variants":[{"paths":["\/documentation\/afluent\/asyncsequences\/retry"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"title":"AsyncSequences.Retry","externalID":"s:7Afluent14AsyncSequencesO5RetryC","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Retry"}],"extendedModule":"Afluent","navigatorTitle":[{"kind":"identifier","text":"Retry"}],"modules":[{"name":"Afluent"}],"remoteSource":{"fileName":"RetrySequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/RetrySequence.swift#L12"},"roleHeading":"Class","symbolKind":"class","role":"symbol"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"final"},{"text":" ","kind":"text"},{"kind":"keyword","text":"actor"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Retry"},{"text":"<","kind":"text"},{"text":"Upstream","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Strategy"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"AsyncSequence","kind":"typeIdentifier","preciseIdentifier":"s:Sci"},{"text":", ","kind":"text"},{"text":"Strategy","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"RetryStrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent13RetryStrategyP"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sci7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"}]}]}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences"]]},"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/Retry/Actor-Implementations":{"url":"\/documentation\/afluent\/asyncsequences\/retry\/actor-implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Retry\/Actor-Implementations","abstract":[],"title":"Actor Implementations","kind":"article","role":"collectionGroup","type":"topic"},"doc://Afluent/ScI":{"type":"unresolvable","identifier":"doc:\/\/Afluent\/ScI","title":"_Concurrency.AsyncIteratorProtocol"},"doc://Afluent/documentation/Afluent/AsyncSequences/Retry/next()":{"title":"next()","abstract":[],"role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"next","kind":"identifier"},{"text":"() ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sci7ElementQa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"?"}],"url":"\/documentation\/afluent\/asyncsequences\/retry\/next()","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Retry\/next()"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"title":"AsyncSequences","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","url":"\/documentation\/afluent\/asyncsequences","abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequences"}]},"doc://Afluent/documentation/Afluent":{"kind":"symbol","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent","url":"\/documentation\/afluent","type":"topic","title":"Afluent","role":"collection"},"doc://Afluent/documentation/Afluent/AsyncSequences/Retry/Element":{"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Element"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Retry\/Element","title":"AsyncSequences.Retry.Element","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"Element"}],"url":"\/documentation\/afluent\/asyncsequences\/retry\/element","type":"topic","kind":"symbol","role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/Retry/AsyncSequence-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Retry\/AsyncSequence-Implementations","type":"topic","abstract":[],"title":"AsyncSequence Implementations","url":"\/documentation\/afluent\/asyncsequences\/retry\/asyncsequence-implementations","kind":"article"},"doc://Afluent/ScA":{"title":"_Concurrency.Actor","identifier":"doc:\/\/Afluent\/ScA","type":"unresolvable"},"doc://Afluent/documentation/Afluent/AsyncSequences/Retry":{"navigatorTitle":[{"kind":"identifier","text":"Retry"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Retry","abstract":[],"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Retry"}],"title":"AsyncSequences.Retry","url":"\/documentation\/afluent\/asyncsequences\/retry"},"doc://Afluent/documentation/Afluent/RetryStrategy":{"abstract":[{"type":"text","text":"A strategy for handling errors and determining whether to retry an operation."}],"navigatorTitle":[{"kind":"identifier","text":"RetryStrategy"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RetryStrategy","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","title":"RetryStrategy","role":"symbol","url":"\/documentation\/afluent\/retrystrategy","kind":"symbol","type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/Retry/AsyncIteratorProtocol-Implementations":{"title":"AsyncIteratorProtocol Implementations","type":"topic","kind":"article","role":"collectionGroup","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Retry\/AsyncIteratorProtocol-Implementations","url":"\/documentation\/afluent\/asyncsequences\/retry\/asynciteratorprotocol-implementations","abstract":[]},"doc://Afluent/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/Afluent\/s8SendableP","type":"unresolvable"},"doc://Afluent/documentation/Afluent/AsyncSequences/Retry/makeAsyncIterator()":{"title":"makeAsyncIterator()","abstract":[],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeAsyncIterator"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Retry","preciseIdentifier":"s:7Afluent14AsyncSequencesO5RetryC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Upstream"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Strategy"},{"kind":"text","text":">"}],"url":"\/documentation\/afluent\/asyncsequences\/retry\/makeasynciterator()","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Retry\/makeAsyncIterator()"},"doc://Afluent/Sci":{"type":"unresolvable","identifier":"doc:\/\/Afluent\/Sci","title":"_Concurrency.AsyncSequence"}}}