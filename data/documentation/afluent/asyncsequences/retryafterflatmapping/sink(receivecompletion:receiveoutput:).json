{"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryAfterFlatMapping\/sink(receiveCompletion:receiveOutput:)","interfaceLanguage":"swift"},"kind":"symbol","sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"sink"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"receiveCompletion"},{"text":": ((","kind":"text"},{"text":"AsyncSequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Completion","preciseIdentifier":"s:7Afluent14AsyncSequencesO10CompletionO","kind":"typeIdentifier","text":"Completion"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"text":">) ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"kind":"text","text":")? = nil, "},{"kind":"externalParam","text":"receiveOutput"},{"text":": ((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":")? = nil) -> ","kind":"text"},{"text":"AnyCancellable","preciseIdentifier":"s:7Afluent14AnyCancellableC","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyCancellable","kind":"typeIdentifier"}]}],"kind":"declarations"},{"parameters":[{"name":"receiveCompletion","content":[{"type":"paragraph","inlineContent":[{"text":"A function that is executed when the stream has completed normally with ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" or an error."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"A function that is executed when output is received from the sequence.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"If this function throws an error, then the stream is completed."}]}],"name":"receiveOutput"}],"kind":"parameters"}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryAfterFlatMapping","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryAfterFlatMapping\/AsyncSequence-Implementations"]]},"metadata":{"title":"sink(receiveCompletion:receiveOutput:)","symbolKind":"method","conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","externalID":"s:Sci7Afluents8SendableRzrlE4sink17receiveCompletion0D6OutputAA14AnyCancellableCyAA14AsyncSequencesO0E0Oy_s5Error_pGYaYbcSg_y7ElementQzYaYbKcSgtF::SYNTHESIZED::s:7Afluent14AsyncSequencesO21RetryAfterFlatMappingC","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"sink","kind":"identifier"},{"kind":"text","text":"("},{"text":"receiveCompletion","kind":"externalParam"},{"kind":"text","text":": (("},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO10CompletionO","text":"Completion","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"kind":"text","text":">) "},{"text":"async","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":")?, "},{"kind":"externalParam","text":"receiveOutput"},{"text":": ((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?) -> "},{"preciseIdentifier":"s:7Afluent14AnyCancellableC","text":"AnyCancellable","kind":"typeIdentifier"}],"remoteSource":{"fileName":"AnyCancellable.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/Subscription\/AnyCancellable.swift#L61"},"modules":[{"name":"Afluent","relatedModules":["_Concurrency"]}],"roleHeading":"Instance Method","extendedModule":"_Concurrency"},"abstract":[{"type":"text","text":"Executes the current async sequence and returns an AnyCancellable token to cancel the subscription."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asyncsequences\/retryafterflatmapping\/sink(receivecompletion:receiveoutput:)"]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/RetryAfterFlatMapping/AsyncSequence-Implementations":{"kind":"article","abstract":[],"title":"AsyncSequence Implementations","url":"\/documentation\/afluent\/asyncsequences\/retryafterflatmapping\/asyncsequence-implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryAfterFlatMapping\/AsyncSequence-Implementations","role":"collectionGroup","type":"topic"},"doc://Afluent/documentation/Afluent/AnyCancellable":{"abstract":[{"type":"text","text":"Stores an erased unit of work and provides a mechanism to cancel it"}],"url":"\/documentation\/afluent\/anycancellable","type":"topic","title":"AnyCancellable","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"AnyCancellable","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AnyCancellable","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"AnyCancellable","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/Completion":{"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Completion"}],"url":"\/documentation\/afluent\/asyncsequences\/completion","kind":"symbol","navigatorTitle":[{"text":"Completion","kind":"identifier"}],"title":"AsyncSequences.Completion","role":"symbol","abstract":[{"type":"text","text":"A type that represents the completion of a sequence, either due to a normal completion with "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" or an error."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Completion","type":"topic"},"doc://Afluent/documentation/Afluent":{"kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/Afluent\/documentation\/Afluent","abstract":[],"title":"Afluent","url":"\/documentation\/afluent"},"doc://Afluent/documentation/Afluent/AsyncSequences/RetryAfterFlatMapping":{"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RetryAfterFlatMapping"}],"navigatorTitle":[{"kind":"identifier","text":"RetryAfterFlatMapping"}],"abstract":[],"title":"AsyncSequences.RetryAfterFlatMapping","url":"\/documentation\/afluent\/asyncsequences\/retryafterflatmapping","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryAfterFlatMapping","role":"symbol","type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"title":"AsyncSequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncSequences"}],"type":"topic","kind":"symbol","url":"\/documentation\/afluent\/asyncsequences","navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/RetryAfterFlatMapping/sink(receiveCompletion:receiveOutput:)":{"title":"sink(receiveCompletion:receiveOutput:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryAfterFlatMapping\/sink(receiveCompletion:receiveOutput:)","url":"\/documentation\/afluent\/asyncsequences\/retryafterflatmapping\/sink(receivecompletion:receiveoutput:)","role":"symbol","abstract":[{"type":"text","text":"Executes the current async sequence and returns an AnyCancellable token to cancel the subscription."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"sink"},{"text":"(","kind":"text"},{"text":"receiveCompletion","kind":"externalParam"},{"kind":"text","text":": (("},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO10CompletionO","text":"Completion","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":">) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")?, ","kind":"text"},{"kind":"externalParam","text":"receiveOutput"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?) -> "},{"text":"AnyCancellable","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AnyCancellableC"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"type":"topic"}}}