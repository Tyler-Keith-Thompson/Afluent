{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"dematerialize","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">() -> "},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier"},{"kind":"text","text":"."},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Dematerialize","preciseIdentifier":"s:7Afluent14AsyncSequencesO13DematerializeV","text":"Dematerialize","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP","text":"Sendable"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sci7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences"},{"kind":"text","text":"."},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Event","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO5EventO","text":"Event"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"text":">","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"content":[{"type":"heading","anchor":"return-value","level":2,"text":"Return Value"},{"inlineContent":[{"type":"text","text":"An "},{"type":"codeVoice","code":"AsyncSequences.Dematerialize"},{"text":" instance that represents the original ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" with its elements and errors."}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"inlineContent":[{"text":"This method is the inverse of ","type":"text"},{"code":"materialize","type":"codeVoice"},{"text":". It takes an ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"text":" of ","type":"text"},{"code":"Event","type":"codeVoice"},{"type":"text","text":" values and transforms it back into an "},{"type":"codeVoice","code":"AsyncSequence"},{"text":" of the original elements, propagating errors as thrown exceptions.","type":"text"}],"type":"paragraph"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The sequence must be of type ","type":"text"},{"code":"AsyncSequences.Event<T>","type":"codeVoice"},{"text":". The ","type":"text"},{"type":"codeVoice","code":"dematerialize"},{"type":"text","text":" method will extract the original elements and errors from these events."}]}],"type":"aside","name":"Note","style":"note"},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"Re-throws any errors that were encapsulated in the ","type":"text"},{"type":"codeVoice","code":"Event.failure"},{"type":"text","text":" cases."}]}],"name":"Throws"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asyncsequences\/retryon\/dematerialize()"]}],"kind":"symbol","sections":[],"abstract":[{"type":"text","text":"Transforms a sequence of "},{"type":"codeVoice","code":"Event"},{"type":"text","text":" values back into their original form in an "},{"type":"codeVoice","code":"AsyncSequence"},{"text":".","type":"text"}],"metadata":{"modules":[{"name":"Afluent","relatedModules":["_Concurrency"]}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dematerialize","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">() -> "},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO13DematerializeV","text":"Dematerialize","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"extendedModule":"_Concurrency","remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/DematerializeSequence.swift#L48","fileName":"DematerializeSequence.swift"},"role":"symbol","title":"dematerialize()","symbolKind":"method","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"roleHeading":"Instance Method","externalID":"s:Sci7Afluents8SendableRzrlE13dematerializeAA14AsyncSequencesO13DematerializeVy_xqd__GysABRd__AE5EventOy_qd__G7ElementRtzlF::SYNTHESIZED::s:7Afluent14AsyncSequencesO7RetryOnC"},"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOn\/dematerialize()","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOn","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOn\/AsyncSequence-Implementations"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/Dematerialize":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Dematerialize","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences\/dematerialize","navigatorTitle":[{"text":"Dematerialize","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Dematerialize","role":"symbol","kind":"symbol","title":"AsyncSequences.Dematerialize","abstract":[]},"doc://Afluent/documentation/Afluent/AsyncSequences/RetryOn/AsyncSequence-Implementations":{"title":"AsyncSequence Implementations","abstract":[],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOn\/AsyncSequence-Implementations","url":"\/documentation\/afluent\/asyncsequences\/retryon\/asyncsequence-implementations","kind":"article","role":"collectionGroup"},"doc://Afluent/documentation/Afluent/AsyncSequences/RetryOn":{"title":"AsyncSequences.RetryOn","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"RetryOn","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/retryon","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOn","navigatorTitle":[{"text":"RetryOn","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/RetryOn/dematerialize()":{"abstract":[{"type":"text","text":"Transforms a sequence of "},{"code":"Event","type":"codeVoice"},{"type":"text","text":" values back into their original form in an "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":"."}],"conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"dematerialize"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">() -> ","kind":"text"},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"text":"Dematerialize","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO13DematerializeV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOn\/dematerialize()","role":"symbol","kind":"symbol","title":"dematerialize()","url":"\/documentation\/afluent\/asyncsequences\/retryon\/dematerialize()"},"doc://Afluent/documentation/Afluent/AsyncSequences/Event":{"navigatorTitle":[{"kind":"identifier","text":"Event"}],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Event","role":"symbol","abstract":[{"type":"text","text":"Represents the different kinds of events that can be emitted by "},{"type":"codeVoice","code":"Materialize"},{"type":"text","text":"."}],"title":"AsyncSequences.Event","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Event"}],"url":"\/documentation\/afluent\/asyncsequences\/event","type":"topic"},"doc://Afluent/documentation/Afluent":{"url":"\/documentation\/afluent","role":"collection","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol","title":"Afluent","abstract":[]},"doc://Afluent/documentation/Afluent/AsyncSequences":{"type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"AsyncSequences","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences","navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","role":"symbol","title":"AsyncSequences","abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"kind":"symbol"}}}