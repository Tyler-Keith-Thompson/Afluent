{"sections":[],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"dematerialize"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">() -> "},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"text":".","kind":"text"},{"text":"Dematerialize","preciseIdentifier":"s:7Afluent14AsyncSequencesO13DematerializeV","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Dematerialize","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"Sendable","preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":" == "},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","kind":"typeIdentifier","text":"AsyncSequences"},{"text":".","kind":"text"},{"text":"Event","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Event","preciseIdentifier":"s:7Afluent14AsyncSequencesO5EventO"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">"}],"languages":["swift"]}]},{"content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"inlineContent":[{"type":"text","text":"An "},{"type":"codeVoice","code":"AsyncSequences.Dematerialize"},{"text":" instance that represents the original ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"text":" with its elements and errors.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method is the inverse of "},{"type":"codeVoice","code":"materialize"},{"text":". It takes an ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" of "},{"code":"Event","type":"codeVoice"},{"text":" values and transforms it back into an ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" of the original elements, propagating errors as thrown exceptions."}]},{"name":"Note","type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The sequence must be of type "},{"code":"AsyncSequences.Event<T>","type":"codeVoice"},{"type":"text","text":". The "},{"type":"codeVoice","code":"dematerialize"},{"text":" method will extract the original elements and errors from these events.","type":"text"}]}]},{"style":"note","name":"Throws","content":[{"inlineContent":[{"type":"text","text":"Re-throws any errors that were encapsulated in the "},{"code":"Event.failure","type":"codeVoice"},{"text":" cases.","type":"text"}],"type":"paragraph"}],"type":"aside"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOn","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOn\/AsyncSequence-Implementations"]]},"abstract":[{"type":"text","text":"Transforms a sequence of "},{"type":"codeVoice","code":"Event"},{"text":" values back into their original form in an ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":"."}],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOn\/dematerialize()"},"variants":[{"paths":["\/documentation\/afluent\/asyncsequences\/retryon\/dematerialize()"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"extendedModule":"_Concurrency","role":"symbol","externalID":"s:Sci7Afluents8SendableRzrlE13dematerializeAA14AsyncSequencesO13DematerializeVy_xqd__GysABRd__AE5EventOy_qd__G7ElementRtzlF::SYNTHESIZED::s:7Afluent14AsyncSequencesO7RetryOnC","title":"dematerialize()","roleHeading":"Instance Method","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}]},"modules":[{"name":"Afluent","relatedModules":["_Concurrency"]}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"dematerialize","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">() -> "},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO13DematerializeV","text":"Dematerialize","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"symbolKind":"method","remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/DematerializeSequence.swift#L46","fileName":"DematerializeSequence.swift"}},"references":{"doc://Afluent/documentation/Afluent":{"kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/Afluent\/documentation\/Afluent","abstract":[],"title":"Afluent","url":"\/documentation\/afluent"},"doc://Afluent/documentation/Afluent/AsyncSequences/RetryOn/AsyncSequence-Implementations":{"abstract":[],"kind":"article","role":"collectionGroup","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOn\/AsyncSequence-Implementations","title":"AsyncSequence Implementations","url":"\/documentation\/afluent\/asyncsequences\/retryon\/asyncsequence-implementations","type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/RetryOn/dematerialize()":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOn\/dematerialize()","role":"symbol","title":"dematerialize()","kind":"symbol","abstract":[{"type":"text","text":"Transforms a sequence of "},{"type":"codeVoice","code":"Event"},{"text":" values back into their original form in an ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"text":".","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"dematerialize","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">() -> ","kind":"text"},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"text":"Dematerialize","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO13DematerializeV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"text":">","kind":"text"}],"conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/afluent\/asyncsequences\/retryon\/dematerialize()"},"doc://Afluent/documentation/Afluent/AsyncSequences/Dematerialize":{"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Dematerialize","abstract":[],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Dematerialize","kind":"identifier"}],"navigatorTitle":[{"text":"Dematerialize","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/dematerialize","title":"AsyncSequences.Dematerialize"},"doc://Afluent/documentation/Afluent/AsyncSequences/Event":{"title":"AsyncSequences.Event","kind":"symbol","url":"\/documentation\/afluent\/asyncsequences\/event","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"Event","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Event","type":"topic","abstract":[{"type":"text","text":"Represents the different kinds of events that can be emitted by "},{"type":"codeVoice","code":"Materialize"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Event","kind":"identifier"}],"role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"abstract":[{"text":"A namespace for grouping related AsyncSequence operations.","type":"text"}],"title":"AsyncSequences","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncSequences"}],"type":"topic","kind":"symbol","url":"\/documentation\/afluent\/asyncsequences","navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/RetryOn":{"navigatorTitle":[{"kind":"identifier","text":"RetryOn"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOn","title":"AsyncSequences.RetryOn","abstract":[],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RetryOn"}],"kind":"symbol","role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/retryon"}}}