{"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOnAfterFlatMapping","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOnAfterFlatMapping\/AsyncSequence-Implementations"]]},"sections":[],"abstract":[{"text":"Introduces a breakpoint into the async sequence when an error occurs.","type":"text"}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOnAfterFlatMapping\/breakpointOnError()","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"paths":["\/documentation\/afluent\/asyncsequences\/retryonafterflatmapping\/breakpointonerror()"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"breakpointOnError","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AsyncSequences","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV","text":"HandleEvents"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"An ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"text":" with the breakpoint-on-error condition applied.","type":"text"}]}]},{"content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"text":"This function triggers a ","type":"text"},{"type":"codeVoice","code":"SIGTRAP"},{"text":" signal, pausing execution in a debugger, whenever the async sequence produces an error.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"metadata":{"modules":[{"name":"Afluent","relatedModules":["_Concurrency"]}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}]},"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"breakpointOnError","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV","text":"HandleEvents"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/BreakpointSequence.swift#L38","fileName":"BreakpointSequence.swift"},"role":"symbol","externalID":"s:Sci7Afluents8SendableRzrlE17breakpointOnErrorAA14AsyncSequencesO12HandleEventsVy_xGyF::SYNTHESIZED::s:7Afluent14AsyncSequencesO23RetryOnAfterFlatMappingC","symbolKind":"method","extendedModule":"_Concurrency","roleHeading":"Instance Method","title":"breakpointOnError()"},"kind":"symbol","references":{"doc://Afluent/documentation/Afluent":{"abstract":[],"role":"collection","identifier":"doc:\/\/Afluent\/documentation\/Afluent","title":"Afluent","kind":"symbol","type":"topic","url":"\/documentation\/afluent"},"doc://Afluent/documentation/Afluent/AsyncSequences/RetryOnAfterFlatMapping":{"navigatorTitle":[{"kind":"identifier","text":"RetryOnAfterFlatMapping"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOnAfterFlatMapping","title":"AsyncSequences.RetryOnAfterFlatMapping","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RetryOnAfterFlatMapping"}],"abstract":[],"url":"\/documentation\/afluent\/asyncsequences\/retryonafterflatmapping","role":"symbol","type":"topic","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/RetryOnAfterFlatMapping/breakpointOnError()":{"url":"\/documentation\/afluent\/asyncsequences\/retryonafterflatmapping\/breakpointonerror()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"breakpointOnError","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV","kind":"typeIdentifier","text":"HandleEvents"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOnAfterFlatMapping\/breakpointOnError()","role":"symbol","abstract":[{"text":"Introduces a breakpoint into the async sequence when an error occurs.","type":"text"}],"type":"topic","title":"breakpointOnError()"},"doc://Afluent/documentation/Afluent/AsyncSequences/RetryOnAfterFlatMapping/AsyncSequence-Implementations":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/RetryOnAfterFlatMapping\/AsyncSequence-Implementations","title":"AsyncSequence Implementations","abstract":[],"url":"\/documentation\/afluent\/asyncsequences\/retryonafterflatmapping\/asyncsequence-implementations","role":"collectionGroup","type":"topic","kind":"article"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"type":"topic","url":"\/documentation\/afluent\/asyncsequences","abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"title":"AsyncSequences","kind":"symbol","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncSequences"}],"navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences"},"doc://Afluent/documentation/Afluent/AsyncSequences/HandleEvents":{"title":"AsyncSequences.HandleEvents","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"HandleEvents","kind":"identifier"}],"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents","url":"\/documentation\/afluent\/asyncsequences\/handleevents","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HandleEvents"}]}}}