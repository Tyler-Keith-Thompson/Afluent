{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"breakpoint"},{"kind":"text","text":"("},{"kind":"externalParam","text":"receiveOutput"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")? = nil, "},{"kind":"externalParam","text":"receiveError"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")? = nil) -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"kind":"text","text":"."},{"kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents","preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV","text":"HandleEvents"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"receiveOutput","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that takes the successful output of the sequence. If this closure returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":", a breakpoint is triggered. Default is "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}]}]},{"name":"receiveError","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that takes any error produced by the sequence. If this closure returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":", a breakpoint is triggered. Default is "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}]}]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An asynchronous unit of work with the breakpoint conditions applied."}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This function allows you to introduce conditional breakpoints based on the output or error of the async sequence."},{"type":"text","text":" "},{"type":"text","text":"If the provided conditions are met, a "},{"type":"codeVoice","code":"SIGTRAP"},{"type":"text","text":" signal is raised, pausing execution in a debugger."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/afluent\/asyncsequences\/throttle\/breakpoint(receiveoutput:receiveerror:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Throttle\/breakpoint(receiveOutput:receiveError:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Introduces a breakpoint into the async sequence."}],"kind":"symbol","metadata":{"role":"symbol","title":"breakpoint(receiveOutput:receiveError:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"breakpoint"},{"kind":"text","text":"("},{"kind":"externalParam","text":"receiveOutput"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")?, "},{"kind":"externalParam","text":"receiveError"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")?) -> "},{"kind":"typeIdentifier","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"HandleEvents","preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/BreakpointSequence.swift#L21","fileName":"BreakpointSequence.swift"},"symbolKind":"method","externalID":"s:Sci7AfluentE10breakpoint13receiveOutput0C5ErrorAA14AsyncSequencesO12HandleEventsVy_xGSb7ElementQzYaKcSg_Sbs0E0_pYaKcSgtF::SYNTHESIZED::s:7Afluent14AsyncSequencesO8ThrottleV","extendedModule":"_Concurrency","modules":[{"name":"Afluent","relatedModules":["_Concurrency"]}]},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Throttle","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Throttle\/AsyncSequence-Implementations"]]},"references":{"doc://Afluent/documentation/Afluent/AsyncSequences/Throttle/breakpoint(receiveOutput:receiveError:)":{"role":"symbol","title":"breakpoint(receiveOutput:receiveError:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"breakpoint"},{"kind":"text","text":"("},{"kind":"externalParam","text":"receiveOutput"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")?, "},{"kind":"externalParam","text":"receiveError"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")?) -> "},{"kind":"typeIdentifier","text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"HandleEvents","preciseIdentifier":"s:7Afluent14AsyncSequencesO12HandleEventsV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Introduces a breakpoint into the async sequence."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Throttle\/breakpoint(receiveOutput:receiveError:)","kind":"symbol","type":"topic","url":"\/documentation\/afluent\/asyncsequences\/throttle\/breakpoint(receiveoutput:receiveerror:)"},"doc://Afluent/documentation/Afluent":{"role":"collection","title":"Afluent","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol","type":"topic","url":"\/documentation\/afluent"},"doc://Afluent/documentation/Afluent/AsyncSequences/Throttle/AsyncSequence-Implementations":{"role":"collectionGroup","title":"AsyncSequence Implementations","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Throttle\/AsyncSequence-Implementations","kind":"article","type":"topic","url":"\/documentation\/afluent\/asyncsequences\/throttle\/asyncsequence-implementations"},"doc://Afluent/documentation/Afluent/AsyncSequences/HandleEvents":{"role":"symbol","title":"AsyncSequences.HandleEvents","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HandleEvents"}],"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/HandleEvents","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HandleEvents"}],"url":"\/documentation\/afluent\/asyncsequences\/handleevents"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"role":"symbol","title":"AsyncSequences","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequences"}],"abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"url":"\/documentation\/afluent\/asyncsequences"},"doc://Afluent/documentation/Afluent/AsyncSequences/Throttle":{"role":"symbol","title":"AsyncSequences.Throttle","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Throttle"}],"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Throttle","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Throttle"}],"url":"\/documentation\/afluent\/asyncsequences\/throttle"}}}