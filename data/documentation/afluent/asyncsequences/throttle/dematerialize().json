{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"dematerialize","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">() -> ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO13DematerializeV","text":"Dematerialize","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Dematerialize"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP","text":"Sendable"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa","text":"Element"},{"text":" == ","kind":"text"},{"text":"AsyncSequences","preciseIdentifier":"s:7Afluent14AsyncSequencesO","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Event","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Event","preciseIdentifier":"s:7Afluent14AsyncSequencesO5EventO","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">","kind":"text"}]}]},{"kind":"content","content":[{"type":"heading","text":"Return Value","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"type":"codeVoice","code":"AsyncSequences.Dematerialize"},{"type":"text","text":" instance that represents the original "},{"type":"codeVoice","code":"AsyncSequence"},{"text":" with its elements and errors.","type":"text"}]}]},{"content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method is the inverse of "},{"code":"materialize","type":"codeVoice"},{"type":"text","text":". It takes an "},{"type":"codeVoice","code":"AsyncSequence"},{"text":" of ","type":"text"},{"type":"codeVoice","code":"Event"},{"text":" values and transforms it back into an ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" of the original elements, propagating errors as thrown exceptions."}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The sequence must be of type ","type":"text"},{"code":"AsyncSequences.Event<T>","type":"codeVoice"},{"type":"text","text":". The "},{"type":"codeVoice","code":"dematerialize"},{"text":" method will extract the original elements and errors from these events.","type":"text"}]}],"type":"aside","name":"Note","style":"note"},{"type":"aside","name":"Throws","style":"note","content":[{"inlineContent":[{"type":"text","text":"Re-throws any errors that were encapsulated in the "},{"code":"Event.failure","type":"codeVoice"},{"text":" cases.","type":"text"}],"type":"paragraph"}]}],"kind":"content"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"modules":[{"relatedModules":["_Concurrency"],"name":"Afluent"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"dematerialize"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">() -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO13DematerializeV","kind":"typeIdentifier","text":"Dematerialize"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"title":"dematerialize()","roleHeading":"Instance Method","extendedModule":"_Concurrency","role":"symbol","externalID":"s:Sci7Afluents8SendableRzrlE13dematerializeAA14AsyncSequencesO13DematerializeVy_xqd__GysABRd__AE5EventOy_qd__G7ElementRtzlF::SYNTHESIZED::s:7Afluent14AsyncSequencesO8ThrottleV","remoteSource":{"fileName":"DematerializeSequence.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/DematerializeSequence.swift#L46"},"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"symbolKind":"method"},"variants":[{"paths":["\/documentation\/afluent\/asyncsequences\/throttle\/dematerialize()"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"abstract":[{"type":"text","text":"Transforms a sequence of "},{"type":"codeVoice","code":"Event"},{"type":"text","text":" values back into their original form in an "},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":"."}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Throttle\/dematerialize()","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Throttle","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Throttle\/AsyncSequence-Implementations"]]},"kind":"symbol","references":{"doc://Afluent/documentation/Afluent/AsyncSequences/Throttle/dematerialize()":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Throttle\/dematerialize()","abstract":[{"text":"Transforms a sequence of ","type":"text"},{"type":"codeVoice","code":"Event"},{"text":" values back into their original form in an ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"text":".","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"dematerialize"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">() -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Dematerialize","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO13DematerializeV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"text":">","kind":"text"}],"url":"\/documentation\/afluent\/asyncsequences\/throttle\/dematerialize()","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"type":"topic","role":"symbol","kind":"symbol","title":"dematerialize()"},"doc://Afluent/documentation/Afluent":{"url":"\/documentation\/afluent","abstract":[],"type":"topic","title":"Afluent","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent","role":"collection"},"doc://Afluent/documentation/Afluent/AsyncSequences/Throttle/AsyncSequence-Implementations":{"url":"\/documentation\/afluent\/asyncsequences\/throttle\/asyncsequence-implementations","title":"AsyncSequence Implementations","abstract":[],"kind":"article","role":"collectionGroup","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Throttle\/AsyncSequence-Implementations"},"doc://Afluent/documentation/Afluent/AsyncSequences/Throttle":{"url":"\/documentation\/afluent\/asyncsequences\/throttle","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Throttle","kind":"identifier"}],"abstract":[],"kind":"symbol","title":"AsyncSequences.Throttle","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Throttle","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Throttle"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/Event":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"Event","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences\/event","role":"symbol","abstract":[{"type":"text","text":"Represents the different kinds of events that can be emitted by "},{"type":"codeVoice","code":"Materialize"},{"type":"text","text":"."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Event","title":"AsyncSequences.Event","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Event"}]},"doc://Afluent/documentation/Afluent/AsyncSequences/Dematerialize":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Dematerialize","abstract":[],"title":"AsyncSequences.Dematerialize","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Dematerialize","kind":"identifier"}],"url":"\/documentation\/afluent\/asyncsequences\/dematerialize","navigatorTitle":[{"kind":"identifier","text":"Dematerialize"}],"type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"navigatorTitle":[{"text":"AsyncSequences","kind":"identifier"}],"title":"AsyncSequences","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncSequences"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","url":"\/documentation\/afluent\/asyncsequences"}}}