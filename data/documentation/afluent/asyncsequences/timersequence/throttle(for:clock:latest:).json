{"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/TimerSequence","doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/TimerSequence\/AsyncSequence-Implementations"]]},"metadata":{"platforms":[{"name":"iOS","introducedAt":"16.0","unavailable":false,"deprecated":false,"beta":false},{"deprecated":false,"name":"macOS","introducedAt":"13.0","unavailable":false,"beta":false},{"name":"tvOS","unavailable":false,"beta":false,"introducedAt":"16.0","deprecated":false},{"unavailable":false,"introducedAt":"1.0","deprecated":false,"name":"visionOS","beta":false},{"beta":false,"name":"watchOS","introducedAt":"9.0","unavailable":false,"deprecated":false}],"role":"symbol","conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"modules":[{"name":"Afluent","relatedModules":["_Concurrency"]}],"externalID":"s:Sci7Afluents8SendableRzsAB7ElementRpzrlE8throttle3for5clock6latestAA14AsyncSequencesO8ThrottleVy_xqd__G8DurationQyd___qd__Sbt12_Concurrency5ClockRd__lF::SYNTHESIZED::s:7Afluent14AsyncSequencesO13TimerSequenceV","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"throttle"},{"kind":"text","text":"<"},{"text":"C","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"for","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa","text":"Duration"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"clock"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":", "},{"text":"latest","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") -> ","kind":"text"},{"text":"AsyncSequences","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO8ThrottleV","text":"Throttle","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":">"}],"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SequenceOperators\/ThrottleSequence.swift#L114","fileName":"ThrottleSequence.swift"},"roleHeading":"Instance Method","symbolKind":"method","extendedModule":"_Concurrency","title":"throttle(for:clock:latest:)"},"abstract":[{"text":"Emits either the first or latest element received during a specified amount of time.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"throttle","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"C"},{"text":">(","kind":"text"},{"text":"for","kind":"externalParam"},{"kind":"text","text":" "},{"text":"interval","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":"."},{"preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa","text":"Duration","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"clock","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":", "},{"text":"latest","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","text":"AsyncSequences","kind":"typeIdentifier"},{"kind":"text","text":"."},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Throttle","kind":"typeIdentifier","text":"Throttle","preciseIdentifier":"s:7Afluent14AsyncSequencesO8ThrottleV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"C"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:12_Concurrency5ClockP","text":"Clock","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The interval of time in which to observe and emit either the first or latest element."}]}],"name":"interval"},{"content":[{"inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"true"},{"type":"text","text":", emits the latest element in the time interval.  If "},{"code":"false","type":"codeVoice"},{"text":", emits the first element in the time interval.","type":"text"}],"type":"paragraph"}],"name":"latest"}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The first element in upstream will always be returned immediately.  Once a second element is received, then the clock will begin for the given time interval and return the first or latest element once completed."}]}],"type":"aside","name":"Note"}]}],"kind":"symbol","sections":[],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/TimerSequence\/throttle(for:clock:latest:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/asyncsequences\/timersequence\/throttle(for:clock:latest:)"]}],"references":{"doc://Afluent/documentation/Afluent":{"kind":"symbol","url":"\/documentation\/afluent","role":"collection","abstract":[],"title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences/TimerSequence":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"TimerSequence"}],"abstract":[{"text":"A sequence that repeatedly emits an instant on a given interval.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TimerSequence"}],"title":"AsyncSequences.TimerSequence","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/TimerSequence","url":"\/documentation\/afluent\/asyncsequences\/timersequence","role":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/Throttle":{"abstract":[],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/Throttle","role":"symbol","title":"AsyncSequences.Throttle","url":"\/documentation\/afluent\/asyncsequences\/throttle","navigatorTitle":[{"text":"Throttle","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Throttle"}],"type":"topic"},"doc://Afluent/documentation/Afluent/AsyncSequences":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences","role":"symbol","url":"\/documentation\/afluent\/asyncsequences","abstract":[{"type":"text","text":"A namespace for grouping related AsyncSequence operations."}],"title":"AsyncSequences","navigatorTitle":[{"kind":"identifier","text":"AsyncSequences"}],"type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncSequences","kind":"identifier"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/AsyncSequences/TimerSequence/AsyncSequence-Implementations":{"abstract":[],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/TimerSequence\/AsyncSequence-Implementations","title":"AsyncSequence Implementations","url":"\/documentation\/afluent\/asyncsequences\/timersequence\/asyncsequence-implementations","kind":"article","role":"collectionGroup"},"doc://Afluent/documentation/Afluent/AsyncSequences/TimerSequence/throttle(for:clock:latest:)":{"role":"symbol","url":"\/documentation\/afluent\/asyncsequences\/timersequence\/throttle(for:clock:latest:)","kind":"symbol","abstract":[{"type":"text","text":"Emits either the first or latest element received during a specified amount of time."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throttle","kind":"identifier"},{"kind":"text","text":"<"},{"text":"C","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"for"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"C"},{"text":".","kind":"text"},{"preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa","kind":"typeIdentifier","text":"Duration"},{"kind":"text","text":", "},{"text":"clock","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"C"},{"text":", ","kind":"text"},{"text":"latest","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent14AsyncSequencesO","text":"AsyncSequences"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent14AsyncSequencesO8ThrottleV","text":"Throttle","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":">"}],"type":"topic","title":"throttle(for:clock:latest:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsyncSequences\/TimerSequence\/throttle(for:clock:latest:)","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}}}}