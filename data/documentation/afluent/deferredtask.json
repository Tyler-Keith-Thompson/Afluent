{"kind":"symbol","identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","interfaceLanguage":"swift"},"metadata":{"title":"DeferredTask","symbolKind":"class","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DeferredTask","kind":"identifier"}],"externalID":"s:7Afluent12DeferredTaskC","modules":[{"name":"Afluent"}],"roleHeading":"Class","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DeferredTask"}],"remoteSource":{"fileName":"DeferredTask.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/DeferredTask.swift#L17"}},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"A structure representing a deferred asynchronous unit of work.","type":"text"}],"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","doc:\/\/Afluent\/s8SendableP","doc:\/\/Afluent\/ScA","doc:\/\/Afluent\/12_Concurrency8AnyActorP"],"kind":"relationships"}],"variants":[{"paths":["\/documentation\/afluent\/deferredtask"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"topicSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask\/init(operation:)"],"title":"Initializers"},{"title":"Instance Properties","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask\/state"]},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask\/Actor-Implementations","doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask\/AsynchronousUnitOfWork-Implementations"],"title":"Default Implementations","generated":true}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"actor","kind":"keyword"},{"kind":"text","text":" "},{"text":"DeferredTask","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Success"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"Success","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"Sendable","preciseIdentifier":"s:s8SendableP"}]}]},{"kind":"content","content":[{"text":"Overview","type":"heading","anchor":"overview","level":2},{"inlineContent":[{"code":"DeferredTask","type":"codeVoice"},{"text":" conforms to the ","type":"text"},{"type":"codeVoice","code":"AsynchronousUnitOfWork"},{"type":"text","text":" protocol and allows you to encapsulate an asynchronous operation"},{"type":"text","text":" "},{"text":"that produces a result of type ","type":"text"},{"code":"Success","type":"codeVoice"},{"text":". The operation will be executed in a deferred manner, i.e., it wonâ€™t start","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"until explicitly awaited."}],"type":"paragraph"},{"name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"Success","type":"codeVoice"},{"type":"text","text":" type must conform to the "},{"code":"Sendable","type":"codeVoice"},{"text":" protocol.","type":"text"}]}],"type":"aside","style":"note"}]}],"references":{"doc://Afluent/documentation/Afluent/DeferredTask/init(operation:)":{"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"operation","kind":"externalParam"},{"kind":"text","text":": () "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Success","kind":"typeIdentifier"},{"kind":"text","text":")"}],"title":"init(operation:)","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Initializes a new instance of "},{"type":"codeVoice","code":"DeferredTask"},{"type":"text","text":"."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask\/init(operation:)","url":"\/documentation\/afluent\/deferredtask\/init(operation:)","type":"topic"},"doc://Afluent/documentation/Afluent/DeferredTask/state":{"title":"state","fragments":[{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"state"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"TaskState","preciseIdentifier":"s:7Afluent9TaskStateC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Success"},{"kind":"text","text":">"}],"url":"\/documentation\/afluent\/deferredtask\/state","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask\/state","type":"topic","abstract":[],"role":"symbol","kind":"symbol"},"doc://Afluent/s8SendableP":{"identifier":"doc:\/\/Afluent\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://Afluent/12_Concurrency8AnyActorP":{"identifier":"doc:\/\/Afluent\/12_Concurrency8AnyActorP","title":"_Concurrency.AnyActor","type":"unresolvable"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"url":"\/documentation\/afluent\/asynchronousunitofwork","type":"topic","abstract":[{"text":"Represents an asynchronous unit of work.","type":"text"}],"title":"AsynchronousUnitOfWork","navigatorTitle":[{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/DeferredTask/Actor-Implementations":{"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask\/Actor-Implementations","abstract":[],"kind":"article","title":"Actor Implementations","role":"collectionGroup","url":"\/documentation\/afluent\/deferredtask\/actor-implementations"},"doc://Afluent/documentation/Afluent/DeferredTask/AsynchronousUnitOfWork-Implementations":{"role":"collectionGroup","kind":"article","title":"AsynchronousUnitOfWork Implementations","url":"\/documentation\/afluent\/deferredtask\/asynchronousunitofwork-implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask\/AsynchronousUnitOfWork-Implementations","type":"topic","abstract":[]},"doc://Afluent/ScA":{"identifier":"doc:\/\/Afluent\/ScA","title":"_Concurrency.Actor","type":"unresolvable"},"doc://Afluent/documentation/Afluent/DeferredTask":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DeferredTask"}],"title":"DeferredTask","navigatorTitle":[{"text":"DeferredTask","kind":"identifier"}],"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A structure representing a deferred asynchronous unit of work."}],"url":"\/documentation\/afluent\/deferredtask","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","type":"topic"},"doc://Afluent/documentation/Afluent":{"title":"Afluent","abstract":[],"type":"topic","url":"\/documentation\/afluent","role":"collection","identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol"}}}