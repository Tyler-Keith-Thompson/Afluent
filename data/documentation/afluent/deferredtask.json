{"metadata":{"remoteSource":{"fileName":"DeferredTask.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/DeferredTask.swift#L17"},"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DeferredTask"}],"symbolKind":"class","role":"symbol","roleHeading":"Class","title":"DeferredTask","modules":[{"name":"Afluent"}],"navigatorTitle":[{"text":"DeferredTask","kind":"identifier"}],"externalID":"s:7Afluent12DeferredTaskC"},"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"type":"text","text":"A structure representing a deferred asynchronous unit of work."}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask\/init(operation:)"]},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask\/state"],"title":"Instance Properties"},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask\/Actor-Implementations","doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask\/AsynchronousUnitOfWork-Implementations"]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"text":"DeferredTask","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Success"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"Success","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP","text":"Sendable"}],"languages":["swift"],"platforms":["macOS"]}]},{"content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"DeferredTask"},{"type":"text","text":" conforms to the "},{"type":"codeVoice","code":"AsynchronousUnitOfWork"},{"type":"text","text":" protocol and allows you to encapsulate an asynchronous operation"},{"text":" ","type":"text"},{"text":"that produces a result of type ","type":"text"},{"code":"Success","type":"codeVoice"},{"text":". The operation will be executed in a deferred manner, i.e., it wonâ€™t start","type":"text"},{"type":"text","text":" "},{"text":"until explicitly awaited.","type":"text"}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"Success","type":"codeVoice"},{"type":"text","text":" type must conform to the "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":" protocol."}]}],"type":"aside","name":"Note"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/afluent\/deferredtask"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","doc:\/\/Afluent\/s8SendableP","doc:\/\/Afluent\/ScA","doc:\/\/Afluent\/12_Concurrency8AnyActorP"],"kind":"relationships"}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","interfaceLanguage":"swift"},"sections":[],"references":{"doc://Afluent/s8SendableP":{"identifier":"doc:\/\/Afluent\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"abstract":[{"text":"Represents an asynchronous unit of work.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"kind":"symbol","title":"AsynchronousUnitOfWork","url":"\/documentation\/afluent\/asynchronousunitofwork","type":"topic"},"doc://Afluent/documentation/Afluent/DeferredTask/state":{"type":"topic","title":"state","kind":"symbol","abstract":[],"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask\/state","fragments":[{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"state","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Afluent9TaskStateC","text":"TaskState","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Success"},{"kind":"text","text":">"}],"url":"\/documentation\/afluent\/deferredtask\/state"},"doc://Afluent/documentation/Afluent/DeferredTask/Actor-Implementations":{"kind":"article","type":"topic","abstract":[],"url":"\/documentation\/afluent\/deferredtask\/actor-implementations","title":"Actor Implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask\/Actor-Implementations","role":"collectionGroup"},"doc://Afluent/documentation/Afluent/DeferredTask":{"abstract":[{"type":"text","text":"A structure representing a deferred asynchronous unit of work."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DeferredTask"}],"role":"symbol","navigatorTitle":[{"text":"DeferredTask","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","title":"DeferredTask","type":"topic","url":"\/documentation\/afluent\/deferredtask","kind":"symbol"},"doc://Afluent/documentation/Afluent/DeferredTask/AsynchronousUnitOfWork-Implementations":{"role":"collectionGroup","title":"AsynchronousUnitOfWork Implementations","url":"\/documentation\/afluent\/deferredtask\/asynchronousunitofwork-implementations","kind":"article","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask\/AsynchronousUnitOfWork-Implementations","type":"topic"},"doc://Afluent/documentation/Afluent/DeferredTask/init(operation:)":{"title":"init(operation:)","role":"symbol","url":"\/documentation\/afluent\/deferredtask\/init(operation:)","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask\/init(operation:)","type":"topic","abstract":[{"text":"Initializes a new instance of ","type":"text"},{"type":"codeVoice","code":"DeferredTask"},{"text":".","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"operation"},{"text":": () ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Success","kind":"typeIdentifier"},{"kind":"text","text":")"}]},"doc://Afluent/ScA":{"identifier":"doc:\/\/Afluent\/ScA","title":"_Concurrency.Actor","type":"unresolvable"},"doc://Afluent/12_Concurrency8AnyActorP":{"identifier":"doc:\/\/Afluent\/12_Concurrency8AnyActorP","title":"_Concurrency.AnyActor","type":"unresolvable"},"doc://Afluent/documentation/Afluent":{"abstract":[],"role":"collection","identifier":"doc:\/\/Afluent\/documentation\/Afluent","title":"Afluent","kind":"symbol","type":"topic","url":"\/documentation\/afluent"}}}