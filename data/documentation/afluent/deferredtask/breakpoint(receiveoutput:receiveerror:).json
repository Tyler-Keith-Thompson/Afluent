{"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"breakpoint"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"receiveOutput"},{"text":": ((","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Success","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":")? = nil, "},{"text":"receiveError","kind":"externalParam"},{"text":": ((","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":")? = nil) -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"text":"AsynchronousUnitOfWork","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Success"},{"text":">\n","kind":"text"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"receiveOutput","content":[{"inlineContent":[{"type":"text","text":"A closure that takes the successful output of the operation. If this closure returns "},{"code":"true","type":"codeVoice"},{"type":"text","text":", a breakpoint is triggered. Default is "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}],"type":"paragraph"}]},{"name":"receiveError","content":[{"inlineContent":[{"type":"text","text":"A closure that takes any error produced by the operation. If this closure returns "},{"code":"true","type":"codeVoice"},{"text":", a breakpoint is triggered. Default is ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}],"type":"paragraph"}]}]},{"content":[{"anchor":"return-value","text":"Return Value","level":2,"type":"heading"},{"inlineContent":[{"text":"An asynchronous unit of work with the breakpoint conditions applied.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"inlineContent":[{"type":"text","text":"This function allows you to introduce conditional breakpoints based on the output or error of the asynchronous operation."},{"text":" ","type":"text"},{"type":"text","text":"If the provided conditions are met, a "},{"code":"SIGTRAP","type":"codeVoice"},{"type":"text","text":" signal is raised, pausing execution in a debugger."}],"type":"paragraph"}],"kind":"content"}],"abstract":[{"type":"text","text":"Introduces a breakpoint into the asynchronous unit of work."}],"metadata":{"roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"breakpoint","kind":"identifier"},{"text":"(","kind":"text"},{"text":"receiveOutput","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Success","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":")?, ","kind":"text"},{"text":"receiveError","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":")?) -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","text":"AsynchronousUnitOfWork"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Success","kind":"typeIdentifier"},{"text":">\n","kind":"text"}],"extendedModule":"Afluent","externalID":"s:7Afluent22AsynchronousUnitOfWorkPAAE10breakpoint13receiveOutput0G5ErrorQrSb7SuccessQzYaYbKcSg_Sbs0I0_pYaYbKcSgtF::SYNTHESIZED::s:7Afluent12DeferredTaskC","title":"breakpoint(receiveOutput:receiveError:)","modules":[{"name":"Afluent"}],"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/Workers\/Breakpoint.swift#L21","fileName":"Breakpoint.swift"},"role":"symbol","symbolKind":"method"},"sections":[],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask\/breakpoint(receiveOutput:receiveError:)","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask\/AsynchronousUnitOfWork-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/deferredtask\/breakpoint(receiveoutput:receiveerror:)"]}],"references":{"doc://Afluent/documentation/Afluent/DeferredTask/AsynchronousUnitOfWork-Implementations":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask\/AsynchronousUnitOfWork-Implementations","abstract":[],"url":"\/documentation\/afluent\/deferredtask\/asynchronousunitofwork-implementations","title":"AsynchronousUnitOfWork Implementations","type":"topic","role":"collectionGroup","kind":"article"},"doc://Afluent/documentation/Afluent":{"type":"topic","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent","url":"\/documentation\/afluent","abstract":[],"role":"collection","title":"Afluent"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"url":"\/documentation\/afluent\/asynchronousunitofwork","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsynchronousUnitOfWork"}],"title":"AsynchronousUnitOfWork","abstract":[{"text":"Represents an asynchronous unit of work.","type":"text"}]},"doc://Afluent/documentation/Afluent/DeferredTask":{"role":"symbol","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DeferredTask","kind":"identifier"}],"abstract":[{"type":"text","text":"A structure representing a deferred asynchronous unit of work."}],"navigatorTitle":[{"kind":"identifier","text":"DeferredTask"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","url":"\/documentation\/afluent\/deferredtask","title":"DeferredTask","kind":"symbol"},"doc://Afluent/documentation/Afluent/DeferredTask/breakpoint(receiveOutput:receiveError:)":{"type":"topic","abstract":[{"type":"text","text":"Introduces a breakpoint into the asynchronous unit of work."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask\/breakpoint(receiveOutput:receiveError:)","role":"symbol","url":"\/documentation\/afluent\/deferredtask\/breakpoint(receiveoutput:receiveerror:)","kind":"symbol","title":"breakpoint(receiveOutput:receiveError:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"breakpoint","kind":"identifier"},{"text":"(","kind":"text"},{"text":"receiveOutput","kind":"externalParam"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Success","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":")?, "},{"kind":"externalParam","text":"receiveError"},{"text":": ((","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")?) -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWork","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Success"},{"text":">\n","kind":"text"}]}}}