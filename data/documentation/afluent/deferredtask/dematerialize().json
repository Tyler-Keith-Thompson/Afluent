{"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask\/AsynchronousUnitOfWork-Implementations"]]},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask\/dematerialize()"},"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dematerialize","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">() -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","text":"AsynchronousUnitOfWork","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP","text":"Sendable"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa","text":"Success","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/Success"},{"kind":"text","text":" == "},{"text":"Result","kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", any "},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":">\n","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"type":"heading","text":"Return Value","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"type":"codeVoice","code":"AsynchronousUnitOfWork"},{"text":" that emits the success value or throws the error contained within the ","type":"text"},{"code":"Result","type":"codeVoice"},{"text":".","type":"text"}]}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This operator is the inverse of "},{"type":"codeVoice","code":"materialize"},{"text":". It expects the ","type":"text"},{"code":"AsynchronousUnitOfWork","type":"codeVoice"},{"text":" to emit a ","type":"text"},{"type":"codeVoice","code":"Result"},{"type":"text","text":" value and will either"},{"type":"text","text":" "},{"type":"text","text":"propagate the success value or throw the error contained within the "},{"type":"codeVoice","code":"Result"},{"type":"text","text":"."}]},{"inlineContent":[{"text":"Example:","type":"text"}],"type":"paragraph"},{"code":["let task = DeferredTask<Result<String, Error>> { ... }","let dematerializedTask = task.dematerialize()","do {","    let value: String = try await dematerializedTask.execute()","    \/\/ Handle success value","} catch {","    \/\/ Handle error","}"],"syntax":"swift","type":"codeListing"},{"name":"Throws","type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The error contained within the "},{"type":"codeVoice","code":"Result"},{"type":"text","text":" if itâ€™s a failure."}]}]}]}],"abstract":[{"type":"text","text":"Transforms a "},{"type":"codeVoice","code":"Result"},{"text":" value emitted by the current ","type":"text"},{"code":"AsynchronousUnitOfWork","type":"codeVoice"},{"text":" into its underlying success or failure.","type":"text"}],"metadata":{"extendedModule":"Afluent","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"dematerialize"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">() -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"AsynchronousUnitOfWork","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"text":">\n","kind":"text"}],"remoteSource":{"fileName":"Dematerialize.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/Workers\/Dematerialize.swift#L30"},"title":"dematerialize()","role":"symbol","roleHeading":"Instance Method","externalID":"s:7Afluent22AsynchronousUnitOfWorkPAAE13dematerializeQrys8SendableRd__s6ResultOyqd__s5Error_pG7SuccessRtzlF::SYNTHESIZED::s:7Afluent12DeferredTaskC","modules":[{"name":"Afluent"}]},"variants":[{"paths":["\/documentation\/afluent\/deferredtask\/dematerialize()"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"references":{"doc://Afluent/documentation/Afluent/DeferredTask/AsynchronousUnitOfWork-Implementations":{"role":"collectionGroup","kind":"article","title":"AsynchronousUnitOfWork Implementations","url":"\/documentation\/afluent\/deferredtask\/asynchronousunitofwork-implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask\/AsynchronousUnitOfWork-Implementations","type":"topic","abstract":[]},"doc://Afluent/documentation/Afluent/DeferredTask/dematerialize()":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask\/dematerialize()","abstract":[{"text":"Transforms a ","type":"text"},{"code":"Result","type":"codeVoice"},{"text":" value emitted by the current ","type":"text"},{"type":"codeVoice","code":"AsynchronousUnitOfWork"},{"type":"text","text":" into its underlying success or failure."}],"title":"dematerialize()","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dematerialize","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">() -> ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWork","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">\n"}],"url":"\/documentation\/afluent\/deferredtask\/dematerialize()","kind":"symbol"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"url":"\/documentation\/afluent\/asynchronousunitofwork","type":"topic","abstract":[{"text":"Represents an asynchronous unit of work.","type":"text"}],"title":"AsynchronousUnitOfWork","navigatorTitle":[{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork/Success":{"required":true,"url":"\/documentation\/afluent\/asynchronousunitofwork\/success","type":"topic","abstract":[{"type":"text","text":"The type of data the unit of work will produce if it succeeds."}],"title":"Success","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/Success","role":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Success"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier","text":"Sendable"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent":{"title":"Afluent","abstract":[],"type":"topic","url":"\/documentation\/afluent","role":"collection","identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol"},"doc://Afluent/documentation/Afluent/DeferredTask":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DeferredTask"}],"title":"DeferredTask","navigatorTitle":[{"text":"DeferredTask","kind":"identifier"}],"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A structure representing a deferred asynchronous unit of work."}],"url":"\/documentation\/afluent\/deferredtask","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","type":"topic"}}}