{"abstract":[{"text":"Retries the upstream ","type":"text"},{"code":"AsynchronousUnitOfWork","type":"codeVoice"},{"text":" up to a specified number of times only when a specific error occurs.","type":"text"}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"retry","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"E"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"retries"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":" = 1, ","kind":"text"},{"text":"on","kind":"externalParam"},{"kind":"text","text":" "},{"text":"error","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"text":"AsynchronousUnitOfWork","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Success"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"E","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SQ","text":"Equatable","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"E","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"text":"\n","kind":"text"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"retries","content":[{"inlineContent":[{"text":"The maximum number of times to retry the upstream, defaulting to 1.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The specific error that should trigger a retry."}]}],"name":"error"}]},{"content":[{"type":"heading","text":"Return Value","level":2,"anchor":"return-value"},{"inlineContent":[{"type":"text","text":"An "},{"code":"AsynchronousUnitOfWork","type":"codeVoice"},{"type":"text","text":" that emits the same output as the upstream but retries on the specified error up to the specified number of times."}],"type":"paragraph"}],"kind":"content"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask\/retry(_:on:)","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/afluent\/deferredtask\/retry(_:on:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","metadata":{"modules":[{"name":"Afluent"}],"symbolKind":"method","roleHeading":"Instance Method","role":"symbol","remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/Workers\/Retry.swift#L109","fileName":"Retry.swift"},"externalID":"s:7Afluent22AsynchronousUnitOfWorkPAAE5retry_2onQrSu_qd__tSQRd__s5ErrorRd__lF::SYNTHESIZED::s:7Afluent12DeferredTaskC","title":"retry(_:on:)","extendedModule":"Afluent","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"retry"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"E"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"on","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","text":"AsynchronousUnitOfWork"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Success","kind":"typeIdentifier"},{"text":">\n","kind":"text"}]},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask\/AsynchronousUnitOfWork-Implementations"]]},"sections":[],"references":{"doc://Afluent/documentation/Afluent":{"kind":"symbol","url":"\/documentation\/afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","role":"collection","abstract":[],"title":"Afluent","type":"topic"},"doc://Afluent/documentation/Afluent/DeferredTask":{"url":"\/documentation\/afluent\/deferredtask","abstract":[{"type":"text","text":"A structure representing a deferred asynchronous unit of work."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"DeferredTask"}],"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"DeferredTask","kind":"identifier"}],"title":"DeferredTask","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","role":"symbol"},"doc://Afluent/documentation/Afluent/DeferredTask/AsynchronousUnitOfWork-Implementations":{"url":"\/documentation\/afluent\/deferredtask\/asynchronousunitofwork-implementations","abstract":[],"kind":"article","type":"topic","title":"AsynchronousUnitOfWork Implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask\/AsynchronousUnitOfWork-Implementations","role":"collectionGroup"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"abstract":[{"type":"text","text":"Represents an asynchronous unit of work."}],"url":"\/documentation\/afluent\/asynchronousunitofwork","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWork"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"title":"AsynchronousUnitOfWork","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","role":"symbol"},"doc://Afluent/documentation/Afluent/DeferredTask/retry(_:on:)":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask\/retry(_:on:)","url":"\/documentation\/afluent\/deferredtask\/retry(_:on:)","role":"symbol","abstract":[{"text":"Retries the upstream ","type":"text"},{"code":"AsynchronousUnitOfWork","type":"codeVoice"},{"text":" up to a specified number of times only when a specific error occurs.","type":"text"}],"kind":"symbol","type":"topic","title":"retry(_:on:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"retry"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"E"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"on","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","text":"AsynchronousUnitOfWork"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Success"},{"text":">\n","kind":"text"}]}}}