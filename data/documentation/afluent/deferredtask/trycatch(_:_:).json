{"abstract":[{"type":"text","text":"Tries to catch a specific type of error emitted by the upstream "},{"type":"codeVoice","code":"AsynchronousUnitOfWork"},{"text":" and handles them using the provided throwing closure.","type":"text"}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask\/tryCatch(_:_:)","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/afluent\/deferredtask\/trycatch(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask\/AsynchronousUnitOfWork-Implementations"]]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"tryCatch"},{"kind":"text","text":"<"},{"text":"D","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"E"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"error","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"E"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"handler","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"E"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","kind":"typeIdentifier","text":"AsynchronousUnitOfWork"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Success","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/Success"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"D","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","text":"AsynchronousUnitOfWork"},{"text":", ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"Equatable","kind":"typeIdentifier","preciseIdentifier":"s:SQ"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"E"},{"text":" : ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Success","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/Success","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa","kind":"typeIdentifier"},{"kind":"text","text":" == "},{"text":"D","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Success","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/Success","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa","kind":"typeIdentifier"},{"kind":"text","text":"\n"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The specific error type to catch.","type":"text"}]}],"name":"error"},{"content":[{"inlineContent":[{"type":"text","text":"A closure that takes an "},{"code":"Error","type":"codeVoice"},{"type":"text","text":" and returns an "},{"type":"codeVoice","code":"AsynchronousUnitOfWork"},{"text":", potentially throwing an error.","type":"text"}],"type":"paragraph"}],"name":"handler"}]},{"kind":"content","content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"An ","type":"text"},{"type":"codeVoice","code":"AsynchronousUnitOfWork"},{"type":"text","text":" that will try to catch and handle the specific error."}]}]}],"metadata":{"remoteSource":{"fileName":"Catch.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/Workers\/Catch.swift#L78"},"extendedModule":"Afluent","modules":[{"name":"Afluent"}],"title":"tryCatch(_:_:)","roleHeading":"Instance Method","symbolKind":"method","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"tryCatch","kind":"identifier"},{"text":"<","kind":"text"},{"text":"D","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"E","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"E"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"D","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","text":"AsynchronousUnitOfWork"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Success","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa","kind":"typeIdentifier"},{"text":">\n","kind":"text"}],"externalID":"s:7Afluent22AsynchronousUnitOfWorkPAAE8tryCatchyQrqd_0__qd__qd_0_YaYbKctAaBRd__SQRd_0_s5ErrorRd_0_7SuccessQyd__AFRtzr0_lF::SYNTHESIZED::s:7Afluent12DeferredTaskC"},"references":{"doc://Afluent/documentation/Afluent":{"abstract":[],"role":"collection","identifier":"doc:\/\/Afluent\/documentation\/Afluent","title":"Afluent","kind":"symbol","type":"topic","url":"\/documentation\/afluent"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"abstract":[{"text":"Represents an asynchronous unit of work.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsynchronousUnitOfWork","kind":"identifier"}],"kind":"symbol","title":"AsynchronousUnitOfWork","url":"\/documentation\/afluent\/asynchronousunitofwork","type":"topic"},"doc://Afluent/documentation/Afluent/DeferredTask":{"abstract":[{"type":"text","text":"A structure representing a deferred asynchronous unit of work."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DeferredTask"}],"role":"symbol","navigatorTitle":[{"text":"DeferredTask","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask","title":"DeferredTask","type":"topic","url":"\/documentation\/afluent\/deferredtask","kind":"symbol"},"doc://Afluent/documentation/Afluent/DeferredTask/tryCatch(_:_:)":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask\/tryCatch(_:_:)","abstract":[{"text":"Tries to catch a specific type of error emitted by the upstream ","type":"text"},{"code":"AsynchronousUnitOfWork","type":"codeVoice"},{"type":"text","text":" and handles them using the provided throwing closure."}],"url":"\/documentation\/afluent\/deferredtask\/trycatch(_:_:)","title":"tryCatch(_:_:)","type":"topic","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"tryCatch"},{"text":"<","kind":"text"},{"text":"D","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"E"},{"kind":"text","text":">("},{"text":"E","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"D"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"text":"AsynchronousUnitOfWork","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Success","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP7SuccessQa"},{"kind":"text","text":">\n"}]},"doc://Afluent/documentation/Afluent/DeferredTask/AsynchronousUnitOfWork-Implementations":{"role":"collectionGroup","title":"AsynchronousUnitOfWork Implementations","url":"\/documentation\/afluent\/deferredtask\/asynchronousunitofwork-implementations","kind":"article","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/DeferredTask\/AsynchronousUnitOfWork-Implementations","type":"topic"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork/Success":{"type":"topic","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Success","kind":"identifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP","text":"Sendable"}],"abstract":[{"text":"The type of data the unit of work will produce if it succeeds.","type":"text"}],"url":"\/documentation\/afluent\/asynchronousunitofwork\/success","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork\/Success","required":true,"title":"Success","kind":"symbol"}}}