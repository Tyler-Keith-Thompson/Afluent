{"abstract":[{"text":"An exponential backoff strategy for retrying operations.","type":"text"}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"actor"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ExponentialBackoffStrategy"},{"text":"<","kind":"text"},{"text":"Clock","kind":"genericParameter"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Clock"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency5ClockP","text":"Clock"}],"languages":["swift"],"platforms":["macOS"]}]},{"content":[{"text":"Overview","level":2,"type":"heading","anchor":"overview"},{"inlineContent":[{"text":"This actor calculates exponential delays between retries based on a specified base value. With each retry,","type":"text"},{"type":"text","text":" "},{"text":"the delay increases exponentially until the maximum retry count is reached.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/exponentialbackoffstrategy"]}],"sections":[],"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","doc:\/\/Afluent\/s8SendableP","doc:\/\/Afluent\/ScA","doc:\/\/Afluent\/12_Concurrency8AnyActorP"],"type":"conformsTo","title":"Conforms To"}],"metadata":{"modules":[{"name":"Afluent"}],"title":"ExponentialBackoffStrategy","externalID":"s:7Afluent26ExponentialBackoffStrategyC","platforms":[{"introducedAt":"16.0","beta":false,"unavailable":false,"name":"iOS","deprecated":false},{"unavailable":false,"name":"macOS","beta":false,"deprecated":false,"introducedAt":"13.0"},{"deprecated":false,"introducedAt":"16.0","name":"tvOS","unavailable":false,"beta":false},{"introducedAt":"9.0","unavailable":false,"name":"watchOS","deprecated":false,"beta":false}],"role":"symbol","roleHeading":"Class","remoteSource":{"fileName":"RetryByBackoffStrategy.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/RetryStrategies\/RetryByBackoffStrategy.swift#L109"},"symbolKind":"class","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ExponentialBackoffStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"ExponentialBackoffStrategy","kind":"identifier"}]},"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/init(base:maxCount:maxDelay:)-3j13l","doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/init(base:maxCount:maxDelay:)-4kgu6"]},{"title":"Instance Methods","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/backoff(clock:durationUnit:)"]},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/Actor-Implementations","doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/BackoffStrategy-Implementations"],"generated":true,"title":"Default Implementations"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy/init(base:maxCount:maxDelay:)-3j13l":{"url":"\/documentation\/afluent\/exponentialbackoffstrategy\/init(base:maxcount:maxdelay:)-3j13l","title":"init(base:maxCount:maxDelay:)","role":"symbol","abstract":[{"text":"Creates a new exponential backoff strategy with the given base and maximum retry count.","type":"text"}],"kind":"symbol","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"base","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":", ","kind":"text"},{"text":"maxCount","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"maxDelay"},{"text":": ","kind":"text"},{"text":"Clock","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa","text":"Duration","kind":"typeIdentifier"},{"kind":"text","text":")"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/init(base:maxCount:maxDelay:)-3j13l"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy/backoff(clock:durationUnit:)":{"url":"\/documentation\/afluent\/exponentialbackoffstrategy\/backoff(clock:durationunit:)","title":"backoff(clock:durationUnit:)","role":"symbol","kind":"symbol","abstract":[],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"backoff"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"clock","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Clock","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"durationUnit","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Clock"},{"kind":"text","text":"."},{"text":"Duration","preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/backoff(clock:durationUnit:)"},"doc://Afluent/12_Concurrency8AnyActorP":{"title":"_Concurrency.AnyActor","type":"unresolvable","identifier":"doc:\/\/Afluent\/12_Concurrency8AnyActorP"},"doc://Afluent/documentation/Afluent/BackoffStrategy":{"type":"topic","url":"\/documentation\/afluent\/backoffstrategy","abstract":[{"type":"text","text":"A protocol for implementing custom backoff strategies in retry mechanisms."}],"navigatorTitle":[{"kind":"identifier","text":"BackoffStrategy"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","kind":"symbol","role":"symbol","title":"BackoffStrategy","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BackoffStrategy","kind":"identifier"}]},"doc://Afluent/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/Afluent\/s8SendableP"},"doc://Afluent/documentation/Afluent":{"url":"\/documentation\/afluent","role":"collection","title":"Afluent","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent","abstract":[],"kind":"symbol"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy":{"abstract":[{"text":"An exponential backoff strategy for retrying operations.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"ExponentialBackoffStrategy","kind":"identifier"}],"role":"symbol","type":"topic","title":"ExponentialBackoffStrategy","navigatorTitle":[{"text":"ExponentialBackoffStrategy","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","url":"\/documentation\/afluent\/exponentialbackoffstrategy"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy/BackoffStrategy-Implementations":{"title":"BackoffStrategy Implementations","abstract":[],"kind":"article","role":"collectionGroup","url":"\/documentation\/afluent\/exponentialbackoffstrategy\/backoffstrategy-implementations","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/BackoffStrategy-Implementations"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy/Actor-Implementations":{"abstract":[],"role":"collectionGroup","type":"topic","title":"Actor Implementations","kind":"article","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/Actor-Implementations","url":"\/documentation\/afluent\/exponentialbackoffstrategy\/actor-implementations"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy/init(base:maxCount:maxDelay:)-4kgu6":{"url":"\/documentation\/afluent\/exponentialbackoffstrategy\/init(base:maxcount:maxdelay:)-4kgu6","title":"init(base:maxCount:maxDelay:)","abstract":[{"type":"text","text":"Creates a new exponential backoff strategy with the given base and maximum retry count."}],"kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"base"},{"kind":"text","text":": "},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"maxCount","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"text":"maxDelay","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Clock","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa","text":"Duration"},{"text":")","kind":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/init(base:maxCount:maxDelay:)-4kgu6","role":"symbol","type":"topic"},"doc://Afluent/ScA":{"title":"_Concurrency.Actor","type":"unresolvable","identifier":"doc:\/\/Afluent\/ScA"}}}