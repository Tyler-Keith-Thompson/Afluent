{"primaryContentSections":[{"declarations":[{"tokens":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ExponentialBackoffStrategy","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Clock"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Clock"},{"kind":"text","text":" : "},{"text":"Clock","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency5ClockP"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"type":"heading","anchor":"overview","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This actor calculates exponential delays between retries based on a specified base value. With each retry,"},{"text":" ","type":"text"},{"type":"text","text":"the delay increases exponentially until the maximum retry count is reached."}]}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy"},"variants":[{"paths":["\/documentation\/afluent\/exponentialbackoffstrategy"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"type":"conformsTo","kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","doc:\/\/Afluent\/s8SendableP","doc:\/\/Afluent\/ScA","doc:\/\/Afluent\/12_Concurrency8AnyActorP"]}],"metadata":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"ExponentialBackoffStrategy","kind":"identifier"}],"role":"symbol","title":"ExponentialBackoffStrategy","roleHeading":"Class","externalID":"s:7Afluent26ExponentialBackoffStrategyC","navigatorTitle":[{"text":"ExponentialBackoffStrategy","kind":"identifier"}],"remoteSource":{"fileName":"RetryByBackoffStrategy.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/RetryStrategies\/RetryByBackoffStrategy.swift#L103"},"modules":[{"name":"Afluent"}],"symbolKind":"class"},"sections":[],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"type":"text","text":"An exponential backoff strategy for retrying operations."}],"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/init(base:maxCount:maxDelay:)-3j13l","doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/init(base:maxCount:maxDelay:)-4kgu6"],"title":"Initializers"},{"title":"Instance Methods","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/backoff(clock:durationUnit:)"]},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/Actor-Implementations","doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/BackoffStrategy-Implementations"],"title":"Default Implementations","generated":true}],"references":{"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy/init(base:maxCount:maxDelay:)-4kgu6":{"role":"symbol","title":"init(base:maxCount:maxDelay:)","kind":"symbol","abstract":[{"type":"text","text":"Creates a new exponential backoff strategy with the given base and maximum retry count."}],"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"base","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maxCount"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":", "},{"text":"maxDelay","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Clock"},{"kind":"text","text":"."},{"preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa","kind":"typeIdentifier","text":"Duration"},{"kind":"text","text":")"}],"type":"topic","url":"\/documentation\/afluent\/exponentialbackoffstrategy\/init(base:maxcount:maxdelay:)-4kgu6","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/init(base:maxCount:maxDelay:)-4kgu6"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy/backoff(clock:durationUnit:)":{"kind":"symbol","title":"backoff(clock:durationUnit:)","role":"symbol","url":"\/documentation\/afluent\/exponentialbackoffstrategy\/backoff(clock:durationunit:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"backoff","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"clock","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Clock"},{"text":", ","kind":"text"},{"text":"durationUnit","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Clock"},{"kind":"text","text":"."},{"text":"Duration","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/backoff(clock:durationUnit:)","type":"topic"},"doc://Afluent/documentation/Afluent":{"type":"topic","abstract":[],"title":"Afluent","kind":"symbol","url":"\/documentation\/afluent","role":"collection","identifier":"doc:\/\/Afluent\/documentation\/Afluent"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ExponentialBackoffStrategy"}],"navigatorTitle":[{"text":"ExponentialBackoffStrategy","kind":"identifier"}],"abstract":[{"type":"text","text":"An exponential backoff strategy for retrying operations."}],"role":"symbol","type":"topic","title":"ExponentialBackoffStrategy","url":"\/documentation\/afluent\/exponentialbackoffstrategy","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy/init(base:maxCount:maxDelay:)-3j13l":{"type":"topic","abstract":[{"type":"text","text":"Creates a new exponential backoff strategy with the given base and maximum retry count."}],"url":"\/documentation\/afluent\/exponentialbackoffstrategy\/init(base:maxcount:maxdelay:)-3j13l","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"base"},{"kind":"text","text":": "},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maxCount"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maxDelay"},{"text":": ","kind":"text"},{"text":"Clock","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa","text":"Duration","kind":"typeIdentifier"},{"kind":"text","text":")"}],"kind":"symbol","title":"init(base:maxCount:maxDelay:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/init(base:maxCount:maxDelay:)-3j13l","role":"symbol"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy/Actor-Implementations":{"kind":"article","abstract":[],"title":"Actor Implementations","role":"collectionGroup","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/Actor-Implementations","type":"topic","url":"\/documentation\/afluent\/exponentialbackoffstrategy\/actor-implementations"},"doc://Afluent/documentation/Afluent/BackoffStrategy":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BackoffStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"BackoffStrategy"}],"abstract":[{"text":"A protocol for implementing custom backoff strategies in retry mechanisms.","type":"text"}],"role":"symbol","type":"topic","title":"BackoffStrategy","url":"\/documentation\/afluent\/backoffstrategy","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy"},"doc://Afluent/ScA":{"type":"unresolvable","title":"_Concurrency.Actor","identifier":"doc:\/\/Afluent\/ScA"},"doc://Afluent/12_Concurrency8AnyActorP":{"type":"unresolvable","title":"_Concurrency.AnyActor","identifier":"doc:\/\/Afluent\/12_Concurrency8AnyActorP"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy/BackoffStrategy-Implementations":{"kind":"article","type":"topic","url":"\/documentation\/afluent\/exponentialbackoffstrategy\/backoffstrategy-implementations","title":"BackoffStrategy Implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/BackoffStrategy-Implementations","role":"collectionGroup","abstract":[]},"doc://Afluent/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/Afluent\/s8SendableP"}}}