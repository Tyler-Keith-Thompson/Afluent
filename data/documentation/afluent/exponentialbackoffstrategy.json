{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/init(base:maxCount:maxDelay:)-3j13l","doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/init(base:maxCount:maxDelay:)-4kgu6"]},{"title":"Instance Methods","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/backoff(clock:durationUnit:)"]},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/Actor-Implementations","doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/BackoffStrategy-Implementations"],"title":"Default Implementations","generated":true}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","interfaceLanguage":"swift"},"metadata":{"remoteSource":{"fileName":"RetryByBackoffStrategy.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/RetryStrategies\/RetryByBackoffStrategy.swift#L103"},"title":"ExponentialBackoffStrategy","externalID":"s:7Afluent26ExponentialBackoffStrategyC","navigatorTitle":[{"kind":"identifier","text":"ExponentialBackoffStrategy"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"ExponentialBackoffStrategy","kind":"identifier"}],"symbolKind":"class","roleHeading":"Class","modules":[{"name":"Afluent"}],"role":"symbol"},"sections":[],"abstract":[{"text":"An exponential backoff strategy for retrying operations.","type":"text"}],"relationshipsSections":[{"kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","doc:\/\/Afluent\/s8SendableP","doc:\/\/Afluent\/ScA","doc:\/\/Afluent\/12_Concurrency8AnyActorP"],"type":"conformsTo"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"ExponentialBackoffStrategy"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Clock"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Clock"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:12_Concurrency5ClockP","kind":"typeIdentifier","text":"Clock"}],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This actor calculates exponential delays between retries based on a specified base value. With each retry,"},{"type":"text","text":" "},{"type":"text","text":"the delay increases exponentially until the maximum retry count is reached."}]}]}],"variants":[{"paths":["\/documentation\/afluent\/exponentialbackoffstrategy"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy/backoff(clock:durationUnit:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"backoff","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"clock","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Clock"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"durationUnit"},{"text":": (","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Clock"},{"text":".","kind":"text"},{"text":"Duration","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"role":"symbol","url":"\/documentation\/afluent\/exponentialbackoffstrategy\/backoff(clock:durationunit:)","type":"topic","title":"backoff(clock:durationUnit:)","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/backoff(clock:durationUnit:)","kind":"symbol"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy/BackoffStrategy-Implementations":{"title":"BackoffStrategy Implementations","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/BackoffStrategy-Implementations","url":"\/documentation\/afluent\/exponentialbackoffstrategy\/backoffstrategy-implementations","kind":"article","role":"collectionGroup","abstract":[]},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy/Actor-Implementations":{"title":"Actor Implementations","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/Actor-Implementations","url":"\/documentation\/afluent\/exponentialbackoffstrategy\/actor-implementations","kind":"article","role":"collectionGroup","abstract":[]},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy/init(base:maxCount:maxDelay:)-3j13l":{"title":"init(base:maxCount:maxDelay:)","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/init(base:maxCount:maxDelay:)-3j13l","url":"\/documentation\/afluent\/exponentialbackoffstrategy\/init(base:maxcount:maxdelay:)-3j13l","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"base"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"maxCount"},{"kind":"text","text":": "},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maxDelay"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Clock"},{"kind":"text","text":"."},{"text":"Duration","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa"},{"kind":"text","text":")"}],"kind":"symbol","role":"symbol","abstract":[{"text":"Creates a new exponential backoff strategy with the given base and maximum retry count.","type":"text"}]},"doc://Afluent/s8SendableP":{"identifier":"doc:\/\/Afluent\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://Afluent/documentation/Afluent":{"type":"topic","kind":"symbol","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent","role":"collection","title":"Afluent","url":"\/documentation\/afluent"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy/init(base:maxCount:maxDelay:)-4kgu6":{"title":"init(base:maxCount:maxDelay:)","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy\/init(base:maxCount:maxDelay:)-4kgu6","url":"\/documentation\/afluent\/exponentialbackoffstrategy\/init(base:maxcount:maxdelay:)-4kgu6","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"base"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maxCount"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":", "},{"text":"maxDelay","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Clock","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa","kind":"typeIdentifier","text":"Duration"},{"kind":"text","text":")"}],"kind":"symbol","role":"symbol","abstract":[{"text":"Creates a new exponential backoff strategy with the given base and maximum retry count.","type":"text"}]},"doc://Afluent/ScA":{"identifier":"doc:\/\/Afluent\/ScA","title":"_Concurrency.Actor","type":"unresolvable"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy":{"navigatorTitle":[{"kind":"identifier","text":"ExponentialBackoffStrategy"}],"type":"topic","url":"\/documentation\/afluent\/exponentialbackoffstrategy","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"ExponentialBackoffStrategy","kind":"identifier"}],"title":"ExponentialBackoffStrategy","abstract":[{"text":"An exponential backoff strategy for retrying operations.","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy"},"doc://Afluent/documentation/Afluent/BackoffStrategy":{"title":"BackoffStrategy","navigatorTitle":[{"kind":"identifier","text":"BackoffStrategy"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","url":"\/documentation\/afluent\/backoffstrategy","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"BackoffStrategy"}],"kind":"symbol","role":"symbol","abstract":[{"text":"A protocol for implementing custom backoff strategies in retry mechanisms.","type":"text"}]},"doc://Afluent/12_Concurrency8AnyActorP":{"identifier":"doc:\/\/Afluent\/12_Concurrency8AnyActorP","title":"_Concurrency.AnyActor","type":"unresolvable"}}}