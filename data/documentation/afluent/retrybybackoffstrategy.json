{"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/init(_:clock:durationUnit:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/handle(error:beforeRetry:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/Actor-Implementations","doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/RetryStrategy-Implementations"],"generated":true}],"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"actor"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RetryByBackoffStrategy"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Strategy"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Strategy","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:7Afluent15BackoffStrategyP","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","text":"BackoffStrategy","kind":"typeIdentifier"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The type of ","type":"text"},{"type":"codeVoice","code":"Clock"},{"type":"text","text":" used for measuring time between retries."}]}],"name":"C"}]},{"content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"This actor manages retry attempts with a configurable ","type":"text"},{"code":"BackoffStrategy","type":"codeVoice"},{"type":"text","text":" and clock. It uses the clock to calculate"},{"type":"text","text":" "},{"text":"the time delays between retries, allowing more fine-grained control over the timing of retries based on the provided","type":"text"},{"type":"text","text":" "},{"text":"backoff strategy.","type":"text"}]},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This actor conforms to "},{"code":"RetryStrategy","type":"codeVoice"},{"text":" and is used to manage retries based on time delays.","type":"text"}]}],"name":"Note"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/retrybybackoffstrategy"]}],"relationshipsSections":[{"title":"Conforms To","kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","doc:\/\/Afluent\/s8SendableP","doc:\/\/Afluent\/ScA","doc:\/\/Afluent\/12_Concurrency8AnyActorP"]}],"kind":"symbol","identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","interfaceLanguage":"swift"},"metadata":{"platforms":[{"unavailable":false,"name":"iOS","introducedAt":"16.0","beta":false,"deprecated":false},{"name":"macOS","introducedAt":"13.0","unavailable":false,"deprecated":false,"beta":false},{"unavailable":false,"deprecated":false,"introducedAt":"16.0","name":"tvOS","beta":false},{"introducedAt":"9.0","unavailable":false,"deprecated":false,"beta":false,"name":"watchOS"}],"externalID":"s:7Afluent22RetryByBackoffStrategyC","modules":[{"name":"Afluent"}],"roleHeading":"Class","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RetryByBackoffStrategy"}],"title":"RetryByBackoffStrategy","role":"symbol","symbolKind":"class","navigatorTitle":[{"kind":"identifier","text":"RetryByBackoffStrategy"}],"remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/RetryStrategies\/RetryByBackoffStrategy.swift#L36","fileName":"RetryByBackoffStrategy.swift"}},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"abstract":[{"type":"text","text":"A retry strategy using a specified backoff strategy and clock."}],"references":{"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/Actor-Implementations":{"abstract":[],"title":"Actor Implementations","role":"collectionGroup","kind":"article","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/Actor-Implementations","url":"\/documentation\/afluent\/retrybybackoffstrategy\/actor-implementations"},"doc://Afluent/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/Afluent\/s8SendableP","title":"Swift.Sendable"},"doc://Afluent/ScA":{"type":"unresolvable","identifier":"doc:\/\/Afluent\/ScA","title":"_Concurrency.Actor"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/RetryStrategy-Implementations":{"kind":"article","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/RetryStrategy-Implementations","abstract":[],"title":"RetryStrategy Implementations","role":"collectionGroup","type":"topic","url":"\/documentation\/afluent\/retrybybackoffstrategy\/retrystrategy-implementations"},"doc://Afluent/documentation/Afluent/RetryStrategy":{"abstract":[{"text":"A strategy for handling errors and determining whether to retry an operation.","type":"text"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RetryStrategy","kind":"identifier"}],"role":"symbol","url":"\/documentation\/afluent\/retrystrategy","navigatorTitle":[{"text":"RetryStrategy","kind":"identifier"}],"title":"RetryStrategy","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy":{"abstract":[{"text":"A retry strategy using a specified backoff strategy and clock.","type":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","type":"topic","url":"\/documentation\/afluent\/retrybybackoffstrategy","kind":"symbol","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RetryByBackoffStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"RetryByBackoffStrategy"}],"title":"RetryByBackoffStrategy"},"doc://Afluent/12_Concurrency8AnyActorP":{"type":"unresolvable","identifier":"doc:\/\/Afluent\/12_Concurrency8AnyActorP","title":"_Concurrency.AnyActor"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/init(_:clock:durationUnit:)":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/init(_:clock:durationUnit:)","abstract":[{"type":"text","text":"Creates a new retry strategy with the given backoff strategy and clock."}],"type":"topic","url":"\/documentation\/afluent\/retrybybackoffstrategy\/init(_:clock:durationunit:)","kind":"symbol","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Strategy","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"clock","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Strategy"},{"kind":"text","text":"."},{"text":"Clock","preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"durationUnit"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Afluent17ClockDurationUnita","text":"ClockDurationUnit","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Strategy"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa","text":"Clock"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"title":"init(_:clock:durationUnit:)"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/handle(error:beforeRetry:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"handle"},{"kind":"text","text":"("},{"text":"error","kind":"externalParam"},{"text":": any ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":", ","kind":"text"},{"text":"beforeRetry","kind":"externalParam"},{"kind":"text","text":": (any "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"type":"topic","url":"\/documentation\/afluent\/retrybybackoffstrategy\/handle(error:beforeretry:)","title":"handle(error:beforeRetry:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/handle(error:beforeRetry:)","abstract":[],"role":"symbol","kind":"symbol"},"doc://Afluent/documentation/Afluent/BackoffStrategy":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BackoffStrategy"}],"kind":"symbol","url":"\/documentation\/afluent\/backoffstrategy","title":"BackoffStrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","navigatorTitle":[{"kind":"identifier","text":"BackoffStrategy"}],"role":"symbol","abstract":[{"text":"A protocol for implementing custom backoff strategies in retry mechanisms.","type":"text"}],"type":"topic"},"doc://Afluent/documentation/Afluent":{"type":"topic","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol","url":"\/documentation\/afluent","title":"Afluent","role":"collection"}}}