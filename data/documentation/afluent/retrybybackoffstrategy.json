{"relationshipsSections":[{"kind":"relationships","title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","doc:\/\/Afluent\/s8SendableP","doc:\/\/Afluent\/ScA"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/retrybybackoffstrategy"]}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"abstract":[{"text":"A retry strategy using a specified backoff strategy and clock.","type":"text"}],"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RetryByBackoffStrategy","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Strategy","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"Strategy","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent15BackoffStrategyP","text":"BackoffStrategy"}],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"text":"The type of ","type":"text"},{"type":"codeVoice","code":"Clock"},{"type":"text","text":" used for measuring time between retries."}],"type":"paragraph"}],"name":"C"}],"kind":"parameters"},{"content":[{"anchor":"overview","level":2,"text":"Overview","type":"heading"},{"inlineContent":[{"text":"This actor manages retry attempts with a configurable ","type":"text"},{"type":"codeVoice","code":"BackoffStrategy"},{"type":"text","text":" and clock. It uses the clock to calculate"},{"type":"text","text":" "},{"text":"the time delays between retries, allowing more fine-grained control over the timing of retries based on the provided","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"backoff strategy."}],"type":"paragraph"},{"style":"note","name":"Note","type":"aside","content":[{"inlineContent":[{"type":"text","text":"This actor conforms to "},{"type":"codeVoice","code":"RetryStrategy"},{"text":" and is used to manage retries based on time delays.","type":"text"}],"type":"paragraph"}]}],"kind":"content"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"remoteSource":{"fileName":"RetryByBackoffStrategy.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/RetryStrategies\/RetryByBackoffStrategy.swift#L39"},"externalID":"s:7Afluent22RetryByBackoffStrategyC","platforms":[{"introducedAt":"16.0","unavailable":false,"beta":false,"name":"iOS","deprecated":false},{"beta":false,"deprecated":false,"name":"macOS","introducedAt":"13.0","unavailable":false},{"deprecated":false,"beta":false,"introducedAt":"16.0","unavailable":false,"name":"tvOS"},{"deprecated":false,"name":"watchOS","unavailable":false,"beta":false,"introducedAt":"9.0"}],"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"RetryByBackoffStrategy","kind":"identifier"}],"modules":[{"name":"Afluent"}],"navigatorTitle":[{"text":"RetryByBackoffStrategy","kind":"identifier"}],"symbolKind":"class","roleHeading":"Class","title":"RetryByBackoffStrategy"},"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/init(_:clock:durationUnit:)"],"anchor":"Initializers","title":"Initializers","generated":true},{"title":"Instance Methods","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/handle(error:beforeRetry:)"],"generated":true,"anchor":"Instance-Methods"},{"anchor":"Default-Implementations","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/Actor-Implementations","doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/RetryStrategy-Implementations"],"title":"Default Implementations","generated":true}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy"},"references":{"doc://Afluent/ScA":{"title":"_Concurrency.Actor","type":"unresolvable","identifier":"doc:\/\/Afluent\/ScA"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","abstract":[{"text":"A retry strategy using a specified backoff strategy and clock.","type":"text"}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RetryByBackoffStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"RetryByBackoffStrategy"}],"title":"RetryByBackoffStrategy","url":"\/documentation\/afluent\/retrybybackoffstrategy"},"doc://Afluent/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/Afluent\/s8SendableP"},"doc://Afluent/documentation/Afluent/RetryStrategy":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RetryStrategy"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","title":"RetryStrategy","url":"\/documentation\/afluent\/retrystrategy","type":"topic","abstract":[{"text":"A strategy for handling errors and determining whether to retry an operation.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"RetryStrategy"}]},"doc://Afluent/documentation/Afluent":{"type":"topic","url":"\/documentation\/afluent","kind":"symbol","role":"collection","title":"Afluent","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/Actor-Implementations":{"kind":"article","role":"collectionGroup","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/Actor-Implementations","abstract":[],"type":"topic","title":"Actor Implementations","url":"\/documentation\/afluent\/retrybybackoffstrategy\/actor-implementations"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/init(_:clock:durationUnit:)":{"type":"topic","abstract":[{"type":"text","text":"Creates a new retry strategy with the given backoff strategy and clock."}],"url":"\/documentation\/afluent\/retrybybackoffstrategy\/init(_:clock:durationunit:)","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"Strategy","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"clock"},{"kind":"text","text":": "},{"text":"Strategy","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Clock","preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"durationUnit","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Afluent17ClockDurationUnita","kind":"typeIdentifier","text":"ClockDurationUnit"},{"text":"<","kind":"text"},{"text":"Strategy","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa","kind":"typeIdentifier","text":"Clock"},{"text":", ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":">)","kind":"text"}],"title":"init(_:clock:durationUnit:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/init(_:clock:durationUnit:)"},"doc://Afluent/documentation/Afluent/BackoffStrategy":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","abstract":[{"text":"A protocol for implementing custom backoff strategies in retry mechanisms.","type":"text"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BackoffStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"BackoffStrategy"}],"title":"BackoffStrategy","url":"\/documentation\/afluent\/backoffstrategy"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/RetryStrategy-Implementations":{"type":"topic","abstract":[],"url":"\/documentation\/afluent\/retrybybackoffstrategy\/retrystrategy-implementations","title":"RetryStrategy Implementations","kind":"article","role":"collectionGroup","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/RetryStrategy-Implementations"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/handle(error:beforeRetry:)":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/handle(error:beforeRetry:)","abstract":[],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"handle","kind":"identifier"},{"text":"(","kind":"text"},{"text":"error","kind":"externalParam"},{"text":": any ","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"beforeRetry"},{"text":": (any ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"title":"handle(error:beforeRetry:)","url":"\/documentation\/afluent\/retrybybackoffstrategy\/handle(error:beforeretry:)"}}}