{"topicSections":[{"anchor":"Initializers","generated":true,"title":"Initializers","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/init(_:clock:durationUnit:)"]},{"anchor":"Instance-Methods","title":"Instance Methods","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/handle(error:beforeRetry:)"],"generated":true},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/Actor-Implementations","doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/RetryStrategy-Implementations"],"anchor":"Default-Implementations","generated":true,"title":"Default Implementations"}],"abstract":[{"type":"text","text":"A retry strategy using a specified backoff strategy and clock."}],"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","doc:\/\/Afluent\/s8SendableP","doc:\/\/Afluent\/ScA"],"kind":"relationships"}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"metadata":{"symbolKind":"class","roleHeading":"Class","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RetryByBackoffStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"RetryByBackoffStrategy"}],"remoteSource":{"fileName":"RetryByBackoffStrategy.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/RetryStrategies\/RetryByBackoffStrategy.swift#L39"},"title":"RetryByBackoffStrategy","platforms":[{"deprecated":false,"introducedAt":"16.0","unavailable":false,"name":"iOS","beta":false},{"unavailable":false,"deprecated":false,"name":"macOS","beta":false,"introducedAt":"13.0"},{"introducedAt":"16.0","beta":false,"name":"tvOS","unavailable":false,"deprecated":false},{"introducedAt":"9.0","deprecated":false,"name":"watchOS","unavailable":false,"beta":false}],"modules":[{"name":"Afluent"}],"externalID":"s:7Afluent22RetryByBackoffStrategyC"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"RetryByBackoffStrategy"},{"kind":"text","text":"<"},{"text":"Strategy","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"Strategy","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"BackoffStrategy","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","preciseIdentifier":"s:7Afluent15BackoffStrategyP"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"C","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The type of "},{"code":"Clock","type":"codeVoice"},{"text":" used for measuring time between retries.","type":"text"}]}]}]},{"content":[{"level":2,"anchor":"overview","text":"Overview","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"This actor manages retry attempts with a configurable ","type":"text"},{"type":"codeVoice","code":"BackoffStrategy"},{"text":" and clock. It uses the clock to calculate","type":"text"},{"type":"text","text":" "},{"text":"the time delays between retries, allowing more fine-grained control over the timing of retries based on the provided","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"backoff strategy."}]},{"name":"Note","content":[{"inlineContent":[{"text":"This actor conforms to ","type":"text"},{"type":"codeVoice","code":"RetryStrategy"},{"type":"text","text":" and is used to manage retries based on time delays."}],"type":"paragraph"}],"type":"aside","style":"note"}],"kind":"content"}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/retrybybackoffstrategy"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","interfaceLanguage":"swift"},"references":{"doc://Afluent/documentation/Afluent/BackoffStrategy":{"abstract":[{"type":"text","text":"A protocol for implementing custom backoff strategies in retry mechanisms."}],"kind":"symbol","role":"symbol","title":"BackoffStrategy","navigatorTitle":[{"kind":"identifier","text":"BackoffStrategy"}],"type":"topic","url":"\/documentation\/afluent\/backoffstrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BackoffStrategy","kind":"identifier"}]},"doc://Afluent/documentation/Afluent":{"kind":"symbol","title":"Afluent","abstract":[],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent","role":"collection","url":"\/documentation\/afluent"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/init(_:clock:durationUnit:)":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"Strategy","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"clock","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Strategy","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa","text":"Clock","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"durationUnit"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Afluent17ClockDurationUnita","text":"ClockDurationUnit","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Strategy"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa","kind":"typeIdentifier","text":"Clock"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":">)"}],"abstract":[{"text":"Creates a new retry strategy with the given backoff strategy and clock.","type":"text"}],"role":"symbol","type":"topic","title":"init(_:clock:durationUnit:)","kind":"symbol","url":"\/documentation\/afluent\/retrybybackoffstrategy\/init(_:clock:durationunit:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/init(_:clock:durationUnit:)"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy":{"navigatorTitle":[{"kind":"identifier","text":"RetryByBackoffStrategy"}],"kind":"symbol","type":"topic","title":"RetryByBackoffStrategy","url":"\/documentation\/afluent\/retrybybackoffstrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"RetryByBackoffStrategy","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"A retry strategy using a specified backoff strategy and clock."}]},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/Actor-Implementations":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/Actor-Implementations","type":"topic","url":"\/documentation\/afluent\/retrybybackoffstrategy\/actor-implementations","title":"Actor Implementations","kind":"article","role":"collectionGroup","abstract":[]},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/RetryStrategy-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/RetryStrategy-Implementations","type":"topic","title":"RetryStrategy Implementations","kind":"article","url":"\/documentation\/afluent\/retrybybackoffstrategy\/retrystrategy-implementations","abstract":[]},"doc://Afluent/ScA":{"identifier":"doc:\/\/Afluent\/ScA","title":"_Concurrency.Actor","type":"unresolvable"},"doc://Afluent/documentation/Afluent/RetryStrategy":{"abstract":[{"type":"text","text":"A strategy for handling errors and determining whether to retry an operation."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RetryStrategy"}],"navigatorTitle":[{"text":"RetryStrategy","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","kind":"symbol","url":"\/documentation\/afluent\/retrystrategy","role":"symbol","title":"RetryStrategy","type":"topic"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/handle(error:beforeRetry:)":{"url":"\/documentation\/afluent\/retrybybackoffstrategy\/handle(error:beforeretry:)","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/handle(error:beforeRetry:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"handle","kind":"identifier"},{"kind":"text","text":"("},{"text":"error","kind":"externalParam"},{"text":": any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"text":", ","kind":"text"},{"text":"beforeRetry","kind":"externalParam"},{"kind":"text","text":": (any "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"abstract":[],"title":"handle(error:beforeRetry:)","type":"topic","kind":"symbol"},"doc://Afluent/s8SendableP":{"identifier":"doc:\/\/Afluent\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"}}}