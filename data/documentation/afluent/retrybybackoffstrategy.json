{"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","doc:\/\/Afluent\/s8SendableP","doc:\/\/Afluent\/ScA","doc:\/\/Afluent\/12_Concurrency8AnyActorP"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/retrybybackoffstrategy"]}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"metadata":{"externalID":"s:7Afluent22RetryByBackoffStrategyC","navigatorTitle":[{"text":"RetryByBackoffStrategy","kind":"identifier"}],"symbolKind":"class","title":"RetryByBackoffStrategy","roleHeading":"Class","modules":[{"name":"Afluent"}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RetryByBackoffStrategy","kind":"identifier"}],"platforms":[{"name":"iOS","deprecated":false,"introducedAt":"16.0","beta":false,"unavailable":false},{"introducedAt":"13.0","deprecated":false,"unavailable":false,"beta":false,"name":"macOS"},{"beta":false,"name":"tvOS","introducedAt":"16.0","deprecated":false,"unavailable":false},{"introducedAt":"9.0","beta":false,"deprecated":false,"name":"watchOS","unavailable":false}],"remoteSource":{"fileName":"RetryByBackoffStrategy.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/RetryStrategies\/RetryByBackoffStrategy.swift#L36"}},"sections":[],"kind":"symbol","abstract":[{"type":"text","text":"A retry strategy using a specified backoff strategy and clock."}],"topicSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/init(_:clock:durationUnit:)"],"title":"Initializers"},{"title":"Instance Methods","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/handle(error:beforeRetry:)"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/Actor-Implementations","doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/RetryStrategy-Implementations"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"actor"},{"text":" ","kind":"text"},{"text":"RetryByBackoffStrategy","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Strategy","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Strategy"},{"text":" : ","kind":"text"},{"text":"BackoffStrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent15BackoffStrategyP"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"C","content":[{"inlineContent":[{"type":"text","text":"The type of "},{"type":"codeVoice","code":"Clock"},{"type":"text","text":" used for measuring time between retries."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"This actor manages retry attempts with a configurable ","type":"text"},{"code":"BackoffStrategy","type":"codeVoice"},{"type":"text","text":" and clock. It uses the clock to calculate"},{"type":"text","text":" "},{"text":"the time delays between retries, allowing more fine-grained control over the timing of retries based on the provided","type":"text"},{"type":"text","text":" "},{"type":"text","text":"backoff strategy."}]},{"style":"note","content":[{"inlineContent":[{"type":"text","text":"This actor conforms to "},{"type":"codeVoice","code":"RetryStrategy"},{"type":"text","text":" and is used to manage retries based on time delays."}],"type":"paragraph"}],"type":"aside","name":"Note"}]}],"references":{"doc://Afluent/documentation/Afluent/BackoffStrategy":{"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"BackoffStrategy","kind":"identifier"}],"title":"BackoffStrategy","abstract":[{"type":"text","text":"A protocol for implementing custom backoff strategies in retry mechanisms."}],"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"BackoffStrategy"}],"url":"\/documentation\/afluent\/backoffstrategy"},"doc://Afluent/documentation/Afluent/RetryStrategy":{"title":"RetryStrategy","navigatorTitle":[{"text":"RetryStrategy","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/afluent\/retrystrategy","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","type":"topic","abstract":[{"type":"text","text":"A strategy for handling errors and determining whether to retry an operation."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"RetryStrategy","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/RetryStrategy-Implementations":{"type":"topic","title":"RetryStrategy Implementations","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/RetryStrategy-Implementations","kind":"article","url":"\/documentation\/afluent\/retrybybackoffstrategy\/retrystrategy-implementations"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/Actor-Implementations":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/Actor-Implementations","abstract":[],"title":"Actor Implementations","kind":"article","role":"collectionGroup","url":"\/documentation\/afluent\/retrybybackoffstrategy\/actor-implementations","type":"topic"},"doc://Afluent/ScA":{"type":"unresolvable","title":"_Concurrency.Actor","identifier":"doc:\/\/Afluent\/ScA"},"doc://Afluent/12_Concurrency8AnyActorP":{"type":"unresolvable","title":"_Concurrency.AnyActor","identifier":"doc:\/\/Afluent\/12_Concurrency8AnyActorP"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy":{"type":"topic","navigatorTitle":[{"text":"RetryByBackoffStrategy","kind":"identifier"}],"url":"\/documentation\/afluent\/retrybybackoffstrategy","abstract":[{"type":"text","text":"A retry strategy using a specified backoff strategy and clock."}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"RetryByBackoffStrategy","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","role":"symbol","kind":"symbol","title":"RetryByBackoffStrategy"},"doc://Afluent/documentation/Afluent":{"title":"Afluent","abstract":[],"type":"topic","url":"\/documentation\/afluent","role":"collection","identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/init(_:clock:durationUnit:)":{"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"Strategy","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"clock","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Strategy"},{"kind":"text","text":"."},{"text":"Clock","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa"},{"kind":"text","text":", "},{"kind":"externalParam","text":"durationUnit"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ClockDurationUnit","preciseIdentifier":"s:7Afluent17ClockDurationUnita"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Strategy"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Clock","preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa"},{"kind":"text","text":", "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"text":">)","kind":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/init(_:clock:durationUnit:)","url":"\/documentation\/afluent\/retrybybackoffstrategy\/init(_:clock:durationunit:)","role":"symbol","abstract":[{"type":"text","text":"Creates a new retry strategy with the given backoff strategy and clock."}],"type":"topic","title":"init(_:clock:durationUnit:)","kind":"symbol"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/handle(error:beforeRetry:)":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"handle","kind":"identifier"},{"kind":"text","text":"("},{"text":"error","kind":"externalParam"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"beforeRetry","kind":"externalParam"},{"text":": (any ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"title":"handle(error:beforeRetry:)","abstract":[],"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/handle(error:beforeRetry:)","kind":"symbol","url":"\/documentation\/afluent\/retrybybackoffstrategy\/handle(error:beforeretry:)"},"doc://Afluent/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/Afluent\/s8SendableP","type":"unresolvable"}}}