{"abstract":[{"text":"A retry strategy using a specified backoff strategy and clock.","type":"text"}],"sections":[],"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","doc:\/\/Afluent\/s8SendableP","doc:\/\/Afluent\/ScA","doc:\/\/Afluent\/12_Concurrency8AnyActorP"],"type":"conformsTo","kind":"relationships"}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/retrybybackoffstrategy"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RetryByBackoffStrategy"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Strategy"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"Strategy","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","preciseIdentifier":"s:7Afluent15BackoffStrategyP","text":"BackoffStrategy"}]}]},{"kind":"parameters","parameters":[{"name":"C","content":[{"type":"paragraph","inlineContent":[{"text":"The type of ","type":"text"},{"type":"codeVoice","code":"Clock"},{"type":"text","text":" used for measuring time between retries."}]}]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This actor manages retry attempts with a configurable "},{"type":"codeVoice","code":"BackoffStrategy"},{"text":" and clock. It uses the clock to calculate","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the time delays between retries, allowing more fine-grained control over the timing of retries based on the provided"},{"type":"text","text":" "},{"text":"backoff strategy.","type":"text"}]},{"type":"aside","name":"Note","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"This actor conforms to ","type":"text"},{"type":"codeVoice","code":"RetryStrategy"},{"type":"text","text":" and is used to manage retries based on time delays."}]}]}]}],"topicSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/init(_:clock:durationUnit:)"],"title":"Initializers"},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/handle(error:beforeRetry:)"],"title":"Instance Methods"},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/Actor-Implementations","doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/RetryStrategy-Implementations"]}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","interfaceLanguage":"swift"},"metadata":{"symbolKind":"class","roleHeading":"Class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RetryByBackoffStrategy"}],"externalID":"s:7Afluent22RetryByBackoffStrategyC","platforms":[{"deprecated":false,"name":"iOS","beta":false,"unavailable":false,"introducedAt":"16.0"},{"unavailable":false,"deprecated":false,"introducedAt":"13.0","beta":false,"name":"macOS"},{"introducedAt":"16.0","name":"tvOS","deprecated":false,"beta":false,"unavailable":false},{"name":"watchOS","introducedAt":"9.0","unavailable":false,"beta":false,"deprecated":false}],"navigatorTitle":[{"text":"RetryByBackoffStrategy","kind":"identifier"}],"title":"RetryByBackoffStrategy","role":"symbol","modules":[{"name":"Afluent"}],"remoteSource":{"fileName":"RetryByBackoffStrategy.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/RetryStrategies\/RetryByBackoffStrategy.swift#L39"}},"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","references":{"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/RetryStrategy-Implementations":{"url":"\/documentation\/afluent\/retrybybackoffstrategy\/retrystrategy-implementations","title":"RetryStrategy Implementations","role":"collectionGroup","type":"topic","kind":"article","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/RetryStrategy-Implementations","abstract":[]},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/handle(error:beforeRetry:)":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/handle(error:beforeRetry:)","title":"handle(error:beforeRetry:)","type":"topic","abstract":[],"role":"symbol","url":"\/documentation\/afluent\/retrybybackoffstrategy\/handle(error:beforeretry:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"handle"},{"kind":"text","text":"("},{"text":"error","kind":"externalParam"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":", "},{"text":"beforeRetry","kind":"externalParam"},{"text":": (any ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]},"doc://Afluent/ScA":{"title":"_Concurrency.Actor","identifier":"doc:\/\/Afluent\/ScA","type":"unresolvable"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","title":"RetryByBackoffStrategy","url":"\/documentation\/afluent\/retrybybackoffstrategy","role":"symbol","abstract":[{"text":"A retry strategy using a specified backoff strategy and clock.","type":"text"}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RetryByBackoffStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"RetryByBackoffStrategy","kind":"identifier"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/Actor-Implementations":{"url":"\/documentation\/afluent\/retrybybackoffstrategy\/actor-implementations","title":"Actor Implementations","role":"collectionGroup","type":"topic","kind":"article","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/Actor-Implementations","abstract":[]},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/init(_:clock:durationUnit:)":{"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/init(_:clock:durationUnit:)","abstract":[{"text":"Creates a new retry strategy with the given backoff strategy and clock.","type":"text"}],"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"Strategy","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"clock","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Strategy","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa","kind":"typeIdentifier","text":"Clock"},{"kind":"text","text":", "},{"text":"durationUnit","kind":"externalParam"},{"kind":"text","text":": "},{"text":"ClockDurationUnit","preciseIdentifier":"s:7Afluent17ClockDurationUnita","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Strategy","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa","text":"Clock"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":">)","kind":"text"}],"url":"\/documentation\/afluent\/retrybybackoffstrategy\/init(_:clock:durationunit:)","kind":"symbol","role":"symbol","title":"init(_:clock:durationUnit:)"},"doc://Afluent/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/Afluent\/s8SendableP","type":"unresolvable"},"doc://Afluent/documentation/Afluent/RetryStrategy":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RetryStrategy","kind":"identifier"}],"abstract":[{"type":"text","text":"A strategy for handling errors and determining whether to retry an operation."}],"navigatorTitle":[{"text":"RetryStrategy","kind":"identifier"}],"type":"topic","title":"RetryStrategy","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","role":"symbol","url":"\/documentation\/afluent\/retrystrategy"},"doc://Afluent/12_Concurrency8AnyActorP":{"title":"_Concurrency.AnyActor","identifier":"doc:\/\/Afluent\/12_Concurrency8AnyActorP","type":"unresolvable"},"doc://Afluent/documentation/Afluent/BackoffStrategy":{"abstract":[{"text":"A protocol for implementing custom backoff strategies in retry mechanisms.","type":"text"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","url":"\/documentation\/afluent\/backoffstrategy","navigatorTitle":[{"text":"BackoffStrategy","kind":"identifier"}],"kind":"symbol","title":"BackoffStrategy","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BackoffStrategy"}]},"doc://Afluent/documentation/Afluent":{"title":"Afluent","type":"topic","kind":"symbol","url":"\/documentation\/afluent","abstract":[],"role":"collection","identifier":"doc:\/\/Afluent\/documentation\/Afluent"}}}