{"kind":"symbol","sections":[],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"role":"symbol","remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/RetryStrategies\/RetryByBackoffStrategy.swift#L39","fileName":"RetryByBackoffStrategy.swift"},"navigatorTitle":[{"kind":"identifier","text":"RetryByBackoffStrategy"}],"modules":[{"name":"Afluent"}],"roleHeading":"Class","title":"RetryByBackoffStrategy","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RetryByBackoffStrategy"}],"platforms":[{"deprecated":false,"unavailable":false,"introducedAt":"16.0","name":"iOS","beta":false},{"beta":false,"unavailable":false,"name":"macOS","introducedAt":"13.0","deprecated":false},{"beta":false,"name":"tvOS","introducedAt":"16.0","deprecated":false,"unavailable":false},{"name":"watchOS","unavailable":false,"beta":false,"deprecated":false,"introducedAt":"9.0"}],"externalID":"s:7Afluent22RetryByBackoffStrategyC","symbolKind":"class"},"relationshipsSections":[{"type":"conformsTo","kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","doc:\/\/Afluent\/s8SendableP","doc:\/\/Afluent\/ScA"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RetryByBackoffStrategy"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Strategy"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Strategy"},{"text":" : ","kind":"text"},{"text":"BackoffStrategy","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","preciseIdentifier":"s:7Afluent15BackoffStrategyP"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The type of ","type":"text"},{"code":"Clock","type":"codeVoice"},{"text":" used for measuring time between retries.","type":"text"}]}],"name":"C"}]},{"kind":"content","content":[{"level":2,"anchor":"overview","type":"heading","text":"Overview"},{"inlineContent":[{"text":"This actor manages retry attempts with a configurable ","type":"text"},{"type":"codeVoice","code":"BackoffStrategy"},{"text":" and clock. It uses the clock to calculate","type":"text"},{"text":" ","type":"text"},{"text":"the time delays between retries, allowing more fine-grained control over the timing of retries based on the provided","type":"text"},{"text":" ","type":"text"},{"text":"backoff strategy.","type":"text"}],"type":"paragraph"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This actor conforms to "},{"type":"codeVoice","code":"RetryStrategy"},{"text":" and is used to manage retries based on time delays.","type":"text"}]}],"type":"aside","style":"note","name":"Note"}]}],"abstract":[{"type":"text","text":"A retry strategy using a specified backoff strategy and clock."}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"variants":[{"paths":["\/documentation\/afluent\/retrybybackoffstrategy"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/init(_:clock:durationUnit:)"],"anchor":"Initializers","generated":true},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/handle(error:beforeRetry:)"],"generated":true,"title":"Instance Methods","anchor":"Instance-Methods"},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/Actor-Implementations","doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/RetryStrategy-Implementations"],"anchor":"Default-Implementations"}],"references":{"doc://Afluent/documentation/Afluent/RetryStrategy":{"navigatorTitle":[{"text":"RetryStrategy","kind":"identifier"}],"url":"\/documentation\/afluent\/retrystrategy","kind":"symbol","abstract":[{"type":"text","text":"A strategy for handling errors and determining whether to retry an operation."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","title":"RetryStrategy","type":"topic","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RetryStrategy"}]},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/Actor-Implementations":{"type":"topic","url":"\/documentation\/afluent\/retrybybackoffstrategy\/actor-implementations","title":"Actor Implementations","role":"collectionGroup","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/Actor-Implementations","abstract":[],"kind":"article"},"doc://Afluent/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/Afluent\/s8SendableP"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/init(_:clock:durationUnit:)":{"url":"\/documentation\/afluent\/retrybybackoffstrategy\/init(_:clock:durationunit:)","kind":"symbol","title":"init(_:clock:durationUnit:)","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/init(_:clock:durationUnit:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"Strategy","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"clock","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Strategy"},{"kind":"text","text":"."},{"text":"Clock","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa"},{"text":", ","kind":"text"},{"text":"durationUnit","kind":"externalParam"},{"kind":"text","text":": "},{"text":"ClockDurationUnit","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent17ClockDurationUnita"},{"kind":"text","text":"<"},{"text":"Strategy","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa","kind":"typeIdentifier","text":"Clock"},{"text":", ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":">)","kind":"text"}],"type":"topic","abstract":[{"type":"text","text":"Creates a new retry strategy with the given backoff strategy and clock."}]},"doc://Afluent/documentation/Afluent":{"kind":"symbol","url":"\/documentation\/afluent","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent","title":"Afluent","type":"topic","role":"collection"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/RetryStrategy-Implementations":{"url":"\/documentation\/afluent\/retrybybackoffstrategy\/retrystrategy-implementations","kind":"article","role":"collectionGroup","title":"RetryStrategy Implementations","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/RetryStrategy-Implementations","abstract":[]},"doc://Afluent/documentation/Afluent/BackoffStrategy":{"kind":"symbol","url":"\/documentation\/afluent\/backoffstrategy","navigatorTitle":[{"text":"BackoffStrategy","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"BackoffStrategy","kind":"identifier"}],"abstract":[{"type":"text","text":"A protocol for implementing custom backoff strategies in retry mechanisms."}],"type":"topic","title":"BackoffStrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","role":"symbol"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy":{"navigatorTitle":[{"text":"RetryByBackoffStrategy","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"RetryByBackoffStrategy","kind":"identifier"}],"role":"symbol","title":"RetryByBackoffStrategy","kind":"symbol","abstract":[{"type":"text","text":"A retry strategy using a specified backoff strategy and clock."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","type":"topic","url":"\/documentation\/afluent\/retrybybackoffstrategy"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/handle(error:beforeRetry:)":{"abstract":[],"title":"handle(error:beforeRetry:)","kind":"symbol","role":"symbol","url":"\/documentation\/afluent\/retrybybackoffstrategy\/handle(error:beforeretry:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"handle"},{"text":"(","kind":"text"},{"text":"error","kind":"externalParam"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"beforeRetry"},{"text":": (any ","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/handle(error:beforeRetry:)","type":"topic"},"doc://Afluent/ScA":{"title":"_Concurrency.Actor","type":"unresolvable","identifier":"doc:\/\/Afluent\/ScA"}}}