{"sections":[],"kind":"symbol","metadata":{"roleHeading":"Class","externalID":"s:7Afluent22RetryByBackoffStrategyC","platforms":[{"name":"iOS","deprecated":false,"introducedAt":"16.0","beta":false,"unavailable":false},{"deprecated":false,"unavailable":false,"beta":false,"introducedAt":"13.0","name":"macOS"},{"name":"tvOS","beta":false,"introducedAt":"16.0","deprecated":false,"unavailable":false},{"introducedAt":"9.0","deprecated":false,"beta":false,"name":"watchOS","unavailable":false}],"title":"RetryByBackoffStrategy","role":"symbol","remoteSource":{"fileName":"RetryByBackoffStrategy.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/RetryStrategies\/RetryByBackoffStrategy.swift#L39"},"modules":[{"name":"Afluent"}],"symbolKind":"class","navigatorTitle":[{"kind":"identifier","text":"RetryByBackoffStrategy"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RetryByBackoffStrategy","kind":"identifier"}]},"abstract":[{"text":"A retry strategy using a specified backoff strategy and clock.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"relationshipsSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","doc:\/\/Afluent\/s8SendableP","doc:\/\/Afluent\/ScA"],"type":"conformsTo","kind":"relationships","title":"Conforms To"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"RetryByBackoffStrategy"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Strategy"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"Strategy","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"BackoffStrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","preciseIdentifier":"s:7Afluent15BackoffStrategyP"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The type of "},{"type":"codeVoice","code":"Clock"},{"text":" used for measuring time between retries.","type":"text"}],"type":"paragraph"}],"name":"C"}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"overview","text":"Overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This actor manages retry attempts with a configurable "},{"type":"codeVoice","code":"BackoffStrategy"},{"type":"text","text":" and clock. It uses the clock to calculate"},{"text":" ","type":"text"},{"type":"text","text":"the time delays between retries, allowing more fine-grained control over the timing of retries based on the provided"},{"text":" ","type":"text"},{"type":"text","text":"backoff strategy."}]},{"type":"aside","name":"Note","style":"note","content":[{"inlineContent":[{"type":"text","text":"This actor conforms to "},{"type":"codeVoice","code":"RetryStrategy"},{"text":" and is used to manage retries based on time delays.","type":"text"}],"type":"paragraph"}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"paths":["\/documentation\/afluent\/retrybybackoffstrategy"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"title":"Initializers","generated":true,"anchor":"Initializers","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/init(_:clock:durationUnit:)"]},{"anchor":"Instance-Methods","generated":true,"title":"Instance Methods","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/handle(error:beforeRetry:)"]},{"anchor":"Default-Implementations","generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/Actor-Implementations","doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/RetryStrategy-Implementations"],"title":"Default Implementations"}],"references":{"doc://Afluent/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/Afluent\/s8SendableP","title":"Swift.Sendable"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/handle(error:beforeRetry:)":{"url":"\/documentation\/afluent\/retrybybackoffstrategy\/handle(error:beforeretry:)","title":"handle(error:beforeRetry:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"handle","kind":"identifier"},{"text":"(","kind":"text"},{"text":"error","kind":"externalParam"},{"text":": any ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":", "},{"text":"beforeRetry","kind":"externalParam"},{"text":": (any ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/handle(error:beforeRetry:)","abstract":[],"type":"topic","kind":"symbol"},"doc://Afluent/documentation/Afluent/RetryStrategy":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RetryStrategy","kind":"identifier"}],"title":"RetryStrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","role":"symbol","type":"topic","navigatorTitle":[{"text":"RetryStrategy","kind":"identifier"}],"url":"\/documentation\/afluent\/retrystrategy","kind":"symbol","abstract":[{"text":"A strategy for handling errors and determining whether to retry an operation.","type":"text"}]},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/Actor-Implementations":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/Actor-Implementations","url":"\/documentation\/afluent\/retrybybackoffstrategy\/actor-implementations","role":"collectionGroup","type":"topic","abstract":[],"kind":"article","title":"Actor Implementations"},"doc://Afluent/ScA":{"type":"unresolvable","identifier":"doc:\/\/Afluent\/ScA","title":"_Concurrency.Actor"},"doc://Afluent/documentation/Afluent":{"url":"\/documentation\/afluent","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent","role":"collection","title":"Afluent","abstract":[],"type":"topic"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/RetryStrategy-Implementations":{"title":"RetryStrategy Implementations","abstract":[],"url":"\/documentation\/afluent\/retrybybackoffstrategy\/retrystrategy-implementations","type":"topic","role":"collectionGroup","kind":"article","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/RetryStrategy-Implementations"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/init(_:clock:durationUnit:)":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/init(_:clock:durationUnit:)","kind":"symbol","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"Strategy","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"clock","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Strategy"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa","text":"Clock","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"durationUnit","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent17ClockDurationUnita","text":"ClockDurationUnit"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Strategy"},{"text":".","kind":"text"},{"text":"Clock","preciseIdentifier":"s:7Afluent15BackoffStrategyP5ClockQa","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Creates a new retry strategy with the given backoff strategy and clock."}],"title":"init(_:clock:durationUnit:)","type":"topic","url":"\/documentation\/afluent\/retrybybackoffstrategy\/init(_:clock:durationunit:)"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy":{"url":"\/documentation\/afluent\/retrybybackoffstrategy","kind":"symbol","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","title":"RetryByBackoffStrategy","navigatorTitle":[{"kind":"identifier","text":"RetryByBackoffStrategy"}],"abstract":[{"type":"text","text":"A retry strategy using a specified backoff strategy and clock."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RetryByBackoffStrategy","kind":"identifier"}],"role":"symbol"},"doc://Afluent/documentation/Afluent/BackoffStrategy":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"BackoffStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"BackoffStrategy","kind":"identifier"}],"url":"\/documentation\/afluent\/backoffstrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/BackoffStrategy","title":"BackoffStrategy","abstract":[{"type":"text","text":"A protocol for implementing custom backoff strategies in retry mechanisms."}],"type":"topic","role":"symbol","kind":"symbol"}}}