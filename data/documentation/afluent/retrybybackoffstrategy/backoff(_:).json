{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"backoff"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"strategy","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Afluent26ExponentialBackoffStrategyC","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy","kind":"typeIdentifier","text":"ExponentialBackoffStrategy"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency15ContinuousClockV","text":"ContinuousClock"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","text":"RetryByBackoffStrategy","preciseIdentifier":"s:7Afluent22RetryByBackoffStrategyC"},{"text":"<","kind":"text"},{"text":"ExponentialBackoffStrategy","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent26ExponentialBackoffStrategyC","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency15ContinuousClockV","text":"ContinuousClock"},{"text":">>","kind":"text"}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The backoff strategy to use for retrying operations.","type":"text"}]}],"name":"strategy"}]},{"kind":"content","content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"A ","type":"text"},{"code":"RetryByBackoffStrategy","type":"codeVoice"},{"text":" configured with the provided ","type":"text"},{"type":"codeVoice","code":"BackoffStrategy"},{"text":" and a ","type":"text"},{"type":"codeVoice","code":"ContinuousClock"},{"type":"text","text":"."}]}]},{"content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This extension provides a convenient method to create a "},{"code":"RetryByBackoffStrategy","type":"codeVoice"},{"text":" using a ","type":"text"},{"code":"ContinuousClock","type":"codeVoice"},{"type":"text","text":"."}]}],"kind":"content"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","sections":[],"abstract":[{"type":"text","text":"Creates a retry strategy using the provided backoff strategy and a continuous clock."}],"variants":[{"paths":["\/documentation\/afluent\/retrybybackoffstrategy\/backoff(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/RetryStrategy-Implementations"]]},"metadata":{"externalID":"s:7Afluent13RetryStrategyPA2A0b9ByBackoffC0CyAA011ExponentialeC0Cy12_Concurrency15ContinuousClockVGGRszrlE7backoffyAlKFZ::SYNTHESIZED::s:7Afluent22RetryByBackoffStrategyC","role":"symbol","modules":[{"name":"Afluent"}],"title":"backoff(_:)","roleHeading":"Type Method","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"backoff","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:7Afluent26ExponentialBackoffStrategyC","kind":"typeIdentifier","text":"ExponentialBackoffStrategy"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ContinuousClock","preciseIdentifier":"s:12_Concurrency15ContinuousClockV"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:7Afluent22RetryByBackoffStrategyC","text":"RetryByBackoffStrategy","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"ExponentialBackoffStrategy","preciseIdentifier":"s:7Afluent26ExponentialBackoffStrategyC"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:12_Concurrency15ContinuousClockV","text":"ContinuousClock","kind":"typeIdentifier"},{"text":">>","kind":"text"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" is "},{"code":"RetryByBackoffStrategy<ExponentialBackoffStrategy<ContinuousClock>>","type":"codeVoice"},{"type":"text","text":"."}]},"extendedModule":"Afluent","remoteSource":{"fileName":"RetryByBackoffStrategy.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/RetryStrategies\/RetryByBackoffStrategy.swift#L19"},"symbolKind":"method"},"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/backoff(_:)","interfaceLanguage":"swift"},"references":{"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy":{"title":"RetryByBackoffStrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","url":"\/documentation\/afluent\/retrybybackoffstrategy","navigatorTitle":[{"text":"RetryByBackoffStrategy","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RetryByBackoffStrategy"}],"role":"symbol","type":"topic","abstract":[{"text":"A retry strategy using a specified backoff strategy and clock.","type":"text"}]},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/RetryStrategy-Implementations":{"type":"topic","role":"collectionGroup","url":"\/documentation\/afluent\/retrybybackoffstrategy\/retrystrategy-implementations","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/RetryStrategy-Implementations","kind":"article","abstract":[],"title":"RetryStrategy Implementations"},"doc://Afluent/documentation/Afluent/ExponentialBackoffStrategy":{"navigatorTitle":[{"kind":"identifier","text":"ExponentialBackoffStrategy"}],"type":"topic","url":"\/documentation\/afluent\/exponentialbackoffstrategy","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"ExponentialBackoffStrategy","kind":"identifier"}],"title":"ExponentialBackoffStrategy","abstract":[{"text":"An exponential backoff strategy for retrying operations.","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/ExponentialBackoffStrategy"},"doc://Afluent/documentation/Afluent":{"type":"topic","kind":"symbol","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent","role":"collection","title":"Afluent","url":"\/documentation\/afluent"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/backoff(_:)":{"url":"\/documentation\/afluent\/retrybybackoffstrategy\/backoff(_:)","role":"symbol","kind":"symbol","title":"backoff(_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"backoff","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:7Afluent26ExponentialBackoffStrategyC","kind":"typeIdentifier","text":"ExponentialBackoffStrategy"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:12_Concurrency15ContinuousClockV","text":"ContinuousClock","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"RetryByBackoffStrategy","preciseIdentifier":"s:7Afluent22RetryByBackoffStrategyC","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"ExponentialBackoffStrategy","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent26ExponentialBackoffStrategyC"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:12_Concurrency15ContinuousClockV","text":"ContinuousClock","kind":"typeIdentifier"},{"kind":"text","text":">>"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"RetryByBackoffStrategy<ExponentialBackoffStrategy<ContinuousClock>>"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"type":"topic","abstract":[{"type":"text","text":"Creates a retry strategy using the provided backoff strategy and a continuous clock."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/backoff(_:)"}}}