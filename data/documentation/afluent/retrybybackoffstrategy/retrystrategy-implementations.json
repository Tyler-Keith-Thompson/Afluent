{"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy"]]},"metadata":{"role":"collectionGroup","modules":[{"name":"Afluent"}],"roleHeading":"API Collection","title":"RetryStrategy Implementations"},"topicSections":[{"generated":true,"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/handle(error:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/backoff(_:)"],"title":"Type Methods","generated":true}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/RetryStrategy-Implementations","interfaceLanguage":"swift"},"sections":[],"kind":"article","variants":[{"paths":["\/documentation\/afluent\/retrybybackoffstrategy\/retrystrategy-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/handle(error:)":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/handle(error:)","type":"topic","title":"handle(error:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"handle","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"error"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/afluent\/retrybybackoffstrategy\/handle(error:)","kind":"symbol","abstract":[{"type":"text","text":"Determines whether an operation should be retried after encountering an error."}],"role":"symbol"},"doc://Afluent/documentation/Afluent":{"url":"\/documentation\/afluent","role":"collection","title":"Afluent","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent","abstract":[],"kind":"symbol"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","type":"topic","title":"RetryByBackoffStrategy","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"RetryByBackoffStrategy","kind":"identifier"}],"url":"\/documentation\/afluent\/retrybybackoffstrategy","kind":"symbol","abstract":[{"type":"text","text":"A retry strategy using a specified backoff strategy and clock."}],"role":"symbol","navigatorTitle":[{"text":"RetryByBackoffStrategy","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/backoff(_:)":{"url":"\/documentation\/afluent\/retrybybackoffstrategy\/backoff(_:)","title":"backoff(_:)","kind":"symbol","abstract":[{"type":"text","text":"Creates a retry strategy using the provided backoff strategy and a continuous clock."}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"backoff","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ExponentialBackoffStrategy","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent26ExponentialBackoffStrategyC"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:12_Concurrency15ContinuousClockV","text":"ContinuousClock","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22RetryByBackoffStrategyC","text":"RetryByBackoffStrategy"},{"kind":"text","text":"<"},{"text":"ExponentialBackoffStrategy","preciseIdentifier":"s:7Afluent26ExponentialBackoffStrategyC","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:12_Concurrency15ContinuousClockV","kind":"typeIdentifier","text":"ContinuousClock"},{"kind":"text","text":">>"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/backoff(_:)","role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"RetryByBackoffStrategy<ExponentialBackoffStrategy<ContinuousClock>>"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"type":"topic"}}}