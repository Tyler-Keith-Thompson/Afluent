{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/retrybybackoffstrategy\/retrystrategy-implementations"]}],"metadata":{"modules":[{"name":"Afluent"}],"title":"RetryStrategy Implementations","roleHeading":"API Collection","role":"collectionGroup"},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/handle(error:)"],"generated":true},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/backoff(_:)"],"title":"Type Methods","generated":true}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/RetryStrategy-Implementations","interfaceLanguage":"swift"},"kind":"article","schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy"]]},"references":{"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy":{"abstract":[{"text":"A retry strategy using a specified backoff strategy and clock.","type":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy","type":"topic","url":"\/documentation\/afluent\/retrybybackoffstrategy","kind":"symbol","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RetryByBackoffStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"RetryByBackoffStrategy"}],"title":"RetryByBackoffStrategy"},"doc://Afluent/documentation/Afluent":{"type":"topic","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol","url":"\/documentation\/afluent","title":"Afluent","role":"collection"},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/handle(error:)":{"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/handle(error:)","abstract":[{"type":"text","text":"Determines whether an operation should be retried after encountering an error."}],"title":"handle(error:)","role":"symbol","type":"topic","url":"\/documentation\/afluent\/retrybybackoffstrategy\/handle(error:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handle"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"error"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"doc://Afluent/documentation/Afluent/RetryByBackoffStrategy/backoff(_:)":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"RetryByBackoffStrategy<ExponentialBackoffStrategy<ContinuousClock>>"},{"text":".","type":"text"}]},"type":"topic","title":"backoff(_:)","abstract":[{"type":"text","text":"Creates a retry strategy using the provided backoff strategy and a continuous clock."}],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"backoff","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:7Afluent26ExponentialBackoffStrategyC","text":"ExponentialBackoffStrategy","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:12_Concurrency15ContinuousClockV","text":"ContinuousClock","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:7Afluent22RetryByBackoffStrategyC","text":"RetryByBackoffStrategy","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"ExponentialBackoffStrategy","preciseIdentifier":"s:7Afluent26ExponentialBackoffStrategyC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency15ContinuousClockV","text":"ContinuousClock"},{"text":">>","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryByBackoffStrategy\/backoff(_:)","url":"\/documentation\/afluent\/retrybybackoffstrategy\/backoff(_:)","role":"symbol"}}}