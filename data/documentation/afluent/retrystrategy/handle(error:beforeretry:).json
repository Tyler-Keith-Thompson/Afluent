{"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy\/handle(error:beforeRetry:)","interfaceLanguage":"swift"},"abstract":[{"text":"Determines whether an operation should be retried after encountering an error.","type":"text"}],"variants":[{"paths":["\/documentation\/afluent\/retrystrategy\/handle(error:beforeretry:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","metadata":{"title":"handle(error:beforeRetry:)","externalID":"s:7Afluent13RetryStrategyP6handle5error06beforeB0Sbs5Error_p_ysAG_pYaYbKXEtYaKF","remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/RetryStrategies\/RetryStrategy.swift#L25","fileName":"RetryStrategy.swift"},"required":true,"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"handle","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"error"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":", "},{"text":"beforeRetry","kind":"externalParam"},{"kind":"text","text":": (any "},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"roleHeading":"Instance Method","modules":[{"name":"Afluent"}],"role":"symbol","symbolKind":"method"},"sections":[],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"handle","kind":"identifier"},{"kind":"text","text":"("},{"text":"error","kind":"externalParam"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"text":", ","kind":"text"},{"text":"beforeRetry","kind":"externalParam"},{"kind":"text","text":": (any "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"error","content":[{"type":"paragraph","inlineContent":[{"text":"The error that occurred during the operation.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that is executed before a retry is attempted. The closure is passed the encountered error"},{"type":"text","text":" "},{"type":"text","text":"and can perform actions such as logging or cleanup before the retry is made. The closure itself is asynchronous"},{"type":"text","text":" "},{"type":"text","text":"and can throw errors if needed."}]}],"name":"beforeRetry"}]},{"content":[{"text":"Return Value","anchor":"return-value","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"A Boolean value indicating whether a retry should be attempted (","type":"text"},{"code":"true","type":"codeVoice"},{"type":"text","text":") or not ("},{"code":"false","type":"codeVoice"},{"text":").","type":"text"}]}],"kind":"content"},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An error if either the retry strategy itself fails or if the "},{"type":"codeVoice","code":"beforeRetry"},{"type":"text","text":" closure encounters an error."}]}],"name":"Throws","type":"aside"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://Afluent/documentation/Afluent":{"url":"\/documentation\/afluent","role":"collection","title":"Afluent","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent","abstract":[],"kind":"symbol"},"doc://Afluent/documentation/Afluent/RetryStrategy/handle(error:beforeRetry:)":{"title":"handle(error:beforeRetry:)","url":"\/documentation\/afluent\/retrystrategy\/handle(error:beforeretry:)","required":true,"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy\/handle(error:beforeRetry:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"handle"},{"kind":"text","text":"("},{"kind":"externalParam","text":"error"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"beforeRetry"},{"kind":"text","text":": (any "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"type":"topic","kind":"symbol","abstract":[{"text":"Determines whether an operation should be retried after encountering an error.","type":"text"}],"role":"symbol"},"doc://Afluent/documentation/Afluent/RetryStrategy":{"type":"topic","abstract":[{"type":"text","text":"A strategy for handling errors and determining whether to retry an operation."}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RetryStrategy"}],"url":"\/documentation\/afluent\/retrystrategy","navigatorTitle":[{"kind":"identifier","text":"RetryStrategy"}],"title":"RetryStrategy","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/RetryStrategy","kind":"symbol"}}}