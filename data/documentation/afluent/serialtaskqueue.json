{"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Class","remoteSource":{"fileName":"SerialTaskQueue.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SerialTaskQueue.swift#L19"},"modules":[{"name":"Afluent"}],"title":"SerialTaskQueue","role":"symbol","externalID":"s:7Afluent15SerialTaskQueueC","symbolKind":"class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SerialTaskQueue"}],"navigatorTitle":[{"kind":"identifier","text":"SerialTaskQueue"}]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/init()"]},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/cancelAll()","doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/queue(_:)"],"title":"Instance Methods"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/serialtaskqueue"]}],"relationshipsSections":[{"identifiers":["doc:\/\/Afluent\/s8SendableP"],"type":"conformsTo","title":"Conforms To","kind":"relationships"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"A serial task queue that ensures tasks are executed one at a time."}],"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"SerialTaskQueue","kind":"identifier"}],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"level":2,"text":"Overview","anchor":"overview","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This actor manages a queue of tasks, ensuring that only one task is executed at a time. If a task is currently running, any new tasks are added to the queue and executed sequentially."}]},{"level":2,"text":"Discussion","anchor":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"SerialTaskQueue","type":"codeVoice"},{"type":"text","text":" actor provides a way to manage task execution in a serial manner. When a new task is queued, it checks if another task is currently running. If no task is running, the new task is executed immediately. If a task is already running, the new task is added to a queue and will be executed once the current task completes."},{"type":"text","text":" "},{"type":"text","text":"This actor is useful in scenarios where tasks must be executed in a specific order or when you need to ensure that only one task is executed at a time to avoid race conditions."}]}],"kind":"content"}],"sections":[],"references":{"doc://Afluent/documentation/Afluent/SerialTaskQueue/init()":{"role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/afluent\/serialtaskqueue\/init()","abstract":[],"title":"init()","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/init()","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"()"}]},"doc://Afluent/documentation/Afluent/SerialTaskQueue/queue(_:)":{"role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/afluent\/serialtaskqueue\/queue(_:)","abstract":[{"type":"text","text":"Queues a task to be executed serially."}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/queue(_:)","title":"queue(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"queue","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(() ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"}]},"doc://Afluent/s8SendableP":{"identifier":"doc:\/\/Afluent\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://Afluent/documentation/Afluent":{"type":"topic","abstract":[],"title":"Afluent","kind":"symbol","url":"\/documentation\/afluent","role":"collection","identifier":"doc:\/\/Afluent\/documentation\/Afluent"},"doc://Afluent/documentation/Afluent/SerialTaskQueue":{"type":"topic","navigatorTitle":[{"text":"SerialTaskQueue","kind":"identifier"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"SerialTaskQueue","kind":"identifier"}],"abstract":[{"type":"text","text":"A serial task queue that ensures tasks are executed one at a time."}],"url":"\/documentation\/afluent\/serialtaskqueue","role":"symbol","title":"SerialTaskQueue","kind":"symbol"},"doc://Afluent/documentation/Afluent/SerialTaskQueue/cancelAll()":{"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/cancelAll()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cancelAll"},{"text":"()","kind":"text"}],"abstract":[{"type":"text","text":"Cancels all the ongoing tasks in the queue"}],"url":"\/documentation\/afluent\/serialtaskqueue\/cancelall()","role":"symbol","type":"topic","title":"cancelAll()"}}}