{"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"text":"A serial task queue that ensures tasks are executed one at a time.","type":"text"}],"relationshipsSections":[{"title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/Afluent\/s8SendableP"],"type":"conformsTo"}],"topicSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/init()"],"title":"Initializers"},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/cancelAll()","doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/queue(_:)"],"title":"Instance Methods"}],"metadata":{"modules":[{"name":"Afluent"}],"title":"SerialTaskQueue","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SerialTaskQueue"}],"symbolKind":"class","roleHeading":"Class","externalID":"s:7Afluent15SerialTaskQueueC","navigatorTitle":[{"kind":"identifier","text":"SerialTaskQueue"}],"remoteSource":{"fileName":"SerialTaskQueue.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SerialTaskQueue.swift#L19"}},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/afluent\/serialtaskqueue"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"final"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"SerialTaskQueue","kind":"identifier"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"level":2,"type":"heading","text":"Overview","anchor":"overview"},{"inlineContent":[{"type":"text","text":"This actor manages a queue of tasks, ensuring that only one task is executed at a time. If a task is currently running, any new tasks are added to the queue and executed sequentially."}],"type":"paragraph"},{"level":2,"type":"heading","anchor":"Discussion","text":"Discussion"},{"inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"SerialTaskQueue"},{"text":" actor provides a way to manage task execution in a serial manner. When a new task is queued, it checks if another task is currently running. If no task is running, the new task is executed immediately. If a task is already running, the new task is added to a queue and will be executed once the current task completes.","type":"text"},{"text":" ","type":"text"},{"text":"This actor is useful in scenarios where tasks must be executed in a specific order or when you need to ensure that only one task is executed at a time to avoid race conditions.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"references":{"doc://Afluent/documentation/Afluent/SerialTaskQueue/queue(_:)":{"abstract":[{"type":"text","text":"Queues a task to be executed serially."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"queue","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">(() "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"}],"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/queue(_:)","url":"\/documentation\/afluent\/serialtaskqueue\/queue(_:)","type":"topic","title":"queue(_:)","kind":"symbol"},"doc://Afluent/documentation/Afluent/SerialTaskQueue/init()":{"kind":"symbol","type":"topic","title":"init()","url":"\/documentation\/afluent\/serialtaskqueue\/init()","abstract":[],"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/init()"},"doc://Afluent/documentation/Afluent/SerialTaskQueue":{"abstract":[{"type":"text","text":"A serial task queue that ensures tasks are executed one at a time."}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"SerialTaskQueue","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","url":"\/documentation\/afluent\/serialtaskqueue","navigatorTitle":[{"kind":"identifier","text":"SerialTaskQueue"}],"type":"topic","title":"SerialTaskQueue","kind":"symbol"},"doc://Afluent/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/Afluent\/s8SendableP"},"doc://Afluent/documentation/Afluent/SerialTaskQueue/cancelAll()":{"role":"symbol","abstract":[{"type":"text","text":"Cancels all the ongoing tasks in the queue"}],"title":"cancelAll()","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cancelAll","kind":"identifier"},{"kind":"text","text":"()"}],"kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/cancelAll()","url":"\/documentation\/afluent\/serialtaskqueue\/cancelall()"},"doc://Afluent/documentation/Afluent":{"kind":"symbol","url":"\/documentation\/afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent","role":"collection","abstract":[],"title":"Afluent","type":"topic"}}}