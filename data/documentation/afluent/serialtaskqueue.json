{"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/Afluent\/s8SendableP"],"kind":"relationships","type":"conformsTo"}],"kind":"symbol","identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","interfaceLanguage":"swift"},"abstract":[{"text":"A serial task queue that ensures tasks are executed one at a time.","type":"text"}],"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"final","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"SerialTaskQueue","kind":"identifier"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","anchor":"overview","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"text":"This actor manages a queue of tasks, ensuring that only one task is executed at a time. If a task is currently running, any new tasks are added to the queue and executed sequentially.","type":"text"}]},{"level":2,"anchor":"Discussion","type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"SerialTaskQueue","type":"codeVoice"},{"type":"text","text":" actor provides a way to manage task execution in a serial manner. When a new task is queued, it checks if another task is currently running. If no task is running, the new task is executed immediately. If a task is already running, the new task is added to a queue and will be executed once the current task completes."},{"text":" ","type":"text"},{"type":"text","text":"This actor is useful in scenarios where tasks must be executed in a specific order or when you need to ensure that only one task is executed at a time to avoid race conditions."}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/serialtaskqueue"]}],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"metadata":{"externalID":"s:7Afluent15SerialTaskQueueC","title":"SerialTaskQueue","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SerialTaskQueue"}],"navigatorTitle":[{"kind":"identifier","text":"SerialTaskQueue"}],"remoteSource":{"fileName":"SerialTaskQueue.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SerialTaskQueue.swift#L19"},"modules":[{"name":"Afluent"}],"role":"symbol","roleHeading":"Class","symbolKind":"class"},"topicSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/init()"],"title":"Initializers"},{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/cancelAll()","doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/queue(_:)"],"title":"Instance Methods"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://Afluent/documentation/Afluent":{"type":"topic","kind":"symbol","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent","role":"collection","title":"Afluent","url":"\/documentation\/afluent"},"doc://Afluent/documentation/Afluent/SerialTaskQueue/queue(_:)":{"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/queue(_:)","kind":"symbol","abstract":[{"text":"Queues a task to be executed serially.","type":"text"}],"role":"symbol","url":"\/documentation\/afluent\/serialtaskqueue\/queue(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"queue","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(() "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"title":"queue(_:)"},"doc://Afluent/documentation/Afluent/SerialTaskQueue/init()":{"fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/init()","kind":"symbol","url":"\/documentation\/afluent\/serialtaskqueue\/init()","title":"init()","type":"topic","abstract":[],"role":"symbol"},"doc://Afluent/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/Afluent\/s8SendableP","title":"Swift.Sendable"},"doc://Afluent/documentation/Afluent/SerialTaskQueue":{"url":"\/documentation\/afluent\/serialtaskqueue","title":"SerialTaskQueue","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","kind":"symbol","role":"symbol","abstract":[{"text":"A serial task queue that ensures tasks are executed one at a time.","type":"text"}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"SerialTaskQueue","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SerialTaskQueue"}]},"doc://Afluent/documentation/Afluent/SerialTaskQueue/cancelAll()":{"title":"cancelAll()","url":"\/documentation\/afluent\/serialtaskqueue\/cancelall()","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/cancelAll()","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Cancels all the ongoing tasks in the queue"}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"cancelAll","kind":"identifier"},{"text":"()","kind":"text"}]}}}