{"kind":"symbol","metadata":{"navigatorTitle":[{"kind":"identifier","text":"SerialTaskQueue"}],"roleHeading":"Class","role":"symbol","title":"SerialTaskQueue","remoteSource":{"url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SerialTaskQueue.swift#L19","fileName":"SerialTaskQueue.swift"},"modules":[{"name":"Afluent"}],"externalID":"s:7Afluent15SerialTaskQueueC","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SerialTaskQueue"}],"symbolKind":"class"},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/Afluent\/s8SendableP"],"kind":"relationships"}],"identifier":{"url":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"A serial task queue that ensures tasks are executed one at a time.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"final"},{"text":" ","kind":"text"},{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SerialTaskQueue"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"level":2,"anchor":"overview","text":"Overview","type":"heading"},{"inlineContent":[{"text":"This actor manages a queue of tasks, ensuring that only one task is executed at a time. If a task is currently running, any new tasks are added to the queue and executed sequentially.","type":"text"}],"type":"paragraph"},{"type":"heading","level":2,"text":"Discussion","anchor":"Discussion"},{"inlineContent":[{"text":"The ","type":"text"},{"code":"SerialTaskQueue","type":"codeVoice"},{"type":"text","text":" actor provides a way to manage task execution in a serial manner. When a new task is queued, it checks if another task is currently running. If no task is running, the new task is executed immediately. If a task is already running, the new task is added to a queue and will be executed once the current task completes."},{"type":"text","text":" "},{"type":"text","text":"This actor is useful in scenarios where tasks must be executed in a specific order or when you need to ensure that only one task is executed at a time to avoid race conditions."}],"type":"paragraph"}]}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/serialtaskqueue"]}],"topicSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/init()"],"title":"Initializers"},{"title":"Instance Methods","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/cancelAll()","doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/queue(_:)"]}],"references":{"doc://Afluent/documentation/Afluent/SerialTaskQueue/init()":{"title":"init()","type":"topic","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/init()","abstract":[],"url":"\/documentation\/afluent\/serialtaskqueue\/init()","fragments":[{"kind":"identifier","text":"init"},{"text":"()","kind":"text"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/SerialTaskQueue/cancelAll()":{"title":"cancelAll()","type":"topic","role":"symbol","abstract":[{"text":"Cancels all the ongoing tasks in the queue","type":"text"}],"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/cancelAll()","url":"\/documentation\/afluent\/serialtaskqueue\/cancelall()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cancelAll"},{"text":"()","kind":"text"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent/SerialTaskQueue":{"navigatorTitle":[{"text":"SerialTaskQueue","kind":"identifier"}],"title":"SerialTaskQueue","type":"topic","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","abstract":[{"type":"text","text":"A serial task queue that ensures tasks are executed one at a time."}],"url":"\/documentation\/afluent\/serialtaskqueue","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SerialTaskQueue"}],"kind":"symbol"},"doc://Afluent/documentation/Afluent":{"url":"\/documentation\/afluent","role":"collection","type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol","title":"Afluent","abstract":[]},"doc://Afluent/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/Afluent\/s8SendableP","title":"Swift.Sendable"},"doc://Afluent/documentation/Afluent/SerialTaskQueue/queue(_:)":{"title":"queue(_:)","type":"topic","role":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/queue(_:)","abstract":[{"type":"text","text":"Queues a task to be executed serially."}],"url":"\/documentation\/afluent\/serialtaskqueue\/queue(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"queue","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(() "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"T","kind":"typeIdentifier"}],"kind":"symbol"}}}