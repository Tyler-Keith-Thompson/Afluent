{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue"},"relationshipsSections":[{"title":"Conforms To","kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/Afluent\/s8SendableP"]}],"metadata":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"SerialTaskQueue","kind":"identifier"}],"symbolKind":"class","roleHeading":"Class","externalID":"s:7Afluent15SerialTaskQueueC","role":"symbol","navigatorTitle":[{"text":"SerialTaskQueue","kind":"identifier"}],"title":"SerialTaskQueue","modules":[{"name":"Afluent"}],"remoteSource":{"fileName":"SerialTaskQueue.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/SerialTaskQueue.swift#L19"}},"topicSections":[{"identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/init()"],"title":"Initializers"},{"title":"Instance Methods","identifiers":["doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/cancelAll()","doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/queue(_:)"]}],"variants":[{"paths":["\/documentation\/afluent\/serialtaskqueue"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent"]]},"abstract":[{"type":"text","text":"A serial task queue that ensures tasks are executed one at a time."}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"final"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"SerialTaskQueue","kind":"identifier"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"anchor":"overview","level":2,"text":"Overview","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This actor manages a queue of tasks, ensuring that only one task is executed at a time. If a task is currently running, any new tasks are added to the queue and executed sequentially."}]},{"level":2,"text":"Discussion","type":"heading","anchor":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"SerialTaskQueue"},{"type":"text","text":" actor provides a way to manage task execution in a serial manner. When a new task is queued, it checks if another task is currently running. If no task is running, the new task is executed immediately. If a task is already running, the new task is added to a queue and will be executed once the current task completes."},{"text":" ","type":"text"},{"type":"text","text":"This actor is useful in scenarios where tasks must be executed in a specific order or when you need to ensure that only one task is executed at a time to avoid race conditions."}]}],"kind":"content"}],"sections":[],"references":{"doc://Afluent/documentation/Afluent/SerialTaskQueue/cancelAll()":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/cancelAll()","url":"\/documentation\/afluent\/serialtaskqueue\/cancelall()","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"cancelAll","kind":"identifier"},{"text":"()","kind":"text"}],"abstract":[{"type":"text","text":"Cancels all the ongoing tasks in the queue"}],"type":"topic","role":"symbol","title":"cancelAll()"},"doc://Afluent/documentation/Afluent":{"type":"topic","url":"\/documentation\/afluent","role":"collection","abstract":[],"kind":"symbol","title":"Afluent","identifier":"doc:\/\/Afluent\/documentation\/Afluent"},"doc://Afluent/documentation/Afluent/SerialTaskQueue/init()":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/init()","url":"\/documentation\/afluent\/serialtaskqueue\/init()","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"abstract":[],"type":"topic","role":"symbol","title":"init()"},"doc://Afluent/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/Afluent\/s8SendableP"},"doc://Afluent/documentation/Afluent/SerialTaskQueue":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue","navigatorTitle":[{"kind":"identifier","text":"SerialTaskQueue"}],"url":"\/documentation\/afluent\/serialtaskqueue","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SerialTaskQueue","kind":"identifier"}],"abstract":[{"type":"text","text":"A serial task queue that ensures tasks are executed one at a time."}],"type":"topic","role":"symbol","title":"SerialTaskQueue"},"doc://Afluent/documentation/Afluent/SerialTaskQueue/queue(_:)":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SerialTaskQueue\/queue(_:)","url":"\/documentation\/afluent\/serialtaskqueue\/queue(_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"queue","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">(() "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"}],"abstract":[{"type":"text","text":"Queues a task to be executed serially."}],"type":"topic","role":"symbol","title":"queue(_:)"}}}