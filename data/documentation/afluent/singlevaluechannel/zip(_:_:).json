{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel\/zip(_:_:)"},"metadata":{"modules":[{"name":"Afluent"}],"role":"symbol","extendedModule":"Afluent","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"zip"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"D0"},{"kind":"text","text":", "},{"text":"D1","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"D0","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"D1","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","text":"AsynchronousUnitOfWork","kind":"typeIdentifier"},{"text":"<(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Success","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"D0"},{"text":".","kind":"text"},{"text":"Success","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"D1","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Success"},{"text":")>\n","kind":"text"}],"title":"zip(_:_:)","remoteSource":{"fileName":"Zip.swift","url":"https:\/\/github.com\/Tyler-Keith-Thompson\/Afluent\/blob\/main\/Sources\/Afluent\/Workers\/Zip.swift#L113"},"externalID":"s:7Afluent22AsynchronousUnitOfWorkPAAE3zipyQrqd___qd_0_tAaBRd__AaBRd_0_r0_lF::SYNTHESIZED::s:7Afluent18SingleValueChannelC","roleHeading":"Instance Method"},"sections":[],"hierarchy":{"paths":[["doc:\/\/Afluent\/documentation\/Afluent","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel","doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel\/AsynchronousUnitOfWork-Implementations"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"zip"},{"text":"<","kind":"text"},{"text":"D0","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"D1"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"d0"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"D0"},{"text":", ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"d1"},{"text":": ","kind":"text"},{"text":"D1","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","text":"AsynchronousUnitOfWork","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP"},{"text":"<(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Success","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"D0"},{"kind":"text","text":"."},{"text":"Success","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"D1","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Success"},{"text":")> ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"D0","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","text":"AsynchronousUnitOfWork","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP"},{"kind":"text","text":", "},{"text":"D1","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP","text":"AsynchronousUnitOfWork","kind":"typeIdentifier","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork"},{"kind":"text","text":"\n"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"d0","content":[{"type":"paragraph","inlineContent":[{"text":"The first additional asynchronous unit of work to zip with.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"The second additional asynchronous unit of work to zip with."}],"type":"paragraph"}],"name":"d1"}]},{"content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"inlineContent":[{"text":"A new asynchronous unit of work that produces a tuple containing results from the upstream and both downstreams when completed.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/afluent\/singlevaluechannel\/zip(_:_:)"]}],"abstract":[{"text":"Zips the result of the current unit of work with two other asynchronous units of work.","type":"text"}],"kind":"symbol","references":{"doc://Afluent/documentation/Afluent/SingleValueChannel/AsynchronousUnitOfWork-Implementations":{"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel\/AsynchronousUnitOfWork-Implementations","abstract":[],"role":"collectionGroup","kind":"article","url":"\/documentation\/afluent\/singlevaluechannel\/asynchronousunitofwork-implementations","title":"AsynchronousUnitOfWork Implementations"},"doc://Afluent/documentation/Afluent/SingleValueChannel/zip(_:_:)":{"identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel\/zip(_:_:)","title":"zip(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"zip","kind":"identifier"},{"text":"<","kind":"text"},{"text":"D0","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"D1"},{"text":">(","kind":"text"},{"text":"D0","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"D1"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"text":"AsynchronousUnitOfWork","kind":"typeIdentifier","preciseIdentifier":"s:7Afluent22AsynchronousUnitOfWorkP"},{"text":"<(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Success"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"D0"},{"kind":"text","text":"."},{"text":"Success","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"D1","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Success","kind":"typeIdentifier"},{"kind":"text","text":")>\n"}],"kind":"symbol","url":"\/documentation\/afluent\/singlevaluechannel\/zip(_:_:)","role":"symbol","abstract":[{"text":"Zips the result of the current unit of work with two other asynchronous units of work.","type":"text"}],"type":"topic"},"doc://Afluent/documentation/Afluent":{"url":"\/documentation\/afluent","type":"topic","title":"Afluent","abstract":[],"identifier":"doc:\/\/Afluent\/documentation\/Afluent","kind":"symbol","role":"collection"},"doc://Afluent/documentation/Afluent/AsynchronousUnitOfWork":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/AsynchronousUnitOfWork","type":"topic","url":"\/documentation\/afluent\/asynchronousunitofwork","navigatorTitle":[{"kind":"identifier","text":"AsynchronousUnitOfWork"}],"abstract":[{"type":"text","text":"Represents an asynchronous unit of work."}],"title":"AsynchronousUnitOfWork","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"AsynchronousUnitOfWork","kind":"identifier"}]},"doc://Afluent/documentation/Afluent/SingleValueChannel":{"navigatorTitle":[{"text":"SingleValueChannel","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Afluent\/documentation\/Afluent\/SingleValueChannel","abstract":[{"text":"A channel that emits a single value or an error.","type":"text"}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SingleValueChannel","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/afluent\/singlevaluechannel","title":"SingleValueChannel"}}}