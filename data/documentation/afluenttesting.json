{"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"paths":["\/documentation\/afluenttesting"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"anchor":"Functions","generated":true,"identifiers":["doc:\/\/AfluentTesting\/documentation\/AfluentTesting\/wait(until:timeout:)","doc:\/\/AfluentTesting\/documentation\/AfluentTesting\/wait(until:timeout:clock:)"],"title":"Functions"},{"title":"Extended Modules","generated":true,"anchor":"Extended-Modules","identifiers":["doc:\/\/AfluentTesting\/documentation\/AfluentTesting\/_Concurrency"]}],"hierarchy":{"paths":[[]]},"sections":[],"kind":"symbol","identifier":{"url":"doc:\/\/AfluentTesting\/documentation\/AfluentTesting","interfaceLanguage":"swift"},"metadata":{"modules":[{"name":"AfluentTesting"}],"roleHeading":"Framework","role":"collection","externalID":"AfluentTesting","title":"AfluentTesting","symbolKind":"module"},"references":{"doc://AfluentTesting/documentation/AfluentTesting/_Concurrency":{"type":"topic","url":"\/documentation\/afluenttesting\/_concurrency","abstract":[],"kind":"symbol","role":"collection","title":"_Concurrency","identifier":"doc:\/\/AfluentTesting\/documentation\/AfluentTesting\/_Concurrency"},"doc://AfluentTesting/documentation/AfluentTesting/wait(until:timeout:clock:)":{"identifier":"doc:\/\/AfluentTesting\/documentation\/AfluentTesting\/wait(until:timeout:clock:)","type":"topic","abstract":[{"text":"Waits for some condition before proceeding, unless the specified timeout is reached, in which case an error is thrown.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"wait"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">("},{"text":"until","kind":"externalParam"},{"kind":"text","text":": "},{"text":"@autoclosure ","kind":"attribute"},{"kind":"text","text":"() "},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"timeout","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":"."},{"text":"Duration","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency5ClockP8DurationQa"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"clock"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"}],"role":"symbol","kind":"symbol","url":"\/documentation\/afluenttesting\/wait(until:timeout:clock:)","title":"wait(until:timeout:clock:)"},"doc://AfluentTesting/documentation/AfluentTesting":{"url":"\/documentation\/afluenttesting","title":"AfluentTesting","role":"collection","abstract":[],"type":"topic","identifier":"doc:\/\/AfluentTesting\/documentation\/AfluentTesting","kind":"symbol"},"doc://AfluentTesting/documentation/AfluentTesting/wait(until:timeout:)":{"type":"topic","url":"\/documentation\/afluenttesting\/wait(until:timeout:)","abstract":[{"type":"text","text":"Waits for some condition before proceeding, unless the specified timeout is reached, in which case an error is thrown."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"wait","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"until"},{"kind":"text","text":": "},{"text":"@autoclosure ","kind":"attribute"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"timeout","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Duration","kind":"typeIdentifier","preciseIdentifier":"s:s8DurationV"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"title":"wait(until:timeout:)","kind":"symbol","identifier":"doc:\/\/AfluentTesting\/documentation\/AfluentTesting\/wait(until:timeout:)","role":"symbol"}}}